//--------------------------------------------------------------------------------
// 
//                  STMicroelectronics NOIDA
// 
//                            LIBRARY GROUP
// 
//--------------------------------------------------------------------------------
// 
//--------------------------------------------------------------------------------
// 
//              Verilog models for the CORE65LPSVT.CMOS065LP
//                    (CORE65LPSVT   release 5)
// 
//
//--------------------------------------------------------------------------------
// 
//Date            : Fri Jul 27 10:08:47 2007
// 
//Copyright       : STMicroelectronics N.V. 2007
//                  All rights reserved. Reproduction
//                  in whole or part is prohibited
//                  without the written consent of the
//                  copyright holder.
// 
//Address         : STMicroelectronics
//                  Plot No 2 & 3 , Institutional Area
//                  Sector 16A, Noida - 201301
//                  INDIA
//                  Central R&D / DAIS.
// 
//--------------------------------------------------------------------------------
//STMicroelectronics RESERVES THE RIGHTS TO MAKE CHANGES WITHOUT 
//NOTICE AT ANY TIME. STMicroelectronics MAKES NO WARRANTY,
//EXPRESSED, IMPLIED OR STATUTARY, INCLUDING BUT NOT LIMITED TO ANY IMPLIED
//WARRANTY OR MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE,
//OR THAT THE USE WILL NOT INFRINGE ANY THIRD PARTY PATENT,
//COPYRIGHT OR TRADEMARK. STMicroelectronics SHALL NOT BE LIABLE 
//FOR ANY LOSS OR DAMAGE ARISING FROM THE USE OF ITS LIBRARIES OR
//SOFTWARE.
//--------------------------------------------------------------------------------

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS1_FA1X21_A0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X21_A0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X21_A0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X21_A0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X21_A0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X21_A0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X21_A0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X21_A0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X21_A0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X21_A0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X21_A0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X21_A0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X21_B0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X21_B0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X21_B0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X21_B0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X21_B0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X21_B0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X21_B0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X21_B0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X21_B0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X21_B0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X21_B0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X21_B0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X21_CI_R_CO_R_10 0.1
`define HS65_LSS1_FA1X21_CI_F_CO_F_10 0.1
`define HS65_LSS1_FA1X21_CI_R_CO_R_01 0.1
`define HS65_LSS1_FA1X21_CI_F_CO_F_01 0.1
`define HS65_LSS1_FA1X21_CI_R_S0_F_10 0.1
`define HS65_LSS1_FA1X21_CI_F_S0_R_10 0.1
`define HS65_LSS1_FA1X21_CI_R_S0_F_01 0.1
`define HS65_LSS1_FA1X21_CI_F_S0_R_01 0.1
`define HS65_LSS1_FA1X21_CI_R_S0_R_00 0.1
`define HS65_LSS1_FA1X21_CI_F_S0_F_00 0.1
`define HS65_LSS1_FA1X21_CI_R_S0_R_11 0.1
`define HS65_LSS1_FA1X21_CI_F_S0_F_11 0.1

module HS65_LSS1_FA1X21 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LSS1_FA1X21_A0_R_CO_R_10,`HS65_LSS1_FA1X21_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LSS1_FA1X21_A0_R_CO_R_01,`HS65_LSS1_FA1X21_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LSS1_FA1X21_A0_F_S0_R_10,`HS65_LSS1_FA1X21_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LSS1_FA1X21_A0_F_S0_R_01,`HS65_LSS1_FA1X21_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LSS1_FA1X21_A0_R_S0_R_00,`HS65_LSS1_FA1X21_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LSS1_FA1X21_A0_R_S0_R_11,`HS65_LSS1_FA1X21_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LSS1_FA1X21_B0_R_CO_R_10,`HS65_LSS1_FA1X21_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LSS1_FA1X21_B0_R_CO_R_01,`HS65_LSS1_FA1X21_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LSS1_FA1X21_B0_F_S0_R_10,`HS65_LSS1_FA1X21_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LSS1_FA1X21_B0_F_S0_R_01,`HS65_LSS1_FA1X21_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LSS1_FA1X21_B0_R_S0_R_00,`HS65_LSS1_FA1X21_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LSS1_FA1X21_B0_R_S0_R_11,`HS65_LSS1_FA1X21_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LSS1_FA1X21_CI_R_CO_R_10,`HS65_LSS1_FA1X21_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LSS1_FA1X21_CI_R_CO_R_01,`HS65_LSS1_FA1X21_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LSS1_FA1X21_CI_F_S0_R_10,`HS65_LSS1_FA1X21_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LSS1_FA1X21_CI_F_S0_R_01,`HS65_LSS1_FA1X21_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LSS1_FA1X21_CI_R_S0_R_00,`HS65_LSS1_FA1X21_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LSS1_FA1X21_CI_R_S0_R_11,`HS65_LSS1_FA1X21_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LSS1_FA1X21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS1_FA1X35_A0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X35_A0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X35_A0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X35_A0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X35_A0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X35_A0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X35_A0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X35_A0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X35_A0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X35_A0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X35_A0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X35_A0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X35_B0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X35_B0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X35_B0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X35_B0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X35_B0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X35_B0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X35_B0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X35_B0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X35_B0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X35_B0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X35_B0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X35_B0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X35_CI_R_CO_R_10 0.1
`define HS65_LSS1_FA1X35_CI_F_CO_F_10 0.1
`define HS65_LSS1_FA1X35_CI_R_CO_R_01 0.1
`define HS65_LSS1_FA1X35_CI_F_CO_F_01 0.1
`define HS65_LSS1_FA1X35_CI_R_S0_F_10 0.1
`define HS65_LSS1_FA1X35_CI_F_S0_R_10 0.1
`define HS65_LSS1_FA1X35_CI_R_S0_F_01 0.1
`define HS65_LSS1_FA1X35_CI_F_S0_R_01 0.1
`define HS65_LSS1_FA1X35_CI_R_S0_R_00 0.1
`define HS65_LSS1_FA1X35_CI_F_S0_F_00 0.1
`define HS65_LSS1_FA1X35_CI_R_S0_R_11 0.1
`define HS65_LSS1_FA1X35_CI_F_S0_F_11 0.1

module HS65_LSS1_FA1X35 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LSS1_FA1X35_A0_R_CO_R_10,`HS65_LSS1_FA1X35_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LSS1_FA1X35_A0_R_CO_R_01,`HS65_LSS1_FA1X35_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LSS1_FA1X35_A0_F_S0_R_10,`HS65_LSS1_FA1X35_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LSS1_FA1X35_A0_F_S0_R_01,`HS65_LSS1_FA1X35_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LSS1_FA1X35_A0_R_S0_R_00,`HS65_LSS1_FA1X35_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LSS1_FA1X35_A0_R_S0_R_11,`HS65_LSS1_FA1X35_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LSS1_FA1X35_B0_R_CO_R_10,`HS65_LSS1_FA1X35_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LSS1_FA1X35_B0_R_CO_R_01,`HS65_LSS1_FA1X35_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LSS1_FA1X35_B0_F_S0_R_10,`HS65_LSS1_FA1X35_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LSS1_FA1X35_B0_F_S0_R_01,`HS65_LSS1_FA1X35_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LSS1_FA1X35_B0_R_S0_R_00,`HS65_LSS1_FA1X35_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LSS1_FA1X35_B0_R_S0_R_11,`HS65_LSS1_FA1X35_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LSS1_FA1X35_CI_R_CO_R_10,`HS65_LSS1_FA1X35_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LSS1_FA1X35_CI_R_CO_R_01,`HS65_LSS1_FA1X35_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LSS1_FA1X35_CI_F_S0_R_10,`HS65_LSS1_FA1X35_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LSS1_FA1X35_CI_F_S0_R_01,`HS65_LSS1_FA1X35_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LSS1_FA1X35_CI_R_S0_R_00,`HS65_LSS1_FA1X35_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LSS1_FA1X35_CI_R_S0_R_11,`HS65_LSS1_FA1X35_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LSS1_FA1X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS1_FA1X9_A0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X9_A0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X9_A0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X9_A0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X9_A0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X9_A0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X9_A0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X9_A0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X9_A0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X9_A0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X9_A0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X9_A0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X9_B0_R_CO_R_10 0.1
`define HS65_LSS1_FA1X9_B0_F_CO_F_10 0.1
`define HS65_LSS1_FA1X9_B0_R_CO_R_01 0.1
`define HS65_LSS1_FA1X9_B0_F_CO_F_01 0.1
`define HS65_LSS1_FA1X9_B0_R_S0_F_10 0.1
`define HS65_LSS1_FA1X9_B0_F_S0_R_10 0.1
`define HS65_LSS1_FA1X9_B0_R_S0_F_01 0.1
`define HS65_LSS1_FA1X9_B0_F_S0_R_01 0.1
`define HS65_LSS1_FA1X9_B0_R_S0_R_00 0.1
`define HS65_LSS1_FA1X9_B0_F_S0_F_00 0.1
`define HS65_LSS1_FA1X9_B0_R_S0_R_11 0.1
`define HS65_LSS1_FA1X9_B0_F_S0_F_11 0.1
`define HS65_LSS1_FA1X9_CI_R_CO_R_10 0.1
`define HS65_LSS1_FA1X9_CI_F_CO_F_10 0.1
`define HS65_LSS1_FA1X9_CI_R_CO_R_01 0.1
`define HS65_LSS1_FA1X9_CI_F_CO_F_01 0.1
`define HS65_LSS1_FA1X9_CI_R_S0_F_10 0.1
`define HS65_LSS1_FA1X9_CI_F_S0_R_10 0.1
`define HS65_LSS1_FA1X9_CI_R_S0_F_01 0.1
`define HS65_LSS1_FA1X9_CI_F_S0_R_01 0.1
`define HS65_LSS1_FA1X9_CI_R_S0_R_00 0.1
`define HS65_LSS1_FA1X9_CI_F_S0_F_00 0.1
`define HS65_LSS1_FA1X9_CI_R_S0_R_11 0.1
`define HS65_LSS1_FA1X9_CI_F_S0_F_11 0.1

module HS65_LSS1_FA1X9 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LSS1_FA1X9_A0_R_CO_R_10,`HS65_LSS1_FA1X9_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LSS1_FA1X9_A0_R_CO_R_01,`HS65_LSS1_FA1X9_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LSS1_FA1X9_A0_F_S0_R_10,`HS65_LSS1_FA1X9_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LSS1_FA1X9_A0_F_S0_R_01,`HS65_LSS1_FA1X9_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LSS1_FA1X9_A0_R_S0_R_00,`HS65_LSS1_FA1X9_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LSS1_FA1X9_A0_R_S0_R_11,`HS65_LSS1_FA1X9_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LSS1_FA1X9_B0_R_CO_R_10,`HS65_LSS1_FA1X9_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LSS1_FA1X9_B0_R_CO_R_01,`HS65_LSS1_FA1X9_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LSS1_FA1X9_B0_F_S0_R_10,`HS65_LSS1_FA1X9_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LSS1_FA1X9_B0_F_S0_R_01,`HS65_LSS1_FA1X9_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LSS1_FA1X9_B0_R_S0_R_00,`HS65_LSS1_FA1X9_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LSS1_FA1X9_B0_R_S0_R_11,`HS65_LSS1_FA1X9_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LSS1_FA1X9_CI_R_CO_R_10,`HS65_LSS1_FA1X9_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LSS1_FA1X9_CI_R_CO_R_01,`HS65_LSS1_FA1X9_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LSS1_FA1X9_CI_F_S0_R_10,`HS65_LSS1_FA1X9_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LSS1_FA1X9_CI_F_S0_R_01,`HS65_LSS1_FA1X9_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LSS1_FA1X9_CI_R_S0_R_00,`HS65_LSS1_FA1X9_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LSS1_FA1X9_CI_R_S0_R_11,`HS65_LSS1_FA1X9_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LSS1_FA1X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS1_HA1X8_A0_R_CO_R_1 0.1
`define HS65_LSS1_HA1X8_A0_F_CO_F_1 0.1
`define HS65_LSS1_HA1X8_A0_R_S0_F_1 0.1
`define HS65_LSS1_HA1X8_A0_F_S0_R_1 0.1
`define HS65_LSS1_HA1X8_A0_R_S0_R_0 0.1
`define HS65_LSS1_HA1X8_A0_F_S0_F_0 0.1
`define HS65_LSS1_HA1X8_B0_R_CO_R_1 0.1
`define HS65_LSS1_HA1X8_B0_F_CO_F_1 0.1
`define HS65_LSS1_HA1X8_B0_R_S0_F_1 0.1
`define HS65_LSS1_HA1X8_B0_F_S0_R_1 0.1
`define HS65_LSS1_HA1X8_B0_R_S0_R_0 0.1
`define HS65_LSS1_HA1X8_B0_F_S0_F_0 0.1

module HS65_LSS1_HA1X8 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LSS1_HA1X8_A0_R_CO_R_1,`HS65_LSS1_HA1X8_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LSS1_HA1X8_A0_F_S0_R_1,`HS65_LSS1_HA1X8_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LSS1_HA1X8_A0_R_S0_R_0,`HS65_LSS1_HA1X8_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LSS1_HA1X8_B0_R_CO_R_1,`HS65_LSS1_HA1X8_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LSS1_HA1X8_B0_F_S0_R_1,`HS65_LSS1_HA1X8_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LSS1_HA1X8_B0_R_S0_R_0,`HS65_LSS1_HA1X8_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LSS1_HA1X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS2_FA1X18_A0_R_CO_R_10 0.1
`define HS65_LSS2_FA1X18_A0_F_CO_F_10 0.1
`define HS65_LSS2_FA1X18_A0_R_CO_R_01 0.1
`define HS65_LSS2_FA1X18_A0_F_CO_F_01 0.1
`define HS65_LSS2_FA1X18_A0_R_S0_F_10 0.1
`define HS65_LSS2_FA1X18_A0_F_S0_R_10 0.1
`define HS65_LSS2_FA1X18_A0_R_S0_F_01 0.1
`define HS65_LSS2_FA1X18_A0_F_S0_R_01 0.1
`define HS65_LSS2_FA1X18_A0_R_S0_R_00 0.1
`define HS65_LSS2_FA1X18_A0_F_S0_F_00 0.1
`define HS65_LSS2_FA1X18_A0_R_S0_R_11 0.1
`define HS65_LSS2_FA1X18_A0_F_S0_F_11 0.1
`define HS65_LSS2_FA1X18_B0_R_CO_R_10 0.1
`define HS65_LSS2_FA1X18_B0_F_CO_F_10 0.1
`define HS65_LSS2_FA1X18_B0_R_CO_R_01 0.1
`define HS65_LSS2_FA1X18_B0_F_CO_F_01 0.1
`define HS65_LSS2_FA1X18_B0_R_S0_F_10 0.1
`define HS65_LSS2_FA1X18_B0_F_S0_R_10 0.1
`define HS65_LSS2_FA1X18_B0_R_S0_F_01 0.1
`define HS65_LSS2_FA1X18_B0_F_S0_R_01 0.1
`define HS65_LSS2_FA1X18_B0_R_S0_R_00 0.1
`define HS65_LSS2_FA1X18_B0_F_S0_F_00 0.1
`define HS65_LSS2_FA1X18_B0_R_S0_R_11 0.1
`define HS65_LSS2_FA1X18_B0_F_S0_F_11 0.1
`define HS65_LSS2_FA1X18_CI_R_CO_R_10 0.1
`define HS65_LSS2_FA1X18_CI_F_CO_F_10 0.1
`define HS65_LSS2_FA1X18_CI_R_CO_R_01 0.1
`define HS65_LSS2_FA1X18_CI_F_CO_F_01 0.1
`define HS65_LSS2_FA1X18_CI_R_S0_F_10 0.1
`define HS65_LSS2_FA1X18_CI_F_S0_R_10 0.1
`define HS65_LSS2_FA1X18_CI_R_S0_F_01 0.1
`define HS65_LSS2_FA1X18_CI_F_S0_R_01 0.1
`define HS65_LSS2_FA1X18_CI_R_S0_R_00 0.1
`define HS65_LSS2_FA1X18_CI_F_S0_F_00 0.1
`define HS65_LSS2_FA1X18_CI_R_S0_R_11 0.1
`define HS65_LSS2_FA1X18_CI_F_S0_F_11 0.1

module HS65_LSS2_FA1X18 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LSS2_FA1X18_A0_R_CO_R_10,`HS65_LSS2_FA1X18_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LSS2_FA1X18_A0_R_CO_R_01,`HS65_LSS2_FA1X18_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LSS2_FA1X18_A0_F_S0_R_10,`HS65_LSS2_FA1X18_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LSS2_FA1X18_A0_F_S0_R_01,`HS65_LSS2_FA1X18_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LSS2_FA1X18_A0_R_S0_R_00,`HS65_LSS2_FA1X18_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LSS2_FA1X18_A0_R_S0_R_11,`HS65_LSS2_FA1X18_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LSS2_FA1X18_B0_R_CO_R_10,`HS65_LSS2_FA1X18_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LSS2_FA1X18_B0_R_CO_R_01,`HS65_LSS2_FA1X18_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LSS2_FA1X18_B0_F_S0_R_10,`HS65_LSS2_FA1X18_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LSS2_FA1X18_B0_F_S0_R_01,`HS65_LSS2_FA1X18_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LSS2_FA1X18_B0_R_S0_R_00,`HS65_LSS2_FA1X18_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LSS2_FA1X18_B0_R_S0_R_11,`HS65_LSS2_FA1X18_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LSS2_FA1X18_CI_R_CO_R_10,`HS65_LSS2_FA1X18_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LSS2_FA1X18_CI_R_CO_R_01,`HS65_LSS2_FA1X18_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LSS2_FA1X18_CI_F_S0_R_10,`HS65_LSS2_FA1X18_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LSS2_FA1X18_CI_F_S0_R_01,`HS65_LSS2_FA1X18_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LSS2_FA1X18_CI_R_S0_R_00,`HS65_LSS2_FA1X18_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LSS2_FA1X18_CI_R_S0_R_11,`HS65_LSS2_FA1X18_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LSS2_FA1X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQNX18_CP_R_QN_R 0.1
`define HS65_LSS_DFPHQNX18_CP_R_QN_F 0.1
`define HS65_LSS_DFPHQNX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX18_CP_PWL 0.01
`define HS65_LSS_DFPHQNX18_CP_PWH 0.01

module HS65_LSS_DFPHQNX18 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPHQNX18_CP_R_QN_R,`HS65_LSS_DFPHQNX18_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_DFPHQNX18_CP_R_QN_R,`HS65_LSS_DFPHQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQNX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQNX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQNX27_CP_R_QN_R 0.1
`define HS65_LSS_DFPHQNX27_CP_R_QN_F 0.1
`define HS65_LSS_DFPHQNX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX27_CP_PWL 0.01
`define HS65_LSS_DFPHQNX27_CP_PWH 0.01

module HS65_LSS_DFPHQNX27 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPHQNX27_CP_R_QN_R,`HS65_LSS_DFPHQNX27_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_DFPHQNX27_CP_R_QN_R,`HS65_LSS_DFPHQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQNX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQNX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQNX35_CP_R_QN_R 0.1
`define HS65_LSS_DFPHQNX35_CP_R_QN_F 0.1
`define HS65_LSS_DFPHQNX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQNX35_CP_PWL 0.01
`define HS65_LSS_DFPHQNX35_CP_PWH 0.01

module HS65_LSS_DFPHQNX35 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPHQNX35_CP_R_QN_R,`HS65_LSS_DFPHQNX35_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_DFPHQNX35_CP_R_QN_R,`HS65_LSS_DFPHQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQNX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQNX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQNX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQNX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQX18_CP_R_Q_R 0.1
`define HS65_LSS_DFPHQX18_CP_R_Q_F 0.1
`define HS65_LSS_DFPHQX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX18_CP_PWL 0.01
`define HS65_LSS_DFPHQX18_CP_PWH 0.01

module HS65_LSS_DFPHQX18 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPHQX18_CP_R_Q_R,`HS65_LSS_DFPHQX18_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_DFPHQX18_CP_R_Q_R,`HS65_LSS_DFPHQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQX27_CP_R_Q_R 0.1
`define HS65_LSS_DFPHQX27_CP_R_Q_F 0.1
`define HS65_LSS_DFPHQX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX27_CP_PWL 0.01
`define HS65_LSS_DFPHQX27_CP_PWH 0.01

module HS65_LSS_DFPHQX27 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPHQX27_CP_R_Q_R,`HS65_LSS_DFPHQX27_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_DFPHQX27_CP_R_Q_R,`HS65_LSS_DFPHQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPHQX35_CP_R_Q_R 0.1
`define HS65_LSS_DFPHQX35_CP_R_Q_F 0.1
`define HS65_LSS_DFPHQX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPHQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPHQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPHQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPHQX35_CP_PWL 0.01
`define HS65_LSS_DFPHQX35_CP_PWH 0.01

module HS65_LSS_DFPHQX35 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPHQX35_CP_R_Q_R,`HS65_LSS_DFPHQX35_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_DFPHQX35_CP_R_Q_R,`HS65_LSS_DFPHQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPHQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPHQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_DFPHQX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_DFPHQX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_DFPHQX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_DFPHQX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LSS_DFPHQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LSS_DFPHQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPHQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQNX18_CP_R_QN_R 0.1
`define HS65_LSS_DFPQNX18_CP_R_QN_F 0.1
`define HS65_LSS_DFPQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQNX18_CP_PWL 0.01
`define HS65_LSS_DFPQNX18_CP_PWH 0.01

module HS65_LSS_DFPQNX18 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LSS_DFPQNX18_CP_R_QN_R,`HS65_LSS_DFPQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQNX27_CP_R_QN_R 0.1
`define HS65_LSS_DFPQNX27_CP_R_QN_F 0.1
`define HS65_LSS_DFPQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQNX27_CP_PWL 0.01
`define HS65_LSS_DFPQNX27_CP_PWH 0.01

module HS65_LSS_DFPQNX27 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LSS_DFPQNX27_CP_R_QN_R,`HS65_LSS_DFPQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQNX35_CP_R_QN_R 0.1
`define HS65_LSS_DFPQNX35_CP_R_QN_F 0.1
`define HS65_LSS_DFPQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQNX35_CP_PWL 0.01
`define HS65_LSS_DFPQNX35_CP_PWH 0.01

module HS65_LSS_DFPQNX35 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LSS_DFPQNX35_CP_R_QN_R,`HS65_LSS_DFPQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQX18_CP_R_Q_R 0.1
`define HS65_LSS_DFPQX18_CP_R_Q_F 0.1
`define HS65_LSS_DFPQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQX18_CP_PWL 0.01
`define HS65_LSS_DFPQX18_CP_PWH 0.01

module HS65_LSS_DFPQX18 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LSS_DFPQX18_CP_R_Q_R,`HS65_LSS_DFPQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQX27_CP_R_Q_R 0.1
`define HS65_LSS_DFPQX27_CP_R_Q_F 0.1
`define HS65_LSS_DFPQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQX27_CP_PWL 0.01
`define HS65_LSS_DFPQX27_CP_PWH 0.01

module HS65_LSS_DFPQX27 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LSS_DFPQX27_CP_R_Q_R,`HS65_LSS_DFPQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPQX35_CP_R_Q_R 0.1
`define HS65_LSS_DFPQX35_CP_R_Q_F 0.1
`define HS65_LSS_DFPQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPQX35_CP_PWL 0.01
`define HS65_LSS_DFPQX35_CP_PWH 0.01

module HS65_LSS_DFPQX35 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LSS_DFPQX35_CP_R_Q_R,`HS65_LSS_DFPQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LSS_DFPQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_DFPQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQNX18_CP_R_QN_R 0.1
`define HS65_LSS_DFPRQNX18_CP_R_QN_F 0.1
`define HS65_LSS_DFPRQNX18_RN_F_QN_R 0.1
`define HS65_LSS_DFPRQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX18_RN_PWL 0.01
`define HS65_LSS_DFPRQNX18_CP_PWL 0.01
`define HS65_LSS_DFPRQNX18_CP_PWH 0.01

module HS65_LSS_DFPRQNX18 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPRQNX18_CP_R_QN_R,`HS65_LSS_DFPRQNX18_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_DFPRQNX18_RN_F_QN_R,`HS65_LSS_DFPRQNX18_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQNX18_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQNX18_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQNX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQNX27_CP_R_QN_R 0.1
`define HS65_LSS_DFPRQNX27_CP_R_QN_F 0.1
`define HS65_LSS_DFPRQNX27_RN_F_QN_R 0.1
`define HS65_LSS_DFPRQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX27_RN_PWL 0.01
`define HS65_LSS_DFPRQNX27_CP_PWL 0.01
`define HS65_LSS_DFPRQNX27_CP_PWH 0.01

module HS65_LSS_DFPRQNX27 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPRQNX27_CP_R_QN_R,`HS65_LSS_DFPRQNX27_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_DFPRQNX27_RN_F_QN_R,`HS65_LSS_DFPRQNX27_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQNX27_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQNX27_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQNX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQNX35_CP_R_QN_R 0.1
`define HS65_LSS_DFPRQNX35_CP_R_QN_F 0.1
`define HS65_LSS_DFPRQNX35_RN_F_QN_R 0.1
`define HS65_LSS_DFPRQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQNX35_RN_PWL 0.01
`define HS65_LSS_DFPRQNX35_CP_PWL 0.01
`define HS65_LSS_DFPRQNX35_CP_PWH 0.01

module HS65_LSS_DFPRQNX35 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPRQNX35_CP_R_QN_R,`HS65_LSS_DFPRQNX35_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_DFPRQNX35_RN_F_QN_R,`HS65_LSS_DFPRQNX35_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQNX35_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQNX35_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQNX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQX18_CP_R_Q_R 0.1
`define HS65_LSS_DFPRQX18_CP_R_Q_F 0.1
`define HS65_LSS_DFPRQX18_RN_F_Q_F 0.1
`define HS65_LSS_DFPRQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQX18_RN_PWL 0.01
`define HS65_LSS_DFPRQX18_CP_PWL 0.01
`define HS65_LSS_DFPRQX18_CP_PWH 0.01

module HS65_LSS_DFPRQX18 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPRQX18_CP_R_Q_R,`HS65_LSS_DFPRQX18_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_DFPRQX18_RN_F_Q_F,`HS65_LSS_DFPRQX18_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQX18_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQX18_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQX27_CP_R_Q_R 0.1
`define HS65_LSS_DFPRQX27_CP_R_Q_F 0.1
`define HS65_LSS_DFPRQX27_RN_F_Q_F 0.1
`define HS65_LSS_DFPRQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQX27_RN_PWL 0.01
`define HS65_LSS_DFPRQX27_CP_PWL 0.01
`define HS65_LSS_DFPRQX27_CP_PWH 0.01

module HS65_LSS_DFPRQX27 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPRQX27_CP_R_Q_R,`HS65_LSS_DFPRQX27_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_DFPRQX27_RN_F_Q_F,`HS65_LSS_DFPRQX27_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQX27_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQX27_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPRQX35_CP_R_Q_R 0.1
`define HS65_LSS_DFPRQX35_CP_R_Q_F 0.1
`define HS65_LSS_DFPRQX35_RN_F_Q_F 0.1
`define HS65_LSS_DFPRQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPRQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPRQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPRQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPRQX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPRQX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPRQX35_RN_PWL 0.01
`define HS65_LSS_DFPRQX35_CP_PWL 0.01
`define HS65_LSS_DFPRQX35_CP_PWH 0.01

module HS65_LSS_DFPRQX35 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPRQX35_CP_R_Q_R,`HS65_LSS_DFPRQX35_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_DFPRQX35_RN_F_Q_F,`HS65_LSS_DFPRQX35_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPRQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPRQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPRQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPRQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LSS_DFPRQX35_RN_CP_REC_posedge_posedge, `HS65_LSS_DFPRQX35_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LSS_DFPRQX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_DFPRQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_DFPRQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPRQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQNX18_CP_R_QN_R 0.1
`define HS65_LSS_DFPSQNX18_CP_R_QN_F 0.1
`define HS65_LSS_DFPSQNX18_SN_F_QN_F 0.1
`define HS65_LSS_DFPSQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX18_SN_PWL 0.01
`define HS65_LSS_DFPSQNX18_CP_PWL 0.01
`define HS65_LSS_DFPSQNX18_CP_PWH 0.01

module HS65_LSS_DFPSQNX18 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPSQNX18_CP_R_QN_R,`HS65_LSS_DFPSQNX18_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_DFPSQNX18_SN_F_QN_F,`HS65_LSS_DFPSQNX18_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQNX18_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQNX18_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQNX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQNX27_CP_R_QN_R 0.1
`define HS65_LSS_DFPSQNX27_CP_R_QN_F 0.1
`define HS65_LSS_DFPSQNX27_SN_F_QN_F 0.1
`define HS65_LSS_DFPSQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX27_SN_PWL 0.01
`define HS65_LSS_DFPSQNX27_CP_PWL 0.01
`define HS65_LSS_DFPSQNX27_CP_PWH 0.01

module HS65_LSS_DFPSQNX27 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPSQNX27_CP_R_QN_R,`HS65_LSS_DFPSQNX27_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_DFPSQNX27_SN_F_QN_F,`HS65_LSS_DFPSQNX27_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQNX27_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQNX27_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQNX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQNX35_CP_R_QN_R 0.1
`define HS65_LSS_DFPSQNX35_CP_R_QN_F 0.1
`define HS65_LSS_DFPSQNX35_SN_F_QN_F 0.1
`define HS65_LSS_DFPSQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQNX35_SN_PWL 0.01
`define HS65_LSS_DFPSQNX35_CP_PWL 0.01
`define HS65_LSS_DFPSQNX35_CP_PWH 0.01

module HS65_LSS_DFPSQNX35 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LSS_DFPSQNX35_CP_R_QN_R,`HS65_LSS_DFPSQNX35_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_DFPSQNX35_SN_F_QN_F,`HS65_LSS_DFPSQNX35_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQNX35_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQNX35_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQNX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQX18_CP_R_Q_R 0.1
`define HS65_LSS_DFPSQX18_CP_R_Q_F 0.1
`define HS65_LSS_DFPSQX18_SN_F_Q_R 0.1
`define HS65_LSS_DFPSQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQX18_SN_PWL 0.01
`define HS65_LSS_DFPSQX18_CP_PWL 0.01
`define HS65_LSS_DFPSQX18_CP_PWH 0.01

module HS65_LSS_DFPSQX18 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPSQX18_CP_R_Q_R,`HS65_LSS_DFPSQX18_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_DFPSQX18_SN_F_Q_R,`HS65_LSS_DFPSQX18_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQX18_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQX18_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQX27_CP_R_Q_R 0.1
`define HS65_LSS_DFPSQX27_CP_R_Q_F 0.1
`define HS65_LSS_DFPSQX27_SN_F_Q_R 0.1
`define HS65_LSS_DFPSQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQX27_SN_PWL 0.01
`define HS65_LSS_DFPSQX27_CP_PWL 0.01
`define HS65_LSS_DFPSQX27_CP_PWH 0.01

module HS65_LSS_DFPSQX27 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPSQX27_CP_R_Q_R,`HS65_LSS_DFPSQX27_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_DFPSQX27_SN_F_Q_R,`HS65_LSS_DFPSQX27_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQX27_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQX27_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_DFPSQX35_CP_R_Q_R 0.1
`define HS65_LSS_DFPSQX35_CP_R_Q_F 0.1
`define HS65_LSS_DFPSQX35_SN_F_Q_R 0.1
`define HS65_LSS_DFPSQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_DFPSQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_DFPSQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_DFPSQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_DFPSQX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_DFPSQX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_DFPSQX35_SN_PWL 0.01
`define HS65_LSS_DFPSQX35_CP_PWL 0.01
`define HS65_LSS_DFPSQX35_CP_PWH 0.01

module HS65_LSS_DFPSQX35 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LSS_DFPSQX35_CP_R_Q_R,`HS65_LSS_DFPSQX35_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_DFPSQX35_SN_F_Q_R,`HS65_LSS_DFPSQX35_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_DFPSQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_DFPSQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_DFPSQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_DFPSQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LSS_DFPSQX35_SN_CP_REC_posedge_posedge, `HS65_LSS_DFPSQX35_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_DFPSQX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_DFPSQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_DFPSQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_DFPSQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQNTX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNTX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQNTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQNTX18_CP_PWH 0.01
`define HS65_LSS_SDFPHQNTX18_CP_PWL 0.01
`define HS65_LSS_SDFPHQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX18_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQNTX18 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX18_CP_R_QN_R, `HS65_LSS_SDFPHQNTX18_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX18_CP_R_TQ_R, `HS65_LSS_SDFPHQNTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQNTX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX18_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQNTX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX18_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LSS_SDFPHQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQNTX18_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LSS_SDFPHQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQNTX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNTX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQNTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQNTX27_CP_PWH 0.01
`define HS65_LSS_SDFPHQNTX27_CP_PWL 0.01
`define HS65_LSS_SDFPHQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX27_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQNTX27 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX27_CP_R_QN_R, `HS65_LSS_SDFPHQNTX27_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX27_CP_R_TQ_R, `HS65_LSS_SDFPHQNTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQNTX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX27_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQNTX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX27_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LSS_SDFPHQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQNTX27_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LSS_SDFPHQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQNTX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNTX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQNTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQNTX35_CP_PWH 0.01
`define HS65_LSS_SDFPHQNTX35_CP_PWL 0.01
`define HS65_LSS_SDFPHQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNTX35_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQNTX35 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX35_CP_R_QN_R, `HS65_LSS_SDFPHQNTX35_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQNTX35_CP_R_TQ_R, `HS65_LSS_SDFPHQNTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQNTX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX35_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQNTX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX35_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LSS_SDFPHQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQNTX35_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LSS_SDFPHQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQNX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX18_CP_PWL 0.01
`define HS65_LSS_SDFPHQNX18_CP_PWH 0.01

module HS65_LSS_SDFPHQNX18 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPHQNX18_CP_R_QN_R,`HS65_LSS_SDFPHQNX18_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_SDFPHQNX18_CP_R_QN_R,`HS65_LSS_SDFPHQNX18_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPHQNX18_CP_R_QN_R,`HS65_LSS_SDFPHQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQNX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQNX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX18_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQNX18_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHQNX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQNX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX27_CP_PWL 0.01
`define HS65_LSS_SDFPHQNX27_CP_PWH 0.01

module HS65_LSS_SDFPHQNX27 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPHQNX27_CP_R_QN_R,`HS65_LSS_SDFPHQNX27_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_SDFPHQNX27_CP_R_QN_R,`HS65_LSS_SDFPHQNX27_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPHQNX27_CP_R_QN_R,`HS65_LSS_SDFPHQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQNX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQNX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX27_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQNX27_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHQNX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQNX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHQNX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQNX35_CP_PWL 0.01
`define HS65_LSS_SDFPHQNX35_CP_PWH 0.01

module HS65_LSS_SDFPHQNX35 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPHQNX35_CP_R_QN_R,`HS65_LSS_SDFPHQNX35_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LSS_SDFPHQNX35_CP_R_QN_R,`HS65_LSS_SDFPHQNX35_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPHQNX35_CP_R_QN_R,`HS65_LSS_SDFPHQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQNX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQNX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX35_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQNX35_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHQNX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQTX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQTX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQTX18_CP_PWH 0.01
`define HS65_LSS_SDFPHQTX18_CP_PWL 0.01
`define HS65_LSS_SDFPHQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX18_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQTX18 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX18_CP_R_Q_R, `HS65_LSS_SDFPHQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX18_CP_R_TQ_R, `HS65_LSS_SDFPHQTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQTX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX18_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQTX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX18_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPHQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQTX18_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LSS_SDFPHQTX18 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQTX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQTX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQTX27_CP_PWH 0.01
`define HS65_LSS_SDFPHQTX27_CP_PWL 0.01
`define HS65_LSS_SDFPHQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX27_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQTX27 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX27_CP_R_Q_R, `HS65_LSS_SDFPHQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX27_CP_R_TQ_R, `HS65_LSS_SDFPHQTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQTX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX27_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQTX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX27_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPHQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQTX27_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LSS_SDFPHQTX27 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPHQTX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQTX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHQTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHQTX35_CP_PWH 0.01
`define HS65_LSS_SDFPHQTX35_CP_PWL 0.01
`define HS65_LSS_SDFPHQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQTX35_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LSS_SDFPHQTX35 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX35_CP_R_Q_R, `HS65_LSS_SDFPHQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LSS_SDFPHQTX35_CP_R_TQ_R, `HS65_LSS_SDFPHQTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPHQTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPHQTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LSS_SDFPHQTX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX35_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LSS_SDFPHQTX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX35_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPHQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPHQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPHQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPHQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LSS_SDFPHQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPHQTX35_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LSS_SDFPHQTX35 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX18_CP_PWL 0.01
`define HS65_LSS_SDFPHQX18_CP_PWH 0.01

module HS65_LSS_SDFPHQX18 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPHQX18_CP_R_Q_R,`HS65_LSS_SDFPHQX18_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_SDFPHQX18_CP_R_Q_R,`HS65_LSS_SDFPHQX18_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPHQX18_CP_R_Q_R,`HS65_LSS_SDFPHQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX18_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX27_CP_PWL 0.01
`define HS65_LSS_SDFPHQX27_CP_PWH 0.01

module HS65_LSS_SDFPHQX27 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPHQX27_CP_R_Q_R,`HS65_LSS_SDFPHQX27_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_SDFPHQX27_CP_R_Q_R,`HS65_LSS_SDFPHQX27_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPHQX27_CP_R_Q_R,`HS65_LSS_SDFPHQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX27_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHQX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHQX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHQX35_CP_PWL 0.01
`define HS65_LSS_SDFPHQX35_CP_PWH 0.01

module HS65_LSS_SDFPHQX35 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPHQX35_CP_R_Q_R,`HS65_LSS_SDFPHQX35_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LSS_SDFPHQX35_CP_R_Q_R,`HS65_LSS_SDFPHQX35_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPHQX35_CP_R_Q_R,`HS65_LSS_SDFPHQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHQX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHQX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LSS_SDFPHQX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX35_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LSS_SDFPHQX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHQX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHQX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LSS_SDFPHQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHQX35

`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQNTX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQNTX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQNTX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHRQNTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQNTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX18_RN_F_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX18_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX18_RN_PWL 0.01
`define HS65_LSS_SDFPHRQNTX18_CP_PWL 0.01
`define HS65_LSS_SDFPHRQNTX18_CP_PWH 0.01

module HS65_LSS_SDFPHRQNTX18 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX18_CP_R_QN_R, `HS65_LSS_SDFPHRQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX18_CP_R_TQ_R, `HS65_LSS_SDFPHRQNTX18_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPHRQNTX18_RN_F_QN_R,`HS65_LSS_SDFPHRQNTX18_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQNTX18_RN_F_TQ_F,`HS65_LSS_SDFPHRQNTX18_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQNTX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQNTX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQNTX18_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQNTX18_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQNTX18_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQNTX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQNTX18_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQNTX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQNTX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQNTX18


`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQNTX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQNTX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQNTX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHRQNTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQNTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX27_RN_F_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX27_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX27_RN_PWL 0.01
`define HS65_LSS_SDFPHRQNTX27_CP_PWL 0.01
`define HS65_LSS_SDFPHRQNTX27_CP_PWH 0.01

module HS65_LSS_SDFPHRQNTX27 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX27_CP_R_QN_R, `HS65_LSS_SDFPHRQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX27_CP_R_TQ_R, `HS65_LSS_SDFPHRQNTX27_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPHRQNTX27_RN_F_QN_R,`HS65_LSS_SDFPHRQNTX27_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQNTX27_RN_F_TQ_F,`HS65_LSS_SDFPHRQNTX27_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQNTX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQNTX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQNTX27_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQNTX27_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQNTX27_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQNTX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQNTX27_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQNTX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQNTX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQNTX27


`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQNTX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQNTX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQNTX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPHRQNTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQNTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX35_RN_F_QN_R 0.1
`define HS65_LSS_SDFPHRQNTX35_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQNTX35_RN_PWL 0.01
`define HS65_LSS_SDFPHRQNTX35_CP_PWL 0.01
`define HS65_LSS_SDFPHRQNTX35_CP_PWH 0.01

module HS65_LSS_SDFPHRQNTX35 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX35_CP_R_QN_R, `HS65_LSS_SDFPHRQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQNTX35_CP_R_TQ_R, `HS65_LSS_SDFPHRQNTX35_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPHRQNTX35_RN_F_QN_R,`HS65_LSS_SDFPHRQNTX35_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQNTX35_RN_F_TQ_F,`HS65_LSS_SDFPHRQNTX35_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQNTX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQNTX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQNTX35_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQNTX35_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQNTX35_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQNTX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQNTX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQNTX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQNTX35_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQNTX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQNTX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQNTX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQNTX35


`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQTX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQTX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQTX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHRQTX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHRQTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX18_RN_F_Q_F 0.1
`define HS65_LSS_SDFPHRQTX18_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX18_RN_PWL 0.01
`define HS65_LSS_SDFPHRQTX18_CP_PWL 0.01
`define HS65_LSS_SDFPHRQTX18_CP_PWH 0.01

module HS65_LSS_SDFPHRQTX18 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX18_CP_R_Q_R, `HS65_LSS_SDFPHRQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX18_CP_R_TQ_R, `HS65_LSS_SDFPHRQTX18_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPHRQTX18_RN_F_Q_F,`HS65_LSS_SDFPHRQTX18_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQTX18_RN_F_TQ_F,`HS65_LSS_SDFPHRQTX18_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQTX18_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQTX18_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQTX18_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQTX18_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQTX18_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQTX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQTX18_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQTX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQTX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQTX18


`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQTX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQTX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQTX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHRQTX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHRQTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX27_RN_F_Q_F 0.1
`define HS65_LSS_SDFPHRQTX27_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX27_RN_PWL 0.01
`define HS65_LSS_SDFPHRQTX27_CP_PWL 0.01
`define HS65_LSS_SDFPHRQTX27_CP_PWH 0.01

module HS65_LSS_SDFPHRQTX27 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX27_CP_R_Q_R, `HS65_LSS_SDFPHRQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX27_CP_R_TQ_R, `HS65_LSS_SDFPHRQTX27_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPHRQTX27_RN_F_Q_F,`HS65_LSS_SDFPHRQTX27_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQTX27_RN_F_TQ_F,`HS65_LSS_SDFPHRQTX27_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQTX27_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQTX27_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQTX27_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQTX27_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQTX27_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQTX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQTX27_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQTX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQTX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQTX27


`endcelldefine
// Verilog model view for HS65_LSS_SDFPHRQTX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LSS_SDFPHRQTX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPHRQTX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPHRQTX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPHRQTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPHRQTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX35_RN_F_Q_F 0.1
`define HS65_LSS_SDFPHRQTX35_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPHRQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPHRQTX35_RN_PWL 0.01
`define HS65_LSS_SDFPHRQTX35_CP_PWL 0.01
`define HS65_LSS_SDFPHRQTX35_CP_PWH 0.01

module HS65_LSS_SDFPHRQTX35 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX35_CP_R_Q_R, `HS65_LSS_SDFPHRQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LSS_SDFPHRQTX35_CP_R_TQ_R, `HS65_LSS_SDFPHRQTX35_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPHRQTX35_RN_F_Q_F,`HS65_LSS_SDFPHRQTX35_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPHRQTX35_RN_F_TQ_F,`HS65_LSS_SDFPHRQTX35_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPHRQTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPHRQTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LSS_SDFPHRQTX35_E_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LSS_SDFPHRQTX35_E_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LSS_SDFPHRQTX35_TE_CP_SETUP_posedge_posedge , `HS65_LSS_SDFPHRQTX35_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LSS_SDFPHRQTX35_TE_CP_SETUP_negedge_posedge ,`HS65_LSS_SDFPHRQTX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPHRQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPHRQTX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPHRQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPHRQTX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPHRQTX35_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPHRQTX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPHRQTX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LSS_SDFPHRQTX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPHRQTX35


`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQNTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQNTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQNTX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNTX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNTX18_CP_PWH 0.01
`define HS65_LSS_SDFPQNTX18_CP_PWL 0.01
`define HS65_LSS_SDFPQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQNTX18 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX18_CP_R_QN_R, `HS65_LSS_SDFPQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX18_CP_R_TQ_R, `HS65_LSS_SDFPQNTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPQNTX18_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LSS_SDFPQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQNTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQNTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQNTX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNTX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNTX27_CP_PWH 0.01
`define HS65_LSS_SDFPQNTX27_CP_PWL 0.01
`define HS65_LSS_SDFPQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQNTX27 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX27_CP_R_QN_R, `HS65_LSS_SDFPQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX27_CP_R_TQ_R, `HS65_LSS_SDFPQNTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPQNTX27_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LSS_SDFPQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQNTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQNTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQNTX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNTX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNTX35_CP_PWH 0.01
`define HS65_LSS_SDFPQNTX35_CP_PWL 0.01
`define HS65_LSS_SDFPQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQNTX35 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX35_CP_R_QN_R, `HS65_LSS_SDFPQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQNTX35_CP_R_TQ_R, `HS65_LSS_SDFPQNTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LSS_SDFPQNTX35_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LSS_SDFPQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQNX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX18_CP_PWL 0.01
`define HS65_LSS_SDFPQNX18_CP_PWH 0.01

module HS65_LSS_SDFPQNX18 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPQNX18_CP_R_QN_R,`HS65_LSS_SDFPQNX18_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPQNX18_CP_R_QN_R,`HS65_LSS_SDFPQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQNX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX27_CP_PWL 0.01
`define HS65_LSS_SDFPQNX27_CP_PWH 0.01

module HS65_LSS_SDFPQNX27 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPQNX27_CP_R_QN_R,`HS65_LSS_SDFPQNX27_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPQNX27_CP_R_QN_R,`HS65_LSS_SDFPQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQNX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPQNX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQNX35_CP_PWL 0.01
`define HS65_LSS_SDFPQNX35_CP_PWH 0.01

module HS65_LSS_SDFPQNX35 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPQNX35_CP_R_QN_R,`HS65_LSS_SDFPQNX35_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPQNX35_CP_R_QN_R,`HS65_LSS_SDFPQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQTX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQTX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQTX18_CP_PWH 0.01
`define HS65_LSS_SDFPQTX18_CP_PWL 0.01
`define HS65_LSS_SDFPQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQTX18 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX18_CP_R_Q_R, `HS65_LSS_SDFPQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX18_CP_R_TQ_R, `HS65_LSS_SDFPQTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LSS_SDFPQTX18_TE_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LSS_SDFPQTX18_TE_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LSS_SDFPQTX18_TI_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LSS_SDFPQTX18_TI_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQTX18_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQTX18_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LSS_SDFPQTX18_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LSS_SDFPQTX18_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LSS_SDFPQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQTX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQTX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQTX27_CP_PWH 0.01
`define HS65_LSS_SDFPQTX27_CP_PWL 0.01
`define HS65_LSS_SDFPQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQTX27 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX27_CP_R_Q_R, `HS65_LSS_SDFPQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX27_CP_R_TQ_R, `HS65_LSS_SDFPQTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LSS_SDFPQTX27_TE_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LSS_SDFPQTX27_TE_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LSS_SDFPQTX27_TI_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LSS_SDFPQTX27_TI_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQTX27_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQTX27_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LSS_SDFPQTX27_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LSS_SDFPQTX27_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LSS_SDFPQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPQTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPQTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPQTX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQTX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQTX35_CP_PWH 0.01
`define HS65_LSS_SDFPQTX35_CP_PWL 0.01
`define HS65_LSS_SDFPQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPQTX35 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX35_CP_R_Q_R, `HS65_LSS_SDFPQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPQTX35_CP_R_TQ_R, `HS65_LSS_SDFPQTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LSS_SDFPQTX35_TE_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LSS_SDFPQTX35_TE_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LSS_SDFPQTX35_TI_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LSS_SDFPQTX35_TI_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPQTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQTX35_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPQTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQTX35_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LSS_SDFPQTX35_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LSS_SDFPQTX35_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LSS_SDFPQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX18_CP_PWL 0.01
`define HS65_LSS_SDFPQX18_CP_PWH 0.01

module HS65_LSS_SDFPQX18 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPQX18_CP_R_Q_R,`HS65_LSS_SDFPQX18_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPQX18_CP_R_Q_R,`HS65_LSS_SDFPQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX27_CP_PWL 0.01
`define HS65_LSS_SDFPQX27_CP_PWH 0.01

module HS65_LSS_SDFPQX27 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPQX27_CP_R_Q_R,`HS65_LSS_SDFPQX27_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPQX27_CP_R_Q_R,`HS65_LSS_SDFPQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPQX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPQX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPQX35_CP_PWL 0.01
`define HS65_LSS_SDFPQX35_CP_PWH 0.01

module HS65_LSS_SDFPQX35 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPQX35_CP_R_Q_R,`HS65_LSS_SDFPQX35_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPQX35_CP_R_Q_R,`HS65_LSS_SDFPQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPQX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPQX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPQX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPQX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LSS_SDFPQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LSS_SDFPQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQNTX18_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQNTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX18_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNTX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNTX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_RN_PWL 0.01
`define HS65_LSS_SDFPRQNTX18_CP_PWH 0.01
`define HS65_LSS_SDFPRQNTX18_CP_PWL 0.01
`define HS65_LSS_SDFPRQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQNTX18 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX18_CP_R_QN_R, `HS65_LSS_SDFPRQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX18_CP_R_TQ_R, `HS65_LSS_SDFPRQNTX18_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNTX18_RN_F_QN_R,`HS65_LSS_SDFPRQNTX18_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQNTX18_RN_F_TQ_F,`HS65_LSS_SDFPRQNTX18_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX18_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX18_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQNTX18_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQNTX18_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQNTX18_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQNTX18_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQNTX27_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQNTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX27_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNTX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNTX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_RN_PWL 0.01
`define HS65_LSS_SDFPRQNTX27_CP_PWH 0.01
`define HS65_LSS_SDFPRQNTX27_CP_PWL 0.01
`define HS65_LSS_SDFPRQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQNTX27 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX27_CP_R_QN_R, `HS65_LSS_SDFPRQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX27_CP_R_TQ_R, `HS65_LSS_SDFPRQNTX27_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNTX27_RN_F_QN_R,`HS65_LSS_SDFPRQNTX27_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQNTX27_RN_F_TQ_F,`HS65_LSS_SDFPRQNTX27_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX27_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX27_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQNTX27_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQNTX27_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQNTX27_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQNTX27_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQNTX35_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQNTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQNTX35_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNTX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNTX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_RN_PWL 0.01
`define HS65_LSS_SDFPRQNTX35_CP_PWH 0.01
`define HS65_LSS_SDFPRQNTX35_CP_PWL 0.01
`define HS65_LSS_SDFPRQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQNTX35 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX35_CP_R_QN_R, `HS65_LSS_SDFPRQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQNTX35_CP_R_TQ_R, `HS65_LSS_SDFPRQNTX35_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNTX35_RN_F_QN_R,`HS65_LSS_SDFPRQNTX35_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQNTX35_RN_F_TQ_F,`HS65_LSS_SDFPRQNTX35_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX35_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX35_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQNTX35_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQNTX35_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQNTX35_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQNTX35_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQNX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNX18_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX18_RN_PWL 0.01
`define HS65_LSS_SDFPRQNX18_CP_PWL 0.01
`define HS65_LSS_SDFPRQNX18_CP_PWH 0.01

module HS65_LSS_SDFPRQNX18 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPRQNX18_CP_R_QN_R,`HS65_LSS_SDFPRQNX18_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPRQNX18_CP_R_QN_R,`HS65_LSS_SDFPRQNX18_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNX18_RN_F_QN_R,`HS65_LSS_SDFPRQNX18_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQNX18_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQNX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQNX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQNX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNX27_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX27_RN_PWL 0.01
`define HS65_LSS_SDFPRQNX27_CP_PWL 0.01
`define HS65_LSS_SDFPRQNX27_CP_PWH 0.01

module HS65_LSS_SDFPRQNX27 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPRQNX27_CP_R_QN_R,`HS65_LSS_SDFPRQNX27_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPRQNX27_CP_R_QN_R,`HS65_LSS_SDFPRQNX27_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNX27_RN_F_QN_R,`HS65_LSS_SDFPRQNX27_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQNX27_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQNX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQNX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQNX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPRQNX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPRQNX35_RN_F_QN_R 0.1
`define HS65_LSS_SDFPRQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQNX35_RN_PWL 0.01
`define HS65_LSS_SDFPRQNX35_CP_PWL 0.01
`define HS65_LSS_SDFPRQNX35_CP_PWH 0.01

module HS65_LSS_SDFPRQNX35 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPRQNX35_CP_R_QN_R,`HS65_LSS_SDFPRQNX35_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPRQNX35_CP_R_QN_R,`HS65_LSS_SDFPRQNX35_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LSS_SDFPRQNX35_RN_F_QN_R,`HS65_LSS_SDFPRQNX35_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQNX35_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQNX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQNX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQTX18_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQTX18_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQTX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQTX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_RN_PWL 0.01
`define HS65_LSS_SDFPRQTX18_CP_PWH 0.01
`define HS65_LSS_SDFPRQTX18_CP_PWL 0.01
`define HS65_LSS_SDFPRQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQTX18 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX18_CP_R_Q_R, `HS65_LSS_SDFPRQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX18_CP_R_TQ_R, `HS65_LSS_SDFPRQTX18_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQTX18_RN_F_Q_F,`HS65_LSS_SDFPRQTX18_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQTX18_RN_F_TQ_F,`HS65_LSS_SDFPRQTX18_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPRQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQTX18_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPRQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQTX18_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPRQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQTX18_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQTX18_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQTX18_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQTX18_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQTX27_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQTX27_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQTX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQTX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_RN_PWL 0.01
`define HS65_LSS_SDFPRQTX27_CP_PWH 0.01
`define HS65_LSS_SDFPRQTX27_CP_PWL 0.01
`define HS65_LSS_SDFPRQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQTX27 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX27_CP_R_Q_R, `HS65_LSS_SDFPRQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX27_CP_R_TQ_R, `HS65_LSS_SDFPRQTX27_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQTX27_RN_F_Q_F,`HS65_LSS_SDFPRQTX27_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQTX27_RN_F_TQ_F,`HS65_LSS_SDFPRQTX27_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPRQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQTX27_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPRQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQTX27_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPRQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQTX27_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQTX27_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQTX27_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQTX27_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPRQTX35_RN_F_TQ_F 0.1
`define HS65_LSS_SDFPRQTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPRQTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPRQTX35_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQTX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQTX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_RN_PWL 0.01
`define HS65_LSS_SDFPRQTX35_CP_PWH 0.01
`define HS65_LSS_SDFPRQTX35_CP_PWL 0.01
`define HS65_LSS_SDFPRQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPRQTX35 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX35_CP_R_Q_R, `HS65_LSS_SDFPRQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPRQTX35_CP_R_TQ_R, `HS65_LSS_SDFPRQTX35_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQTX35_RN_F_Q_F,`HS65_LSS_SDFPRQTX35_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LSS_SDFPRQTX35_RN_F_TQ_F,`HS65_LSS_SDFPRQTX35_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPRQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPRQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPRQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPRQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPRQTX35_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPRQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPRQTX35_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPRQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPRQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LSS_SDFPRQTX35_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LSS_SDFPRQTX35_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LSS_SDFPRQTX35_RN_CP_REC_posedge_posedge,`HS65_LSS_SDFPRQTX35_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPRQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQX18_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX18_RN_PWL 0.01
`define HS65_LSS_SDFPRQX18_CP_PWL 0.01
`define HS65_LSS_SDFPRQX18_CP_PWH 0.01

module HS65_LSS_SDFPRQX18 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPRQX18_CP_R_Q_R,`HS65_LSS_SDFPRQX18_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPRQX18_CP_R_Q_R,`HS65_LSS_SDFPRQX18_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQX18_RN_F_Q_F,`HS65_LSS_SDFPRQX18_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQX18_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQX27_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX27_RN_PWL 0.01
`define HS65_LSS_SDFPRQX27_CP_PWL 0.01
`define HS65_LSS_SDFPRQX27_CP_PWH 0.01

module HS65_LSS_SDFPRQX27 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPRQX27_CP_R_Q_R,`HS65_LSS_SDFPRQX27_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPRQX27_CP_R_Q_R,`HS65_LSS_SDFPRQX27_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQX27_RN_F_Q_F,`HS65_LSS_SDFPRQX27_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQX27_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPRQX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPRQX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPRQX35_RN_F_Q_F 0.1
`define HS65_LSS_SDFPRQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPRQX35_RN_PWL 0.01
`define HS65_LSS_SDFPRQX35_CP_PWL 0.01
`define HS65_LSS_SDFPRQX35_CP_PWH 0.01

module HS65_LSS_SDFPRQX35 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPRQX35_CP_R_Q_R,`HS65_LSS_SDFPRQX35_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPRQX35_CP_R_Q_R,`HS65_LSS_SDFPRQX35_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LSS_SDFPRQX35_RN_F_Q_F,`HS65_LSS_SDFPRQX35_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPRQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPRQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPRQX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPRQX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPRQX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPRQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPRQX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPRQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LSS_SDFPRQX35_RN_CP_REC_posedge_posedge, `HS65_LSS_SDFPRQX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LSS_SDFPRQX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LSS_SDFPRQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LSS_SDFPRQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPRQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQNTX18_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQNTX18_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNTX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNTX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNTX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_SN_PWL 0.01
`define HS65_LSS_SDFPSQNTX18_CP_PWH 0.01
`define HS65_LSS_SDFPSQNTX18_CP_PWL 0.01
`define HS65_LSS_SDFPSQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQNTX18 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX18_CP_R_QN_R, `HS65_LSS_SDFPSQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX18_CP_R_TQ_R, `HS65_LSS_SDFPSQNTX18_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNTX18_SN_F_QN_F,`HS65_LSS_SDFPSQNTX18_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQNTX18_SN_F_TQ_R,`HS65_LSS_SDFPSQNTX18_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQNTX18_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQNTX18_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQNTX18_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQNTX18_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPSQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQNTX27_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQNTX27_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNTX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNTX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNTX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_SN_PWL 0.01
`define HS65_LSS_SDFPSQNTX27_CP_PWH 0.01
`define HS65_LSS_SDFPSQNTX27_CP_PWL 0.01
`define HS65_LSS_SDFPSQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQNTX27 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX27_CP_R_QN_R, `HS65_LSS_SDFPSQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX27_CP_R_TQ_R, `HS65_LSS_SDFPSQNTX27_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNTX27_SN_F_QN_F,`HS65_LSS_SDFPSQNTX27_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQNTX27_SN_F_TQ_R,`HS65_LSS_SDFPSQNTX27_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQNTX27_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQNTX27_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQNTX27_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQNTX27_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPSQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQNTX35_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQNTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQNTX35_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNTX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNTX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNTX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_SN_PWL 0.01
`define HS65_LSS_SDFPSQNTX35_CP_PWH 0.01
`define HS65_LSS_SDFPSQNTX35_CP_PWL 0.01
`define HS65_LSS_SDFPSQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQNTX35 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX35_CP_R_QN_R, `HS65_LSS_SDFPSQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQNTX35_CP_R_TQ_R, `HS65_LSS_SDFPSQNTX35_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNTX35_SN_F_QN_F,`HS65_LSS_SDFPSQNTX35_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQNTX35_SN_F_TQ_R,`HS65_LSS_SDFPSQNTX35_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQNTX35_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQNTX35_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQNTX35_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQNTX35_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LSS_SDFPSQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQNX18_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNX18_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNX18_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX18_SN_PWL 0.01
`define HS65_LSS_SDFPSQNX18_CP_PWL 0.01
`define HS65_LSS_SDFPSQNX18_CP_PWH 0.01

module HS65_LSS_SDFPSQNX18 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPSQNX18_CP_R_QN_R,`HS65_LSS_SDFPSQNX18_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPSQNX18_CP_R_QN_R,`HS65_LSS_SDFPSQNX18_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNX18_SN_F_QN_F,`HS65_LSS_SDFPSQNX18_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQNX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQNX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQNX18_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQNX18_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQNX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQNX27_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNX27_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNX27_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX27_SN_PWL 0.01
`define HS65_LSS_SDFPSQNX27_CP_PWL 0.01
`define HS65_LSS_SDFPSQNX27_CP_PWH 0.01

module HS65_LSS_SDFPSQNX27 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPSQNX27_CP_R_QN_R,`HS65_LSS_SDFPSQNX27_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPSQNX27_CP_R_QN_R,`HS65_LSS_SDFPSQNX27_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNX27_SN_F_QN_F,`HS65_LSS_SDFPSQNX27_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQNX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQNX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQNX27_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQNX27_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQNX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQNX35_CP_R_QN_R 0.1
`define HS65_LSS_SDFPSQNX35_CP_R_QN_F 0.1
`define HS65_LSS_SDFPSQNX35_SN_F_QN_F 0.1
`define HS65_LSS_SDFPSQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQNX35_SN_PWL 0.01
`define HS65_LSS_SDFPSQNX35_CP_PWL 0.01
`define HS65_LSS_SDFPSQNX35_CP_PWH 0.01

module HS65_LSS_SDFPSQNX35 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LSS_SDFPSQNX35_CP_R_QN_R,`HS65_LSS_SDFPSQNX35_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LSS_SDFPSQNX35_CP_R_QN_R,`HS65_LSS_SDFPSQNX35_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LSS_SDFPSQNX35_SN_F_QN_F,`HS65_LSS_SDFPSQNX35_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQNX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQNX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQNX35_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQNX35_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQNX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQTX18_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQTX18_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQTX18_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQTX18_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQTX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQTX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQTX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_SN_PWL 0.01
`define HS65_LSS_SDFPSQTX18_CP_PWH 0.01
`define HS65_LSS_SDFPSQTX18_CP_PWL 0.01
`define HS65_LSS_SDFPSQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQTX18 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX18_CP_R_Q_R, `HS65_LSS_SDFPSQTX18_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX18_CP_R_TQ_R, `HS65_LSS_SDFPSQTX18_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQTX18_SN_F_Q_R,`HS65_LSS_SDFPSQTX18_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQTX18_SN_F_TQ_R,`HS65_LSS_SDFPSQTX18_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQTX18_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPSQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQTX18_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPSQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQTX18_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQTX18_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQTX18_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQTX18_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LSS_SDFPSQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQTX27_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQTX27_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQTX27_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQTX27_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQTX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQTX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQTX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_SN_PWL 0.01
`define HS65_LSS_SDFPSQTX27_CP_PWH 0.01
`define HS65_LSS_SDFPSQTX27_CP_PWL 0.01
`define HS65_LSS_SDFPSQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQTX27 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX27_CP_R_Q_R, `HS65_LSS_SDFPSQTX27_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX27_CP_R_TQ_R, `HS65_LSS_SDFPSQTX27_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQTX27_SN_F_Q_R,`HS65_LSS_SDFPSQTX27_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQTX27_SN_F_TQ_R,`HS65_LSS_SDFPSQTX27_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQTX27_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPSQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQTX27_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPSQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQTX27_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQTX27_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQTX27_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQTX27_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LSS_SDFPSQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LSS_SDFPSQTX35_SN_F_TQ_R 0.1
`define HS65_LSS_SDFPSQTX35_CP_R_TQ_R 0.1
`define HS65_LSS_SDFPSQTX35_CP_R_TQ_F 0.1
`define HS65_LSS_SDFPSQTX35_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQTX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQTX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQTX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_SN_PWL 0.01
`define HS65_LSS_SDFPSQTX35_CP_PWH 0.01
`define HS65_LSS_SDFPSQTX35_CP_PWL 0.01
`define HS65_LSS_SDFPSQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LSS_SDFPSQTX35 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX35_CP_R_Q_R, `HS65_LSS_SDFPSQTX35_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LSS_SDFPSQTX35_CP_R_TQ_R, `HS65_LSS_SDFPSQTX35_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQTX35_SN_F_Q_R,`HS65_LSS_SDFPSQTX35_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LSS_SDFPSQTX35_SN_F_TQ_R,`HS65_LSS_SDFPSQTX35_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LSS_SDFPSQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LSS_SDFPSQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LSS_SDFPSQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LSS_SDFPSQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LSS_SDFPSQTX35_D_CP_SETUP_posedge_posedge,`HS65_LSS_SDFPSQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LSS_SDFPSQTX35_D_CP_SETUP_negedge_posedge,`HS65_LSS_SDFPSQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LSS_SDFPSQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LSS_SDFPSQTX35_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LSS_SDFPSQTX35_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LSS_SDFPSQTX35_SN_CP_REC_posedge_posedge,`HS65_LSS_SDFPSQTX35_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LSS_SDFPSQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQX18_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQX18_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQX18_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX18_SN_PWL 0.01
`define HS65_LSS_SDFPSQX18_CP_PWL 0.01
`define HS65_LSS_SDFPSQX18_CP_PWH 0.01

module HS65_LSS_SDFPSQX18 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPSQX18_CP_R_Q_R,`HS65_LSS_SDFPSQX18_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPSQX18_CP_R_Q_R,`HS65_LSS_SDFPSQX18_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQX18_SN_F_Q_R,`HS65_LSS_SDFPSQX18_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQX18_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQX18_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQX18_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQX18_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQX18_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQX18_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQX18_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQX18_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQX27_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQX27_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQX27_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX27_SN_PWL 0.01
`define HS65_LSS_SDFPSQX27_CP_PWL 0.01
`define HS65_LSS_SDFPSQX27_CP_PWH 0.01

module HS65_LSS_SDFPSQX27 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPSQX27_CP_R_Q_R,`HS65_LSS_SDFPSQX27_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPSQX27_CP_R_Q_R,`HS65_LSS_SDFPSQX27_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQX27_SN_F_Q_R,`HS65_LSS_SDFPSQX27_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQX27_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQX27_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQX27_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQX27_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQX27_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQX27_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQX27_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQX27_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_SDFPSQX35_CP_R_Q_R 0.1
`define HS65_LSS_SDFPSQX35_CP_R_Q_F 0.1
`define HS65_LSS_SDFPSQX35_SN_F_Q_R 0.1
`define HS65_LSS_SDFPSQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LSS_SDFPSQX35_SN_PWL 0.01
`define HS65_LSS_SDFPSQX35_CP_PWL 0.01
`define HS65_LSS_SDFPSQX35_CP_PWH 0.01

module HS65_LSS_SDFPSQX35 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LSS_SDFPSQX35_CP_R_Q_R,`HS65_LSS_SDFPSQX35_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LSS_SDFPSQX35_CP_R_Q_R,`HS65_LSS_SDFPSQX35_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LSS_SDFPSQX35_SN_F_Q_R,`HS65_LSS_SDFPSQX35_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LSS_SDFPSQX35_D_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LSS_SDFPSQX35_D_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LSS_SDFPSQX35_TE_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LSS_SDFPSQX35_TE_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LSS_SDFPSQX35_TI_CP_SETUP_posedge_posedge, `HS65_LSS_SDFPSQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LSS_SDFPSQX35_TI_CP_SETUP_negedge_posedge, `HS65_LSS_SDFPSQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LSS_SDFPSQX35_SN_CP_REC_posedge_posedge, `HS65_LSS_SDFPSQX35_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LSS_SDFPSQX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LSS_SDFPSQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LSS_SDFPSQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LSS_SDFPSQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR2X12_A_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X12_A_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X12_A_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X12_A_F_Z_R_0 0.1
`define HS65_LSS_XNOR2X12_B_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X12_B_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X12_B_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X12_B_F_Z_R_0 0.1

module HS65_LSS_XNOR2X12 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LSS_XNOR2X12_A_R_Z_R_1,`HS65_LSS_XNOR2X12_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LSS_XNOR2X12_A_F_Z_R_0,`HS65_LSS_XNOR2X12_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LSS_XNOR2X12_B_R_Z_R_1,`HS65_LSS_XNOR2X12_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LSS_XNOR2X12_B_F_Z_R_0,`HS65_LSS_XNOR2X12_B_R_Z_F_0);


	endspecify

endmodule // HS65_LSS_XNOR2X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR2X18_A_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X18_A_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X18_A_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X18_A_F_Z_R_0 0.1
`define HS65_LSS_XNOR2X18_B_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X18_B_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X18_B_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X18_B_F_Z_R_0 0.1

module HS65_LSS_XNOR2X18 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LSS_XNOR2X18_A_R_Z_R_1,`HS65_LSS_XNOR2X18_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LSS_XNOR2X18_A_F_Z_R_0,`HS65_LSS_XNOR2X18_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LSS_XNOR2X18_B_R_Z_R_1,`HS65_LSS_XNOR2X18_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LSS_XNOR2X18_B_F_Z_R_0,`HS65_LSS_XNOR2X18_B_R_Z_F_0);


	endspecify

endmodule // HS65_LSS_XNOR2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR2X24_A_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X24_A_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X24_A_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X24_A_F_Z_R_0 0.1
`define HS65_LSS_XNOR2X24_B_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X24_B_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X24_B_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X24_B_F_Z_R_0 0.1

module HS65_LSS_XNOR2X24 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LSS_XNOR2X24_A_R_Z_R_1,`HS65_LSS_XNOR2X24_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LSS_XNOR2X24_A_F_Z_R_0,`HS65_LSS_XNOR2X24_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LSS_XNOR2X24_B_R_Z_R_1,`HS65_LSS_XNOR2X24_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LSS_XNOR2X24_B_F_Z_R_0,`HS65_LSS_XNOR2X24_B_R_Z_F_0);


	endspecify

endmodule // HS65_LSS_XNOR2X24

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR2X3_A_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X3_A_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X3_A_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X3_A_F_Z_R_0 0.1
`define HS65_LSS_XNOR2X3_B_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X3_B_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X3_B_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X3_B_F_Z_R_0 0.1

module HS65_LSS_XNOR2X3 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LSS_XNOR2X3_A_R_Z_R_1,`HS65_LSS_XNOR2X3_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LSS_XNOR2X3_A_F_Z_R_0,`HS65_LSS_XNOR2X3_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LSS_XNOR2X3_B_R_Z_R_1,`HS65_LSS_XNOR2X3_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LSS_XNOR2X3_B_F_Z_R_0,`HS65_LSS_XNOR2X3_B_R_Z_F_0);


	endspecify

endmodule // HS65_LSS_XNOR2X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR2X6_A_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X6_A_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X6_A_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X6_A_F_Z_R_0 0.1
`define HS65_LSS_XNOR2X6_B_R_Z_R_1 0.1
`define HS65_LSS_XNOR2X6_B_F_Z_F_1 0.1
`define HS65_LSS_XNOR2X6_B_R_Z_F_0 0.1
`define HS65_LSS_XNOR2X6_B_F_Z_R_0 0.1

module HS65_LSS_XNOR2X6 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LSS_XNOR2X6_A_R_Z_R_1,`HS65_LSS_XNOR2X6_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LSS_XNOR2X6_A_F_Z_R_0,`HS65_LSS_XNOR2X6_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LSS_XNOR2X6_B_R_Z_R_1,`HS65_LSS_XNOR2X6_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LSS_XNOR2X6_B_F_Z_R_0,`HS65_LSS_XNOR2X6_B_R_Z_F_0);


	endspecify

endmodule // HS65_LSS_XNOR2X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR3X12_A_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X12_A_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X12_A_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X12_A_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X12_A_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X12_A_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X12_A_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X12_A_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X12_B_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X12_B_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X12_B_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X12_B_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X12_B_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X12_B_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X12_B_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X12_B_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X12_C_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X12_C_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X12_C_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X12_C_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X12_C_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X12_C_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X12_C_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X12_C_F_Z_F_10 0.1

module HS65_LSS_XNOR3X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LSS_XNOR3X12_A_F_Z_R_11,`HS65_LSS_XNOR3X12_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LSS_XNOR3X12_A_F_Z_R_00,`HS65_LSS_XNOR3X12_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LSS_XNOR3X12_A_R_Z_R_01,`HS65_LSS_XNOR3X12_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LSS_XNOR3X12_A_R_Z_R_10,`HS65_LSS_XNOR3X12_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LSS_XNOR3X12_B_F_Z_R_11,`HS65_LSS_XNOR3X12_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LSS_XNOR3X12_B_F_Z_R_00,`HS65_LSS_XNOR3X12_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LSS_XNOR3X12_B_R_Z_R_01,`HS65_LSS_XNOR3X12_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LSS_XNOR3X12_B_R_Z_R_10,`HS65_LSS_XNOR3X12_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LSS_XNOR3X12_C_F_Z_R_11,`HS65_LSS_XNOR3X12_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LSS_XNOR3X12_C_F_Z_R_00,`HS65_LSS_XNOR3X12_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LSS_XNOR3X12_C_R_Z_R_01,`HS65_LSS_XNOR3X12_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LSS_XNOR3X12_C_R_Z_R_10,`HS65_LSS_XNOR3X12_C_F_Z_F_10);


	endspecify

endmodule // HS65_LSS_XNOR3X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR3X2_A_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X2_A_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X2_A_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X2_A_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X2_A_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X2_A_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X2_A_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X2_A_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X2_B_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X2_B_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X2_B_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X2_B_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X2_B_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X2_B_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X2_B_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X2_B_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X2_C_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X2_C_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X2_C_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X2_C_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X2_C_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X2_C_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X2_C_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X2_C_F_Z_F_10 0.1

module HS65_LSS_XNOR3X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LSS_XNOR3X2_A_F_Z_R_11,`HS65_LSS_XNOR3X2_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LSS_XNOR3X2_A_F_Z_R_00,`HS65_LSS_XNOR3X2_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LSS_XNOR3X2_A_R_Z_R_01,`HS65_LSS_XNOR3X2_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LSS_XNOR3X2_A_R_Z_R_10,`HS65_LSS_XNOR3X2_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LSS_XNOR3X2_B_F_Z_R_11,`HS65_LSS_XNOR3X2_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LSS_XNOR3X2_B_F_Z_R_00,`HS65_LSS_XNOR3X2_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LSS_XNOR3X2_B_R_Z_R_01,`HS65_LSS_XNOR3X2_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LSS_XNOR3X2_B_R_Z_R_10,`HS65_LSS_XNOR3X2_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LSS_XNOR3X2_C_F_Z_R_11,`HS65_LSS_XNOR3X2_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LSS_XNOR3X2_C_F_Z_R_00,`HS65_LSS_XNOR3X2_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LSS_XNOR3X2_C_R_Z_R_01,`HS65_LSS_XNOR3X2_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LSS_XNOR3X2_C_R_Z_R_10,`HS65_LSS_XNOR3X2_C_F_Z_F_10);


	endspecify

endmodule // HS65_LSS_XNOR3X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR3X4_A_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X4_A_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X4_A_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X4_A_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X4_A_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X4_A_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X4_A_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X4_A_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X4_B_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X4_B_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X4_B_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X4_B_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X4_B_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X4_B_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X4_B_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X4_B_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X4_C_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X4_C_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X4_C_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X4_C_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X4_C_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X4_C_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X4_C_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X4_C_F_Z_F_10 0.1

module HS65_LSS_XNOR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LSS_XNOR3X4_A_F_Z_R_11,`HS65_LSS_XNOR3X4_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LSS_XNOR3X4_A_F_Z_R_00,`HS65_LSS_XNOR3X4_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LSS_XNOR3X4_A_R_Z_R_01,`HS65_LSS_XNOR3X4_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LSS_XNOR3X4_A_R_Z_R_10,`HS65_LSS_XNOR3X4_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LSS_XNOR3X4_B_F_Z_R_11,`HS65_LSS_XNOR3X4_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LSS_XNOR3X4_B_F_Z_R_00,`HS65_LSS_XNOR3X4_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LSS_XNOR3X4_B_R_Z_R_01,`HS65_LSS_XNOR3X4_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LSS_XNOR3X4_B_R_Z_R_10,`HS65_LSS_XNOR3X4_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LSS_XNOR3X4_C_F_Z_R_11,`HS65_LSS_XNOR3X4_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LSS_XNOR3X4_C_F_Z_R_00,`HS65_LSS_XNOR3X4_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LSS_XNOR3X4_C_R_Z_R_01,`HS65_LSS_XNOR3X4_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LSS_XNOR3X4_C_R_Z_R_10,`HS65_LSS_XNOR3X4_C_F_Z_F_10);


	endspecify

endmodule // HS65_LSS_XNOR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XNOR3X8_A_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X8_A_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X8_A_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X8_A_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X8_A_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X8_A_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X8_A_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X8_A_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X8_B_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X8_B_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X8_B_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X8_B_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X8_B_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X8_B_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X8_B_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X8_B_F_Z_F_10 0.1
`define HS65_LSS_XNOR3X8_C_R_Z_F_11 0.1
`define HS65_LSS_XNOR3X8_C_F_Z_R_11 0.1
`define HS65_LSS_XNOR3X8_C_R_Z_F_00 0.1
`define HS65_LSS_XNOR3X8_C_F_Z_R_00 0.1
`define HS65_LSS_XNOR3X8_C_R_Z_R_01 0.1
`define HS65_LSS_XNOR3X8_C_F_Z_F_01 0.1
`define HS65_LSS_XNOR3X8_C_R_Z_R_10 0.1
`define HS65_LSS_XNOR3X8_C_F_Z_F_10 0.1

module HS65_LSS_XNOR3X8 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LSS_XNOR3X8_A_F_Z_R_11,`HS65_LSS_XNOR3X8_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LSS_XNOR3X8_A_F_Z_R_00,`HS65_LSS_XNOR3X8_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LSS_XNOR3X8_A_R_Z_R_01,`HS65_LSS_XNOR3X8_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LSS_XNOR3X8_A_R_Z_R_10,`HS65_LSS_XNOR3X8_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LSS_XNOR3X8_B_F_Z_R_11,`HS65_LSS_XNOR3X8_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LSS_XNOR3X8_B_F_Z_R_00,`HS65_LSS_XNOR3X8_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LSS_XNOR3X8_B_R_Z_R_01,`HS65_LSS_XNOR3X8_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LSS_XNOR3X8_B_R_Z_R_10,`HS65_LSS_XNOR3X8_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LSS_XNOR3X8_C_F_Z_R_11,`HS65_LSS_XNOR3X8_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LSS_XNOR3X8_C_F_Z_R_00,`HS65_LSS_XNOR3X8_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LSS_XNOR3X8_C_R_Z_R_01,`HS65_LSS_XNOR3X8_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LSS_XNOR3X8_C_R_Z_R_10,`HS65_LSS_XNOR3X8_C_F_Z_F_10);


	endspecify

endmodule // HS65_LSS_XNOR3X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR2X12_A_R_Z_R_0 0.1
`define HS65_LSS_XOR2X12_A_F_Z_F_0 0.1
`define HS65_LSS_XOR2X12_A_R_Z_F_1 0.1
`define HS65_LSS_XOR2X12_A_F_Z_R_1 0.1
`define HS65_LSS_XOR2X12_B_R_Z_R_0 0.1
`define HS65_LSS_XOR2X12_B_F_Z_F_0 0.1
`define HS65_LSS_XOR2X12_B_R_Z_F_1 0.1
`define HS65_LSS_XOR2X12_B_F_Z_R_1 0.1

module HS65_LSS_XOR2X12 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LSS_XOR2X12_A_R_Z_R_0,`HS65_LSS_XOR2X12_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LSS_XOR2X12_A_F_Z_R_1,`HS65_LSS_XOR2X12_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LSS_XOR2X12_B_R_Z_R_0,`HS65_LSS_XOR2X12_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LSS_XOR2X12_B_F_Z_R_1,`HS65_LSS_XOR2X12_B_R_Z_F_1);


	endspecify

endmodule // HS65_LSS_XOR2X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR2X17_A_R_Z_R_0 0.1
`define HS65_LSS_XOR2X17_A_F_Z_F_0 0.1
`define HS65_LSS_XOR2X17_A_R_Z_F_1 0.1
`define HS65_LSS_XOR2X17_A_F_Z_R_1 0.1
`define HS65_LSS_XOR2X17_B_R_Z_R_0 0.1
`define HS65_LSS_XOR2X17_B_F_Z_F_0 0.1
`define HS65_LSS_XOR2X17_B_R_Z_F_1 0.1
`define HS65_LSS_XOR2X17_B_F_Z_R_1 0.1

module HS65_LSS_XOR2X17 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LSS_XOR2X17_A_R_Z_R_0,`HS65_LSS_XOR2X17_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LSS_XOR2X17_A_F_Z_R_1,`HS65_LSS_XOR2X17_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LSS_XOR2X17_B_R_Z_R_0,`HS65_LSS_XOR2X17_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LSS_XOR2X17_B_F_Z_R_1,`HS65_LSS_XOR2X17_B_R_Z_F_1);


	endspecify

endmodule // HS65_LSS_XOR2X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR2X23_A_R_Z_R_0 0.1
`define HS65_LSS_XOR2X23_A_F_Z_F_0 0.1
`define HS65_LSS_XOR2X23_A_R_Z_F_1 0.1
`define HS65_LSS_XOR2X23_A_F_Z_R_1 0.1
`define HS65_LSS_XOR2X23_B_R_Z_R_0 0.1
`define HS65_LSS_XOR2X23_B_F_Z_F_0 0.1
`define HS65_LSS_XOR2X23_B_R_Z_F_1 0.1
`define HS65_LSS_XOR2X23_B_F_Z_R_1 0.1

module HS65_LSS_XOR2X23 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LSS_XOR2X23_A_R_Z_R_0,`HS65_LSS_XOR2X23_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LSS_XOR2X23_A_F_Z_R_1,`HS65_LSS_XOR2X23_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LSS_XOR2X23_B_R_Z_R_0,`HS65_LSS_XOR2X23_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LSS_XOR2X23_B_F_Z_R_1,`HS65_LSS_XOR2X23_B_R_Z_F_1);


	endspecify

endmodule // HS65_LSS_XOR2X23

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR2X3_A_R_Z_R_0 0.1
`define HS65_LSS_XOR2X3_A_F_Z_F_0 0.1
`define HS65_LSS_XOR2X3_A_R_Z_F_1 0.1
`define HS65_LSS_XOR2X3_A_F_Z_R_1 0.1
`define HS65_LSS_XOR2X3_B_R_Z_R_0 0.1
`define HS65_LSS_XOR2X3_B_F_Z_F_0 0.1
`define HS65_LSS_XOR2X3_B_R_Z_F_1 0.1
`define HS65_LSS_XOR2X3_B_F_Z_R_1 0.1

module HS65_LSS_XOR2X3 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LSS_XOR2X3_A_R_Z_R_0,`HS65_LSS_XOR2X3_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LSS_XOR2X3_A_F_Z_R_1,`HS65_LSS_XOR2X3_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LSS_XOR2X3_B_R_Z_R_0,`HS65_LSS_XOR2X3_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LSS_XOR2X3_B_F_Z_R_1,`HS65_LSS_XOR2X3_B_R_Z_F_1);


	endspecify

endmodule // HS65_LSS_XOR2X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR2X6_A_R_Z_R_0 0.1
`define HS65_LSS_XOR2X6_A_F_Z_F_0 0.1
`define HS65_LSS_XOR2X6_A_R_Z_F_1 0.1
`define HS65_LSS_XOR2X6_A_F_Z_R_1 0.1
`define HS65_LSS_XOR2X6_B_R_Z_R_0 0.1
`define HS65_LSS_XOR2X6_B_F_Z_F_0 0.1
`define HS65_LSS_XOR2X6_B_R_Z_F_1 0.1
`define HS65_LSS_XOR2X6_B_F_Z_R_1 0.1

module HS65_LSS_XOR2X6 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LSS_XOR2X6_A_R_Z_R_0,`HS65_LSS_XOR2X6_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LSS_XOR2X6_A_F_Z_R_1,`HS65_LSS_XOR2X6_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LSS_XOR2X6_B_R_Z_R_0,`HS65_LSS_XOR2X6_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LSS_XOR2X6_B_F_Z_R_1,`HS65_LSS_XOR2X6_B_R_Z_F_1);


	endspecify

endmodule // HS65_LSS_XOR2X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR3X12_A_R_Z_F_10 0.1
`define HS65_LSS_XOR3X12_A_F_Z_R_10 0.1
`define HS65_LSS_XOR3X12_A_R_Z_F_01 0.1
`define HS65_LSS_XOR3X12_A_F_Z_R_01 0.1
`define HS65_LSS_XOR3X12_A_R_Z_R_00 0.1
`define HS65_LSS_XOR3X12_A_F_Z_F_00 0.1
`define HS65_LSS_XOR3X12_A_R_Z_R_11 0.1
`define HS65_LSS_XOR3X12_A_F_Z_F_11 0.1
`define HS65_LSS_XOR3X12_B_R_Z_F_10 0.1
`define HS65_LSS_XOR3X12_B_F_Z_R_10 0.1
`define HS65_LSS_XOR3X12_B_R_Z_F_01 0.1
`define HS65_LSS_XOR3X12_B_F_Z_R_01 0.1
`define HS65_LSS_XOR3X12_B_R_Z_R_00 0.1
`define HS65_LSS_XOR3X12_B_F_Z_F_00 0.1
`define HS65_LSS_XOR3X12_B_R_Z_R_11 0.1
`define HS65_LSS_XOR3X12_B_F_Z_F_11 0.1
`define HS65_LSS_XOR3X12_C_R_Z_F_10 0.1
`define HS65_LSS_XOR3X12_C_F_Z_R_10 0.1
`define HS65_LSS_XOR3X12_C_R_Z_F_01 0.1
`define HS65_LSS_XOR3X12_C_F_Z_R_01 0.1
`define HS65_LSS_XOR3X12_C_R_Z_R_00 0.1
`define HS65_LSS_XOR3X12_C_F_Z_F_00 0.1
`define HS65_LSS_XOR3X12_C_R_Z_R_11 0.1
`define HS65_LSS_XOR3X12_C_F_Z_F_11 0.1

module HS65_LSS_XOR3X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LSS_XOR3X12_A_F_Z_R_10,`HS65_LSS_XOR3X12_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LSS_XOR3X12_A_F_Z_R_01,`HS65_LSS_XOR3X12_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LSS_XOR3X12_A_R_Z_R_00,`HS65_LSS_XOR3X12_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LSS_XOR3X12_A_R_Z_R_11,`HS65_LSS_XOR3X12_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LSS_XOR3X12_B_F_Z_R_10,`HS65_LSS_XOR3X12_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LSS_XOR3X12_B_F_Z_R_01,`HS65_LSS_XOR3X12_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LSS_XOR3X12_B_R_Z_R_00,`HS65_LSS_XOR3X12_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LSS_XOR3X12_B_R_Z_R_11,`HS65_LSS_XOR3X12_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LSS_XOR3X12_C_F_Z_R_10,`HS65_LSS_XOR3X12_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LSS_XOR3X12_C_F_Z_R_01,`HS65_LSS_XOR3X12_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LSS_XOR3X12_C_R_Z_R_00,`HS65_LSS_XOR3X12_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LSS_XOR3X12_C_R_Z_R_11,`HS65_LSS_XOR3X12_C_F_Z_F_11);


	endspecify

endmodule // HS65_LSS_XOR3X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR3X2_A_R_Z_F_10 0.1
`define HS65_LSS_XOR3X2_A_F_Z_R_10 0.1
`define HS65_LSS_XOR3X2_A_R_Z_F_01 0.1
`define HS65_LSS_XOR3X2_A_F_Z_R_01 0.1
`define HS65_LSS_XOR3X2_A_R_Z_R_00 0.1
`define HS65_LSS_XOR3X2_A_F_Z_F_00 0.1
`define HS65_LSS_XOR3X2_A_R_Z_R_11 0.1
`define HS65_LSS_XOR3X2_A_F_Z_F_11 0.1
`define HS65_LSS_XOR3X2_B_R_Z_F_10 0.1
`define HS65_LSS_XOR3X2_B_F_Z_R_10 0.1
`define HS65_LSS_XOR3X2_B_R_Z_F_01 0.1
`define HS65_LSS_XOR3X2_B_F_Z_R_01 0.1
`define HS65_LSS_XOR3X2_B_R_Z_R_00 0.1
`define HS65_LSS_XOR3X2_B_F_Z_F_00 0.1
`define HS65_LSS_XOR3X2_B_R_Z_R_11 0.1
`define HS65_LSS_XOR3X2_B_F_Z_F_11 0.1
`define HS65_LSS_XOR3X2_C_R_Z_F_10 0.1
`define HS65_LSS_XOR3X2_C_F_Z_R_10 0.1
`define HS65_LSS_XOR3X2_C_R_Z_F_01 0.1
`define HS65_LSS_XOR3X2_C_F_Z_R_01 0.1
`define HS65_LSS_XOR3X2_C_R_Z_R_00 0.1
`define HS65_LSS_XOR3X2_C_F_Z_F_00 0.1
`define HS65_LSS_XOR3X2_C_R_Z_R_11 0.1
`define HS65_LSS_XOR3X2_C_F_Z_F_11 0.1

module HS65_LSS_XOR3X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LSS_XOR3X2_A_F_Z_R_10,`HS65_LSS_XOR3X2_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LSS_XOR3X2_A_F_Z_R_01,`HS65_LSS_XOR3X2_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LSS_XOR3X2_A_R_Z_R_00,`HS65_LSS_XOR3X2_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LSS_XOR3X2_A_R_Z_R_11,`HS65_LSS_XOR3X2_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LSS_XOR3X2_B_F_Z_R_10,`HS65_LSS_XOR3X2_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LSS_XOR3X2_B_F_Z_R_01,`HS65_LSS_XOR3X2_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LSS_XOR3X2_B_R_Z_R_00,`HS65_LSS_XOR3X2_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LSS_XOR3X2_B_R_Z_R_11,`HS65_LSS_XOR3X2_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LSS_XOR3X2_C_F_Z_R_10,`HS65_LSS_XOR3X2_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LSS_XOR3X2_C_F_Z_R_01,`HS65_LSS_XOR3X2_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LSS_XOR3X2_C_R_Z_R_00,`HS65_LSS_XOR3X2_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LSS_XOR3X2_C_R_Z_R_11,`HS65_LSS_XOR3X2_C_F_Z_F_11);


	endspecify

endmodule // HS65_LSS_XOR3X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR3X4_A_R_Z_F_10 0.1
`define HS65_LSS_XOR3X4_A_F_Z_R_10 0.1
`define HS65_LSS_XOR3X4_A_R_Z_F_01 0.1
`define HS65_LSS_XOR3X4_A_F_Z_R_01 0.1
`define HS65_LSS_XOR3X4_A_R_Z_R_00 0.1
`define HS65_LSS_XOR3X4_A_F_Z_F_00 0.1
`define HS65_LSS_XOR3X4_A_R_Z_R_11 0.1
`define HS65_LSS_XOR3X4_A_F_Z_F_11 0.1
`define HS65_LSS_XOR3X4_B_R_Z_F_10 0.1
`define HS65_LSS_XOR3X4_B_F_Z_R_10 0.1
`define HS65_LSS_XOR3X4_B_R_Z_F_01 0.1
`define HS65_LSS_XOR3X4_B_F_Z_R_01 0.1
`define HS65_LSS_XOR3X4_B_R_Z_R_00 0.1
`define HS65_LSS_XOR3X4_B_F_Z_F_00 0.1
`define HS65_LSS_XOR3X4_B_R_Z_R_11 0.1
`define HS65_LSS_XOR3X4_B_F_Z_F_11 0.1
`define HS65_LSS_XOR3X4_C_R_Z_F_10 0.1
`define HS65_LSS_XOR3X4_C_F_Z_R_10 0.1
`define HS65_LSS_XOR3X4_C_R_Z_F_01 0.1
`define HS65_LSS_XOR3X4_C_F_Z_R_01 0.1
`define HS65_LSS_XOR3X4_C_R_Z_R_00 0.1
`define HS65_LSS_XOR3X4_C_F_Z_F_00 0.1
`define HS65_LSS_XOR3X4_C_R_Z_R_11 0.1
`define HS65_LSS_XOR3X4_C_F_Z_F_11 0.1

module HS65_LSS_XOR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LSS_XOR3X4_A_F_Z_R_10,`HS65_LSS_XOR3X4_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LSS_XOR3X4_A_F_Z_R_01,`HS65_LSS_XOR3X4_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LSS_XOR3X4_A_R_Z_R_00,`HS65_LSS_XOR3X4_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LSS_XOR3X4_A_R_Z_R_11,`HS65_LSS_XOR3X4_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LSS_XOR3X4_B_F_Z_R_10,`HS65_LSS_XOR3X4_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LSS_XOR3X4_B_F_Z_R_01,`HS65_LSS_XOR3X4_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LSS_XOR3X4_B_R_Z_R_00,`HS65_LSS_XOR3X4_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LSS_XOR3X4_B_R_Z_R_11,`HS65_LSS_XOR3X4_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LSS_XOR3X4_C_F_Z_R_10,`HS65_LSS_XOR3X4_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LSS_XOR3X4_C_F_Z_R_01,`HS65_LSS_XOR3X4_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LSS_XOR3X4_C_R_Z_R_00,`HS65_LSS_XOR3X4_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LSS_XOR3X4_C_R_Z_R_11,`HS65_LSS_XOR3X4_C_F_Z_F_11);


	endspecify

endmodule // HS65_LSS_XOR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LSS_XOR3X8_A_R_Z_F_10 0.1
`define HS65_LSS_XOR3X8_A_F_Z_R_10 0.1
`define HS65_LSS_XOR3X8_A_R_Z_F_01 0.1
`define HS65_LSS_XOR3X8_A_F_Z_R_01 0.1
`define HS65_LSS_XOR3X8_A_R_Z_R_00 0.1
`define HS65_LSS_XOR3X8_A_F_Z_F_00 0.1
`define HS65_LSS_XOR3X8_A_R_Z_R_11 0.1
`define HS65_LSS_XOR3X8_A_F_Z_F_11 0.1
`define HS65_LSS_XOR3X8_B_R_Z_F_10 0.1
`define HS65_LSS_XOR3X8_B_F_Z_R_10 0.1
`define HS65_LSS_XOR3X8_B_R_Z_F_01 0.1
`define HS65_LSS_XOR3X8_B_F_Z_R_01 0.1
`define HS65_LSS_XOR3X8_B_R_Z_R_00 0.1
`define HS65_LSS_XOR3X8_B_F_Z_F_00 0.1
`define HS65_LSS_XOR3X8_B_R_Z_R_11 0.1
`define HS65_LSS_XOR3X8_B_F_Z_F_11 0.1
`define HS65_LSS_XOR3X8_C_R_Z_F_10 0.1
`define HS65_LSS_XOR3X8_C_F_Z_R_10 0.1
`define HS65_LSS_XOR3X8_C_R_Z_F_01 0.1
`define HS65_LSS_XOR3X8_C_F_Z_R_01 0.1
`define HS65_LSS_XOR3X8_C_R_Z_R_00 0.1
`define HS65_LSS_XOR3X8_C_F_Z_F_00 0.1
`define HS65_LSS_XOR3X8_C_R_Z_R_11 0.1
`define HS65_LSS_XOR3X8_C_F_Z_F_11 0.1

module HS65_LSS_XOR3X8 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LSS_XOR3X8_A_F_Z_R_10,`HS65_LSS_XOR3X8_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LSS_XOR3X8_A_F_Z_R_01,`HS65_LSS_XOR3X8_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LSS_XOR3X8_A_R_Z_R_00,`HS65_LSS_XOR3X8_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LSS_XOR3X8_A_R_Z_R_11,`HS65_LSS_XOR3X8_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LSS_XOR3X8_B_F_Z_R_10,`HS65_LSS_XOR3X8_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LSS_XOR3X8_B_F_Z_R_01,`HS65_LSS_XOR3X8_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LSS_XOR3X8_B_R_Z_R_00,`HS65_LSS_XOR3X8_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LSS_XOR3X8_B_R_Z_R_11,`HS65_LSS_XOR3X8_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LSS_XOR3X8_C_F_Z_R_10,`HS65_LSS_XOR3X8_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LSS_XOR3X8_C_F_Z_R_01,`HS65_LSS_XOR3X8_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LSS_XOR3X8_C_R_Z_R_00,`HS65_LSS_XOR3X8_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LSS_XOR3X8_C_R_Z_R_11,`HS65_LSS_XOR3X8_C_F_Z_F_11);


	endspecify

endmodule // HS65_LSS_XOR3X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2ABX18_A_R_Z_F_0 0.1
`define HS65_LS_AND2ABX18_A_F_Z_R_0 0.1
`define HS65_LS_AND2ABX18_B_R_Z_F_0 0.1
`define HS65_LS_AND2ABX18_B_F_Z_R_0 0.1

module HS65_LS_AND2ABX18 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, A) ;
	not    U2 (INTERNAL2, B) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		(A -=> Z) = (`HS65_LS_AND2ABX18_A_F_Z_R_0,`HS65_LS_AND2ABX18_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_AND2ABX18_B_F_Z_R_0,`HS65_LS_AND2ABX18_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_AND2ABX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2ABX27_A_R_Z_F_0 0.1
`define HS65_LS_AND2ABX27_A_F_Z_R_0 0.1
`define HS65_LS_AND2ABX27_B_R_Z_F_0 0.1
`define HS65_LS_AND2ABX27_B_F_Z_R_0 0.1

module HS65_LS_AND2ABX27 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, A) ;
	not    U2 (INTERNAL2, B) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		(A -=> Z) = (`HS65_LS_AND2ABX27_A_F_Z_R_0,`HS65_LS_AND2ABX27_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_AND2ABX27_B_F_Z_R_0,`HS65_LS_AND2ABX27_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_AND2ABX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2ABX35_A_R_Z_F_0 0.1
`define HS65_LS_AND2ABX35_A_F_Z_R_0 0.1
`define HS65_LS_AND2ABX35_B_R_Z_F_0 0.1
`define HS65_LS_AND2ABX35_B_F_Z_R_0 0.1

module HS65_LS_AND2ABX35 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, A) ;
	not    U2 (INTERNAL2, B) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		(A -=> Z) = (`HS65_LS_AND2ABX35_A_F_Z_R_0,`HS65_LS_AND2ABX35_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_AND2ABX35_B_F_Z_R_0,`HS65_LS_AND2ABX35_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_AND2ABX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2ABX9_A_R_Z_F_0 0.1
`define HS65_LS_AND2ABX9_A_F_Z_R_0 0.1
`define HS65_LS_AND2ABX9_B_R_Z_F_0 0.1
`define HS65_LS_AND2ABX9_B_F_Z_R_0 0.1

module HS65_LS_AND2ABX9 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, A) ;
	not    U2 (INTERNAL2, B) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		(A -=> Z) = (`HS65_LS_AND2ABX9_A_F_Z_R_0,`HS65_LS_AND2ABX9_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_AND2ABX9_B_F_Z_R_0,`HS65_LS_AND2ABX9_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_AND2ABX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2X18_A_R_Z_R_1 0.1
`define HS65_LS_AND2X18_A_F_Z_F_1 0.1
`define HS65_LS_AND2X18_B_R_Z_R_1 0.1
`define HS65_LS_AND2X18_B_F_Z_F_1 0.1

module HS65_LS_AND2X18 (Z, A, B);

	output Z;
	input A;
	input B;

	and   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_AND2X18_A_R_Z_R_1,`HS65_LS_AND2X18_A_F_Z_F_1);
		(B +=> Z) = (`HS65_LS_AND2X18_B_R_Z_R_1,`HS65_LS_AND2X18_B_F_Z_F_1);


	endspecify

endmodule // HS65_LS_AND2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2X27_A_R_Z_R_1 0.1
`define HS65_LS_AND2X27_A_F_Z_F_1 0.1
`define HS65_LS_AND2X27_B_R_Z_R_1 0.1
`define HS65_LS_AND2X27_B_F_Z_F_1 0.1

module HS65_LS_AND2X27 (Z, A, B);

	output Z;
	input A;
	input B;

	and   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_AND2X27_A_R_Z_R_1,`HS65_LS_AND2X27_A_F_Z_F_1);
		(B +=> Z) = (`HS65_LS_AND2X27_B_R_Z_R_1,`HS65_LS_AND2X27_B_F_Z_F_1);


	endspecify

endmodule // HS65_LS_AND2X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2X35_A_R_Z_R_1 0.1
`define HS65_LS_AND2X35_A_F_Z_F_1 0.1
`define HS65_LS_AND2X35_B_R_Z_R_1 0.1
`define HS65_LS_AND2X35_B_F_Z_F_1 0.1

module HS65_LS_AND2X35 (Z, A, B);

	output Z;
	input A;
	input B;

	and   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_AND2X35_A_R_Z_R_1,`HS65_LS_AND2X35_A_F_Z_F_1);
		(B +=> Z) = (`HS65_LS_AND2X35_B_R_Z_R_1,`HS65_LS_AND2X35_B_F_Z_F_1);


	endspecify

endmodule // HS65_LS_AND2X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2X4_A_R_Z_R_1 0.1
`define HS65_LS_AND2X4_A_F_Z_F_1 0.1
`define HS65_LS_AND2X4_B_R_Z_R_1 0.1
`define HS65_LS_AND2X4_B_F_Z_F_1 0.1

module HS65_LS_AND2X4 (Z, A, B);

	output Z;
	input A;
	input B;

	and   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_AND2X4_A_R_Z_R_1,`HS65_LS_AND2X4_A_F_Z_F_1);
		(B +=> Z) = (`HS65_LS_AND2X4_B_R_Z_R_1,`HS65_LS_AND2X4_B_F_Z_F_1);


	endspecify

endmodule // HS65_LS_AND2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND2X9_A_R_Z_R_1 0.1
`define HS65_LS_AND2X9_A_F_Z_F_1 0.1
`define HS65_LS_AND2X9_B_R_Z_R_1 0.1
`define HS65_LS_AND2X9_B_F_Z_F_1 0.1

module HS65_LS_AND2X9 (Z, A, B);

	output Z;
	input A;
	input B;

	and   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_AND2X9_A_R_Z_R_1,`HS65_LS_AND2X9_A_F_Z_F_1);
		(B +=> Z) = (`HS65_LS_AND2X9_B_R_Z_R_1,`HS65_LS_AND2X9_B_F_Z_F_1);


	endspecify

endmodule // HS65_LS_AND2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3ABCX18_A_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX18_A_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX18_B_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX18_B_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX18_C_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX18_C_F_Z_R_00 0.1

module HS65_LS_AND3ABCX18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AND3ABCX18_A_F_Z_R_00,`HS65_LS_AND3ABCX18_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_AND3ABCX18_B_F_Z_R_00,`HS65_LS_AND3ABCX18_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_AND3ABCX18_C_F_Z_R_00,`HS65_LS_AND3ABCX18_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_AND3ABCX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3ABCX27_A_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX27_A_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX27_B_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX27_B_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX27_C_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX27_C_F_Z_R_00 0.1

module HS65_LS_AND3ABCX27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AND3ABCX27_A_F_Z_R_00,`HS65_LS_AND3ABCX27_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_AND3ABCX27_B_F_Z_R_00,`HS65_LS_AND3ABCX27_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_AND3ABCX27_C_F_Z_R_00,`HS65_LS_AND3ABCX27_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_AND3ABCX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3ABCX35_A_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX35_A_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX35_B_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX35_B_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX35_C_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX35_C_F_Z_R_00 0.1

module HS65_LS_AND3ABCX35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AND3ABCX35_A_F_Z_R_00,`HS65_LS_AND3ABCX35_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_AND3ABCX35_B_F_Z_R_00,`HS65_LS_AND3ABCX35_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_AND3ABCX35_C_F_Z_R_00,`HS65_LS_AND3ABCX35_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_AND3ABCX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3ABCX9_A_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX9_A_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX9_B_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX9_B_F_Z_R_00 0.1
`define HS65_LS_AND3ABCX9_C_R_Z_F_00 0.1
`define HS65_LS_AND3ABCX9_C_F_Z_R_00 0.1

module HS65_LS_AND3ABCX9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AND3ABCX9_A_F_Z_R_00,`HS65_LS_AND3ABCX9_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_AND3ABCX9_B_F_Z_R_00,`HS65_LS_AND3ABCX9_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_AND3ABCX9_C_F_Z_R_00,`HS65_LS_AND3ABCX9_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_AND3ABCX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3X18_A_R_Z_R_11 0.1
`define HS65_LS_AND3X18_A_F_Z_F_11 0.1
`define HS65_LS_AND3X18_B_R_Z_R_11 0.1
`define HS65_LS_AND3X18_B_F_Z_F_11 0.1
`define HS65_LS_AND3X18_C_R_Z_R_11 0.1
`define HS65_LS_AND3X18_C_F_Z_F_11 0.1

module HS65_LS_AND3X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AND3X18_A_R_Z_R_11,`HS65_LS_AND3X18_A_F_Z_F_11);
		(B +=> Z) = (`HS65_LS_AND3X18_B_R_Z_R_11,`HS65_LS_AND3X18_B_F_Z_F_11);
		(C +=> Z) = (`HS65_LS_AND3X18_C_R_Z_R_11,`HS65_LS_AND3X18_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_AND3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3X27_A_R_Z_R_11 0.1
`define HS65_LS_AND3X27_A_F_Z_F_11 0.1
`define HS65_LS_AND3X27_B_R_Z_R_11 0.1
`define HS65_LS_AND3X27_B_F_Z_F_11 0.1
`define HS65_LS_AND3X27_C_R_Z_R_11 0.1
`define HS65_LS_AND3X27_C_F_Z_F_11 0.1

module HS65_LS_AND3X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AND3X27_A_R_Z_R_11,`HS65_LS_AND3X27_A_F_Z_F_11);
		(B +=> Z) = (`HS65_LS_AND3X27_B_R_Z_R_11,`HS65_LS_AND3X27_B_F_Z_F_11);
		(C +=> Z) = (`HS65_LS_AND3X27_C_R_Z_R_11,`HS65_LS_AND3X27_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_AND3X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3X35_A_R_Z_R_11 0.1
`define HS65_LS_AND3X35_A_F_Z_F_11 0.1
`define HS65_LS_AND3X35_B_R_Z_R_11 0.1
`define HS65_LS_AND3X35_B_F_Z_F_11 0.1
`define HS65_LS_AND3X35_C_R_Z_R_11 0.1
`define HS65_LS_AND3X35_C_F_Z_F_11 0.1

module HS65_LS_AND3X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AND3X35_A_R_Z_R_11,`HS65_LS_AND3X35_A_F_Z_F_11);
		(B +=> Z) = (`HS65_LS_AND3X35_B_R_Z_R_11,`HS65_LS_AND3X35_B_F_Z_F_11);
		(C +=> Z) = (`HS65_LS_AND3X35_C_R_Z_R_11,`HS65_LS_AND3X35_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_AND3X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3X4_A_R_Z_R_11 0.1
`define HS65_LS_AND3X4_A_F_Z_F_11 0.1
`define HS65_LS_AND3X4_B_R_Z_R_11 0.1
`define HS65_LS_AND3X4_B_F_Z_F_11 0.1
`define HS65_LS_AND3X4_C_R_Z_R_11 0.1
`define HS65_LS_AND3X4_C_F_Z_F_11 0.1

module HS65_LS_AND3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AND3X4_A_R_Z_R_11,`HS65_LS_AND3X4_A_F_Z_F_11);
		(B +=> Z) = (`HS65_LS_AND3X4_B_R_Z_R_11,`HS65_LS_AND3X4_B_F_Z_F_11);
		(C +=> Z) = (`HS65_LS_AND3X4_C_R_Z_R_11,`HS65_LS_AND3X4_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_AND3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND3X9_A_R_Z_R_11 0.1
`define HS65_LS_AND3X9_A_F_Z_F_11 0.1
`define HS65_LS_AND3X9_B_R_Z_R_11 0.1
`define HS65_LS_AND3X9_B_F_Z_F_11 0.1
`define HS65_LS_AND3X9_C_R_Z_R_11 0.1
`define HS65_LS_AND3X9_C_F_Z_F_11 0.1

module HS65_LS_AND3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AND3X9_A_R_Z_R_11,`HS65_LS_AND3X9_A_F_Z_F_11);
		(B +=> Z) = (`HS65_LS_AND3X9_B_R_Z_R_11,`HS65_LS_AND3X9_B_F_Z_F_11);
		(C +=> Z) = (`HS65_LS_AND3X9_C_R_Z_R_11,`HS65_LS_AND3X9_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_AND3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND4X13_A_R_Z_R_111 0.1
`define HS65_LS_AND4X13_A_F_Z_F_111 0.1
`define HS65_LS_AND4X13_B_R_Z_R_111 0.1
`define HS65_LS_AND4X13_B_F_Z_F_111 0.1
`define HS65_LS_AND4X13_C_R_Z_R_111 0.1
`define HS65_LS_AND4X13_C_F_Z_F_111 0.1
`define HS65_LS_AND4X13_D_R_Z_R_111 0.1
`define HS65_LS_AND4X13_D_F_Z_F_111 0.1

module HS65_LS_AND4X13 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AND4X13_A_R_Z_R_111,`HS65_LS_AND4X13_A_F_Z_F_111);
		(B +=> Z) = (`HS65_LS_AND4X13_B_R_Z_R_111,`HS65_LS_AND4X13_B_F_Z_F_111);
		(C +=> Z) = (`HS65_LS_AND4X13_C_R_Z_R_111,`HS65_LS_AND4X13_C_F_Z_F_111);
		(D +=> Z) = (`HS65_LS_AND4X13_D_R_Z_R_111,`HS65_LS_AND4X13_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_AND4X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND4X19_A_R_Z_R_111 0.1
`define HS65_LS_AND4X19_A_F_Z_F_111 0.1
`define HS65_LS_AND4X19_B_R_Z_R_111 0.1
`define HS65_LS_AND4X19_B_F_Z_F_111 0.1
`define HS65_LS_AND4X19_C_R_Z_R_111 0.1
`define HS65_LS_AND4X19_C_F_Z_F_111 0.1
`define HS65_LS_AND4X19_D_R_Z_R_111 0.1
`define HS65_LS_AND4X19_D_F_Z_F_111 0.1

module HS65_LS_AND4X19 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AND4X19_A_R_Z_R_111,`HS65_LS_AND4X19_A_F_Z_F_111);
		(B +=> Z) = (`HS65_LS_AND4X19_B_R_Z_R_111,`HS65_LS_AND4X19_B_F_Z_F_111);
		(C +=> Z) = (`HS65_LS_AND4X19_C_R_Z_R_111,`HS65_LS_AND4X19_C_F_Z_F_111);
		(D +=> Z) = (`HS65_LS_AND4X19_D_R_Z_R_111,`HS65_LS_AND4X19_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_AND4X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND4X25_A_R_Z_R_111 0.1
`define HS65_LS_AND4X25_A_F_Z_F_111 0.1
`define HS65_LS_AND4X25_B_R_Z_R_111 0.1
`define HS65_LS_AND4X25_B_F_Z_F_111 0.1
`define HS65_LS_AND4X25_C_R_Z_R_111 0.1
`define HS65_LS_AND4X25_C_F_Z_F_111 0.1
`define HS65_LS_AND4X25_D_R_Z_R_111 0.1
`define HS65_LS_AND4X25_D_F_Z_F_111 0.1

module HS65_LS_AND4X25 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AND4X25_A_R_Z_R_111,`HS65_LS_AND4X25_A_F_Z_F_111);
		(B +=> Z) = (`HS65_LS_AND4X25_B_R_Z_R_111,`HS65_LS_AND4X25_B_F_Z_F_111);
		(C +=> Z) = (`HS65_LS_AND4X25_C_R_Z_R_111,`HS65_LS_AND4X25_C_F_Z_F_111);
		(D +=> Z) = (`HS65_LS_AND4X25_D_R_Z_R_111,`HS65_LS_AND4X25_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_AND4X25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND4X3_A_R_Z_R_111 0.1
`define HS65_LS_AND4X3_A_F_Z_F_111 0.1
`define HS65_LS_AND4X3_B_R_Z_R_111 0.1
`define HS65_LS_AND4X3_B_F_Z_F_111 0.1
`define HS65_LS_AND4X3_C_R_Z_R_111 0.1
`define HS65_LS_AND4X3_C_F_Z_F_111 0.1
`define HS65_LS_AND4X3_D_R_Z_R_111 0.1
`define HS65_LS_AND4X3_D_F_Z_F_111 0.1

module HS65_LS_AND4X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AND4X3_A_R_Z_R_111,`HS65_LS_AND4X3_A_F_Z_F_111);
		(B +=> Z) = (`HS65_LS_AND4X3_B_R_Z_R_111,`HS65_LS_AND4X3_B_F_Z_F_111);
		(C +=> Z) = (`HS65_LS_AND4X3_C_R_Z_R_111,`HS65_LS_AND4X3_C_F_Z_F_111);
		(D +=> Z) = (`HS65_LS_AND4X3_D_R_Z_R_111,`HS65_LS_AND4X3_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_AND4X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AND4X6_A_R_Z_R_111 0.1
`define HS65_LS_AND4X6_A_F_Z_F_111 0.1
`define HS65_LS_AND4X6_B_R_Z_R_111 0.1
`define HS65_LS_AND4X6_B_F_Z_F_111 0.1
`define HS65_LS_AND4X6_C_R_Z_R_111 0.1
`define HS65_LS_AND4X6_C_F_Z_F_111 0.1
`define HS65_LS_AND4X6_D_R_Z_R_111 0.1
`define HS65_LS_AND4X6_D_F_Z_F_111 0.1

module HS65_LS_AND4X6 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AND4X6_A_R_Z_R_111,`HS65_LS_AND4X6_A_F_Z_F_111);
		(B +=> Z) = (`HS65_LS_AND4X6_B_R_Z_R_111,`HS65_LS_AND4X6_B_F_Z_F_111);
		(C +=> Z) = (`HS65_LS_AND4X6_C_R_Z_R_111,`HS65_LS_AND4X6_C_F_Z_F_111);
		(D +=> Z) = (`HS65_LS_AND4X6_D_R_Z_R_111,`HS65_LS_AND4X6_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_AND4X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO112X18_A_R_Z_R_100 0.1
`define HS65_LS_AO112X18_A_F_Z_F_100 0.1
`define HS65_LS_AO112X18_B_R_Z_R_100 0.1
`define HS65_LS_AO112X18_B_F_Z_F_100 0.1
`define HS65_LS_AO112X18_C_R_Z_R_010 0.1
`define HS65_LS_AO112X18_C_F_Z_F_010 0.1
`define HS65_LS_AO112X18_C_R_Z_R_000 0.1
`define HS65_LS_AO112X18_C_F_Z_F_000 0.1
`define HS65_LS_AO112X18_C_R_Z_R_100 0.1
`define HS65_LS_AO112X18_C_F_Z_F_100 0.1
`define HS65_LS_AO112X18_D_R_Z_R_010 0.1
`define HS65_LS_AO112X18_D_F_Z_F_010 0.1
`define HS65_LS_AO112X18_D_R_Z_R_000 0.1
`define HS65_LS_AO112X18_D_F_Z_F_000 0.1
`define HS65_LS_AO112X18_D_R_Z_R_100 0.1
`define HS65_LS_AO112X18_D_F_Z_F_100 0.1

module HS65_LS_AO112X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO112X18_A_R_Z_R_100,`HS65_LS_AO112X18_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_AO112X18_B_R_Z_R_100,`HS65_LS_AO112X18_B_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_AO112X18_C_R_Z_R_010,`HS65_LS_AO112X18_C_F_Z_F_010);
		if (!A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X18_C_R_Z_R_000,`HS65_LS_AO112X18_C_F_Z_F_000);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X18_C_R_Z_R_100,`HS65_LS_AO112X18_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO112X18_D_R_Z_R_010,`HS65_LS_AO112X18_D_F_Z_F_010);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X18_D_R_Z_R_000,`HS65_LS_AO112X18_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X18_D_R_Z_R_100,`HS65_LS_AO112X18_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_AO112X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO112X27_A_R_Z_R_100 0.1
`define HS65_LS_AO112X27_A_F_Z_F_100 0.1
`define HS65_LS_AO112X27_B_R_Z_R_100 0.1
`define HS65_LS_AO112X27_B_F_Z_F_100 0.1
`define HS65_LS_AO112X27_C_R_Z_R_010 0.1
`define HS65_LS_AO112X27_C_F_Z_F_010 0.1
`define HS65_LS_AO112X27_C_R_Z_R_000 0.1
`define HS65_LS_AO112X27_C_F_Z_F_000 0.1
`define HS65_LS_AO112X27_C_R_Z_R_100 0.1
`define HS65_LS_AO112X27_C_F_Z_F_100 0.1
`define HS65_LS_AO112X27_D_R_Z_R_010 0.1
`define HS65_LS_AO112X27_D_F_Z_F_010 0.1
`define HS65_LS_AO112X27_D_R_Z_R_000 0.1
`define HS65_LS_AO112X27_D_F_Z_F_000 0.1
`define HS65_LS_AO112X27_D_R_Z_R_100 0.1
`define HS65_LS_AO112X27_D_F_Z_F_100 0.1

module HS65_LS_AO112X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO112X27_A_R_Z_R_100,`HS65_LS_AO112X27_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_AO112X27_B_R_Z_R_100,`HS65_LS_AO112X27_B_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_AO112X27_C_R_Z_R_010,`HS65_LS_AO112X27_C_F_Z_F_010);
		if (!A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X27_C_R_Z_R_000,`HS65_LS_AO112X27_C_F_Z_F_000);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X27_C_R_Z_R_100,`HS65_LS_AO112X27_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO112X27_D_R_Z_R_010,`HS65_LS_AO112X27_D_F_Z_F_010);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X27_D_R_Z_R_000,`HS65_LS_AO112X27_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X27_D_R_Z_R_100,`HS65_LS_AO112X27_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_AO112X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO112X35_A_R_Z_R_100 0.1
`define HS65_LS_AO112X35_A_F_Z_F_100 0.1
`define HS65_LS_AO112X35_B_R_Z_R_100 0.1
`define HS65_LS_AO112X35_B_F_Z_F_100 0.1
`define HS65_LS_AO112X35_C_R_Z_R_010 0.1
`define HS65_LS_AO112X35_C_F_Z_F_010 0.1
`define HS65_LS_AO112X35_C_R_Z_R_000 0.1
`define HS65_LS_AO112X35_C_F_Z_F_000 0.1
`define HS65_LS_AO112X35_C_R_Z_R_100 0.1
`define HS65_LS_AO112X35_C_F_Z_F_100 0.1
`define HS65_LS_AO112X35_D_R_Z_R_010 0.1
`define HS65_LS_AO112X35_D_F_Z_F_010 0.1
`define HS65_LS_AO112X35_D_R_Z_R_000 0.1
`define HS65_LS_AO112X35_D_F_Z_F_000 0.1
`define HS65_LS_AO112X35_D_R_Z_R_100 0.1
`define HS65_LS_AO112X35_D_F_Z_F_100 0.1

module HS65_LS_AO112X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO112X35_A_R_Z_R_100,`HS65_LS_AO112X35_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_AO112X35_B_R_Z_R_100,`HS65_LS_AO112X35_B_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_AO112X35_C_R_Z_R_010,`HS65_LS_AO112X35_C_F_Z_F_010);
		if (!A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X35_C_R_Z_R_000,`HS65_LS_AO112X35_C_F_Z_F_000);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X35_C_R_Z_R_100,`HS65_LS_AO112X35_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO112X35_D_R_Z_R_010,`HS65_LS_AO112X35_D_F_Z_F_010);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X35_D_R_Z_R_000,`HS65_LS_AO112X35_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X35_D_R_Z_R_100,`HS65_LS_AO112X35_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_AO112X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO112X4_A_R_Z_R_100 0.1
`define HS65_LS_AO112X4_A_F_Z_F_100 0.1
`define HS65_LS_AO112X4_B_R_Z_R_100 0.1
`define HS65_LS_AO112X4_B_F_Z_F_100 0.1
`define HS65_LS_AO112X4_C_R_Z_R_010 0.1
`define HS65_LS_AO112X4_C_F_Z_F_010 0.1
`define HS65_LS_AO112X4_C_R_Z_R_000 0.1
`define HS65_LS_AO112X4_C_F_Z_F_000 0.1
`define HS65_LS_AO112X4_C_R_Z_R_100 0.1
`define HS65_LS_AO112X4_C_F_Z_F_100 0.1
`define HS65_LS_AO112X4_D_R_Z_R_010 0.1
`define HS65_LS_AO112X4_D_F_Z_F_010 0.1
`define HS65_LS_AO112X4_D_R_Z_R_000 0.1
`define HS65_LS_AO112X4_D_F_Z_F_000 0.1
`define HS65_LS_AO112X4_D_R_Z_R_100 0.1
`define HS65_LS_AO112X4_D_F_Z_F_100 0.1

module HS65_LS_AO112X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO112X4_A_R_Z_R_100,`HS65_LS_AO112X4_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_AO112X4_B_R_Z_R_100,`HS65_LS_AO112X4_B_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_AO112X4_C_R_Z_R_010,`HS65_LS_AO112X4_C_F_Z_F_010);
		if (!A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X4_C_R_Z_R_000,`HS65_LS_AO112X4_C_F_Z_F_000);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X4_C_R_Z_R_100,`HS65_LS_AO112X4_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO112X4_D_R_Z_R_010,`HS65_LS_AO112X4_D_F_Z_F_010);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X4_D_R_Z_R_000,`HS65_LS_AO112X4_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X4_D_R_Z_R_100,`HS65_LS_AO112X4_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_AO112X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO112X9_A_R_Z_R_100 0.1
`define HS65_LS_AO112X9_A_F_Z_F_100 0.1
`define HS65_LS_AO112X9_B_R_Z_R_100 0.1
`define HS65_LS_AO112X9_B_F_Z_F_100 0.1
`define HS65_LS_AO112X9_C_R_Z_R_010 0.1
`define HS65_LS_AO112X9_C_F_Z_F_010 0.1
`define HS65_LS_AO112X9_C_R_Z_R_000 0.1
`define HS65_LS_AO112X9_C_F_Z_F_000 0.1
`define HS65_LS_AO112X9_C_R_Z_R_100 0.1
`define HS65_LS_AO112X9_C_F_Z_F_100 0.1
`define HS65_LS_AO112X9_D_R_Z_R_010 0.1
`define HS65_LS_AO112X9_D_F_Z_F_010 0.1
`define HS65_LS_AO112X9_D_R_Z_R_000 0.1
`define HS65_LS_AO112X9_D_F_Z_F_000 0.1
`define HS65_LS_AO112X9_D_R_Z_R_100 0.1
`define HS65_LS_AO112X9_D_F_Z_F_100 0.1

module HS65_LS_AO112X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO112X9_A_R_Z_R_100,`HS65_LS_AO112X9_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_AO112X9_B_R_Z_R_100,`HS65_LS_AO112X9_B_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_AO112X9_C_R_Z_R_010,`HS65_LS_AO112X9_C_F_Z_F_010);
		if (!A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X9_C_R_Z_R_000,`HS65_LS_AO112X9_C_F_Z_F_000);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_AO112X9_C_R_Z_R_100,`HS65_LS_AO112X9_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO112X9_D_R_Z_R_010,`HS65_LS_AO112X9_D_F_Z_F_010);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X9_D_R_Z_R_000,`HS65_LS_AO112X9_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO112X9_D_R_Z_R_100,`HS65_LS_AO112X9_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_AO112X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO12X18_A_R_Z_R_10 0.1
`define HS65_LS_AO12X18_A_F_Z_F_10 0.1
`define HS65_LS_AO12X18_B_R_Z_R_10 0.1
`define HS65_LS_AO12X18_B_F_Z_F_10 0.1
`define HS65_LS_AO12X18_C_R_Z_R_00 0.1
`define HS65_LS_AO12X18_C_F_Z_F_00 0.1
`define HS65_LS_AO12X18_C_R_Z_R_10 0.1
`define HS65_LS_AO12X18_C_F_Z_F_10 0.1
`define HS65_LS_AO12X18_C_R_Z_R_01 0.1
`define HS65_LS_AO12X18_C_F_Z_F_01 0.1

module HS65_LS_AO12X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AO12X18_A_R_Z_R_10,`HS65_LS_AO12X18_A_F_Z_F_10);
		(B +=> Z) = (`HS65_LS_AO12X18_B_R_Z_R_10,`HS65_LS_AO12X18_B_F_Z_F_10);
		if (!A && !B) (C +=> Z) = (`HS65_LS_AO12X18_C_R_Z_R_00,`HS65_LS_AO12X18_C_F_Z_F_00);
		if (A && !B) (C +=> Z) = (`HS65_LS_AO12X18_C_R_Z_R_10,`HS65_LS_AO12X18_C_F_Z_F_10);
		if (!A && B) (C +=> Z) = (`HS65_LS_AO12X18_C_R_Z_R_01,`HS65_LS_AO12X18_C_F_Z_F_01);


	endspecify

endmodule // HS65_LS_AO12X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO12X27_A_R_Z_R_10 0.1
`define HS65_LS_AO12X27_A_F_Z_F_10 0.1
`define HS65_LS_AO12X27_B_R_Z_R_10 0.1
`define HS65_LS_AO12X27_B_F_Z_F_10 0.1
`define HS65_LS_AO12X27_C_R_Z_R_00 0.1
`define HS65_LS_AO12X27_C_F_Z_F_00 0.1
`define HS65_LS_AO12X27_C_R_Z_R_10 0.1
`define HS65_LS_AO12X27_C_F_Z_F_10 0.1
`define HS65_LS_AO12X27_C_R_Z_R_01 0.1
`define HS65_LS_AO12X27_C_F_Z_F_01 0.1

module HS65_LS_AO12X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AO12X27_A_R_Z_R_10,`HS65_LS_AO12X27_A_F_Z_F_10);
		(B +=> Z) = (`HS65_LS_AO12X27_B_R_Z_R_10,`HS65_LS_AO12X27_B_F_Z_F_10);
		if (!A && !B) (C +=> Z) = (`HS65_LS_AO12X27_C_R_Z_R_00,`HS65_LS_AO12X27_C_F_Z_F_00);
		if (A && !B) (C +=> Z) = (`HS65_LS_AO12X27_C_R_Z_R_10,`HS65_LS_AO12X27_C_F_Z_F_10);
		if (!A && B) (C +=> Z) = (`HS65_LS_AO12X27_C_R_Z_R_01,`HS65_LS_AO12X27_C_F_Z_F_01);


	endspecify

endmodule // HS65_LS_AO12X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO12X35_A_R_Z_R_10 0.1
`define HS65_LS_AO12X35_A_F_Z_F_10 0.1
`define HS65_LS_AO12X35_B_R_Z_R_10 0.1
`define HS65_LS_AO12X35_B_F_Z_F_10 0.1
`define HS65_LS_AO12X35_C_R_Z_R_00 0.1
`define HS65_LS_AO12X35_C_F_Z_F_00 0.1
`define HS65_LS_AO12X35_C_R_Z_R_10 0.1
`define HS65_LS_AO12X35_C_F_Z_F_10 0.1
`define HS65_LS_AO12X35_C_R_Z_R_01 0.1
`define HS65_LS_AO12X35_C_F_Z_F_01 0.1

module HS65_LS_AO12X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AO12X35_A_R_Z_R_10,`HS65_LS_AO12X35_A_F_Z_F_10);
		(B +=> Z) = (`HS65_LS_AO12X35_B_R_Z_R_10,`HS65_LS_AO12X35_B_F_Z_F_10);
		if (!A && !B) (C +=> Z) = (`HS65_LS_AO12X35_C_R_Z_R_00,`HS65_LS_AO12X35_C_F_Z_F_00);
		if (A && !B) (C +=> Z) = (`HS65_LS_AO12X35_C_R_Z_R_10,`HS65_LS_AO12X35_C_F_Z_F_10);
		if (!A && B) (C +=> Z) = (`HS65_LS_AO12X35_C_R_Z_R_01,`HS65_LS_AO12X35_C_F_Z_F_01);


	endspecify

endmodule // HS65_LS_AO12X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO12X4_A_R_Z_R_10 0.1
`define HS65_LS_AO12X4_A_F_Z_F_10 0.1
`define HS65_LS_AO12X4_B_R_Z_R_10 0.1
`define HS65_LS_AO12X4_B_F_Z_F_10 0.1
`define HS65_LS_AO12X4_C_R_Z_R_00 0.1
`define HS65_LS_AO12X4_C_F_Z_F_00 0.1
`define HS65_LS_AO12X4_C_R_Z_R_10 0.1
`define HS65_LS_AO12X4_C_F_Z_F_10 0.1
`define HS65_LS_AO12X4_C_R_Z_R_01 0.1
`define HS65_LS_AO12X4_C_F_Z_F_01 0.1

module HS65_LS_AO12X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AO12X4_A_R_Z_R_10,`HS65_LS_AO12X4_A_F_Z_F_10);
		(B +=> Z) = (`HS65_LS_AO12X4_B_R_Z_R_10,`HS65_LS_AO12X4_B_F_Z_F_10);
		if (!A && !B) (C +=> Z) = (`HS65_LS_AO12X4_C_R_Z_R_00,`HS65_LS_AO12X4_C_F_Z_F_00);
		if (A && !B) (C +=> Z) = (`HS65_LS_AO12X4_C_R_Z_R_10,`HS65_LS_AO12X4_C_F_Z_F_10);
		if (!A && B) (C +=> Z) = (`HS65_LS_AO12X4_C_R_Z_R_01,`HS65_LS_AO12X4_C_F_Z_F_01);


	endspecify

endmodule // HS65_LS_AO12X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO12X9_A_R_Z_R_10 0.1
`define HS65_LS_AO12X9_A_F_Z_F_10 0.1
`define HS65_LS_AO12X9_B_R_Z_R_10 0.1
`define HS65_LS_AO12X9_B_F_Z_F_10 0.1
`define HS65_LS_AO12X9_C_R_Z_R_00 0.1
`define HS65_LS_AO12X9_C_F_Z_F_00 0.1
`define HS65_LS_AO12X9_C_R_Z_R_10 0.1
`define HS65_LS_AO12X9_C_F_Z_F_10 0.1
`define HS65_LS_AO12X9_C_R_Z_R_01 0.1
`define HS65_LS_AO12X9_C_F_Z_F_01 0.1

module HS65_LS_AO12X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B) ;
	or   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_AO12X9_A_R_Z_R_10,`HS65_LS_AO12X9_A_F_Z_F_10);
		(B +=> Z) = (`HS65_LS_AO12X9_B_R_Z_R_10,`HS65_LS_AO12X9_B_F_Z_F_10);
		if (!A && !B) (C +=> Z) = (`HS65_LS_AO12X9_C_R_Z_R_00,`HS65_LS_AO12X9_C_F_Z_F_00);
		if (A && !B) (C +=> Z) = (`HS65_LS_AO12X9_C_R_Z_R_10,`HS65_LS_AO12X9_C_F_Z_F_10);
		if (!A && B) (C +=> Z) = (`HS65_LS_AO12X9_C_R_Z_R_01,`HS65_LS_AO12X9_C_F_Z_F_01);


	endspecify

endmodule // HS65_LS_AO12X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO212X18_A_R_Z_R_1000 0.1
`define HS65_LS_AO212X18_A_F_Z_F_1000 0.1
`define HS65_LS_AO212X18_A_R_Z_R_1100 0.1
`define HS65_LS_AO212X18_A_F_Z_F_1100 0.1
`define HS65_LS_AO212X18_A_R_Z_R_1010 0.1
`define HS65_LS_AO212X18_A_F_Z_F_1010 0.1
`define HS65_LS_AO212X18_B_R_Z_R_1000 0.1
`define HS65_LS_AO212X18_B_F_Z_F_1000 0.1
`define HS65_LS_AO212X18_B_R_Z_R_1100 0.1
`define HS65_LS_AO212X18_B_F_Z_F_1100 0.1
`define HS65_LS_AO212X18_B_R_Z_R_1010 0.1
`define HS65_LS_AO212X18_B_F_Z_F_1010 0.1
`define HS65_LS_AO212X18_C_R_Z_R_0010 0.1
`define HS65_LS_AO212X18_C_F_Z_F_0010 0.1
`define HS65_LS_AO212X18_C_R_Z_R_1010 0.1
`define HS65_LS_AO212X18_C_F_Z_F_1010 0.1
`define HS65_LS_AO212X18_C_R_Z_R_0110 0.1
`define HS65_LS_AO212X18_C_F_Z_F_0110 0.1
`define HS65_LS_AO212X18_D_R_Z_R_0010 0.1
`define HS65_LS_AO212X18_D_F_Z_F_0010 0.1
`define HS65_LS_AO212X18_D_R_Z_R_1010 0.1
`define HS65_LS_AO212X18_D_F_Z_F_1010 0.1
`define HS65_LS_AO212X18_D_R_Z_R_0110 0.1
`define HS65_LS_AO212X18_D_F_Z_F_0110 0.1
`define HS65_LS_AO212X18_E_R_Z_R_1000 0.1
`define HS65_LS_AO212X18_E_F_Z_F_1000 0.1
`define HS65_LS_AO212X18_E_R_Z_R_1010 0.1
`define HS65_LS_AO212X18_E_F_Z_F_1010 0.1
`define HS65_LS_AO212X18_E_R_Z_R_1001 0.1
`define HS65_LS_AO212X18_E_F_Z_F_1001 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0110 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0110 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0101 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0101 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0000 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0000 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0010 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0010 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0001 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0001 0.1
`define HS65_LS_AO212X18_E_R_Z_R_0100 0.1
`define HS65_LS_AO212X18_E_F_Z_F_0100 0.1

module HS65_LS_AO212X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (B && !C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X18_A_R_Z_R_1000,`HS65_LS_AO212X18_A_F_Z_F_1000);
		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X18_A_R_Z_R_1100,`HS65_LS_AO212X18_A_F_Z_F_1100);
		if (B && !C && D && !E) (A +=> Z) = (`HS65_LS_AO212X18_A_R_Z_R_1010,`HS65_LS_AO212X18_A_F_Z_F_1010);
		if (A && !C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X18_B_R_Z_R_1000,`HS65_LS_AO212X18_B_F_Z_F_1000);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X18_B_R_Z_R_1100,`HS65_LS_AO212X18_B_F_Z_F_1100);
		if (A && !C && D && !E) (B +=> Z) = (`HS65_LS_AO212X18_B_R_Z_R_1010,`HS65_LS_AO212X18_B_F_Z_F_1010);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X18_C_R_Z_R_0010,`HS65_LS_AO212X18_C_F_Z_F_0010);
		if (A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X18_C_R_Z_R_1010,`HS65_LS_AO212X18_C_F_Z_F_1010);
		if (!A && B && D && !E) (C +=> Z) = (`HS65_LS_AO212X18_C_R_Z_R_0110,`HS65_LS_AO212X18_C_F_Z_F_0110);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X18_D_R_Z_R_0010,`HS65_LS_AO212X18_D_F_Z_F_0010);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X18_D_R_Z_R_1010,`HS65_LS_AO212X18_D_F_Z_F_1010);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO212X18_D_R_Z_R_0110,`HS65_LS_AO212X18_D_F_Z_F_0110);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_1000,`HS65_LS_AO212X18_E_F_Z_F_1000);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_1010,`HS65_LS_AO212X18_E_F_Z_F_1010);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_1001,`HS65_LS_AO212X18_E_F_Z_F_1001);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0110,`HS65_LS_AO212X18_E_F_Z_F_0110);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0101,`HS65_LS_AO212X18_E_F_Z_F_0101);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0000,`HS65_LS_AO212X18_E_F_Z_F_0000);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0010,`HS65_LS_AO212X18_E_F_Z_F_0010);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0001,`HS65_LS_AO212X18_E_F_Z_F_0001);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X18_E_R_Z_R_0100,`HS65_LS_AO212X18_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO212X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO212X27_A_R_Z_R_1000 0.1
`define HS65_LS_AO212X27_A_F_Z_F_1000 0.1
`define HS65_LS_AO212X27_A_R_Z_R_1100 0.1
`define HS65_LS_AO212X27_A_F_Z_F_1100 0.1
`define HS65_LS_AO212X27_A_R_Z_R_1010 0.1
`define HS65_LS_AO212X27_A_F_Z_F_1010 0.1
`define HS65_LS_AO212X27_B_R_Z_R_1000 0.1
`define HS65_LS_AO212X27_B_F_Z_F_1000 0.1
`define HS65_LS_AO212X27_B_R_Z_R_1100 0.1
`define HS65_LS_AO212X27_B_F_Z_F_1100 0.1
`define HS65_LS_AO212X27_B_R_Z_R_1010 0.1
`define HS65_LS_AO212X27_B_F_Z_F_1010 0.1
`define HS65_LS_AO212X27_C_R_Z_R_0010 0.1
`define HS65_LS_AO212X27_C_F_Z_F_0010 0.1
`define HS65_LS_AO212X27_C_R_Z_R_1010 0.1
`define HS65_LS_AO212X27_C_F_Z_F_1010 0.1
`define HS65_LS_AO212X27_C_R_Z_R_0110 0.1
`define HS65_LS_AO212X27_C_F_Z_F_0110 0.1
`define HS65_LS_AO212X27_D_R_Z_R_0010 0.1
`define HS65_LS_AO212X27_D_F_Z_F_0010 0.1
`define HS65_LS_AO212X27_D_R_Z_R_1010 0.1
`define HS65_LS_AO212X27_D_F_Z_F_1010 0.1
`define HS65_LS_AO212X27_D_R_Z_R_0110 0.1
`define HS65_LS_AO212X27_D_F_Z_F_0110 0.1
`define HS65_LS_AO212X27_E_R_Z_R_1000 0.1
`define HS65_LS_AO212X27_E_F_Z_F_1000 0.1
`define HS65_LS_AO212X27_E_R_Z_R_1010 0.1
`define HS65_LS_AO212X27_E_F_Z_F_1010 0.1
`define HS65_LS_AO212X27_E_R_Z_R_1001 0.1
`define HS65_LS_AO212X27_E_F_Z_F_1001 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0110 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0110 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0101 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0101 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0000 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0000 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0010 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0010 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0001 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0001 0.1
`define HS65_LS_AO212X27_E_R_Z_R_0100 0.1
`define HS65_LS_AO212X27_E_F_Z_F_0100 0.1

module HS65_LS_AO212X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (B && !C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X27_A_R_Z_R_1000,`HS65_LS_AO212X27_A_F_Z_F_1000);
		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X27_A_R_Z_R_1100,`HS65_LS_AO212X27_A_F_Z_F_1100);
		if (B && !C && D && !E) (A +=> Z) = (`HS65_LS_AO212X27_A_R_Z_R_1010,`HS65_LS_AO212X27_A_F_Z_F_1010);
		if (A && !C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X27_B_R_Z_R_1000,`HS65_LS_AO212X27_B_F_Z_F_1000);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X27_B_R_Z_R_1100,`HS65_LS_AO212X27_B_F_Z_F_1100);
		if (A && !C && D && !E) (B +=> Z) = (`HS65_LS_AO212X27_B_R_Z_R_1010,`HS65_LS_AO212X27_B_F_Z_F_1010);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X27_C_R_Z_R_0010,`HS65_LS_AO212X27_C_F_Z_F_0010);
		if (A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X27_C_R_Z_R_1010,`HS65_LS_AO212X27_C_F_Z_F_1010);
		if (!A && B && D && !E) (C +=> Z) = (`HS65_LS_AO212X27_C_R_Z_R_0110,`HS65_LS_AO212X27_C_F_Z_F_0110);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X27_D_R_Z_R_0010,`HS65_LS_AO212X27_D_F_Z_F_0010);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X27_D_R_Z_R_1010,`HS65_LS_AO212X27_D_F_Z_F_1010);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO212X27_D_R_Z_R_0110,`HS65_LS_AO212X27_D_F_Z_F_0110);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_1000,`HS65_LS_AO212X27_E_F_Z_F_1000);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_1010,`HS65_LS_AO212X27_E_F_Z_F_1010);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_1001,`HS65_LS_AO212X27_E_F_Z_F_1001);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0110,`HS65_LS_AO212X27_E_F_Z_F_0110);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0101,`HS65_LS_AO212X27_E_F_Z_F_0101);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0000,`HS65_LS_AO212X27_E_F_Z_F_0000);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0010,`HS65_LS_AO212X27_E_F_Z_F_0010);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0001,`HS65_LS_AO212X27_E_F_Z_F_0001);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X27_E_R_Z_R_0100,`HS65_LS_AO212X27_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO212X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO212X35_A_R_Z_R_1000 0.1
`define HS65_LS_AO212X35_A_F_Z_F_1000 0.1
`define HS65_LS_AO212X35_A_R_Z_R_1100 0.1
`define HS65_LS_AO212X35_A_F_Z_F_1100 0.1
`define HS65_LS_AO212X35_A_R_Z_R_1010 0.1
`define HS65_LS_AO212X35_A_F_Z_F_1010 0.1
`define HS65_LS_AO212X35_B_R_Z_R_1000 0.1
`define HS65_LS_AO212X35_B_F_Z_F_1000 0.1
`define HS65_LS_AO212X35_B_R_Z_R_1100 0.1
`define HS65_LS_AO212X35_B_F_Z_F_1100 0.1
`define HS65_LS_AO212X35_B_R_Z_R_1010 0.1
`define HS65_LS_AO212X35_B_F_Z_F_1010 0.1
`define HS65_LS_AO212X35_C_R_Z_R_0010 0.1
`define HS65_LS_AO212X35_C_F_Z_F_0010 0.1
`define HS65_LS_AO212X35_C_R_Z_R_1010 0.1
`define HS65_LS_AO212X35_C_F_Z_F_1010 0.1
`define HS65_LS_AO212X35_C_R_Z_R_0110 0.1
`define HS65_LS_AO212X35_C_F_Z_F_0110 0.1
`define HS65_LS_AO212X35_D_R_Z_R_0010 0.1
`define HS65_LS_AO212X35_D_F_Z_F_0010 0.1
`define HS65_LS_AO212X35_D_R_Z_R_1010 0.1
`define HS65_LS_AO212X35_D_F_Z_F_1010 0.1
`define HS65_LS_AO212X35_D_R_Z_R_0110 0.1
`define HS65_LS_AO212X35_D_F_Z_F_0110 0.1
`define HS65_LS_AO212X35_E_R_Z_R_1000 0.1
`define HS65_LS_AO212X35_E_F_Z_F_1000 0.1
`define HS65_LS_AO212X35_E_R_Z_R_1010 0.1
`define HS65_LS_AO212X35_E_F_Z_F_1010 0.1
`define HS65_LS_AO212X35_E_R_Z_R_1001 0.1
`define HS65_LS_AO212X35_E_F_Z_F_1001 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0110 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0110 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0101 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0101 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0000 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0000 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0010 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0010 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0001 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0001 0.1
`define HS65_LS_AO212X35_E_R_Z_R_0100 0.1
`define HS65_LS_AO212X35_E_F_Z_F_0100 0.1

module HS65_LS_AO212X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (B && !C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X35_A_R_Z_R_1000,`HS65_LS_AO212X35_A_F_Z_F_1000);
		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X35_A_R_Z_R_1100,`HS65_LS_AO212X35_A_F_Z_F_1100);
		if (B && !C && D && !E) (A +=> Z) = (`HS65_LS_AO212X35_A_R_Z_R_1010,`HS65_LS_AO212X35_A_F_Z_F_1010);
		if (A && !C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X35_B_R_Z_R_1000,`HS65_LS_AO212X35_B_F_Z_F_1000);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X35_B_R_Z_R_1100,`HS65_LS_AO212X35_B_F_Z_F_1100);
		if (A && !C && D && !E) (B +=> Z) = (`HS65_LS_AO212X35_B_R_Z_R_1010,`HS65_LS_AO212X35_B_F_Z_F_1010);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X35_C_R_Z_R_0010,`HS65_LS_AO212X35_C_F_Z_F_0010);
		if (A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X35_C_R_Z_R_1010,`HS65_LS_AO212X35_C_F_Z_F_1010);
		if (!A && B && D && !E) (C +=> Z) = (`HS65_LS_AO212X35_C_R_Z_R_0110,`HS65_LS_AO212X35_C_F_Z_F_0110);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X35_D_R_Z_R_0010,`HS65_LS_AO212X35_D_F_Z_F_0010);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X35_D_R_Z_R_1010,`HS65_LS_AO212X35_D_F_Z_F_1010);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO212X35_D_R_Z_R_0110,`HS65_LS_AO212X35_D_F_Z_F_0110);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_1000,`HS65_LS_AO212X35_E_F_Z_F_1000);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_1010,`HS65_LS_AO212X35_E_F_Z_F_1010);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_1001,`HS65_LS_AO212X35_E_F_Z_F_1001);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0110,`HS65_LS_AO212X35_E_F_Z_F_0110);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0101,`HS65_LS_AO212X35_E_F_Z_F_0101);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0000,`HS65_LS_AO212X35_E_F_Z_F_0000);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0010,`HS65_LS_AO212X35_E_F_Z_F_0010);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0001,`HS65_LS_AO212X35_E_F_Z_F_0001);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X35_E_R_Z_R_0100,`HS65_LS_AO212X35_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO212X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO212X4_A_R_Z_R_1000 0.1
`define HS65_LS_AO212X4_A_F_Z_F_1000 0.1
`define HS65_LS_AO212X4_A_R_Z_R_1100 0.1
`define HS65_LS_AO212X4_A_F_Z_F_1100 0.1
`define HS65_LS_AO212X4_A_R_Z_R_1010 0.1
`define HS65_LS_AO212X4_A_F_Z_F_1010 0.1
`define HS65_LS_AO212X4_B_R_Z_R_1000 0.1
`define HS65_LS_AO212X4_B_F_Z_F_1000 0.1
`define HS65_LS_AO212X4_B_R_Z_R_1100 0.1
`define HS65_LS_AO212X4_B_F_Z_F_1100 0.1
`define HS65_LS_AO212X4_B_R_Z_R_1010 0.1
`define HS65_LS_AO212X4_B_F_Z_F_1010 0.1
`define HS65_LS_AO212X4_C_R_Z_R_0010 0.1
`define HS65_LS_AO212X4_C_F_Z_F_0010 0.1
`define HS65_LS_AO212X4_C_R_Z_R_1010 0.1
`define HS65_LS_AO212X4_C_F_Z_F_1010 0.1
`define HS65_LS_AO212X4_C_R_Z_R_0110 0.1
`define HS65_LS_AO212X4_C_F_Z_F_0110 0.1
`define HS65_LS_AO212X4_D_R_Z_R_0010 0.1
`define HS65_LS_AO212X4_D_F_Z_F_0010 0.1
`define HS65_LS_AO212X4_D_R_Z_R_1010 0.1
`define HS65_LS_AO212X4_D_F_Z_F_1010 0.1
`define HS65_LS_AO212X4_D_R_Z_R_0110 0.1
`define HS65_LS_AO212X4_D_F_Z_F_0110 0.1
`define HS65_LS_AO212X4_E_R_Z_R_1000 0.1
`define HS65_LS_AO212X4_E_F_Z_F_1000 0.1
`define HS65_LS_AO212X4_E_R_Z_R_1010 0.1
`define HS65_LS_AO212X4_E_F_Z_F_1010 0.1
`define HS65_LS_AO212X4_E_R_Z_R_1001 0.1
`define HS65_LS_AO212X4_E_F_Z_F_1001 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0110 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0110 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0101 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0101 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0000 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0000 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0010 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0010 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0001 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0001 0.1
`define HS65_LS_AO212X4_E_R_Z_R_0100 0.1
`define HS65_LS_AO212X4_E_F_Z_F_0100 0.1

module HS65_LS_AO212X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (B && !C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X4_A_R_Z_R_1000,`HS65_LS_AO212X4_A_F_Z_F_1000);
		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X4_A_R_Z_R_1100,`HS65_LS_AO212X4_A_F_Z_F_1100);
		if (B && !C && D && !E) (A +=> Z) = (`HS65_LS_AO212X4_A_R_Z_R_1010,`HS65_LS_AO212X4_A_F_Z_F_1010);
		if (A && !C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X4_B_R_Z_R_1000,`HS65_LS_AO212X4_B_F_Z_F_1000);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X4_B_R_Z_R_1100,`HS65_LS_AO212X4_B_F_Z_F_1100);
		if (A && !C && D && !E) (B +=> Z) = (`HS65_LS_AO212X4_B_R_Z_R_1010,`HS65_LS_AO212X4_B_F_Z_F_1010);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X4_C_R_Z_R_0010,`HS65_LS_AO212X4_C_F_Z_F_0010);
		if (A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X4_C_R_Z_R_1010,`HS65_LS_AO212X4_C_F_Z_F_1010);
		if (!A && B && D && !E) (C +=> Z) = (`HS65_LS_AO212X4_C_R_Z_R_0110,`HS65_LS_AO212X4_C_F_Z_F_0110);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X4_D_R_Z_R_0010,`HS65_LS_AO212X4_D_F_Z_F_0010);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X4_D_R_Z_R_1010,`HS65_LS_AO212X4_D_F_Z_F_1010);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO212X4_D_R_Z_R_0110,`HS65_LS_AO212X4_D_F_Z_F_0110);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_1000,`HS65_LS_AO212X4_E_F_Z_F_1000);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_1010,`HS65_LS_AO212X4_E_F_Z_F_1010);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_1001,`HS65_LS_AO212X4_E_F_Z_F_1001);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0110,`HS65_LS_AO212X4_E_F_Z_F_0110);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0101,`HS65_LS_AO212X4_E_F_Z_F_0101);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0000,`HS65_LS_AO212X4_E_F_Z_F_0000);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0010,`HS65_LS_AO212X4_E_F_Z_F_0010);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0001,`HS65_LS_AO212X4_E_F_Z_F_0001);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X4_E_R_Z_R_0100,`HS65_LS_AO212X4_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO212X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO212X9_A_R_Z_R_1000 0.1
`define HS65_LS_AO212X9_A_F_Z_F_1000 0.1
`define HS65_LS_AO212X9_A_R_Z_R_1100 0.1
`define HS65_LS_AO212X9_A_F_Z_F_1100 0.1
`define HS65_LS_AO212X9_A_R_Z_R_1010 0.1
`define HS65_LS_AO212X9_A_F_Z_F_1010 0.1
`define HS65_LS_AO212X9_B_R_Z_R_1000 0.1
`define HS65_LS_AO212X9_B_F_Z_F_1000 0.1
`define HS65_LS_AO212X9_B_R_Z_R_1100 0.1
`define HS65_LS_AO212X9_B_F_Z_F_1100 0.1
`define HS65_LS_AO212X9_B_R_Z_R_1010 0.1
`define HS65_LS_AO212X9_B_F_Z_F_1010 0.1
`define HS65_LS_AO212X9_C_R_Z_R_0010 0.1
`define HS65_LS_AO212X9_C_F_Z_F_0010 0.1
`define HS65_LS_AO212X9_C_R_Z_R_1010 0.1
`define HS65_LS_AO212X9_C_F_Z_F_1010 0.1
`define HS65_LS_AO212X9_C_R_Z_R_0110 0.1
`define HS65_LS_AO212X9_C_F_Z_F_0110 0.1
`define HS65_LS_AO212X9_D_R_Z_R_0010 0.1
`define HS65_LS_AO212X9_D_F_Z_F_0010 0.1
`define HS65_LS_AO212X9_D_R_Z_R_1010 0.1
`define HS65_LS_AO212X9_D_F_Z_F_1010 0.1
`define HS65_LS_AO212X9_D_R_Z_R_0110 0.1
`define HS65_LS_AO212X9_D_F_Z_F_0110 0.1
`define HS65_LS_AO212X9_E_R_Z_R_1000 0.1
`define HS65_LS_AO212X9_E_F_Z_F_1000 0.1
`define HS65_LS_AO212X9_E_R_Z_R_1010 0.1
`define HS65_LS_AO212X9_E_F_Z_F_1010 0.1
`define HS65_LS_AO212X9_E_R_Z_R_1001 0.1
`define HS65_LS_AO212X9_E_F_Z_F_1001 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0110 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0110 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0101 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0101 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0000 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0000 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0010 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0010 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0001 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0001 0.1
`define HS65_LS_AO212X9_E_R_Z_R_0100 0.1
`define HS65_LS_AO212X9_E_F_Z_F_0100 0.1

module HS65_LS_AO212X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (B && !C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X9_A_R_Z_R_1000,`HS65_LS_AO212X9_A_F_Z_F_1000);
		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO212X9_A_R_Z_R_1100,`HS65_LS_AO212X9_A_F_Z_F_1100);
		if (B && !C && D && !E) (A +=> Z) = (`HS65_LS_AO212X9_A_R_Z_R_1010,`HS65_LS_AO212X9_A_F_Z_F_1010);
		if (A && !C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X9_B_R_Z_R_1000,`HS65_LS_AO212X9_B_F_Z_F_1000);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO212X9_B_R_Z_R_1100,`HS65_LS_AO212X9_B_F_Z_F_1100);
		if (A && !C && D && !E) (B +=> Z) = (`HS65_LS_AO212X9_B_R_Z_R_1010,`HS65_LS_AO212X9_B_F_Z_F_1010);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X9_C_R_Z_R_0010,`HS65_LS_AO212X9_C_F_Z_F_0010);
		if (A && !B && D && !E) (C +=> Z) = (`HS65_LS_AO212X9_C_R_Z_R_1010,`HS65_LS_AO212X9_C_F_Z_F_1010);
		if (!A && B && D && !E) (C +=> Z) = (`HS65_LS_AO212X9_C_R_Z_R_0110,`HS65_LS_AO212X9_C_F_Z_F_0110);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X9_D_R_Z_R_0010,`HS65_LS_AO212X9_D_F_Z_F_0010);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO212X9_D_R_Z_R_1010,`HS65_LS_AO212X9_D_F_Z_F_1010);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO212X9_D_R_Z_R_0110,`HS65_LS_AO212X9_D_F_Z_F_0110);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_1000,`HS65_LS_AO212X9_E_F_Z_F_1000);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_1010,`HS65_LS_AO212X9_E_F_Z_F_1010);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_1001,`HS65_LS_AO212X9_E_F_Z_F_1001);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0110,`HS65_LS_AO212X9_E_F_Z_F_0110);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0101,`HS65_LS_AO212X9_E_F_Z_F_0101);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0000,`HS65_LS_AO212X9_E_F_Z_F_0000);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0010,`HS65_LS_AO212X9_E_F_Z_F_0010);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0001,`HS65_LS_AO212X9_E_F_Z_F_0001);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO212X9_E_R_Z_R_0100,`HS65_LS_AO212X9_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO212X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO222X18_A_R_Z_R_11001 0.1
`define HS65_LS_AO222X18_A_F_Z_F_11001 0.1
`define HS65_LS_AO222X18_A_R_Z_R_11010 0.1
`define HS65_LS_AO222X18_A_F_Z_F_11010 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10100 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10100 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10110 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10110 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_A_R_Z_R_11000 0.1
`define HS65_LS_AO222X18_A_F_Z_F_11000 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10001 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10001 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10000 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10000 0.1
`define HS65_LS_AO222X18_A_R_Z_R_10010 0.1
`define HS65_LS_AO222X18_A_F_Z_F_10010 0.1
`define HS65_LS_AO222X18_B_R_Z_R_11001 0.1
`define HS65_LS_AO222X18_B_F_Z_F_11001 0.1
`define HS65_LS_AO222X18_B_R_Z_R_11010 0.1
`define HS65_LS_AO222X18_B_F_Z_F_11010 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10100 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10100 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10110 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10110 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_B_R_Z_R_11000 0.1
`define HS65_LS_AO222X18_B_F_Z_F_11000 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10001 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10001 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10000 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10000 0.1
`define HS65_LS_AO222X18_B_R_Z_R_10010 0.1
`define HS65_LS_AO222X18_B_F_Z_F_10010 0.1
`define HS65_LS_AO222X18_C_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_C_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_C_R_Z_R_10110 0.1
`define HS65_LS_AO222X18_C_F_Z_F_10110 0.1
`define HS65_LS_AO222X18_C_R_Z_R_01100 0.1
`define HS65_LS_AO222X18_C_F_Z_F_01100 0.1
`define HS65_LS_AO222X18_C_R_Z_R_01110 0.1
`define HS65_LS_AO222X18_C_F_Z_F_01110 0.1
`define HS65_LS_AO222X18_C_R_Z_R_01101 0.1
`define HS65_LS_AO222X18_C_F_Z_F_01101 0.1
`define HS65_LS_AO222X18_C_R_Z_R_10100 0.1
`define HS65_LS_AO222X18_C_F_Z_F_10100 0.1
`define HS65_LS_AO222X18_C_R_Z_R_00101 0.1
`define HS65_LS_AO222X18_C_F_Z_F_00101 0.1
`define HS65_LS_AO222X18_C_R_Z_R_00100 0.1
`define HS65_LS_AO222X18_C_F_Z_F_00100 0.1
`define HS65_LS_AO222X18_C_R_Z_R_00110 0.1
`define HS65_LS_AO222X18_C_F_Z_F_00110 0.1
`define HS65_LS_AO222X18_D_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_D_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_D_R_Z_R_10110 0.1
`define HS65_LS_AO222X18_D_F_Z_F_10110 0.1
`define HS65_LS_AO222X18_D_R_Z_R_01100 0.1
`define HS65_LS_AO222X18_D_F_Z_F_01100 0.1
`define HS65_LS_AO222X18_D_R_Z_R_01110 0.1
`define HS65_LS_AO222X18_D_F_Z_F_01110 0.1
`define HS65_LS_AO222X18_D_R_Z_R_01101 0.1
`define HS65_LS_AO222X18_D_F_Z_F_01101 0.1
`define HS65_LS_AO222X18_D_R_Z_R_10100 0.1
`define HS65_LS_AO222X18_D_F_Z_F_10100 0.1
`define HS65_LS_AO222X18_D_R_Z_R_00101 0.1
`define HS65_LS_AO222X18_D_F_Z_F_00101 0.1
`define HS65_LS_AO222X18_D_R_Z_R_00100 0.1
`define HS65_LS_AO222X18_D_F_Z_F_00100 0.1
`define HS65_LS_AO222X18_D_R_Z_R_00110 0.1
`define HS65_LS_AO222X18_D_F_Z_F_00110 0.1
`define HS65_LS_AO222X18_E_R_Z_R_10011 0.1
`define HS65_LS_AO222X18_E_F_Z_F_10011 0.1
`define HS65_LS_AO222X18_E_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_E_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_E_R_Z_R_01001 0.1
`define HS65_LS_AO222X18_E_F_Z_F_01001 0.1
`define HS65_LS_AO222X18_E_R_Z_R_01101 0.1
`define HS65_LS_AO222X18_E_F_Z_F_01101 0.1
`define HS65_LS_AO222X18_E_R_Z_R_01011 0.1
`define HS65_LS_AO222X18_E_F_Z_F_01011 0.1
`define HS65_LS_AO222X18_E_R_Z_R_10001 0.1
`define HS65_LS_AO222X18_E_F_Z_F_10001 0.1
`define HS65_LS_AO222X18_E_R_Z_R_00011 0.1
`define HS65_LS_AO222X18_E_F_Z_F_00011 0.1
`define HS65_LS_AO222X18_E_R_Z_R_00001 0.1
`define HS65_LS_AO222X18_E_F_Z_F_00001 0.1
`define HS65_LS_AO222X18_E_R_Z_R_00101 0.1
`define HS65_LS_AO222X18_E_F_Z_F_00101 0.1
`define HS65_LS_AO222X18_F_R_Z_R_10011 0.1
`define HS65_LS_AO222X18_F_F_Z_F_10011 0.1
`define HS65_LS_AO222X18_F_R_Z_R_10101 0.1
`define HS65_LS_AO222X18_F_F_Z_F_10101 0.1
`define HS65_LS_AO222X18_F_R_Z_R_01001 0.1
`define HS65_LS_AO222X18_F_F_Z_F_01001 0.1
`define HS65_LS_AO222X18_F_R_Z_R_01101 0.1
`define HS65_LS_AO222X18_F_F_Z_F_01101 0.1
`define HS65_LS_AO222X18_F_R_Z_R_01011 0.1
`define HS65_LS_AO222X18_F_F_Z_F_01011 0.1
`define HS65_LS_AO222X18_F_R_Z_R_10001 0.1
`define HS65_LS_AO222X18_F_F_Z_F_10001 0.1
`define HS65_LS_AO222X18_F_R_Z_R_00011 0.1
`define HS65_LS_AO222X18_F_F_Z_F_00011 0.1
`define HS65_LS_AO222X18_F_R_Z_R_00001 0.1
`define HS65_LS_AO222X18_F_F_Z_F_00001 0.1
`define HS65_LS_AO222X18_F_R_Z_R_00101 0.1
`define HS65_LS_AO222X18_F_F_Z_F_00101 0.1

module HS65_LS_AO222X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	and    U3 (INTERNAL3, E, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2, INTERNAL3) ;



	specify

		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_11001,`HS65_LS_AO222X18_A_F_Z_F_11001);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_11010,`HS65_LS_AO222X18_A_F_Z_F_11010);
		if (B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10100,`HS65_LS_AO222X18_A_F_Z_F_10100);
		if (B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10110,`HS65_LS_AO222X18_A_F_Z_F_10110);
		if (B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10101,`HS65_LS_AO222X18_A_F_Z_F_10101);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_11000,`HS65_LS_AO222X18_A_F_Z_F_11000);
		if (B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10001,`HS65_LS_AO222X18_A_F_Z_F_10001);
		if (B && !C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10000,`HS65_LS_AO222X18_A_F_Z_F_10000);
		if (B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X18_A_R_Z_R_10010,`HS65_LS_AO222X18_A_F_Z_F_10010);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_11001,`HS65_LS_AO222X18_B_F_Z_F_11001);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_11010,`HS65_LS_AO222X18_B_F_Z_F_11010);
		if (A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10100,`HS65_LS_AO222X18_B_F_Z_F_10100);
		if (A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10110,`HS65_LS_AO222X18_B_F_Z_F_10110);
		if (A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10101,`HS65_LS_AO222X18_B_F_Z_F_10101);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_11000,`HS65_LS_AO222X18_B_F_Z_F_11000);
		if (A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10001,`HS65_LS_AO222X18_B_F_Z_F_10001);
		if (A && !C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10000,`HS65_LS_AO222X18_B_F_Z_F_10000);
		if (A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X18_B_R_Z_R_10010,`HS65_LS_AO222X18_B_F_Z_F_10010);
		if (A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_10101,`HS65_LS_AO222X18_C_F_Z_F_10101);
		if (A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_10110,`HS65_LS_AO222X18_C_F_Z_F_10110);
		if (!A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_01100,`HS65_LS_AO222X18_C_F_Z_F_01100);
		if (!A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_01110,`HS65_LS_AO222X18_C_F_Z_F_01110);
		if (!A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_01101,`HS65_LS_AO222X18_C_F_Z_F_01101);
		if (A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_10100,`HS65_LS_AO222X18_C_F_Z_F_10100);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_00101,`HS65_LS_AO222X18_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_00100,`HS65_LS_AO222X18_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X18_C_R_Z_R_00110,`HS65_LS_AO222X18_C_F_Z_F_00110);
		if (A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_10101,`HS65_LS_AO222X18_D_F_Z_F_10101);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_10110,`HS65_LS_AO222X18_D_F_Z_F_10110);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_01100,`HS65_LS_AO222X18_D_F_Z_F_01100);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_01110,`HS65_LS_AO222X18_D_F_Z_F_01110);
		if (!A && B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_01101,`HS65_LS_AO222X18_D_F_Z_F_01101);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_10100,`HS65_LS_AO222X18_D_F_Z_F_10100);
		if (!A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_00101,`HS65_LS_AO222X18_D_F_Z_F_00101);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_00100,`HS65_LS_AO222X18_D_F_Z_F_00100);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X18_D_R_Z_R_00110,`HS65_LS_AO222X18_D_F_Z_F_00110);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_10011,`HS65_LS_AO222X18_E_F_Z_F_10011);
		if (A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_10101,`HS65_LS_AO222X18_E_F_Z_F_10101);
		if (!A && B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_01001,`HS65_LS_AO222X18_E_F_Z_F_01001);
		if (!A && B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_01101,`HS65_LS_AO222X18_E_F_Z_F_01101);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_01011,`HS65_LS_AO222X18_E_F_Z_F_01011);
		if (A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_10001,`HS65_LS_AO222X18_E_F_Z_F_10001);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_00011,`HS65_LS_AO222X18_E_F_Z_F_00011);
		if (!A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_00001,`HS65_LS_AO222X18_E_F_Z_F_00001);
		if (!A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X18_E_R_Z_R_00101,`HS65_LS_AO222X18_E_F_Z_F_00101);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_10011,`HS65_LS_AO222X18_F_F_Z_F_10011);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_10101,`HS65_LS_AO222X18_F_F_Z_F_10101);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_01001,`HS65_LS_AO222X18_F_F_Z_F_01001);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_01101,`HS65_LS_AO222X18_F_F_Z_F_01101);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_01011,`HS65_LS_AO222X18_F_F_Z_F_01011);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_10001,`HS65_LS_AO222X18_F_F_Z_F_10001);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_00011,`HS65_LS_AO222X18_F_F_Z_F_00011);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_00001,`HS65_LS_AO222X18_F_F_Z_F_00001);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X18_F_R_Z_R_00101,`HS65_LS_AO222X18_F_F_Z_F_00101);


	endspecify

endmodule // HS65_LS_AO222X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO222X27_A_R_Z_R_11001 0.1
`define HS65_LS_AO222X27_A_F_Z_F_11001 0.1
`define HS65_LS_AO222X27_A_R_Z_R_11010 0.1
`define HS65_LS_AO222X27_A_F_Z_F_11010 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10100 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10100 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10110 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10110 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_A_R_Z_R_11000 0.1
`define HS65_LS_AO222X27_A_F_Z_F_11000 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10001 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10001 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10000 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10000 0.1
`define HS65_LS_AO222X27_A_R_Z_R_10010 0.1
`define HS65_LS_AO222X27_A_F_Z_F_10010 0.1
`define HS65_LS_AO222X27_B_R_Z_R_11001 0.1
`define HS65_LS_AO222X27_B_F_Z_F_11001 0.1
`define HS65_LS_AO222X27_B_R_Z_R_11010 0.1
`define HS65_LS_AO222X27_B_F_Z_F_11010 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10100 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10100 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10110 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10110 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_B_R_Z_R_11000 0.1
`define HS65_LS_AO222X27_B_F_Z_F_11000 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10001 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10001 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10000 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10000 0.1
`define HS65_LS_AO222X27_B_R_Z_R_10010 0.1
`define HS65_LS_AO222X27_B_F_Z_F_10010 0.1
`define HS65_LS_AO222X27_C_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_C_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_C_R_Z_R_10110 0.1
`define HS65_LS_AO222X27_C_F_Z_F_10110 0.1
`define HS65_LS_AO222X27_C_R_Z_R_01100 0.1
`define HS65_LS_AO222X27_C_F_Z_F_01100 0.1
`define HS65_LS_AO222X27_C_R_Z_R_01110 0.1
`define HS65_LS_AO222X27_C_F_Z_F_01110 0.1
`define HS65_LS_AO222X27_C_R_Z_R_01101 0.1
`define HS65_LS_AO222X27_C_F_Z_F_01101 0.1
`define HS65_LS_AO222X27_C_R_Z_R_10100 0.1
`define HS65_LS_AO222X27_C_F_Z_F_10100 0.1
`define HS65_LS_AO222X27_C_R_Z_R_00101 0.1
`define HS65_LS_AO222X27_C_F_Z_F_00101 0.1
`define HS65_LS_AO222X27_C_R_Z_R_00100 0.1
`define HS65_LS_AO222X27_C_F_Z_F_00100 0.1
`define HS65_LS_AO222X27_C_R_Z_R_00110 0.1
`define HS65_LS_AO222X27_C_F_Z_F_00110 0.1
`define HS65_LS_AO222X27_D_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_D_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_D_R_Z_R_10110 0.1
`define HS65_LS_AO222X27_D_F_Z_F_10110 0.1
`define HS65_LS_AO222X27_D_R_Z_R_01100 0.1
`define HS65_LS_AO222X27_D_F_Z_F_01100 0.1
`define HS65_LS_AO222X27_D_R_Z_R_01110 0.1
`define HS65_LS_AO222X27_D_F_Z_F_01110 0.1
`define HS65_LS_AO222X27_D_R_Z_R_01101 0.1
`define HS65_LS_AO222X27_D_F_Z_F_01101 0.1
`define HS65_LS_AO222X27_D_R_Z_R_10100 0.1
`define HS65_LS_AO222X27_D_F_Z_F_10100 0.1
`define HS65_LS_AO222X27_D_R_Z_R_00101 0.1
`define HS65_LS_AO222X27_D_F_Z_F_00101 0.1
`define HS65_LS_AO222X27_D_R_Z_R_00100 0.1
`define HS65_LS_AO222X27_D_F_Z_F_00100 0.1
`define HS65_LS_AO222X27_D_R_Z_R_00110 0.1
`define HS65_LS_AO222X27_D_F_Z_F_00110 0.1
`define HS65_LS_AO222X27_E_R_Z_R_10011 0.1
`define HS65_LS_AO222X27_E_F_Z_F_10011 0.1
`define HS65_LS_AO222X27_E_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_E_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_E_R_Z_R_01001 0.1
`define HS65_LS_AO222X27_E_F_Z_F_01001 0.1
`define HS65_LS_AO222X27_E_R_Z_R_01101 0.1
`define HS65_LS_AO222X27_E_F_Z_F_01101 0.1
`define HS65_LS_AO222X27_E_R_Z_R_01011 0.1
`define HS65_LS_AO222X27_E_F_Z_F_01011 0.1
`define HS65_LS_AO222X27_E_R_Z_R_10001 0.1
`define HS65_LS_AO222X27_E_F_Z_F_10001 0.1
`define HS65_LS_AO222X27_E_R_Z_R_00011 0.1
`define HS65_LS_AO222X27_E_F_Z_F_00011 0.1
`define HS65_LS_AO222X27_E_R_Z_R_00001 0.1
`define HS65_LS_AO222X27_E_F_Z_F_00001 0.1
`define HS65_LS_AO222X27_E_R_Z_R_00101 0.1
`define HS65_LS_AO222X27_E_F_Z_F_00101 0.1
`define HS65_LS_AO222X27_F_R_Z_R_10011 0.1
`define HS65_LS_AO222X27_F_F_Z_F_10011 0.1
`define HS65_LS_AO222X27_F_R_Z_R_10101 0.1
`define HS65_LS_AO222X27_F_F_Z_F_10101 0.1
`define HS65_LS_AO222X27_F_R_Z_R_01001 0.1
`define HS65_LS_AO222X27_F_F_Z_F_01001 0.1
`define HS65_LS_AO222X27_F_R_Z_R_01101 0.1
`define HS65_LS_AO222X27_F_F_Z_F_01101 0.1
`define HS65_LS_AO222X27_F_R_Z_R_01011 0.1
`define HS65_LS_AO222X27_F_F_Z_F_01011 0.1
`define HS65_LS_AO222X27_F_R_Z_R_10001 0.1
`define HS65_LS_AO222X27_F_F_Z_F_10001 0.1
`define HS65_LS_AO222X27_F_R_Z_R_00011 0.1
`define HS65_LS_AO222X27_F_F_Z_F_00011 0.1
`define HS65_LS_AO222X27_F_R_Z_R_00001 0.1
`define HS65_LS_AO222X27_F_F_Z_F_00001 0.1
`define HS65_LS_AO222X27_F_R_Z_R_00101 0.1
`define HS65_LS_AO222X27_F_F_Z_F_00101 0.1

module HS65_LS_AO222X27 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	and    U3 (INTERNAL3, E, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2, INTERNAL3) ;



	specify

		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_11001,`HS65_LS_AO222X27_A_F_Z_F_11001);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_11010,`HS65_LS_AO222X27_A_F_Z_F_11010);
		if (B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10100,`HS65_LS_AO222X27_A_F_Z_F_10100);
		if (B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10110,`HS65_LS_AO222X27_A_F_Z_F_10110);
		if (B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10101,`HS65_LS_AO222X27_A_F_Z_F_10101);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_11000,`HS65_LS_AO222X27_A_F_Z_F_11000);
		if (B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10001,`HS65_LS_AO222X27_A_F_Z_F_10001);
		if (B && !C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10000,`HS65_LS_AO222X27_A_F_Z_F_10000);
		if (B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X27_A_R_Z_R_10010,`HS65_LS_AO222X27_A_F_Z_F_10010);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_11001,`HS65_LS_AO222X27_B_F_Z_F_11001);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_11010,`HS65_LS_AO222X27_B_F_Z_F_11010);
		if (A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10100,`HS65_LS_AO222X27_B_F_Z_F_10100);
		if (A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10110,`HS65_LS_AO222X27_B_F_Z_F_10110);
		if (A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10101,`HS65_LS_AO222X27_B_F_Z_F_10101);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_11000,`HS65_LS_AO222X27_B_F_Z_F_11000);
		if (A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10001,`HS65_LS_AO222X27_B_F_Z_F_10001);
		if (A && !C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10000,`HS65_LS_AO222X27_B_F_Z_F_10000);
		if (A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X27_B_R_Z_R_10010,`HS65_LS_AO222X27_B_F_Z_F_10010);
		if (A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_10101,`HS65_LS_AO222X27_C_F_Z_F_10101);
		if (A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_10110,`HS65_LS_AO222X27_C_F_Z_F_10110);
		if (!A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_01100,`HS65_LS_AO222X27_C_F_Z_F_01100);
		if (!A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_01110,`HS65_LS_AO222X27_C_F_Z_F_01110);
		if (!A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_01101,`HS65_LS_AO222X27_C_F_Z_F_01101);
		if (A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_10100,`HS65_LS_AO222X27_C_F_Z_F_10100);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_00101,`HS65_LS_AO222X27_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_00100,`HS65_LS_AO222X27_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X27_C_R_Z_R_00110,`HS65_LS_AO222X27_C_F_Z_F_00110);
		if (A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_10101,`HS65_LS_AO222X27_D_F_Z_F_10101);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_10110,`HS65_LS_AO222X27_D_F_Z_F_10110);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_01100,`HS65_LS_AO222X27_D_F_Z_F_01100);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_01110,`HS65_LS_AO222X27_D_F_Z_F_01110);
		if (!A && B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_01101,`HS65_LS_AO222X27_D_F_Z_F_01101);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_10100,`HS65_LS_AO222X27_D_F_Z_F_10100);
		if (!A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_00101,`HS65_LS_AO222X27_D_F_Z_F_00101);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_00100,`HS65_LS_AO222X27_D_F_Z_F_00100);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X27_D_R_Z_R_00110,`HS65_LS_AO222X27_D_F_Z_F_00110);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_10011,`HS65_LS_AO222X27_E_F_Z_F_10011);
		if (A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_10101,`HS65_LS_AO222X27_E_F_Z_F_10101);
		if (!A && B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_01001,`HS65_LS_AO222X27_E_F_Z_F_01001);
		if (!A && B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_01101,`HS65_LS_AO222X27_E_F_Z_F_01101);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_01011,`HS65_LS_AO222X27_E_F_Z_F_01011);
		if (A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_10001,`HS65_LS_AO222X27_E_F_Z_F_10001);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_00011,`HS65_LS_AO222X27_E_F_Z_F_00011);
		if (!A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_00001,`HS65_LS_AO222X27_E_F_Z_F_00001);
		if (!A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X27_E_R_Z_R_00101,`HS65_LS_AO222X27_E_F_Z_F_00101);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_10011,`HS65_LS_AO222X27_F_F_Z_F_10011);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_10101,`HS65_LS_AO222X27_F_F_Z_F_10101);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_01001,`HS65_LS_AO222X27_F_F_Z_F_01001);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_01101,`HS65_LS_AO222X27_F_F_Z_F_01101);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_01011,`HS65_LS_AO222X27_F_F_Z_F_01011);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_10001,`HS65_LS_AO222X27_F_F_Z_F_10001);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_00011,`HS65_LS_AO222X27_F_F_Z_F_00011);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_00001,`HS65_LS_AO222X27_F_F_Z_F_00001);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X27_F_R_Z_R_00101,`HS65_LS_AO222X27_F_F_Z_F_00101);


	endspecify

endmodule // HS65_LS_AO222X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO222X35_A_R_Z_R_11001 0.1
`define HS65_LS_AO222X35_A_F_Z_F_11001 0.1
`define HS65_LS_AO222X35_A_R_Z_R_11010 0.1
`define HS65_LS_AO222X35_A_F_Z_F_11010 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10100 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10100 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10110 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10110 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_A_R_Z_R_11000 0.1
`define HS65_LS_AO222X35_A_F_Z_F_11000 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10001 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10001 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10000 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10000 0.1
`define HS65_LS_AO222X35_A_R_Z_R_10010 0.1
`define HS65_LS_AO222X35_A_F_Z_F_10010 0.1
`define HS65_LS_AO222X35_B_R_Z_R_11001 0.1
`define HS65_LS_AO222X35_B_F_Z_F_11001 0.1
`define HS65_LS_AO222X35_B_R_Z_R_11010 0.1
`define HS65_LS_AO222X35_B_F_Z_F_11010 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10100 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10100 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10110 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10110 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_B_R_Z_R_11000 0.1
`define HS65_LS_AO222X35_B_F_Z_F_11000 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10001 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10001 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10000 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10000 0.1
`define HS65_LS_AO222X35_B_R_Z_R_10010 0.1
`define HS65_LS_AO222X35_B_F_Z_F_10010 0.1
`define HS65_LS_AO222X35_C_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_C_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_C_R_Z_R_10110 0.1
`define HS65_LS_AO222X35_C_F_Z_F_10110 0.1
`define HS65_LS_AO222X35_C_R_Z_R_01100 0.1
`define HS65_LS_AO222X35_C_F_Z_F_01100 0.1
`define HS65_LS_AO222X35_C_R_Z_R_01110 0.1
`define HS65_LS_AO222X35_C_F_Z_F_01110 0.1
`define HS65_LS_AO222X35_C_R_Z_R_01101 0.1
`define HS65_LS_AO222X35_C_F_Z_F_01101 0.1
`define HS65_LS_AO222X35_C_R_Z_R_10100 0.1
`define HS65_LS_AO222X35_C_F_Z_F_10100 0.1
`define HS65_LS_AO222X35_C_R_Z_R_00101 0.1
`define HS65_LS_AO222X35_C_F_Z_F_00101 0.1
`define HS65_LS_AO222X35_C_R_Z_R_00100 0.1
`define HS65_LS_AO222X35_C_F_Z_F_00100 0.1
`define HS65_LS_AO222X35_C_R_Z_R_00110 0.1
`define HS65_LS_AO222X35_C_F_Z_F_00110 0.1
`define HS65_LS_AO222X35_D_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_D_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_D_R_Z_R_10110 0.1
`define HS65_LS_AO222X35_D_F_Z_F_10110 0.1
`define HS65_LS_AO222X35_D_R_Z_R_01100 0.1
`define HS65_LS_AO222X35_D_F_Z_F_01100 0.1
`define HS65_LS_AO222X35_D_R_Z_R_01110 0.1
`define HS65_LS_AO222X35_D_F_Z_F_01110 0.1
`define HS65_LS_AO222X35_D_R_Z_R_01101 0.1
`define HS65_LS_AO222X35_D_F_Z_F_01101 0.1
`define HS65_LS_AO222X35_D_R_Z_R_10100 0.1
`define HS65_LS_AO222X35_D_F_Z_F_10100 0.1
`define HS65_LS_AO222X35_D_R_Z_R_00101 0.1
`define HS65_LS_AO222X35_D_F_Z_F_00101 0.1
`define HS65_LS_AO222X35_D_R_Z_R_00100 0.1
`define HS65_LS_AO222X35_D_F_Z_F_00100 0.1
`define HS65_LS_AO222X35_D_R_Z_R_00110 0.1
`define HS65_LS_AO222X35_D_F_Z_F_00110 0.1
`define HS65_LS_AO222X35_E_R_Z_R_10011 0.1
`define HS65_LS_AO222X35_E_F_Z_F_10011 0.1
`define HS65_LS_AO222X35_E_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_E_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_E_R_Z_R_01001 0.1
`define HS65_LS_AO222X35_E_F_Z_F_01001 0.1
`define HS65_LS_AO222X35_E_R_Z_R_01101 0.1
`define HS65_LS_AO222X35_E_F_Z_F_01101 0.1
`define HS65_LS_AO222X35_E_R_Z_R_01011 0.1
`define HS65_LS_AO222X35_E_F_Z_F_01011 0.1
`define HS65_LS_AO222X35_E_R_Z_R_10001 0.1
`define HS65_LS_AO222X35_E_F_Z_F_10001 0.1
`define HS65_LS_AO222X35_E_R_Z_R_00011 0.1
`define HS65_LS_AO222X35_E_F_Z_F_00011 0.1
`define HS65_LS_AO222X35_E_R_Z_R_00001 0.1
`define HS65_LS_AO222X35_E_F_Z_F_00001 0.1
`define HS65_LS_AO222X35_E_R_Z_R_00101 0.1
`define HS65_LS_AO222X35_E_F_Z_F_00101 0.1
`define HS65_LS_AO222X35_F_R_Z_R_10011 0.1
`define HS65_LS_AO222X35_F_F_Z_F_10011 0.1
`define HS65_LS_AO222X35_F_R_Z_R_10101 0.1
`define HS65_LS_AO222X35_F_F_Z_F_10101 0.1
`define HS65_LS_AO222X35_F_R_Z_R_01001 0.1
`define HS65_LS_AO222X35_F_F_Z_F_01001 0.1
`define HS65_LS_AO222X35_F_R_Z_R_01101 0.1
`define HS65_LS_AO222X35_F_F_Z_F_01101 0.1
`define HS65_LS_AO222X35_F_R_Z_R_01011 0.1
`define HS65_LS_AO222X35_F_F_Z_F_01011 0.1
`define HS65_LS_AO222X35_F_R_Z_R_10001 0.1
`define HS65_LS_AO222X35_F_F_Z_F_10001 0.1
`define HS65_LS_AO222X35_F_R_Z_R_00011 0.1
`define HS65_LS_AO222X35_F_F_Z_F_00011 0.1
`define HS65_LS_AO222X35_F_R_Z_R_00001 0.1
`define HS65_LS_AO222X35_F_F_Z_F_00001 0.1
`define HS65_LS_AO222X35_F_R_Z_R_00101 0.1
`define HS65_LS_AO222X35_F_F_Z_F_00101 0.1

module HS65_LS_AO222X35 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	and    U3 (INTERNAL3, E, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2, INTERNAL3) ;



	specify

		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_11001,`HS65_LS_AO222X35_A_F_Z_F_11001);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_11010,`HS65_LS_AO222X35_A_F_Z_F_11010);
		if (B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10100,`HS65_LS_AO222X35_A_F_Z_F_10100);
		if (B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10110,`HS65_LS_AO222X35_A_F_Z_F_10110);
		if (B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10101,`HS65_LS_AO222X35_A_F_Z_F_10101);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_11000,`HS65_LS_AO222X35_A_F_Z_F_11000);
		if (B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10001,`HS65_LS_AO222X35_A_F_Z_F_10001);
		if (B && !C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10000,`HS65_LS_AO222X35_A_F_Z_F_10000);
		if (B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X35_A_R_Z_R_10010,`HS65_LS_AO222X35_A_F_Z_F_10010);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_11001,`HS65_LS_AO222X35_B_F_Z_F_11001);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_11010,`HS65_LS_AO222X35_B_F_Z_F_11010);
		if (A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10100,`HS65_LS_AO222X35_B_F_Z_F_10100);
		if (A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10110,`HS65_LS_AO222X35_B_F_Z_F_10110);
		if (A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10101,`HS65_LS_AO222X35_B_F_Z_F_10101);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_11000,`HS65_LS_AO222X35_B_F_Z_F_11000);
		if (A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10001,`HS65_LS_AO222X35_B_F_Z_F_10001);
		if (A && !C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10000,`HS65_LS_AO222X35_B_F_Z_F_10000);
		if (A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X35_B_R_Z_R_10010,`HS65_LS_AO222X35_B_F_Z_F_10010);
		if (A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_10101,`HS65_LS_AO222X35_C_F_Z_F_10101);
		if (A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_10110,`HS65_LS_AO222X35_C_F_Z_F_10110);
		if (!A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_01100,`HS65_LS_AO222X35_C_F_Z_F_01100);
		if (!A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_01110,`HS65_LS_AO222X35_C_F_Z_F_01110);
		if (!A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_01101,`HS65_LS_AO222X35_C_F_Z_F_01101);
		if (A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_10100,`HS65_LS_AO222X35_C_F_Z_F_10100);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_00101,`HS65_LS_AO222X35_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_00100,`HS65_LS_AO222X35_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X35_C_R_Z_R_00110,`HS65_LS_AO222X35_C_F_Z_F_00110);
		if (A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_10101,`HS65_LS_AO222X35_D_F_Z_F_10101);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_10110,`HS65_LS_AO222X35_D_F_Z_F_10110);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_01100,`HS65_LS_AO222X35_D_F_Z_F_01100);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_01110,`HS65_LS_AO222X35_D_F_Z_F_01110);
		if (!A && B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_01101,`HS65_LS_AO222X35_D_F_Z_F_01101);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_10100,`HS65_LS_AO222X35_D_F_Z_F_10100);
		if (!A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_00101,`HS65_LS_AO222X35_D_F_Z_F_00101);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_00100,`HS65_LS_AO222X35_D_F_Z_F_00100);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X35_D_R_Z_R_00110,`HS65_LS_AO222X35_D_F_Z_F_00110);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_10011,`HS65_LS_AO222X35_E_F_Z_F_10011);
		if (A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_10101,`HS65_LS_AO222X35_E_F_Z_F_10101);
		if (!A && B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_01001,`HS65_LS_AO222X35_E_F_Z_F_01001);
		if (!A && B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_01101,`HS65_LS_AO222X35_E_F_Z_F_01101);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_01011,`HS65_LS_AO222X35_E_F_Z_F_01011);
		if (A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_10001,`HS65_LS_AO222X35_E_F_Z_F_10001);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_00011,`HS65_LS_AO222X35_E_F_Z_F_00011);
		if (!A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_00001,`HS65_LS_AO222X35_E_F_Z_F_00001);
		if (!A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X35_E_R_Z_R_00101,`HS65_LS_AO222X35_E_F_Z_F_00101);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_10011,`HS65_LS_AO222X35_F_F_Z_F_10011);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_10101,`HS65_LS_AO222X35_F_F_Z_F_10101);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_01001,`HS65_LS_AO222X35_F_F_Z_F_01001);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_01101,`HS65_LS_AO222X35_F_F_Z_F_01101);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_01011,`HS65_LS_AO222X35_F_F_Z_F_01011);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_10001,`HS65_LS_AO222X35_F_F_Z_F_10001);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_00011,`HS65_LS_AO222X35_F_F_Z_F_00011);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_00001,`HS65_LS_AO222X35_F_F_Z_F_00001);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X35_F_R_Z_R_00101,`HS65_LS_AO222X35_F_F_Z_F_00101);


	endspecify

endmodule // HS65_LS_AO222X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO222X4_A_R_Z_R_11001 0.1
`define HS65_LS_AO222X4_A_F_Z_F_11001 0.1
`define HS65_LS_AO222X4_A_R_Z_R_11010 0.1
`define HS65_LS_AO222X4_A_F_Z_F_11010 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10100 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10100 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10110 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10110 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_A_R_Z_R_11000 0.1
`define HS65_LS_AO222X4_A_F_Z_F_11000 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10001 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10001 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10000 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10000 0.1
`define HS65_LS_AO222X4_A_R_Z_R_10010 0.1
`define HS65_LS_AO222X4_A_F_Z_F_10010 0.1
`define HS65_LS_AO222X4_B_R_Z_R_11001 0.1
`define HS65_LS_AO222X4_B_F_Z_F_11001 0.1
`define HS65_LS_AO222X4_B_R_Z_R_11010 0.1
`define HS65_LS_AO222X4_B_F_Z_F_11010 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10100 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10100 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10110 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10110 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_B_R_Z_R_11000 0.1
`define HS65_LS_AO222X4_B_F_Z_F_11000 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10001 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10001 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10000 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10000 0.1
`define HS65_LS_AO222X4_B_R_Z_R_10010 0.1
`define HS65_LS_AO222X4_B_F_Z_F_10010 0.1
`define HS65_LS_AO222X4_C_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_C_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_C_R_Z_R_10110 0.1
`define HS65_LS_AO222X4_C_F_Z_F_10110 0.1
`define HS65_LS_AO222X4_C_R_Z_R_01100 0.1
`define HS65_LS_AO222X4_C_F_Z_F_01100 0.1
`define HS65_LS_AO222X4_C_R_Z_R_01110 0.1
`define HS65_LS_AO222X4_C_F_Z_F_01110 0.1
`define HS65_LS_AO222X4_C_R_Z_R_01101 0.1
`define HS65_LS_AO222X4_C_F_Z_F_01101 0.1
`define HS65_LS_AO222X4_C_R_Z_R_10100 0.1
`define HS65_LS_AO222X4_C_F_Z_F_10100 0.1
`define HS65_LS_AO222X4_C_R_Z_R_00101 0.1
`define HS65_LS_AO222X4_C_F_Z_F_00101 0.1
`define HS65_LS_AO222X4_C_R_Z_R_00100 0.1
`define HS65_LS_AO222X4_C_F_Z_F_00100 0.1
`define HS65_LS_AO222X4_C_R_Z_R_00110 0.1
`define HS65_LS_AO222X4_C_F_Z_F_00110 0.1
`define HS65_LS_AO222X4_D_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_D_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_D_R_Z_R_10110 0.1
`define HS65_LS_AO222X4_D_F_Z_F_10110 0.1
`define HS65_LS_AO222X4_D_R_Z_R_01100 0.1
`define HS65_LS_AO222X4_D_F_Z_F_01100 0.1
`define HS65_LS_AO222X4_D_R_Z_R_01110 0.1
`define HS65_LS_AO222X4_D_F_Z_F_01110 0.1
`define HS65_LS_AO222X4_D_R_Z_R_01101 0.1
`define HS65_LS_AO222X4_D_F_Z_F_01101 0.1
`define HS65_LS_AO222X4_D_R_Z_R_10100 0.1
`define HS65_LS_AO222X4_D_F_Z_F_10100 0.1
`define HS65_LS_AO222X4_D_R_Z_R_00101 0.1
`define HS65_LS_AO222X4_D_F_Z_F_00101 0.1
`define HS65_LS_AO222X4_D_R_Z_R_00100 0.1
`define HS65_LS_AO222X4_D_F_Z_F_00100 0.1
`define HS65_LS_AO222X4_D_R_Z_R_00110 0.1
`define HS65_LS_AO222X4_D_F_Z_F_00110 0.1
`define HS65_LS_AO222X4_E_R_Z_R_10011 0.1
`define HS65_LS_AO222X4_E_F_Z_F_10011 0.1
`define HS65_LS_AO222X4_E_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_E_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_E_R_Z_R_01001 0.1
`define HS65_LS_AO222X4_E_F_Z_F_01001 0.1
`define HS65_LS_AO222X4_E_R_Z_R_01101 0.1
`define HS65_LS_AO222X4_E_F_Z_F_01101 0.1
`define HS65_LS_AO222X4_E_R_Z_R_01011 0.1
`define HS65_LS_AO222X4_E_F_Z_F_01011 0.1
`define HS65_LS_AO222X4_E_R_Z_R_10001 0.1
`define HS65_LS_AO222X4_E_F_Z_F_10001 0.1
`define HS65_LS_AO222X4_E_R_Z_R_00011 0.1
`define HS65_LS_AO222X4_E_F_Z_F_00011 0.1
`define HS65_LS_AO222X4_E_R_Z_R_00001 0.1
`define HS65_LS_AO222X4_E_F_Z_F_00001 0.1
`define HS65_LS_AO222X4_E_R_Z_R_00101 0.1
`define HS65_LS_AO222X4_E_F_Z_F_00101 0.1
`define HS65_LS_AO222X4_F_R_Z_R_10011 0.1
`define HS65_LS_AO222X4_F_F_Z_F_10011 0.1
`define HS65_LS_AO222X4_F_R_Z_R_10101 0.1
`define HS65_LS_AO222X4_F_F_Z_F_10101 0.1
`define HS65_LS_AO222X4_F_R_Z_R_01001 0.1
`define HS65_LS_AO222X4_F_F_Z_F_01001 0.1
`define HS65_LS_AO222X4_F_R_Z_R_01101 0.1
`define HS65_LS_AO222X4_F_F_Z_F_01101 0.1
`define HS65_LS_AO222X4_F_R_Z_R_01011 0.1
`define HS65_LS_AO222X4_F_F_Z_F_01011 0.1
`define HS65_LS_AO222X4_F_R_Z_R_10001 0.1
`define HS65_LS_AO222X4_F_F_Z_F_10001 0.1
`define HS65_LS_AO222X4_F_R_Z_R_00011 0.1
`define HS65_LS_AO222X4_F_F_Z_F_00011 0.1
`define HS65_LS_AO222X4_F_R_Z_R_00001 0.1
`define HS65_LS_AO222X4_F_F_Z_F_00001 0.1
`define HS65_LS_AO222X4_F_R_Z_R_00101 0.1
`define HS65_LS_AO222X4_F_F_Z_F_00101 0.1

module HS65_LS_AO222X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	and    U3 (INTERNAL3, E, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2, INTERNAL3) ;



	specify

		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_11001,`HS65_LS_AO222X4_A_F_Z_F_11001);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_11010,`HS65_LS_AO222X4_A_F_Z_F_11010);
		if (B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10100,`HS65_LS_AO222X4_A_F_Z_F_10100);
		if (B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10110,`HS65_LS_AO222X4_A_F_Z_F_10110);
		if (B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10101,`HS65_LS_AO222X4_A_F_Z_F_10101);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_11000,`HS65_LS_AO222X4_A_F_Z_F_11000);
		if (B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10001,`HS65_LS_AO222X4_A_F_Z_F_10001);
		if (B && !C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10000,`HS65_LS_AO222X4_A_F_Z_F_10000);
		if (B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X4_A_R_Z_R_10010,`HS65_LS_AO222X4_A_F_Z_F_10010);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_11001,`HS65_LS_AO222X4_B_F_Z_F_11001);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_11010,`HS65_LS_AO222X4_B_F_Z_F_11010);
		if (A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10100,`HS65_LS_AO222X4_B_F_Z_F_10100);
		if (A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10110,`HS65_LS_AO222X4_B_F_Z_F_10110);
		if (A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10101,`HS65_LS_AO222X4_B_F_Z_F_10101);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_11000,`HS65_LS_AO222X4_B_F_Z_F_11000);
		if (A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10001,`HS65_LS_AO222X4_B_F_Z_F_10001);
		if (A && !C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10000,`HS65_LS_AO222X4_B_F_Z_F_10000);
		if (A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X4_B_R_Z_R_10010,`HS65_LS_AO222X4_B_F_Z_F_10010);
		if (A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_10101,`HS65_LS_AO222X4_C_F_Z_F_10101);
		if (A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_10110,`HS65_LS_AO222X4_C_F_Z_F_10110);
		if (!A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_01100,`HS65_LS_AO222X4_C_F_Z_F_01100);
		if (!A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_01110,`HS65_LS_AO222X4_C_F_Z_F_01110);
		if (!A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_01101,`HS65_LS_AO222X4_C_F_Z_F_01101);
		if (A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_10100,`HS65_LS_AO222X4_C_F_Z_F_10100);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_00101,`HS65_LS_AO222X4_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_00100,`HS65_LS_AO222X4_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X4_C_R_Z_R_00110,`HS65_LS_AO222X4_C_F_Z_F_00110);
		if (A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_10101,`HS65_LS_AO222X4_D_F_Z_F_10101);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_10110,`HS65_LS_AO222X4_D_F_Z_F_10110);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_01100,`HS65_LS_AO222X4_D_F_Z_F_01100);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_01110,`HS65_LS_AO222X4_D_F_Z_F_01110);
		if (!A && B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_01101,`HS65_LS_AO222X4_D_F_Z_F_01101);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_10100,`HS65_LS_AO222X4_D_F_Z_F_10100);
		if (!A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_00101,`HS65_LS_AO222X4_D_F_Z_F_00101);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_00100,`HS65_LS_AO222X4_D_F_Z_F_00100);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X4_D_R_Z_R_00110,`HS65_LS_AO222X4_D_F_Z_F_00110);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_10011,`HS65_LS_AO222X4_E_F_Z_F_10011);
		if (A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_10101,`HS65_LS_AO222X4_E_F_Z_F_10101);
		if (!A && B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_01001,`HS65_LS_AO222X4_E_F_Z_F_01001);
		if (!A && B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_01101,`HS65_LS_AO222X4_E_F_Z_F_01101);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_01011,`HS65_LS_AO222X4_E_F_Z_F_01011);
		if (A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_10001,`HS65_LS_AO222X4_E_F_Z_F_10001);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_00011,`HS65_LS_AO222X4_E_F_Z_F_00011);
		if (!A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_00001,`HS65_LS_AO222X4_E_F_Z_F_00001);
		if (!A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X4_E_R_Z_R_00101,`HS65_LS_AO222X4_E_F_Z_F_00101);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_10011,`HS65_LS_AO222X4_F_F_Z_F_10011);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_10101,`HS65_LS_AO222X4_F_F_Z_F_10101);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_01001,`HS65_LS_AO222X4_F_F_Z_F_01001);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_01101,`HS65_LS_AO222X4_F_F_Z_F_01101);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_01011,`HS65_LS_AO222X4_F_F_Z_F_01011);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_10001,`HS65_LS_AO222X4_F_F_Z_F_10001);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_00011,`HS65_LS_AO222X4_F_F_Z_F_00011);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_00001,`HS65_LS_AO222X4_F_F_Z_F_00001);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X4_F_R_Z_R_00101,`HS65_LS_AO222X4_F_F_Z_F_00101);


	endspecify

endmodule // HS65_LS_AO222X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO222X9_A_R_Z_R_11001 0.1
`define HS65_LS_AO222X9_A_F_Z_F_11001 0.1
`define HS65_LS_AO222X9_A_R_Z_R_11010 0.1
`define HS65_LS_AO222X9_A_F_Z_F_11010 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10100 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10100 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10110 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10110 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_A_R_Z_R_11000 0.1
`define HS65_LS_AO222X9_A_F_Z_F_11000 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10001 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10001 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10000 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10000 0.1
`define HS65_LS_AO222X9_A_R_Z_R_10010 0.1
`define HS65_LS_AO222X9_A_F_Z_F_10010 0.1
`define HS65_LS_AO222X9_B_R_Z_R_11001 0.1
`define HS65_LS_AO222X9_B_F_Z_F_11001 0.1
`define HS65_LS_AO222X9_B_R_Z_R_11010 0.1
`define HS65_LS_AO222X9_B_F_Z_F_11010 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10100 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10100 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10110 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10110 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_B_R_Z_R_11000 0.1
`define HS65_LS_AO222X9_B_F_Z_F_11000 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10001 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10001 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10000 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10000 0.1
`define HS65_LS_AO222X9_B_R_Z_R_10010 0.1
`define HS65_LS_AO222X9_B_F_Z_F_10010 0.1
`define HS65_LS_AO222X9_C_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_C_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_C_R_Z_R_10110 0.1
`define HS65_LS_AO222X9_C_F_Z_F_10110 0.1
`define HS65_LS_AO222X9_C_R_Z_R_01100 0.1
`define HS65_LS_AO222X9_C_F_Z_F_01100 0.1
`define HS65_LS_AO222X9_C_R_Z_R_01110 0.1
`define HS65_LS_AO222X9_C_F_Z_F_01110 0.1
`define HS65_LS_AO222X9_C_R_Z_R_01101 0.1
`define HS65_LS_AO222X9_C_F_Z_F_01101 0.1
`define HS65_LS_AO222X9_C_R_Z_R_10100 0.1
`define HS65_LS_AO222X9_C_F_Z_F_10100 0.1
`define HS65_LS_AO222X9_C_R_Z_R_00101 0.1
`define HS65_LS_AO222X9_C_F_Z_F_00101 0.1
`define HS65_LS_AO222X9_C_R_Z_R_00100 0.1
`define HS65_LS_AO222X9_C_F_Z_F_00100 0.1
`define HS65_LS_AO222X9_C_R_Z_R_00110 0.1
`define HS65_LS_AO222X9_C_F_Z_F_00110 0.1
`define HS65_LS_AO222X9_D_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_D_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_D_R_Z_R_10110 0.1
`define HS65_LS_AO222X9_D_F_Z_F_10110 0.1
`define HS65_LS_AO222X9_D_R_Z_R_01100 0.1
`define HS65_LS_AO222X9_D_F_Z_F_01100 0.1
`define HS65_LS_AO222X9_D_R_Z_R_01110 0.1
`define HS65_LS_AO222X9_D_F_Z_F_01110 0.1
`define HS65_LS_AO222X9_D_R_Z_R_01101 0.1
`define HS65_LS_AO222X9_D_F_Z_F_01101 0.1
`define HS65_LS_AO222X9_D_R_Z_R_10100 0.1
`define HS65_LS_AO222X9_D_F_Z_F_10100 0.1
`define HS65_LS_AO222X9_D_R_Z_R_00101 0.1
`define HS65_LS_AO222X9_D_F_Z_F_00101 0.1
`define HS65_LS_AO222X9_D_R_Z_R_00100 0.1
`define HS65_LS_AO222X9_D_F_Z_F_00100 0.1
`define HS65_LS_AO222X9_D_R_Z_R_00110 0.1
`define HS65_LS_AO222X9_D_F_Z_F_00110 0.1
`define HS65_LS_AO222X9_E_R_Z_R_10011 0.1
`define HS65_LS_AO222X9_E_F_Z_F_10011 0.1
`define HS65_LS_AO222X9_E_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_E_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_E_R_Z_R_01001 0.1
`define HS65_LS_AO222X9_E_F_Z_F_01001 0.1
`define HS65_LS_AO222X9_E_R_Z_R_01101 0.1
`define HS65_LS_AO222X9_E_F_Z_F_01101 0.1
`define HS65_LS_AO222X9_E_R_Z_R_01011 0.1
`define HS65_LS_AO222X9_E_F_Z_F_01011 0.1
`define HS65_LS_AO222X9_E_R_Z_R_10001 0.1
`define HS65_LS_AO222X9_E_F_Z_F_10001 0.1
`define HS65_LS_AO222X9_E_R_Z_R_00011 0.1
`define HS65_LS_AO222X9_E_F_Z_F_00011 0.1
`define HS65_LS_AO222X9_E_R_Z_R_00001 0.1
`define HS65_LS_AO222X9_E_F_Z_F_00001 0.1
`define HS65_LS_AO222X9_E_R_Z_R_00101 0.1
`define HS65_LS_AO222X9_E_F_Z_F_00101 0.1
`define HS65_LS_AO222X9_F_R_Z_R_10011 0.1
`define HS65_LS_AO222X9_F_F_Z_F_10011 0.1
`define HS65_LS_AO222X9_F_R_Z_R_10101 0.1
`define HS65_LS_AO222X9_F_F_Z_F_10101 0.1
`define HS65_LS_AO222X9_F_R_Z_R_01001 0.1
`define HS65_LS_AO222X9_F_F_Z_F_01001 0.1
`define HS65_LS_AO222X9_F_R_Z_R_01101 0.1
`define HS65_LS_AO222X9_F_F_Z_F_01101 0.1
`define HS65_LS_AO222X9_F_R_Z_R_01011 0.1
`define HS65_LS_AO222X9_F_F_Z_F_01011 0.1
`define HS65_LS_AO222X9_F_R_Z_R_10001 0.1
`define HS65_LS_AO222X9_F_F_Z_F_10001 0.1
`define HS65_LS_AO222X9_F_R_Z_R_00011 0.1
`define HS65_LS_AO222X9_F_F_Z_F_00011 0.1
`define HS65_LS_AO222X9_F_R_Z_R_00001 0.1
`define HS65_LS_AO222X9_F_F_Z_F_00001 0.1
`define HS65_LS_AO222X9_F_R_Z_R_00101 0.1
`define HS65_LS_AO222X9_F_F_Z_F_00101 0.1

module HS65_LS_AO222X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	and    U3 (INTERNAL3, E, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2, INTERNAL3) ;



	specify

		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_11001,`HS65_LS_AO222X9_A_F_Z_F_11001);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_11010,`HS65_LS_AO222X9_A_F_Z_F_11010);
		if (B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10100,`HS65_LS_AO222X9_A_F_Z_F_10100);
		if (B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10110,`HS65_LS_AO222X9_A_F_Z_F_10110);
		if (B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10101,`HS65_LS_AO222X9_A_F_Z_F_10101);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_11000,`HS65_LS_AO222X9_A_F_Z_F_11000);
		if (B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10001,`HS65_LS_AO222X9_A_F_Z_F_10001);
		if (B && !C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10000,`HS65_LS_AO222X9_A_F_Z_F_10000);
		if (B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO222X9_A_R_Z_R_10010,`HS65_LS_AO222X9_A_F_Z_F_10010);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_11001,`HS65_LS_AO222X9_B_F_Z_F_11001);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_11010,`HS65_LS_AO222X9_B_F_Z_F_11010);
		if (A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10100,`HS65_LS_AO222X9_B_F_Z_F_10100);
		if (A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10110,`HS65_LS_AO222X9_B_F_Z_F_10110);
		if (A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10101,`HS65_LS_AO222X9_B_F_Z_F_10101);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_11000,`HS65_LS_AO222X9_B_F_Z_F_11000);
		if (A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10001,`HS65_LS_AO222X9_B_F_Z_F_10001);
		if (A && !C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10000,`HS65_LS_AO222X9_B_F_Z_F_10000);
		if (A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO222X9_B_R_Z_R_10010,`HS65_LS_AO222X9_B_F_Z_F_10010);
		if (A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_10101,`HS65_LS_AO222X9_C_F_Z_F_10101);
		if (A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_10110,`HS65_LS_AO222X9_C_F_Z_F_10110);
		if (!A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_01100,`HS65_LS_AO222X9_C_F_Z_F_01100);
		if (!A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_01110,`HS65_LS_AO222X9_C_F_Z_F_01110);
		if (!A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_01101,`HS65_LS_AO222X9_C_F_Z_F_01101);
		if (A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_10100,`HS65_LS_AO222X9_C_F_Z_F_10100);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_00101,`HS65_LS_AO222X9_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_00100,`HS65_LS_AO222X9_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_AO222X9_C_R_Z_R_00110,`HS65_LS_AO222X9_C_F_Z_F_00110);
		if (A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_10101,`HS65_LS_AO222X9_D_F_Z_F_10101);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_10110,`HS65_LS_AO222X9_D_F_Z_F_10110);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_01100,`HS65_LS_AO222X9_D_F_Z_F_01100);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_01110,`HS65_LS_AO222X9_D_F_Z_F_01110);
		if (!A && B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_01101,`HS65_LS_AO222X9_D_F_Z_F_01101);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_10100,`HS65_LS_AO222X9_D_F_Z_F_10100);
		if (!A && !B && C && !E && F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_00101,`HS65_LS_AO222X9_D_F_Z_F_00101);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_00100,`HS65_LS_AO222X9_D_F_Z_F_00100);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO222X9_D_R_Z_R_00110,`HS65_LS_AO222X9_D_F_Z_F_00110);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_10011,`HS65_LS_AO222X9_E_F_Z_F_10011);
		if (A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_10101,`HS65_LS_AO222X9_E_F_Z_F_10101);
		if (!A && B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_01001,`HS65_LS_AO222X9_E_F_Z_F_01001);
		if (!A && B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_01101,`HS65_LS_AO222X9_E_F_Z_F_01101);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_01011,`HS65_LS_AO222X9_E_F_Z_F_01011);
		if (A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_10001,`HS65_LS_AO222X9_E_F_Z_F_10001);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_00011,`HS65_LS_AO222X9_E_F_Z_F_00011);
		if (!A && !B && !C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_00001,`HS65_LS_AO222X9_E_F_Z_F_00001);
		if (!A && !B && C && !D && F) (E +=> Z) = (`HS65_LS_AO222X9_E_R_Z_R_00101,`HS65_LS_AO222X9_E_F_Z_F_00101);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_10011,`HS65_LS_AO222X9_F_F_Z_F_10011);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_10101,`HS65_LS_AO222X9_F_F_Z_F_10101);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_01001,`HS65_LS_AO222X9_F_F_Z_F_01001);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_01101,`HS65_LS_AO222X9_F_F_Z_F_01101);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_01011,`HS65_LS_AO222X9_F_F_Z_F_01011);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_10001,`HS65_LS_AO222X9_F_F_Z_F_10001);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_00011,`HS65_LS_AO222X9_F_F_Z_F_00011);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_00001,`HS65_LS_AO222X9_F_F_Z_F_00001);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO222X9_F_R_Z_R_00101,`HS65_LS_AO222X9_F_F_Z_F_00101);


	endspecify

endmodule // HS65_LS_AO222X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO22X18_A_R_Z_R_101 0.1
`define HS65_LS_AO22X18_A_F_Z_F_101 0.1
`define HS65_LS_AO22X18_A_R_Z_R_100 0.1
`define HS65_LS_AO22X18_A_F_Z_F_100 0.1
`define HS65_LS_AO22X18_A_R_Z_R_110 0.1
`define HS65_LS_AO22X18_A_F_Z_F_110 0.1
`define HS65_LS_AO22X18_B_R_Z_R_101 0.1
`define HS65_LS_AO22X18_B_F_Z_F_101 0.1
`define HS65_LS_AO22X18_B_R_Z_R_100 0.1
`define HS65_LS_AO22X18_B_F_Z_F_100 0.1
`define HS65_LS_AO22X18_B_R_Z_R_110 0.1
`define HS65_LS_AO22X18_B_F_Z_F_110 0.1
`define HS65_LS_AO22X18_C_R_Z_R_011 0.1
`define HS65_LS_AO22X18_C_F_Z_F_011 0.1
`define HS65_LS_AO22X18_C_R_Z_R_001 0.1
`define HS65_LS_AO22X18_C_F_Z_F_001 0.1
`define HS65_LS_AO22X18_C_R_Z_R_101 0.1
`define HS65_LS_AO22X18_C_F_Z_F_101 0.1
`define HS65_LS_AO22X18_D_R_Z_R_011 0.1
`define HS65_LS_AO22X18_D_F_Z_F_011 0.1
`define HS65_LS_AO22X18_D_R_Z_R_001 0.1
`define HS65_LS_AO22X18_D_F_Z_F_001 0.1
`define HS65_LS_AO22X18_D_R_Z_R_101 0.1
`define HS65_LS_AO22X18_D_F_Z_F_101 0.1

module HS65_LS_AO22X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && !C && D) (A +=> Z) = (`HS65_LS_AO22X18_A_R_Z_R_101,`HS65_LS_AO22X18_A_F_Z_F_101);
		if (B && !C && !D) (A +=> Z) = (`HS65_LS_AO22X18_A_R_Z_R_100,`HS65_LS_AO22X18_A_F_Z_F_100);
		if (B && C && !D) (A +=> Z) = (`HS65_LS_AO22X18_A_R_Z_R_110,`HS65_LS_AO22X18_A_F_Z_F_110);
		if (A && !C && D) (B +=> Z) = (`HS65_LS_AO22X18_B_R_Z_R_101,`HS65_LS_AO22X18_B_F_Z_F_101);
		if (A && !C && !D) (B +=> Z) = (`HS65_LS_AO22X18_B_R_Z_R_100,`HS65_LS_AO22X18_B_F_Z_F_100);
		if (A && C && !D) (B +=> Z) = (`HS65_LS_AO22X18_B_R_Z_R_110,`HS65_LS_AO22X18_B_F_Z_F_110);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_AO22X18_C_R_Z_R_011,`HS65_LS_AO22X18_C_F_Z_F_011);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_AO22X18_C_R_Z_R_001,`HS65_LS_AO22X18_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_AO22X18_C_R_Z_R_101,`HS65_LS_AO22X18_C_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO22X18_D_R_Z_R_011,`HS65_LS_AO22X18_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO22X18_D_R_Z_R_001,`HS65_LS_AO22X18_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO22X18_D_R_Z_R_101,`HS65_LS_AO22X18_D_F_Z_F_101);


	endspecify

endmodule // HS65_LS_AO22X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO22X27_A_R_Z_R_101 0.1
`define HS65_LS_AO22X27_A_F_Z_F_101 0.1
`define HS65_LS_AO22X27_A_R_Z_R_100 0.1
`define HS65_LS_AO22X27_A_F_Z_F_100 0.1
`define HS65_LS_AO22X27_A_R_Z_R_110 0.1
`define HS65_LS_AO22X27_A_F_Z_F_110 0.1
`define HS65_LS_AO22X27_B_R_Z_R_101 0.1
`define HS65_LS_AO22X27_B_F_Z_F_101 0.1
`define HS65_LS_AO22X27_B_R_Z_R_100 0.1
`define HS65_LS_AO22X27_B_F_Z_F_100 0.1
`define HS65_LS_AO22X27_B_R_Z_R_110 0.1
`define HS65_LS_AO22X27_B_F_Z_F_110 0.1
`define HS65_LS_AO22X27_C_R_Z_R_011 0.1
`define HS65_LS_AO22X27_C_F_Z_F_011 0.1
`define HS65_LS_AO22X27_C_R_Z_R_001 0.1
`define HS65_LS_AO22X27_C_F_Z_F_001 0.1
`define HS65_LS_AO22X27_C_R_Z_R_101 0.1
`define HS65_LS_AO22X27_C_F_Z_F_101 0.1
`define HS65_LS_AO22X27_D_R_Z_R_011 0.1
`define HS65_LS_AO22X27_D_F_Z_F_011 0.1
`define HS65_LS_AO22X27_D_R_Z_R_001 0.1
`define HS65_LS_AO22X27_D_F_Z_F_001 0.1
`define HS65_LS_AO22X27_D_R_Z_R_101 0.1
`define HS65_LS_AO22X27_D_F_Z_F_101 0.1

module HS65_LS_AO22X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && !C && D) (A +=> Z) = (`HS65_LS_AO22X27_A_R_Z_R_101,`HS65_LS_AO22X27_A_F_Z_F_101);
		if (B && !C && !D) (A +=> Z) = (`HS65_LS_AO22X27_A_R_Z_R_100,`HS65_LS_AO22X27_A_F_Z_F_100);
		if (B && C && !D) (A +=> Z) = (`HS65_LS_AO22X27_A_R_Z_R_110,`HS65_LS_AO22X27_A_F_Z_F_110);
		if (A && !C && D) (B +=> Z) = (`HS65_LS_AO22X27_B_R_Z_R_101,`HS65_LS_AO22X27_B_F_Z_F_101);
		if (A && !C && !D) (B +=> Z) = (`HS65_LS_AO22X27_B_R_Z_R_100,`HS65_LS_AO22X27_B_F_Z_F_100);
		if (A && C && !D) (B +=> Z) = (`HS65_LS_AO22X27_B_R_Z_R_110,`HS65_LS_AO22X27_B_F_Z_F_110);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_AO22X27_C_R_Z_R_011,`HS65_LS_AO22X27_C_F_Z_F_011);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_AO22X27_C_R_Z_R_001,`HS65_LS_AO22X27_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_AO22X27_C_R_Z_R_101,`HS65_LS_AO22X27_C_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO22X27_D_R_Z_R_011,`HS65_LS_AO22X27_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO22X27_D_R_Z_R_001,`HS65_LS_AO22X27_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO22X27_D_R_Z_R_101,`HS65_LS_AO22X27_D_F_Z_F_101);


	endspecify

endmodule // HS65_LS_AO22X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO22X35_A_R_Z_R_101 0.1
`define HS65_LS_AO22X35_A_F_Z_F_101 0.1
`define HS65_LS_AO22X35_A_R_Z_R_100 0.1
`define HS65_LS_AO22X35_A_F_Z_F_100 0.1
`define HS65_LS_AO22X35_A_R_Z_R_110 0.1
`define HS65_LS_AO22X35_A_F_Z_F_110 0.1
`define HS65_LS_AO22X35_B_R_Z_R_101 0.1
`define HS65_LS_AO22X35_B_F_Z_F_101 0.1
`define HS65_LS_AO22X35_B_R_Z_R_100 0.1
`define HS65_LS_AO22X35_B_F_Z_F_100 0.1
`define HS65_LS_AO22X35_B_R_Z_R_110 0.1
`define HS65_LS_AO22X35_B_F_Z_F_110 0.1
`define HS65_LS_AO22X35_C_R_Z_R_011 0.1
`define HS65_LS_AO22X35_C_F_Z_F_011 0.1
`define HS65_LS_AO22X35_C_R_Z_R_001 0.1
`define HS65_LS_AO22X35_C_F_Z_F_001 0.1
`define HS65_LS_AO22X35_C_R_Z_R_101 0.1
`define HS65_LS_AO22X35_C_F_Z_F_101 0.1
`define HS65_LS_AO22X35_D_R_Z_R_011 0.1
`define HS65_LS_AO22X35_D_F_Z_F_011 0.1
`define HS65_LS_AO22X35_D_R_Z_R_001 0.1
`define HS65_LS_AO22X35_D_F_Z_F_001 0.1
`define HS65_LS_AO22X35_D_R_Z_R_101 0.1
`define HS65_LS_AO22X35_D_F_Z_F_101 0.1

module HS65_LS_AO22X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && !C && D) (A +=> Z) = (`HS65_LS_AO22X35_A_R_Z_R_101,`HS65_LS_AO22X35_A_F_Z_F_101);
		if (B && !C && !D) (A +=> Z) = (`HS65_LS_AO22X35_A_R_Z_R_100,`HS65_LS_AO22X35_A_F_Z_F_100);
		if (B && C && !D) (A +=> Z) = (`HS65_LS_AO22X35_A_R_Z_R_110,`HS65_LS_AO22X35_A_F_Z_F_110);
		if (A && !C && D) (B +=> Z) = (`HS65_LS_AO22X35_B_R_Z_R_101,`HS65_LS_AO22X35_B_F_Z_F_101);
		if (A && !C && !D) (B +=> Z) = (`HS65_LS_AO22X35_B_R_Z_R_100,`HS65_LS_AO22X35_B_F_Z_F_100);
		if (A && C && !D) (B +=> Z) = (`HS65_LS_AO22X35_B_R_Z_R_110,`HS65_LS_AO22X35_B_F_Z_F_110);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_AO22X35_C_R_Z_R_011,`HS65_LS_AO22X35_C_F_Z_F_011);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_AO22X35_C_R_Z_R_001,`HS65_LS_AO22X35_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_AO22X35_C_R_Z_R_101,`HS65_LS_AO22X35_C_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO22X35_D_R_Z_R_011,`HS65_LS_AO22X35_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO22X35_D_R_Z_R_001,`HS65_LS_AO22X35_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO22X35_D_R_Z_R_101,`HS65_LS_AO22X35_D_F_Z_F_101);


	endspecify

endmodule // HS65_LS_AO22X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO22X4_A_R_Z_R_101 0.1
`define HS65_LS_AO22X4_A_F_Z_F_101 0.1
`define HS65_LS_AO22X4_A_R_Z_R_100 0.1
`define HS65_LS_AO22X4_A_F_Z_F_100 0.1
`define HS65_LS_AO22X4_A_R_Z_R_110 0.1
`define HS65_LS_AO22X4_A_F_Z_F_110 0.1
`define HS65_LS_AO22X4_B_R_Z_R_101 0.1
`define HS65_LS_AO22X4_B_F_Z_F_101 0.1
`define HS65_LS_AO22X4_B_R_Z_R_100 0.1
`define HS65_LS_AO22X4_B_F_Z_F_100 0.1
`define HS65_LS_AO22X4_B_R_Z_R_110 0.1
`define HS65_LS_AO22X4_B_F_Z_F_110 0.1
`define HS65_LS_AO22X4_C_R_Z_R_011 0.1
`define HS65_LS_AO22X4_C_F_Z_F_011 0.1
`define HS65_LS_AO22X4_C_R_Z_R_001 0.1
`define HS65_LS_AO22X4_C_F_Z_F_001 0.1
`define HS65_LS_AO22X4_C_R_Z_R_101 0.1
`define HS65_LS_AO22X4_C_F_Z_F_101 0.1
`define HS65_LS_AO22X4_D_R_Z_R_011 0.1
`define HS65_LS_AO22X4_D_F_Z_F_011 0.1
`define HS65_LS_AO22X4_D_R_Z_R_001 0.1
`define HS65_LS_AO22X4_D_F_Z_F_001 0.1
`define HS65_LS_AO22X4_D_R_Z_R_101 0.1
`define HS65_LS_AO22X4_D_F_Z_F_101 0.1

module HS65_LS_AO22X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && !C && D) (A +=> Z) = (`HS65_LS_AO22X4_A_R_Z_R_101,`HS65_LS_AO22X4_A_F_Z_F_101);
		if (B && !C && !D) (A +=> Z) = (`HS65_LS_AO22X4_A_R_Z_R_100,`HS65_LS_AO22X4_A_F_Z_F_100);
		if (B && C && !D) (A +=> Z) = (`HS65_LS_AO22X4_A_R_Z_R_110,`HS65_LS_AO22X4_A_F_Z_F_110);
		if (A && !C && D) (B +=> Z) = (`HS65_LS_AO22X4_B_R_Z_R_101,`HS65_LS_AO22X4_B_F_Z_F_101);
		if (A && !C && !D) (B +=> Z) = (`HS65_LS_AO22X4_B_R_Z_R_100,`HS65_LS_AO22X4_B_F_Z_F_100);
		if (A && C && !D) (B +=> Z) = (`HS65_LS_AO22X4_B_R_Z_R_110,`HS65_LS_AO22X4_B_F_Z_F_110);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_AO22X4_C_R_Z_R_011,`HS65_LS_AO22X4_C_F_Z_F_011);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_AO22X4_C_R_Z_R_001,`HS65_LS_AO22X4_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_AO22X4_C_R_Z_R_101,`HS65_LS_AO22X4_C_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO22X4_D_R_Z_R_011,`HS65_LS_AO22X4_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO22X4_D_R_Z_R_001,`HS65_LS_AO22X4_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO22X4_D_R_Z_R_101,`HS65_LS_AO22X4_D_F_Z_F_101);


	endspecify

endmodule // HS65_LS_AO22X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO22X9_A_R_Z_R_101 0.1
`define HS65_LS_AO22X9_A_F_Z_F_101 0.1
`define HS65_LS_AO22X9_A_R_Z_R_100 0.1
`define HS65_LS_AO22X9_A_F_Z_F_100 0.1
`define HS65_LS_AO22X9_A_R_Z_R_110 0.1
`define HS65_LS_AO22X9_A_F_Z_F_110 0.1
`define HS65_LS_AO22X9_B_R_Z_R_101 0.1
`define HS65_LS_AO22X9_B_F_Z_F_101 0.1
`define HS65_LS_AO22X9_B_R_Z_R_100 0.1
`define HS65_LS_AO22X9_B_F_Z_F_100 0.1
`define HS65_LS_AO22X9_B_R_Z_R_110 0.1
`define HS65_LS_AO22X9_B_F_Z_F_110 0.1
`define HS65_LS_AO22X9_C_R_Z_R_011 0.1
`define HS65_LS_AO22X9_C_F_Z_F_011 0.1
`define HS65_LS_AO22X9_C_R_Z_R_001 0.1
`define HS65_LS_AO22X9_C_F_Z_F_001 0.1
`define HS65_LS_AO22X9_C_R_Z_R_101 0.1
`define HS65_LS_AO22X9_C_F_Z_F_101 0.1
`define HS65_LS_AO22X9_D_R_Z_R_011 0.1
`define HS65_LS_AO22X9_D_F_Z_F_011 0.1
`define HS65_LS_AO22X9_D_R_Z_R_001 0.1
`define HS65_LS_AO22X9_D_F_Z_F_001 0.1
`define HS65_LS_AO22X9_D_R_Z_R_101 0.1
`define HS65_LS_AO22X9_D_F_Z_F_101 0.1

module HS65_LS_AO22X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B) ;
	and    U2 (INTERNAL2, C, D) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && !C && D) (A +=> Z) = (`HS65_LS_AO22X9_A_R_Z_R_101,`HS65_LS_AO22X9_A_F_Z_F_101);
		if (B && !C && !D) (A +=> Z) = (`HS65_LS_AO22X9_A_R_Z_R_100,`HS65_LS_AO22X9_A_F_Z_F_100);
		if (B && C && !D) (A +=> Z) = (`HS65_LS_AO22X9_A_R_Z_R_110,`HS65_LS_AO22X9_A_F_Z_F_110);
		if (A && !C && D) (B +=> Z) = (`HS65_LS_AO22X9_B_R_Z_R_101,`HS65_LS_AO22X9_B_F_Z_F_101);
		if (A && !C && !D) (B +=> Z) = (`HS65_LS_AO22X9_B_R_Z_R_100,`HS65_LS_AO22X9_B_F_Z_F_100);
		if (A && C && !D) (B +=> Z) = (`HS65_LS_AO22X9_B_R_Z_R_110,`HS65_LS_AO22X9_B_F_Z_F_110);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_AO22X9_C_R_Z_R_011,`HS65_LS_AO22X9_C_F_Z_F_011);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_AO22X9_C_R_Z_R_001,`HS65_LS_AO22X9_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_AO22X9_C_R_Z_R_101,`HS65_LS_AO22X9_C_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO22X9_D_R_Z_R_011,`HS65_LS_AO22X9_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO22X9_D_R_Z_R_001,`HS65_LS_AO22X9_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO22X9_D_R_Z_R_101,`HS65_LS_AO22X9_D_F_Z_F_101);


	endspecify

endmodule // HS65_LS_AO22X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO311X18_A_R_Z_R_1100 0.1
`define HS65_LS_AO311X18_A_F_Z_F_1100 0.1
`define HS65_LS_AO311X18_B_R_Z_R_1100 0.1
`define HS65_LS_AO311X18_B_F_Z_F_1100 0.1
`define HS65_LS_AO311X18_C_R_Z_R_1100 0.1
`define HS65_LS_AO311X18_C_F_Z_F_1100 0.1
`define HS65_LS_AO311X18_D_R_Z_R_1010 0.1
`define HS65_LS_AO311X18_D_F_Z_F_1010 0.1
`define HS65_LS_AO311X18_D_R_Z_R_1000 0.1
`define HS65_LS_AO311X18_D_F_Z_F_1000 0.1
`define HS65_LS_AO311X18_D_R_Z_R_1100 0.1
`define HS65_LS_AO311X18_D_F_Z_F_1100 0.1
`define HS65_LS_AO311X18_D_R_Z_R_0010 0.1
`define HS65_LS_AO311X18_D_F_Z_F_0010 0.1
`define HS65_LS_AO311X18_D_R_Z_R_0000 0.1
`define HS65_LS_AO311X18_D_F_Z_F_0000 0.1
`define HS65_LS_AO311X18_D_R_Z_R_0110 0.1
`define HS65_LS_AO311X18_D_F_Z_F_0110 0.1
`define HS65_LS_AO311X18_D_R_Z_R_0100 0.1
`define HS65_LS_AO311X18_D_F_Z_F_0100 0.1
`define HS65_LS_AO311X18_E_R_Z_R_1010 0.1
`define HS65_LS_AO311X18_E_F_Z_F_1010 0.1
`define HS65_LS_AO311X18_E_R_Z_R_1000 0.1
`define HS65_LS_AO311X18_E_F_Z_F_1000 0.1
`define HS65_LS_AO311X18_E_R_Z_R_1100 0.1
`define HS65_LS_AO311X18_E_F_Z_F_1100 0.1
`define HS65_LS_AO311X18_E_R_Z_R_0010 0.1
`define HS65_LS_AO311X18_E_F_Z_F_0010 0.1
`define HS65_LS_AO311X18_E_R_Z_R_0000 0.1
`define HS65_LS_AO311X18_E_F_Z_F_0000 0.1
`define HS65_LS_AO311X18_E_R_Z_R_0110 0.1
`define HS65_LS_AO311X18_E_F_Z_F_0110 0.1
`define HS65_LS_AO311X18_E_R_Z_R_0100 0.1
`define HS65_LS_AO311X18_E_F_Z_F_0100 0.1

module HS65_LS_AO311X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_AO311X18_A_R_Z_R_1100,`HS65_LS_AO311X18_A_F_Z_F_1100);
		(B +=> Z) = (`HS65_LS_AO311X18_B_R_Z_R_1100,`HS65_LS_AO311X18_B_F_Z_F_1100);
		(C +=> Z) = (`HS65_LS_AO311X18_C_R_Z_R_1100,`HS65_LS_AO311X18_C_F_Z_F_1100);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_1010,`HS65_LS_AO311X18_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_1000,`HS65_LS_AO311X18_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_1100,`HS65_LS_AO311X18_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_0010,`HS65_LS_AO311X18_D_F_Z_F_0010);
		if (!A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_0000,`HS65_LS_AO311X18_D_F_Z_F_0000);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_0110,`HS65_LS_AO311X18_D_F_Z_F_0110);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X18_D_R_Z_R_0100,`HS65_LS_AO311X18_D_F_Z_F_0100);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_1010,`HS65_LS_AO311X18_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_1000,`HS65_LS_AO311X18_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_1100,`HS65_LS_AO311X18_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_0010,`HS65_LS_AO311X18_E_F_Z_F_0010);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_0000,`HS65_LS_AO311X18_E_F_Z_F_0000);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_0110,`HS65_LS_AO311X18_E_F_Z_F_0110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X18_E_R_Z_R_0100,`HS65_LS_AO311X18_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO311X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO311X27_A_R_Z_R_1100 0.1
`define HS65_LS_AO311X27_A_F_Z_F_1100 0.1
`define HS65_LS_AO311X27_B_R_Z_R_1100 0.1
`define HS65_LS_AO311X27_B_F_Z_F_1100 0.1
`define HS65_LS_AO311X27_C_R_Z_R_1100 0.1
`define HS65_LS_AO311X27_C_F_Z_F_1100 0.1
`define HS65_LS_AO311X27_D_R_Z_R_1010 0.1
`define HS65_LS_AO311X27_D_F_Z_F_1010 0.1
`define HS65_LS_AO311X27_D_R_Z_R_1000 0.1
`define HS65_LS_AO311X27_D_F_Z_F_1000 0.1
`define HS65_LS_AO311X27_D_R_Z_R_1100 0.1
`define HS65_LS_AO311X27_D_F_Z_F_1100 0.1
`define HS65_LS_AO311X27_D_R_Z_R_0010 0.1
`define HS65_LS_AO311X27_D_F_Z_F_0010 0.1
`define HS65_LS_AO311X27_D_R_Z_R_0000 0.1
`define HS65_LS_AO311X27_D_F_Z_F_0000 0.1
`define HS65_LS_AO311X27_D_R_Z_R_0110 0.1
`define HS65_LS_AO311X27_D_F_Z_F_0110 0.1
`define HS65_LS_AO311X27_D_R_Z_R_0100 0.1
`define HS65_LS_AO311X27_D_F_Z_F_0100 0.1
`define HS65_LS_AO311X27_E_R_Z_R_1010 0.1
`define HS65_LS_AO311X27_E_F_Z_F_1010 0.1
`define HS65_LS_AO311X27_E_R_Z_R_1000 0.1
`define HS65_LS_AO311X27_E_F_Z_F_1000 0.1
`define HS65_LS_AO311X27_E_R_Z_R_1100 0.1
`define HS65_LS_AO311X27_E_F_Z_F_1100 0.1
`define HS65_LS_AO311X27_E_R_Z_R_0010 0.1
`define HS65_LS_AO311X27_E_F_Z_F_0010 0.1
`define HS65_LS_AO311X27_E_R_Z_R_0000 0.1
`define HS65_LS_AO311X27_E_F_Z_F_0000 0.1
`define HS65_LS_AO311X27_E_R_Z_R_0110 0.1
`define HS65_LS_AO311X27_E_F_Z_F_0110 0.1
`define HS65_LS_AO311X27_E_R_Z_R_0100 0.1
`define HS65_LS_AO311X27_E_F_Z_F_0100 0.1

module HS65_LS_AO311X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_AO311X27_A_R_Z_R_1100,`HS65_LS_AO311X27_A_F_Z_F_1100);
		(B +=> Z) = (`HS65_LS_AO311X27_B_R_Z_R_1100,`HS65_LS_AO311X27_B_F_Z_F_1100);
		(C +=> Z) = (`HS65_LS_AO311X27_C_R_Z_R_1100,`HS65_LS_AO311X27_C_F_Z_F_1100);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_1010,`HS65_LS_AO311X27_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_1000,`HS65_LS_AO311X27_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_1100,`HS65_LS_AO311X27_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_0010,`HS65_LS_AO311X27_D_F_Z_F_0010);
		if (!A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_0000,`HS65_LS_AO311X27_D_F_Z_F_0000);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_0110,`HS65_LS_AO311X27_D_F_Z_F_0110);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X27_D_R_Z_R_0100,`HS65_LS_AO311X27_D_F_Z_F_0100);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_1010,`HS65_LS_AO311X27_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_1000,`HS65_LS_AO311X27_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_1100,`HS65_LS_AO311X27_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_0010,`HS65_LS_AO311X27_E_F_Z_F_0010);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_0000,`HS65_LS_AO311X27_E_F_Z_F_0000);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_0110,`HS65_LS_AO311X27_E_F_Z_F_0110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X27_E_R_Z_R_0100,`HS65_LS_AO311X27_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO311X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO311X35_A_R_Z_R_1100 0.1
`define HS65_LS_AO311X35_A_F_Z_F_1100 0.1
`define HS65_LS_AO311X35_B_R_Z_R_1100 0.1
`define HS65_LS_AO311X35_B_F_Z_F_1100 0.1
`define HS65_LS_AO311X35_C_R_Z_R_1100 0.1
`define HS65_LS_AO311X35_C_F_Z_F_1100 0.1
`define HS65_LS_AO311X35_D_R_Z_R_1010 0.1
`define HS65_LS_AO311X35_D_F_Z_F_1010 0.1
`define HS65_LS_AO311X35_D_R_Z_R_1000 0.1
`define HS65_LS_AO311X35_D_F_Z_F_1000 0.1
`define HS65_LS_AO311X35_D_R_Z_R_1100 0.1
`define HS65_LS_AO311X35_D_F_Z_F_1100 0.1
`define HS65_LS_AO311X35_D_R_Z_R_0010 0.1
`define HS65_LS_AO311X35_D_F_Z_F_0010 0.1
`define HS65_LS_AO311X35_D_R_Z_R_0000 0.1
`define HS65_LS_AO311X35_D_F_Z_F_0000 0.1
`define HS65_LS_AO311X35_D_R_Z_R_0110 0.1
`define HS65_LS_AO311X35_D_F_Z_F_0110 0.1
`define HS65_LS_AO311X35_D_R_Z_R_0100 0.1
`define HS65_LS_AO311X35_D_F_Z_F_0100 0.1
`define HS65_LS_AO311X35_E_R_Z_R_1010 0.1
`define HS65_LS_AO311X35_E_F_Z_F_1010 0.1
`define HS65_LS_AO311X35_E_R_Z_R_1000 0.1
`define HS65_LS_AO311X35_E_F_Z_F_1000 0.1
`define HS65_LS_AO311X35_E_R_Z_R_1100 0.1
`define HS65_LS_AO311X35_E_F_Z_F_1100 0.1
`define HS65_LS_AO311X35_E_R_Z_R_0010 0.1
`define HS65_LS_AO311X35_E_F_Z_F_0010 0.1
`define HS65_LS_AO311X35_E_R_Z_R_0000 0.1
`define HS65_LS_AO311X35_E_F_Z_F_0000 0.1
`define HS65_LS_AO311X35_E_R_Z_R_0110 0.1
`define HS65_LS_AO311X35_E_F_Z_F_0110 0.1
`define HS65_LS_AO311X35_E_R_Z_R_0100 0.1
`define HS65_LS_AO311X35_E_F_Z_F_0100 0.1

module HS65_LS_AO311X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_AO311X35_A_R_Z_R_1100,`HS65_LS_AO311X35_A_F_Z_F_1100);
		(B +=> Z) = (`HS65_LS_AO311X35_B_R_Z_R_1100,`HS65_LS_AO311X35_B_F_Z_F_1100);
		(C +=> Z) = (`HS65_LS_AO311X35_C_R_Z_R_1100,`HS65_LS_AO311X35_C_F_Z_F_1100);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_1010,`HS65_LS_AO311X35_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_1000,`HS65_LS_AO311X35_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_1100,`HS65_LS_AO311X35_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_0010,`HS65_LS_AO311X35_D_F_Z_F_0010);
		if (!A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_0000,`HS65_LS_AO311X35_D_F_Z_F_0000);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_0110,`HS65_LS_AO311X35_D_F_Z_F_0110);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X35_D_R_Z_R_0100,`HS65_LS_AO311X35_D_F_Z_F_0100);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_1010,`HS65_LS_AO311X35_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_1000,`HS65_LS_AO311X35_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_1100,`HS65_LS_AO311X35_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_0010,`HS65_LS_AO311X35_E_F_Z_F_0010);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_0000,`HS65_LS_AO311X35_E_F_Z_F_0000);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_0110,`HS65_LS_AO311X35_E_F_Z_F_0110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X35_E_R_Z_R_0100,`HS65_LS_AO311X35_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO311X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO311X4_A_R_Z_R_1100 0.1
`define HS65_LS_AO311X4_A_F_Z_F_1100 0.1
`define HS65_LS_AO311X4_B_R_Z_R_1100 0.1
`define HS65_LS_AO311X4_B_F_Z_F_1100 0.1
`define HS65_LS_AO311X4_C_R_Z_R_1100 0.1
`define HS65_LS_AO311X4_C_F_Z_F_1100 0.1
`define HS65_LS_AO311X4_D_R_Z_R_1010 0.1
`define HS65_LS_AO311X4_D_F_Z_F_1010 0.1
`define HS65_LS_AO311X4_D_R_Z_R_1000 0.1
`define HS65_LS_AO311X4_D_F_Z_F_1000 0.1
`define HS65_LS_AO311X4_D_R_Z_R_1100 0.1
`define HS65_LS_AO311X4_D_F_Z_F_1100 0.1
`define HS65_LS_AO311X4_D_R_Z_R_0010 0.1
`define HS65_LS_AO311X4_D_F_Z_F_0010 0.1
`define HS65_LS_AO311X4_D_R_Z_R_0000 0.1
`define HS65_LS_AO311X4_D_F_Z_F_0000 0.1
`define HS65_LS_AO311X4_D_R_Z_R_0110 0.1
`define HS65_LS_AO311X4_D_F_Z_F_0110 0.1
`define HS65_LS_AO311X4_D_R_Z_R_0100 0.1
`define HS65_LS_AO311X4_D_F_Z_F_0100 0.1
`define HS65_LS_AO311X4_E_R_Z_R_1010 0.1
`define HS65_LS_AO311X4_E_F_Z_F_1010 0.1
`define HS65_LS_AO311X4_E_R_Z_R_1000 0.1
`define HS65_LS_AO311X4_E_F_Z_F_1000 0.1
`define HS65_LS_AO311X4_E_R_Z_R_1100 0.1
`define HS65_LS_AO311X4_E_F_Z_F_1100 0.1
`define HS65_LS_AO311X4_E_R_Z_R_0010 0.1
`define HS65_LS_AO311X4_E_F_Z_F_0010 0.1
`define HS65_LS_AO311X4_E_R_Z_R_0000 0.1
`define HS65_LS_AO311X4_E_F_Z_F_0000 0.1
`define HS65_LS_AO311X4_E_R_Z_R_0110 0.1
`define HS65_LS_AO311X4_E_F_Z_F_0110 0.1
`define HS65_LS_AO311X4_E_R_Z_R_0100 0.1
`define HS65_LS_AO311X4_E_F_Z_F_0100 0.1

module HS65_LS_AO311X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_AO311X4_A_R_Z_R_1100,`HS65_LS_AO311X4_A_F_Z_F_1100);
		(B +=> Z) = (`HS65_LS_AO311X4_B_R_Z_R_1100,`HS65_LS_AO311X4_B_F_Z_F_1100);
		(C +=> Z) = (`HS65_LS_AO311X4_C_R_Z_R_1100,`HS65_LS_AO311X4_C_F_Z_F_1100);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_1010,`HS65_LS_AO311X4_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_1000,`HS65_LS_AO311X4_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_1100,`HS65_LS_AO311X4_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_0010,`HS65_LS_AO311X4_D_F_Z_F_0010);
		if (!A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_0000,`HS65_LS_AO311X4_D_F_Z_F_0000);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_0110,`HS65_LS_AO311X4_D_F_Z_F_0110);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X4_D_R_Z_R_0100,`HS65_LS_AO311X4_D_F_Z_F_0100);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_1010,`HS65_LS_AO311X4_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_1000,`HS65_LS_AO311X4_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_1100,`HS65_LS_AO311X4_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_0010,`HS65_LS_AO311X4_E_F_Z_F_0010);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_0000,`HS65_LS_AO311X4_E_F_Z_F_0000);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_0110,`HS65_LS_AO311X4_E_F_Z_F_0110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X4_E_R_Z_R_0100,`HS65_LS_AO311X4_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO311X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO311X9_A_R_Z_R_1100 0.1
`define HS65_LS_AO311X9_A_F_Z_F_1100 0.1
`define HS65_LS_AO311X9_B_R_Z_R_1100 0.1
`define HS65_LS_AO311X9_B_F_Z_F_1100 0.1
`define HS65_LS_AO311X9_C_R_Z_R_1100 0.1
`define HS65_LS_AO311X9_C_F_Z_F_1100 0.1
`define HS65_LS_AO311X9_D_R_Z_R_1010 0.1
`define HS65_LS_AO311X9_D_F_Z_F_1010 0.1
`define HS65_LS_AO311X9_D_R_Z_R_1000 0.1
`define HS65_LS_AO311X9_D_F_Z_F_1000 0.1
`define HS65_LS_AO311X9_D_R_Z_R_1100 0.1
`define HS65_LS_AO311X9_D_F_Z_F_1100 0.1
`define HS65_LS_AO311X9_D_R_Z_R_0010 0.1
`define HS65_LS_AO311X9_D_F_Z_F_0010 0.1
`define HS65_LS_AO311X9_D_R_Z_R_0000 0.1
`define HS65_LS_AO311X9_D_F_Z_F_0000 0.1
`define HS65_LS_AO311X9_D_R_Z_R_0110 0.1
`define HS65_LS_AO311X9_D_F_Z_F_0110 0.1
`define HS65_LS_AO311X9_D_R_Z_R_0100 0.1
`define HS65_LS_AO311X9_D_F_Z_F_0100 0.1
`define HS65_LS_AO311X9_E_R_Z_R_1010 0.1
`define HS65_LS_AO311X9_E_F_Z_F_1010 0.1
`define HS65_LS_AO311X9_E_R_Z_R_1000 0.1
`define HS65_LS_AO311X9_E_F_Z_F_1000 0.1
`define HS65_LS_AO311X9_E_R_Z_R_1100 0.1
`define HS65_LS_AO311X9_E_F_Z_F_1100 0.1
`define HS65_LS_AO311X9_E_R_Z_R_0010 0.1
`define HS65_LS_AO311X9_E_F_Z_F_0010 0.1
`define HS65_LS_AO311X9_E_R_Z_R_0000 0.1
`define HS65_LS_AO311X9_E_F_Z_F_0000 0.1
`define HS65_LS_AO311X9_E_R_Z_R_0110 0.1
`define HS65_LS_AO311X9_E_F_Z_F_0110 0.1
`define HS65_LS_AO311X9_E_R_Z_R_0100 0.1
`define HS65_LS_AO311X9_E_F_Z_F_0100 0.1

module HS65_LS_AO311X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_AO311X9_A_R_Z_R_1100,`HS65_LS_AO311X9_A_F_Z_F_1100);
		(B +=> Z) = (`HS65_LS_AO311X9_B_R_Z_R_1100,`HS65_LS_AO311X9_B_F_Z_F_1100);
		(C +=> Z) = (`HS65_LS_AO311X9_C_R_Z_R_1100,`HS65_LS_AO311X9_C_F_Z_F_1100);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_1010,`HS65_LS_AO311X9_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_1000,`HS65_LS_AO311X9_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_1100,`HS65_LS_AO311X9_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_0010,`HS65_LS_AO311X9_D_F_Z_F_0010);
		if (!A && !B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_0000,`HS65_LS_AO311X9_D_F_Z_F_0000);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_0110,`HS65_LS_AO311X9_D_F_Z_F_0110);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_AO311X9_D_R_Z_R_0100,`HS65_LS_AO311X9_D_F_Z_F_0100);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_1010,`HS65_LS_AO311X9_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_1000,`HS65_LS_AO311X9_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_1100,`HS65_LS_AO311X9_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_0010,`HS65_LS_AO311X9_E_F_Z_F_0010);
		if (!A && !B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_0000,`HS65_LS_AO311X9_E_F_Z_F_0000);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_0110,`HS65_LS_AO311X9_E_F_Z_F_0110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_AO311X9_E_R_Z_R_0100,`HS65_LS_AO311X9_E_F_Z_F_0100);


	endspecify

endmodule // HS65_LS_AO311X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO312X18_A_R_Z_R_11000 0.1
`define HS65_LS_AO312X18_A_F_Z_F_11000 0.1
`define HS65_LS_AO312X18_A_R_Z_R_11100 0.1
`define HS65_LS_AO312X18_A_F_Z_F_11100 0.1
`define HS65_LS_AO312X18_A_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_A_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_B_R_Z_R_11000 0.1
`define HS65_LS_AO312X18_B_F_Z_F_11000 0.1
`define HS65_LS_AO312X18_B_R_Z_R_11100 0.1
`define HS65_LS_AO312X18_B_F_Z_F_11100 0.1
`define HS65_LS_AO312X18_B_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_B_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_C_R_Z_R_11000 0.1
`define HS65_LS_AO312X18_C_F_Z_F_11000 0.1
`define HS65_LS_AO312X18_C_R_Z_R_11100 0.1
`define HS65_LS_AO312X18_C_F_Z_F_11100 0.1
`define HS65_LS_AO312X18_C_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_C_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_D_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_D_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_D_R_Z_R_01010 0.1
`define HS65_LS_AO312X18_D_F_Z_F_01010 0.1
`define HS65_LS_AO312X18_D_R_Z_R_10010 0.1
`define HS65_LS_AO312X18_D_F_Z_F_10010 0.1
`define HS65_LS_AO312X18_D_R_Z_R_01110 0.1
`define HS65_LS_AO312X18_D_F_Z_F_01110 0.1
`define HS65_LS_AO312X18_D_R_Z_R_10110 0.1
`define HS65_LS_AO312X18_D_F_Z_F_10110 0.1
`define HS65_LS_AO312X18_D_R_Z_R_00110 0.1
`define HS65_LS_AO312X18_D_F_Z_F_00110 0.1
`define HS65_LS_AO312X18_D_R_Z_R_00010 0.1
`define HS65_LS_AO312X18_D_F_Z_F_00010 0.1
`define HS65_LS_AO312X18_E_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_E_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_E_R_Z_R_01010 0.1
`define HS65_LS_AO312X18_E_F_Z_F_01010 0.1
`define HS65_LS_AO312X18_E_R_Z_R_10010 0.1
`define HS65_LS_AO312X18_E_F_Z_F_10010 0.1
`define HS65_LS_AO312X18_E_R_Z_R_01110 0.1
`define HS65_LS_AO312X18_E_F_Z_F_01110 0.1
`define HS65_LS_AO312X18_E_R_Z_R_10110 0.1
`define HS65_LS_AO312X18_E_F_Z_F_10110 0.1
`define HS65_LS_AO312X18_E_R_Z_R_00110 0.1
`define HS65_LS_AO312X18_E_F_Z_F_00110 0.1
`define HS65_LS_AO312X18_E_R_Z_R_00010 0.1
`define HS65_LS_AO312X18_E_F_Z_F_00010 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01000 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01000 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01010 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01010 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01001 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01001 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01100 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01100 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00110 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00110 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00101 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00101 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00000 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00000 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00010 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00010 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00001 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00001 0.1
`define HS65_LS_AO312X18_F_R_Z_R_00100 0.1
`define HS65_LS_AO312X18_F_F_Z_F_00100 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01110 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01110 0.1
`define HS65_LS_AO312X18_F_R_Z_R_01101 0.1
`define HS65_LS_AO312X18_F_F_Z_F_01101 0.1
`define HS65_LS_AO312X18_F_R_Z_R_11000 0.1
`define HS65_LS_AO312X18_F_F_Z_F_11000 0.1
`define HS65_LS_AO312X18_F_R_Z_R_11010 0.1
`define HS65_LS_AO312X18_F_F_Z_F_11010 0.1
`define HS65_LS_AO312X18_F_R_Z_R_11001 0.1
`define HS65_LS_AO312X18_F_F_Z_F_11001 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10110 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10110 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10101 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10101 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10000 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10000 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10010 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10010 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10001 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10001 0.1
`define HS65_LS_AO312X18_F_R_Z_R_10100 0.1
`define HS65_LS_AO312X18_F_F_Z_F_10100 0.1

module HS65_LS_AO312X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL2, INTERNAL3, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X18_A_R_Z_R_11000,`HS65_LS_AO312X18_A_F_Z_F_11000);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X18_A_R_Z_R_11100,`HS65_LS_AO312X18_A_F_Z_F_11100);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO312X18_A_R_Z_R_11010,`HS65_LS_AO312X18_A_F_Z_F_11010);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X18_B_R_Z_R_11000,`HS65_LS_AO312X18_B_F_Z_F_11000);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X18_B_R_Z_R_11100,`HS65_LS_AO312X18_B_F_Z_F_11100);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO312X18_B_R_Z_R_11010,`HS65_LS_AO312X18_B_F_Z_F_11010);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X18_C_R_Z_R_11000,`HS65_LS_AO312X18_C_F_Z_F_11000);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X18_C_R_Z_R_11100,`HS65_LS_AO312X18_C_F_Z_F_11100);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO312X18_C_R_Z_R_11010,`HS65_LS_AO312X18_C_F_Z_F_11010);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_11010,`HS65_LS_AO312X18_D_F_Z_F_11010);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_01010,`HS65_LS_AO312X18_D_F_Z_F_01010);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_10010,`HS65_LS_AO312X18_D_F_Z_F_10010);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_01110,`HS65_LS_AO312X18_D_F_Z_F_01110);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_10110,`HS65_LS_AO312X18_D_F_Z_F_10110);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_00110,`HS65_LS_AO312X18_D_F_Z_F_00110);
		if (!A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X18_D_R_Z_R_00010,`HS65_LS_AO312X18_D_F_Z_F_00010);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_11010,`HS65_LS_AO312X18_E_F_Z_F_11010);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_01010,`HS65_LS_AO312X18_E_F_Z_F_01010);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_10010,`HS65_LS_AO312X18_E_F_Z_F_10010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_01110,`HS65_LS_AO312X18_E_F_Z_F_01110);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_10110,`HS65_LS_AO312X18_E_F_Z_F_10110);
		if (!A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_00110,`HS65_LS_AO312X18_E_F_Z_F_00110);
		if (!A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X18_E_R_Z_R_00010,`HS65_LS_AO312X18_E_F_Z_F_00010);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01000,`HS65_LS_AO312X18_F_F_Z_F_01000);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01010,`HS65_LS_AO312X18_F_F_Z_F_01010);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01001,`HS65_LS_AO312X18_F_F_Z_F_01001);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01100,`HS65_LS_AO312X18_F_F_Z_F_01100);
		if (!A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00110,`HS65_LS_AO312X18_F_F_Z_F_00110);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00101,`HS65_LS_AO312X18_F_F_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00000,`HS65_LS_AO312X18_F_F_Z_F_00000);
		if (!A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00010,`HS65_LS_AO312X18_F_F_Z_F_00010);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00001,`HS65_LS_AO312X18_F_F_Z_F_00001);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_00100,`HS65_LS_AO312X18_F_F_Z_F_00100);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01110,`HS65_LS_AO312X18_F_F_Z_F_01110);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_01101,`HS65_LS_AO312X18_F_F_Z_F_01101);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_11000,`HS65_LS_AO312X18_F_F_Z_F_11000);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_11010,`HS65_LS_AO312X18_F_F_Z_F_11010);
		if (A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_11001,`HS65_LS_AO312X18_F_F_Z_F_11001);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10110,`HS65_LS_AO312X18_F_F_Z_F_10110);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10101,`HS65_LS_AO312X18_F_F_Z_F_10101);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10000,`HS65_LS_AO312X18_F_F_Z_F_10000);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10010,`HS65_LS_AO312X18_F_F_Z_F_10010);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10001,`HS65_LS_AO312X18_F_F_Z_F_10001);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X18_F_R_Z_R_10100,`HS65_LS_AO312X18_F_F_Z_F_10100);


	endspecify

endmodule // HS65_LS_AO312X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO312X27_A_R_Z_R_11000 0.1
`define HS65_LS_AO312X27_A_F_Z_F_11000 0.1
`define HS65_LS_AO312X27_A_R_Z_R_11100 0.1
`define HS65_LS_AO312X27_A_F_Z_F_11100 0.1
`define HS65_LS_AO312X27_A_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_A_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_B_R_Z_R_11000 0.1
`define HS65_LS_AO312X27_B_F_Z_F_11000 0.1
`define HS65_LS_AO312X27_B_R_Z_R_11100 0.1
`define HS65_LS_AO312X27_B_F_Z_F_11100 0.1
`define HS65_LS_AO312X27_B_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_B_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_C_R_Z_R_11000 0.1
`define HS65_LS_AO312X27_C_F_Z_F_11000 0.1
`define HS65_LS_AO312X27_C_R_Z_R_11100 0.1
`define HS65_LS_AO312X27_C_F_Z_F_11100 0.1
`define HS65_LS_AO312X27_C_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_C_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_D_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_D_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_D_R_Z_R_01010 0.1
`define HS65_LS_AO312X27_D_F_Z_F_01010 0.1
`define HS65_LS_AO312X27_D_R_Z_R_10010 0.1
`define HS65_LS_AO312X27_D_F_Z_F_10010 0.1
`define HS65_LS_AO312X27_D_R_Z_R_01110 0.1
`define HS65_LS_AO312X27_D_F_Z_F_01110 0.1
`define HS65_LS_AO312X27_D_R_Z_R_10110 0.1
`define HS65_LS_AO312X27_D_F_Z_F_10110 0.1
`define HS65_LS_AO312X27_D_R_Z_R_00110 0.1
`define HS65_LS_AO312X27_D_F_Z_F_00110 0.1
`define HS65_LS_AO312X27_D_R_Z_R_00010 0.1
`define HS65_LS_AO312X27_D_F_Z_F_00010 0.1
`define HS65_LS_AO312X27_E_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_E_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_E_R_Z_R_01010 0.1
`define HS65_LS_AO312X27_E_F_Z_F_01010 0.1
`define HS65_LS_AO312X27_E_R_Z_R_10010 0.1
`define HS65_LS_AO312X27_E_F_Z_F_10010 0.1
`define HS65_LS_AO312X27_E_R_Z_R_01110 0.1
`define HS65_LS_AO312X27_E_F_Z_F_01110 0.1
`define HS65_LS_AO312X27_E_R_Z_R_10110 0.1
`define HS65_LS_AO312X27_E_F_Z_F_10110 0.1
`define HS65_LS_AO312X27_E_R_Z_R_00110 0.1
`define HS65_LS_AO312X27_E_F_Z_F_00110 0.1
`define HS65_LS_AO312X27_E_R_Z_R_00010 0.1
`define HS65_LS_AO312X27_E_F_Z_F_00010 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01000 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01000 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01010 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01010 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01001 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01001 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01100 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01100 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00110 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00110 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00101 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00101 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00000 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00000 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00010 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00010 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00001 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00001 0.1
`define HS65_LS_AO312X27_F_R_Z_R_00100 0.1
`define HS65_LS_AO312X27_F_F_Z_F_00100 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01110 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01110 0.1
`define HS65_LS_AO312X27_F_R_Z_R_01101 0.1
`define HS65_LS_AO312X27_F_F_Z_F_01101 0.1
`define HS65_LS_AO312X27_F_R_Z_R_11000 0.1
`define HS65_LS_AO312X27_F_F_Z_F_11000 0.1
`define HS65_LS_AO312X27_F_R_Z_R_11010 0.1
`define HS65_LS_AO312X27_F_F_Z_F_11010 0.1
`define HS65_LS_AO312X27_F_R_Z_R_11001 0.1
`define HS65_LS_AO312X27_F_F_Z_F_11001 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10110 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10110 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10101 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10101 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10000 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10000 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10010 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10010 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10001 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10001 0.1
`define HS65_LS_AO312X27_F_R_Z_R_10100 0.1
`define HS65_LS_AO312X27_F_F_Z_F_10100 0.1

module HS65_LS_AO312X27 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL2, INTERNAL3, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X27_A_R_Z_R_11000,`HS65_LS_AO312X27_A_F_Z_F_11000);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X27_A_R_Z_R_11100,`HS65_LS_AO312X27_A_F_Z_F_11100);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO312X27_A_R_Z_R_11010,`HS65_LS_AO312X27_A_F_Z_F_11010);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X27_B_R_Z_R_11000,`HS65_LS_AO312X27_B_F_Z_F_11000);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X27_B_R_Z_R_11100,`HS65_LS_AO312X27_B_F_Z_F_11100);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO312X27_B_R_Z_R_11010,`HS65_LS_AO312X27_B_F_Z_F_11010);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X27_C_R_Z_R_11000,`HS65_LS_AO312X27_C_F_Z_F_11000);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X27_C_R_Z_R_11100,`HS65_LS_AO312X27_C_F_Z_F_11100);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO312X27_C_R_Z_R_11010,`HS65_LS_AO312X27_C_F_Z_F_11010);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_11010,`HS65_LS_AO312X27_D_F_Z_F_11010);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_01010,`HS65_LS_AO312X27_D_F_Z_F_01010);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_10010,`HS65_LS_AO312X27_D_F_Z_F_10010);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_01110,`HS65_LS_AO312X27_D_F_Z_F_01110);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_10110,`HS65_LS_AO312X27_D_F_Z_F_10110);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_00110,`HS65_LS_AO312X27_D_F_Z_F_00110);
		if (!A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X27_D_R_Z_R_00010,`HS65_LS_AO312X27_D_F_Z_F_00010);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_11010,`HS65_LS_AO312X27_E_F_Z_F_11010);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_01010,`HS65_LS_AO312X27_E_F_Z_F_01010);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_10010,`HS65_LS_AO312X27_E_F_Z_F_10010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_01110,`HS65_LS_AO312X27_E_F_Z_F_01110);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_10110,`HS65_LS_AO312X27_E_F_Z_F_10110);
		if (!A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_00110,`HS65_LS_AO312X27_E_F_Z_F_00110);
		if (!A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X27_E_R_Z_R_00010,`HS65_LS_AO312X27_E_F_Z_F_00010);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01000,`HS65_LS_AO312X27_F_F_Z_F_01000);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01010,`HS65_LS_AO312X27_F_F_Z_F_01010);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01001,`HS65_LS_AO312X27_F_F_Z_F_01001);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01100,`HS65_LS_AO312X27_F_F_Z_F_01100);
		if (!A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00110,`HS65_LS_AO312X27_F_F_Z_F_00110);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00101,`HS65_LS_AO312X27_F_F_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00000,`HS65_LS_AO312X27_F_F_Z_F_00000);
		if (!A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00010,`HS65_LS_AO312X27_F_F_Z_F_00010);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00001,`HS65_LS_AO312X27_F_F_Z_F_00001);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_00100,`HS65_LS_AO312X27_F_F_Z_F_00100);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01110,`HS65_LS_AO312X27_F_F_Z_F_01110);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_01101,`HS65_LS_AO312X27_F_F_Z_F_01101);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_11000,`HS65_LS_AO312X27_F_F_Z_F_11000);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_11010,`HS65_LS_AO312X27_F_F_Z_F_11010);
		if (A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_11001,`HS65_LS_AO312X27_F_F_Z_F_11001);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10110,`HS65_LS_AO312X27_F_F_Z_F_10110);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10101,`HS65_LS_AO312X27_F_F_Z_F_10101);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10000,`HS65_LS_AO312X27_F_F_Z_F_10000);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10010,`HS65_LS_AO312X27_F_F_Z_F_10010);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10001,`HS65_LS_AO312X27_F_F_Z_F_10001);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X27_F_R_Z_R_10100,`HS65_LS_AO312X27_F_F_Z_F_10100);


	endspecify

endmodule // HS65_LS_AO312X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO312X35_A_R_Z_R_11000 0.1
`define HS65_LS_AO312X35_A_F_Z_F_11000 0.1
`define HS65_LS_AO312X35_A_R_Z_R_11100 0.1
`define HS65_LS_AO312X35_A_F_Z_F_11100 0.1
`define HS65_LS_AO312X35_A_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_A_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_B_R_Z_R_11000 0.1
`define HS65_LS_AO312X35_B_F_Z_F_11000 0.1
`define HS65_LS_AO312X35_B_R_Z_R_11100 0.1
`define HS65_LS_AO312X35_B_F_Z_F_11100 0.1
`define HS65_LS_AO312X35_B_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_B_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_C_R_Z_R_11000 0.1
`define HS65_LS_AO312X35_C_F_Z_F_11000 0.1
`define HS65_LS_AO312X35_C_R_Z_R_11100 0.1
`define HS65_LS_AO312X35_C_F_Z_F_11100 0.1
`define HS65_LS_AO312X35_C_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_C_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_D_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_D_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_D_R_Z_R_01010 0.1
`define HS65_LS_AO312X35_D_F_Z_F_01010 0.1
`define HS65_LS_AO312X35_D_R_Z_R_10010 0.1
`define HS65_LS_AO312X35_D_F_Z_F_10010 0.1
`define HS65_LS_AO312X35_D_R_Z_R_01110 0.1
`define HS65_LS_AO312X35_D_F_Z_F_01110 0.1
`define HS65_LS_AO312X35_D_R_Z_R_10110 0.1
`define HS65_LS_AO312X35_D_F_Z_F_10110 0.1
`define HS65_LS_AO312X35_D_R_Z_R_00110 0.1
`define HS65_LS_AO312X35_D_F_Z_F_00110 0.1
`define HS65_LS_AO312X35_D_R_Z_R_00010 0.1
`define HS65_LS_AO312X35_D_F_Z_F_00010 0.1
`define HS65_LS_AO312X35_E_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_E_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_E_R_Z_R_01010 0.1
`define HS65_LS_AO312X35_E_F_Z_F_01010 0.1
`define HS65_LS_AO312X35_E_R_Z_R_10010 0.1
`define HS65_LS_AO312X35_E_F_Z_F_10010 0.1
`define HS65_LS_AO312X35_E_R_Z_R_01110 0.1
`define HS65_LS_AO312X35_E_F_Z_F_01110 0.1
`define HS65_LS_AO312X35_E_R_Z_R_10110 0.1
`define HS65_LS_AO312X35_E_F_Z_F_10110 0.1
`define HS65_LS_AO312X35_E_R_Z_R_00110 0.1
`define HS65_LS_AO312X35_E_F_Z_F_00110 0.1
`define HS65_LS_AO312X35_E_R_Z_R_00010 0.1
`define HS65_LS_AO312X35_E_F_Z_F_00010 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01000 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01000 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01010 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01010 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01001 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01001 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01100 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01100 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00110 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00110 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00101 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00101 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00000 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00000 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00010 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00010 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00001 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00001 0.1
`define HS65_LS_AO312X35_F_R_Z_R_00100 0.1
`define HS65_LS_AO312X35_F_F_Z_F_00100 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01110 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01110 0.1
`define HS65_LS_AO312X35_F_R_Z_R_01101 0.1
`define HS65_LS_AO312X35_F_F_Z_F_01101 0.1
`define HS65_LS_AO312X35_F_R_Z_R_11000 0.1
`define HS65_LS_AO312X35_F_F_Z_F_11000 0.1
`define HS65_LS_AO312X35_F_R_Z_R_11010 0.1
`define HS65_LS_AO312X35_F_F_Z_F_11010 0.1
`define HS65_LS_AO312X35_F_R_Z_R_11001 0.1
`define HS65_LS_AO312X35_F_F_Z_F_11001 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10110 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10110 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10101 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10101 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10000 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10000 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10010 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10010 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10001 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10001 0.1
`define HS65_LS_AO312X35_F_R_Z_R_10100 0.1
`define HS65_LS_AO312X35_F_F_Z_F_10100 0.1

module HS65_LS_AO312X35 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL2, INTERNAL3, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X35_A_R_Z_R_11000,`HS65_LS_AO312X35_A_F_Z_F_11000);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X35_A_R_Z_R_11100,`HS65_LS_AO312X35_A_F_Z_F_11100);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO312X35_A_R_Z_R_11010,`HS65_LS_AO312X35_A_F_Z_F_11010);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X35_B_R_Z_R_11000,`HS65_LS_AO312X35_B_F_Z_F_11000);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X35_B_R_Z_R_11100,`HS65_LS_AO312X35_B_F_Z_F_11100);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO312X35_B_R_Z_R_11010,`HS65_LS_AO312X35_B_F_Z_F_11010);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X35_C_R_Z_R_11000,`HS65_LS_AO312X35_C_F_Z_F_11000);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X35_C_R_Z_R_11100,`HS65_LS_AO312X35_C_F_Z_F_11100);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO312X35_C_R_Z_R_11010,`HS65_LS_AO312X35_C_F_Z_F_11010);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_11010,`HS65_LS_AO312X35_D_F_Z_F_11010);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_01010,`HS65_LS_AO312X35_D_F_Z_F_01010);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_10010,`HS65_LS_AO312X35_D_F_Z_F_10010);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_01110,`HS65_LS_AO312X35_D_F_Z_F_01110);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_10110,`HS65_LS_AO312X35_D_F_Z_F_10110);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_00110,`HS65_LS_AO312X35_D_F_Z_F_00110);
		if (!A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X35_D_R_Z_R_00010,`HS65_LS_AO312X35_D_F_Z_F_00010);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_11010,`HS65_LS_AO312X35_E_F_Z_F_11010);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_01010,`HS65_LS_AO312X35_E_F_Z_F_01010);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_10010,`HS65_LS_AO312X35_E_F_Z_F_10010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_01110,`HS65_LS_AO312X35_E_F_Z_F_01110);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_10110,`HS65_LS_AO312X35_E_F_Z_F_10110);
		if (!A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_00110,`HS65_LS_AO312X35_E_F_Z_F_00110);
		if (!A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X35_E_R_Z_R_00010,`HS65_LS_AO312X35_E_F_Z_F_00010);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01000,`HS65_LS_AO312X35_F_F_Z_F_01000);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01010,`HS65_LS_AO312X35_F_F_Z_F_01010);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01001,`HS65_LS_AO312X35_F_F_Z_F_01001);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01100,`HS65_LS_AO312X35_F_F_Z_F_01100);
		if (!A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00110,`HS65_LS_AO312X35_F_F_Z_F_00110);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00101,`HS65_LS_AO312X35_F_F_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00000,`HS65_LS_AO312X35_F_F_Z_F_00000);
		if (!A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00010,`HS65_LS_AO312X35_F_F_Z_F_00010);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00001,`HS65_LS_AO312X35_F_F_Z_F_00001);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_00100,`HS65_LS_AO312X35_F_F_Z_F_00100);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01110,`HS65_LS_AO312X35_F_F_Z_F_01110);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_01101,`HS65_LS_AO312X35_F_F_Z_F_01101);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_11000,`HS65_LS_AO312X35_F_F_Z_F_11000);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_11010,`HS65_LS_AO312X35_F_F_Z_F_11010);
		if (A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_11001,`HS65_LS_AO312X35_F_F_Z_F_11001);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10110,`HS65_LS_AO312X35_F_F_Z_F_10110);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10101,`HS65_LS_AO312X35_F_F_Z_F_10101);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10000,`HS65_LS_AO312X35_F_F_Z_F_10000);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10010,`HS65_LS_AO312X35_F_F_Z_F_10010);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10001,`HS65_LS_AO312X35_F_F_Z_F_10001);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X35_F_R_Z_R_10100,`HS65_LS_AO312X35_F_F_Z_F_10100);


	endspecify

endmodule // HS65_LS_AO312X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO312X4_A_R_Z_R_11000 0.1
`define HS65_LS_AO312X4_A_F_Z_F_11000 0.1
`define HS65_LS_AO312X4_A_R_Z_R_11100 0.1
`define HS65_LS_AO312X4_A_F_Z_F_11100 0.1
`define HS65_LS_AO312X4_A_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_A_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_B_R_Z_R_11000 0.1
`define HS65_LS_AO312X4_B_F_Z_F_11000 0.1
`define HS65_LS_AO312X4_B_R_Z_R_11100 0.1
`define HS65_LS_AO312X4_B_F_Z_F_11100 0.1
`define HS65_LS_AO312X4_B_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_B_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_C_R_Z_R_11000 0.1
`define HS65_LS_AO312X4_C_F_Z_F_11000 0.1
`define HS65_LS_AO312X4_C_R_Z_R_11100 0.1
`define HS65_LS_AO312X4_C_F_Z_F_11100 0.1
`define HS65_LS_AO312X4_C_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_C_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_D_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_D_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_D_R_Z_R_01010 0.1
`define HS65_LS_AO312X4_D_F_Z_F_01010 0.1
`define HS65_LS_AO312X4_D_R_Z_R_10010 0.1
`define HS65_LS_AO312X4_D_F_Z_F_10010 0.1
`define HS65_LS_AO312X4_D_R_Z_R_01110 0.1
`define HS65_LS_AO312X4_D_F_Z_F_01110 0.1
`define HS65_LS_AO312X4_D_R_Z_R_10110 0.1
`define HS65_LS_AO312X4_D_F_Z_F_10110 0.1
`define HS65_LS_AO312X4_D_R_Z_R_00110 0.1
`define HS65_LS_AO312X4_D_F_Z_F_00110 0.1
`define HS65_LS_AO312X4_D_R_Z_R_00010 0.1
`define HS65_LS_AO312X4_D_F_Z_F_00010 0.1
`define HS65_LS_AO312X4_E_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_E_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_E_R_Z_R_01010 0.1
`define HS65_LS_AO312X4_E_F_Z_F_01010 0.1
`define HS65_LS_AO312X4_E_R_Z_R_10010 0.1
`define HS65_LS_AO312X4_E_F_Z_F_10010 0.1
`define HS65_LS_AO312X4_E_R_Z_R_01110 0.1
`define HS65_LS_AO312X4_E_F_Z_F_01110 0.1
`define HS65_LS_AO312X4_E_R_Z_R_10110 0.1
`define HS65_LS_AO312X4_E_F_Z_F_10110 0.1
`define HS65_LS_AO312X4_E_R_Z_R_00110 0.1
`define HS65_LS_AO312X4_E_F_Z_F_00110 0.1
`define HS65_LS_AO312X4_E_R_Z_R_00010 0.1
`define HS65_LS_AO312X4_E_F_Z_F_00010 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01000 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01000 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01010 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01010 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01001 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01001 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01100 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01100 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00110 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00110 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00101 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00101 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00000 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00000 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00010 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00010 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00001 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00001 0.1
`define HS65_LS_AO312X4_F_R_Z_R_00100 0.1
`define HS65_LS_AO312X4_F_F_Z_F_00100 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01110 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01110 0.1
`define HS65_LS_AO312X4_F_R_Z_R_01101 0.1
`define HS65_LS_AO312X4_F_F_Z_F_01101 0.1
`define HS65_LS_AO312X4_F_R_Z_R_11000 0.1
`define HS65_LS_AO312X4_F_F_Z_F_11000 0.1
`define HS65_LS_AO312X4_F_R_Z_R_11010 0.1
`define HS65_LS_AO312X4_F_F_Z_F_11010 0.1
`define HS65_LS_AO312X4_F_R_Z_R_11001 0.1
`define HS65_LS_AO312X4_F_F_Z_F_11001 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10110 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10110 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10101 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10101 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10000 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10000 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10010 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10010 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10001 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10001 0.1
`define HS65_LS_AO312X4_F_R_Z_R_10100 0.1
`define HS65_LS_AO312X4_F_F_Z_F_10100 0.1

module HS65_LS_AO312X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL2, INTERNAL3, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X4_A_R_Z_R_11000,`HS65_LS_AO312X4_A_F_Z_F_11000);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X4_A_R_Z_R_11100,`HS65_LS_AO312X4_A_F_Z_F_11100);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO312X4_A_R_Z_R_11010,`HS65_LS_AO312X4_A_F_Z_F_11010);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X4_B_R_Z_R_11000,`HS65_LS_AO312X4_B_F_Z_F_11000);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X4_B_R_Z_R_11100,`HS65_LS_AO312X4_B_F_Z_F_11100);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO312X4_B_R_Z_R_11010,`HS65_LS_AO312X4_B_F_Z_F_11010);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X4_C_R_Z_R_11000,`HS65_LS_AO312X4_C_F_Z_F_11000);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X4_C_R_Z_R_11100,`HS65_LS_AO312X4_C_F_Z_F_11100);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO312X4_C_R_Z_R_11010,`HS65_LS_AO312X4_C_F_Z_F_11010);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_11010,`HS65_LS_AO312X4_D_F_Z_F_11010);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_01010,`HS65_LS_AO312X4_D_F_Z_F_01010);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_10010,`HS65_LS_AO312X4_D_F_Z_F_10010);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_01110,`HS65_LS_AO312X4_D_F_Z_F_01110);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_10110,`HS65_LS_AO312X4_D_F_Z_F_10110);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_00110,`HS65_LS_AO312X4_D_F_Z_F_00110);
		if (!A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X4_D_R_Z_R_00010,`HS65_LS_AO312X4_D_F_Z_F_00010);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_11010,`HS65_LS_AO312X4_E_F_Z_F_11010);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_01010,`HS65_LS_AO312X4_E_F_Z_F_01010);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_10010,`HS65_LS_AO312X4_E_F_Z_F_10010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_01110,`HS65_LS_AO312X4_E_F_Z_F_01110);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_10110,`HS65_LS_AO312X4_E_F_Z_F_10110);
		if (!A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_00110,`HS65_LS_AO312X4_E_F_Z_F_00110);
		if (!A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X4_E_R_Z_R_00010,`HS65_LS_AO312X4_E_F_Z_F_00010);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01000,`HS65_LS_AO312X4_F_F_Z_F_01000);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01010,`HS65_LS_AO312X4_F_F_Z_F_01010);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01001,`HS65_LS_AO312X4_F_F_Z_F_01001);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01100,`HS65_LS_AO312X4_F_F_Z_F_01100);
		if (!A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00110,`HS65_LS_AO312X4_F_F_Z_F_00110);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00101,`HS65_LS_AO312X4_F_F_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00000,`HS65_LS_AO312X4_F_F_Z_F_00000);
		if (!A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00010,`HS65_LS_AO312X4_F_F_Z_F_00010);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00001,`HS65_LS_AO312X4_F_F_Z_F_00001);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_00100,`HS65_LS_AO312X4_F_F_Z_F_00100);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01110,`HS65_LS_AO312X4_F_F_Z_F_01110);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_01101,`HS65_LS_AO312X4_F_F_Z_F_01101);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_11000,`HS65_LS_AO312X4_F_F_Z_F_11000);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_11010,`HS65_LS_AO312X4_F_F_Z_F_11010);
		if (A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_11001,`HS65_LS_AO312X4_F_F_Z_F_11001);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10110,`HS65_LS_AO312X4_F_F_Z_F_10110);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10101,`HS65_LS_AO312X4_F_F_Z_F_10101);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10000,`HS65_LS_AO312X4_F_F_Z_F_10000);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10010,`HS65_LS_AO312X4_F_F_Z_F_10010);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10001,`HS65_LS_AO312X4_F_F_Z_F_10001);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X4_F_R_Z_R_10100,`HS65_LS_AO312X4_F_F_Z_F_10100);


	endspecify

endmodule // HS65_LS_AO312X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO312X9_A_R_Z_R_11000 0.1
`define HS65_LS_AO312X9_A_F_Z_F_11000 0.1
`define HS65_LS_AO312X9_A_R_Z_R_11100 0.1
`define HS65_LS_AO312X9_A_F_Z_F_11100 0.1
`define HS65_LS_AO312X9_A_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_A_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_B_R_Z_R_11000 0.1
`define HS65_LS_AO312X9_B_F_Z_F_11000 0.1
`define HS65_LS_AO312X9_B_R_Z_R_11100 0.1
`define HS65_LS_AO312X9_B_F_Z_F_11100 0.1
`define HS65_LS_AO312X9_B_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_B_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_C_R_Z_R_11000 0.1
`define HS65_LS_AO312X9_C_F_Z_F_11000 0.1
`define HS65_LS_AO312X9_C_R_Z_R_11100 0.1
`define HS65_LS_AO312X9_C_F_Z_F_11100 0.1
`define HS65_LS_AO312X9_C_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_C_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_D_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_D_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_D_R_Z_R_01010 0.1
`define HS65_LS_AO312X9_D_F_Z_F_01010 0.1
`define HS65_LS_AO312X9_D_R_Z_R_10010 0.1
`define HS65_LS_AO312X9_D_F_Z_F_10010 0.1
`define HS65_LS_AO312X9_D_R_Z_R_01110 0.1
`define HS65_LS_AO312X9_D_F_Z_F_01110 0.1
`define HS65_LS_AO312X9_D_R_Z_R_10110 0.1
`define HS65_LS_AO312X9_D_F_Z_F_10110 0.1
`define HS65_LS_AO312X9_D_R_Z_R_00110 0.1
`define HS65_LS_AO312X9_D_F_Z_F_00110 0.1
`define HS65_LS_AO312X9_D_R_Z_R_00010 0.1
`define HS65_LS_AO312X9_D_F_Z_F_00010 0.1
`define HS65_LS_AO312X9_E_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_E_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_E_R_Z_R_01010 0.1
`define HS65_LS_AO312X9_E_F_Z_F_01010 0.1
`define HS65_LS_AO312X9_E_R_Z_R_10010 0.1
`define HS65_LS_AO312X9_E_F_Z_F_10010 0.1
`define HS65_LS_AO312X9_E_R_Z_R_01110 0.1
`define HS65_LS_AO312X9_E_F_Z_F_01110 0.1
`define HS65_LS_AO312X9_E_R_Z_R_10110 0.1
`define HS65_LS_AO312X9_E_F_Z_F_10110 0.1
`define HS65_LS_AO312X9_E_R_Z_R_00110 0.1
`define HS65_LS_AO312X9_E_F_Z_F_00110 0.1
`define HS65_LS_AO312X9_E_R_Z_R_00010 0.1
`define HS65_LS_AO312X9_E_F_Z_F_00010 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01000 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01000 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01010 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01010 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01001 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01001 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01100 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01100 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00110 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00110 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00101 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00101 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00000 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00000 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00010 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00010 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00001 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00001 0.1
`define HS65_LS_AO312X9_F_R_Z_R_00100 0.1
`define HS65_LS_AO312X9_F_F_Z_F_00100 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01110 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01110 0.1
`define HS65_LS_AO312X9_F_R_Z_R_01101 0.1
`define HS65_LS_AO312X9_F_F_Z_F_01101 0.1
`define HS65_LS_AO312X9_F_R_Z_R_11000 0.1
`define HS65_LS_AO312X9_F_F_Z_F_11000 0.1
`define HS65_LS_AO312X9_F_R_Z_R_11010 0.1
`define HS65_LS_AO312X9_F_F_Z_F_11010 0.1
`define HS65_LS_AO312X9_F_R_Z_R_11001 0.1
`define HS65_LS_AO312X9_F_F_Z_F_11001 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10110 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10110 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10101 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10101 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10000 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10000 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10010 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10010 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10001 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10001 0.1
`define HS65_LS_AO312X9_F_R_Z_R_10100 0.1
`define HS65_LS_AO312X9_F_F_Z_F_10100 0.1

module HS65_LS_AO312X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL2, INTERNAL3, F) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X9_A_R_Z_R_11000,`HS65_LS_AO312X9_A_F_Z_F_11000);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO312X9_A_R_Z_R_11100,`HS65_LS_AO312X9_A_F_Z_F_11100);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO312X9_A_R_Z_R_11010,`HS65_LS_AO312X9_A_F_Z_F_11010);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X9_B_R_Z_R_11000,`HS65_LS_AO312X9_B_F_Z_F_11000);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO312X9_B_R_Z_R_11100,`HS65_LS_AO312X9_B_F_Z_F_11100);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO312X9_B_R_Z_R_11010,`HS65_LS_AO312X9_B_F_Z_F_11010);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X9_C_R_Z_R_11000,`HS65_LS_AO312X9_C_F_Z_F_11000);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO312X9_C_R_Z_R_11100,`HS65_LS_AO312X9_C_F_Z_F_11100);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO312X9_C_R_Z_R_11010,`HS65_LS_AO312X9_C_F_Z_F_11010);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_11010,`HS65_LS_AO312X9_D_F_Z_F_11010);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_01010,`HS65_LS_AO312X9_D_F_Z_F_01010);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_10010,`HS65_LS_AO312X9_D_F_Z_F_10010);
		if (!A && B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_01110,`HS65_LS_AO312X9_D_F_Z_F_01110);
		if (A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_10110,`HS65_LS_AO312X9_D_F_Z_F_10110);
		if (!A && !B && C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_00110,`HS65_LS_AO312X9_D_F_Z_F_00110);
		if (!A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_AO312X9_D_R_Z_R_00010,`HS65_LS_AO312X9_D_F_Z_F_00010);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_11010,`HS65_LS_AO312X9_E_F_Z_F_11010);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_01010,`HS65_LS_AO312X9_E_F_Z_F_01010);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_10010,`HS65_LS_AO312X9_E_F_Z_F_10010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_01110,`HS65_LS_AO312X9_E_F_Z_F_01110);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_10110,`HS65_LS_AO312X9_E_F_Z_F_10110);
		if (!A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_00110,`HS65_LS_AO312X9_E_F_Z_F_00110);
		if (!A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_AO312X9_E_R_Z_R_00010,`HS65_LS_AO312X9_E_F_Z_F_00010);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01000,`HS65_LS_AO312X9_F_F_Z_F_01000);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01010,`HS65_LS_AO312X9_F_F_Z_F_01010);
		if (!A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01001,`HS65_LS_AO312X9_F_F_Z_F_01001);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01100,`HS65_LS_AO312X9_F_F_Z_F_01100);
		if (!A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00110,`HS65_LS_AO312X9_F_F_Z_F_00110);
		if (!A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00101,`HS65_LS_AO312X9_F_F_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00000,`HS65_LS_AO312X9_F_F_Z_F_00000);
		if (!A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00010,`HS65_LS_AO312X9_F_F_Z_F_00010);
		if (!A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00001,`HS65_LS_AO312X9_F_F_Z_F_00001);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_00100,`HS65_LS_AO312X9_F_F_Z_F_00100);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01110,`HS65_LS_AO312X9_F_F_Z_F_01110);
		if (!A && B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_01101,`HS65_LS_AO312X9_F_F_Z_F_01101);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_11000,`HS65_LS_AO312X9_F_F_Z_F_11000);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_11010,`HS65_LS_AO312X9_F_F_Z_F_11010);
		if (A && B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_11001,`HS65_LS_AO312X9_F_F_Z_F_11001);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10110,`HS65_LS_AO312X9_F_F_Z_F_10110);
		if (A && !B && C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10101,`HS65_LS_AO312X9_F_F_Z_F_10101);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10000,`HS65_LS_AO312X9_F_F_Z_F_10000);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10010,`HS65_LS_AO312X9_F_F_Z_F_10010);
		if (A && !B && !C && !D && E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10001,`HS65_LS_AO312X9_F_F_Z_F_10001);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_AO312X9_F_R_Z_R_10100,`HS65_LS_AO312X9_F_F_Z_F_10100);


	endspecify

endmodule // HS65_LS_AO312X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO31X18_A_R_Z_R_110 0.1
`define HS65_LS_AO31X18_A_F_Z_F_110 0.1
`define HS65_LS_AO31X18_B_R_Z_R_110 0.1
`define HS65_LS_AO31X18_B_F_Z_F_110 0.1
`define HS65_LS_AO31X18_C_R_Z_R_110 0.1
`define HS65_LS_AO31X18_C_F_Z_F_110 0.1
`define HS65_LS_AO31X18_D_R_Z_R_110 0.1
`define HS65_LS_AO31X18_D_F_Z_F_110 0.1
`define HS65_LS_AO31X18_D_R_Z_R_101 0.1
`define HS65_LS_AO31X18_D_F_Z_F_101 0.1
`define HS65_LS_AO31X18_D_R_Z_R_011 0.1
`define HS65_LS_AO31X18_D_F_Z_F_011 0.1
`define HS65_LS_AO31X18_D_R_Z_R_000 0.1
`define HS65_LS_AO31X18_D_F_Z_F_000 0.1
`define HS65_LS_AO31X18_D_R_Z_R_100 0.1
`define HS65_LS_AO31X18_D_F_Z_F_100 0.1
`define HS65_LS_AO31X18_D_R_Z_R_010 0.1
`define HS65_LS_AO31X18_D_F_Z_F_010 0.1
`define HS65_LS_AO31X18_D_R_Z_R_001 0.1
`define HS65_LS_AO31X18_D_F_Z_F_001 0.1

module HS65_LS_AO31X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO31X18_A_R_Z_R_110,`HS65_LS_AO31X18_A_F_Z_F_110);
		(B +=> Z) = (`HS65_LS_AO31X18_B_R_Z_R_110,`HS65_LS_AO31X18_B_F_Z_F_110);
		(C +=> Z) = (`HS65_LS_AO31X18_C_R_Z_R_110,`HS65_LS_AO31X18_C_F_Z_F_110);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_110,`HS65_LS_AO31X18_D_F_Z_F_110);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_101,`HS65_LS_AO31X18_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_011,`HS65_LS_AO31X18_D_F_Z_F_011);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_000,`HS65_LS_AO31X18_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_100,`HS65_LS_AO31X18_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_010,`HS65_LS_AO31X18_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO31X18_D_R_Z_R_001,`HS65_LS_AO31X18_D_F_Z_F_001);


	endspecify

endmodule // HS65_LS_AO31X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO31X27_A_R_Z_R_110 0.1
`define HS65_LS_AO31X27_A_F_Z_F_110 0.1
`define HS65_LS_AO31X27_B_R_Z_R_110 0.1
`define HS65_LS_AO31X27_B_F_Z_F_110 0.1
`define HS65_LS_AO31X27_C_R_Z_R_110 0.1
`define HS65_LS_AO31X27_C_F_Z_F_110 0.1
`define HS65_LS_AO31X27_D_R_Z_R_110 0.1
`define HS65_LS_AO31X27_D_F_Z_F_110 0.1
`define HS65_LS_AO31X27_D_R_Z_R_101 0.1
`define HS65_LS_AO31X27_D_F_Z_F_101 0.1
`define HS65_LS_AO31X27_D_R_Z_R_011 0.1
`define HS65_LS_AO31X27_D_F_Z_F_011 0.1
`define HS65_LS_AO31X27_D_R_Z_R_000 0.1
`define HS65_LS_AO31X27_D_F_Z_F_000 0.1
`define HS65_LS_AO31X27_D_R_Z_R_100 0.1
`define HS65_LS_AO31X27_D_F_Z_F_100 0.1
`define HS65_LS_AO31X27_D_R_Z_R_010 0.1
`define HS65_LS_AO31X27_D_F_Z_F_010 0.1
`define HS65_LS_AO31X27_D_R_Z_R_001 0.1
`define HS65_LS_AO31X27_D_F_Z_F_001 0.1

module HS65_LS_AO31X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO31X27_A_R_Z_R_110,`HS65_LS_AO31X27_A_F_Z_F_110);
		(B +=> Z) = (`HS65_LS_AO31X27_B_R_Z_R_110,`HS65_LS_AO31X27_B_F_Z_F_110);
		(C +=> Z) = (`HS65_LS_AO31X27_C_R_Z_R_110,`HS65_LS_AO31X27_C_F_Z_F_110);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_110,`HS65_LS_AO31X27_D_F_Z_F_110);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_101,`HS65_LS_AO31X27_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_011,`HS65_LS_AO31X27_D_F_Z_F_011);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_000,`HS65_LS_AO31X27_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_100,`HS65_LS_AO31X27_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_010,`HS65_LS_AO31X27_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO31X27_D_R_Z_R_001,`HS65_LS_AO31X27_D_F_Z_F_001);


	endspecify

endmodule // HS65_LS_AO31X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO31X35_A_R_Z_R_110 0.1
`define HS65_LS_AO31X35_A_F_Z_F_110 0.1
`define HS65_LS_AO31X35_B_R_Z_R_110 0.1
`define HS65_LS_AO31X35_B_F_Z_F_110 0.1
`define HS65_LS_AO31X35_C_R_Z_R_110 0.1
`define HS65_LS_AO31X35_C_F_Z_F_110 0.1
`define HS65_LS_AO31X35_D_R_Z_R_110 0.1
`define HS65_LS_AO31X35_D_F_Z_F_110 0.1
`define HS65_LS_AO31X35_D_R_Z_R_101 0.1
`define HS65_LS_AO31X35_D_F_Z_F_101 0.1
`define HS65_LS_AO31X35_D_R_Z_R_011 0.1
`define HS65_LS_AO31X35_D_F_Z_F_011 0.1
`define HS65_LS_AO31X35_D_R_Z_R_000 0.1
`define HS65_LS_AO31X35_D_F_Z_F_000 0.1
`define HS65_LS_AO31X35_D_R_Z_R_100 0.1
`define HS65_LS_AO31X35_D_F_Z_F_100 0.1
`define HS65_LS_AO31X35_D_R_Z_R_010 0.1
`define HS65_LS_AO31X35_D_F_Z_F_010 0.1
`define HS65_LS_AO31X35_D_R_Z_R_001 0.1
`define HS65_LS_AO31X35_D_F_Z_F_001 0.1

module HS65_LS_AO31X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO31X35_A_R_Z_R_110,`HS65_LS_AO31X35_A_F_Z_F_110);
		(B +=> Z) = (`HS65_LS_AO31X35_B_R_Z_R_110,`HS65_LS_AO31X35_B_F_Z_F_110);
		(C +=> Z) = (`HS65_LS_AO31X35_C_R_Z_R_110,`HS65_LS_AO31X35_C_F_Z_F_110);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_110,`HS65_LS_AO31X35_D_F_Z_F_110);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_101,`HS65_LS_AO31X35_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_011,`HS65_LS_AO31X35_D_F_Z_F_011);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_000,`HS65_LS_AO31X35_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_100,`HS65_LS_AO31X35_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_010,`HS65_LS_AO31X35_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO31X35_D_R_Z_R_001,`HS65_LS_AO31X35_D_F_Z_F_001);


	endspecify

endmodule // HS65_LS_AO31X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO31X4_A_R_Z_R_110 0.1
`define HS65_LS_AO31X4_A_F_Z_F_110 0.1
`define HS65_LS_AO31X4_B_R_Z_R_110 0.1
`define HS65_LS_AO31X4_B_F_Z_F_110 0.1
`define HS65_LS_AO31X4_C_R_Z_R_110 0.1
`define HS65_LS_AO31X4_C_F_Z_F_110 0.1
`define HS65_LS_AO31X4_D_R_Z_R_110 0.1
`define HS65_LS_AO31X4_D_F_Z_F_110 0.1
`define HS65_LS_AO31X4_D_R_Z_R_101 0.1
`define HS65_LS_AO31X4_D_F_Z_F_101 0.1
`define HS65_LS_AO31X4_D_R_Z_R_011 0.1
`define HS65_LS_AO31X4_D_F_Z_F_011 0.1
`define HS65_LS_AO31X4_D_R_Z_R_000 0.1
`define HS65_LS_AO31X4_D_F_Z_F_000 0.1
`define HS65_LS_AO31X4_D_R_Z_R_100 0.1
`define HS65_LS_AO31X4_D_F_Z_F_100 0.1
`define HS65_LS_AO31X4_D_R_Z_R_010 0.1
`define HS65_LS_AO31X4_D_F_Z_F_010 0.1
`define HS65_LS_AO31X4_D_R_Z_R_001 0.1
`define HS65_LS_AO31X4_D_F_Z_F_001 0.1

module HS65_LS_AO31X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO31X4_A_R_Z_R_110,`HS65_LS_AO31X4_A_F_Z_F_110);
		(B +=> Z) = (`HS65_LS_AO31X4_B_R_Z_R_110,`HS65_LS_AO31X4_B_F_Z_F_110);
		(C +=> Z) = (`HS65_LS_AO31X4_C_R_Z_R_110,`HS65_LS_AO31X4_C_F_Z_F_110);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_110,`HS65_LS_AO31X4_D_F_Z_F_110);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_101,`HS65_LS_AO31X4_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_011,`HS65_LS_AO31X4_D_F_Z_F_011);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_000,`HS65_LS_AO31X4_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_100,`HS65_LS_AO31X4_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_010,`HS65_LS_AO31X4_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO31X4_D_R_Z_R_001,`HS65_LS_AO31X4_D_F_Z_F_001);


	endspecify

endmodule // HS65_LS_AO31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO31X9_A_R_Z_R_110 0.1
`define HS65_LS_AO31X9_A_F_Z_F_110 0.1
`define HS65_LS_AO31X9_B_R_Z_R_110 0.1
`define HS65_LS_AO31X9_B_F_Z_F_110 0.1
`define HS65_LS_AO31X9_C_R_Z_R_110 0.1
`define HS65_LS_AO31X9_C_F_Z_F_110 0.1
`define HS65_LS_AO31X9_D_R_Z_R_110 0.1
`define HS65_LS_AO31X9_D_F_Z_F_110 0.1
`define HS65_LS_AO31X9_D_R_Z_R_101 0.1
`define HS65_LS_AO31X9_D_F_Z_F_101 0.1
`define HS65_LS_AO31X9_D_R_Z_R_011 0.1
`define HS65_LS_AO31X9_D_F_Z_F_011 0.1
`define HS65_LS_AO31X9_D_R_Z_R_000 0.1
`define HS65_LS_AO31X9_D_F_Z_F_000 0.1
`define HS65_LS_AO31X9_D_R_Z_R_100 0.1
`define HS65_LS_AO31X9_D_F_Z_F_100 0.1
`define HS65_LS_AO31X9_D_R_Z_R_010 0.1
`define HS65_LS_AO31X9_D_F_Z_F_010 0.1
`define HS65_LS_AO31X9_D_R_Z_R_001 0.1
`define HS65_LS_AO31X9_D_F_Z_F_001 0.1

module HS65_LS_AO31X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C) ;
	or   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_AO31X9_A_R_Z_R_110,`HS65_LS_AO31X9_A_F_Z_F_110);
		(B +=> Z) = (`HS65_LS_AO31X9_B_R_Z_R_110,`HS65_LS_AO31X9_B_F_Z_F_110);
		(C +=> Z) = (`HS65_LS_AO31X9_C_R_Z_R_110,`HS65_LS_AO31X9_C_F_Z_F_110);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_110,`HS65_LS_AO31X9_D_F_Z_F_110);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_101,`HS65_LS_AO31X9_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_011,`HS65_LS_AO31X9_D_F_Z_F_011);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_000,`HS65_LS_AO31X9_D_F_Z_F_000);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_100,`HS65_LS_AO31X9_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_010,`HS65_LS_AO31X9_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_AO31X9_D_R_Z_R_001,`HS65_LS_AO31X9_D_F_Z_F_001);


	endspecify

endmodule // HS65_LS_AO31X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO32X18_A_R_Z_R_1100 0.1
`define HS65_LS_AO32X18_A_F_Z_F_1100 0.1
`define HS65_LS_AO32X18_A_R_Z_R_1110 0.1
`define HS65_LS_AO32X18_A_F_Z_F_1110 0.1
`define HS65_LS_AO32X18_A_R_Z_R_1101 0.1
`define HS65_LS_AO32X18_A_F_Z_F_1101 0.1
`define HS65_LS_AO32X18_B_R_Z_R_1100 0.1
`define HS65_LS_AO32X18_B_F_Z_F_1100 0.1
`define HS65_LS_AO32X18_B_R_Z_R_1110 0.1
`define HS65_LS_AO32X18_B_F_Z_F_1110 0.1
`define HS65_LS_AO32X18_B_R_Z_R_1101 0.1
`define HS65_LS_AO32X18_B_F_Z_F_1101 0.1
`define HS65_LS_AO32X18_C_R_Z_R_1100 0.1
`define HS65_LS_AO32X18_C_F_Z_F_1100 0.1
`define HS65_LS_AO32X18_C_R_Z_R_1110 0.1
`define HS65_LS_AO32X18_C_F_Z_F_1110 0.1
`define HS65_LS_AO32X18_C_R_Z_R_1101 0.1
`define HS65_LS_AO32X18_C_F_Z_F_1101 0.1
`define HS65_LS_AO32X18_D_R_Z_R_0011 0.1
`define HS65_LS_AO32X18_D_F_Z_F_0011 0.1
`define HS65_LS_AO32X18_D_R_Z_R_0101 0.1
`define HS65_LS_AO32X18_D_F_Z_F_0101 0.1
`define HS65_LS_AO32X18_D_R_Z_R_1001 0.1
`define HS65_LS_AO32X18_D_F_Z_F_1001 0.1
`define HS65_LS_AO32X18_D_R_Z_R_0111 0.1
`define HS65_LS_AO32X18_D_F_Z_F_0111 0.1
`define HS65_LS_AO32X18_D_R_Z_R_1011 0.1
`define HS65_LS_AO32X18_D_F_Z_F_1011 0.1
`define HS65_LS_AO32X18_D_R_Z_R_0001 0.1
`define HS65_LS_AO32X18_D_F_Z_F_0001 0.1
`define HS65_LS_AO32X18_D_R_Z_R_1101 0.1
`define HS65_LS_AO32X18_D_F_Z_F_1101 0.1
`define HS65_LS_AO32X18_E_R_Z_R_0011 0.1
`define HS65_LS_AO32X18_E_F_Z_F_0011 0.1
`define HS65_LS_AO32X18_E_R_Z_R_0101 0.1
`define HS65_LS_AO32X18_E_F_Z_F_0101 0.1
`define HS65_LS_AO32X18_E_R_Z_R_1001 0.1
`define HS65_LS_AO32X18_E_F_Z_F_1001 0.1
`define HS65_LS_AO32X18_E_R_Z_R_0111 0.1
`define HS65_LS_AO32X18_E_F_Z_F_0111 0.1
`define HS65_LS_AO32X18_E_R_Z_R_1011 0.1
`define HS65_LS_AO32X18_E_F_Z_F_1011 0.1
`define HS65_LS_AO32X18_E_R_Z_R_0001 0.1
`define HS65_LS_AO32X18_E_F_Z_F_0001 0.1
`define HS65_LS_AO32X18_E_R_Z_R_1101 0.1
`define HS65_LS_AO32X18_E_F_Z_F_1101 0.1

module HS65_LS_AO32X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO32X18_A_R_Z_R_1100,`HS65_LS_AO32X18_A_F_Z_F_1100);
		if (B && C && D && !E) (A +=> Z) = (`HS65_LS_AO32X18_A_R_Z_R_1110,`HS65_LS_AO32X18_A_F_Z_F_1110);
		if (B && C && !D && E) (A +=> Z) = (`HS65_LS_AO32X18_A_R_Z_R_1101,`HS65_LS_AO32X18_A_F_Z_F_1101);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO32X18_B_R_Z_R_1100,`HS65_LS_AO32X18_B_F_Z_F_1100);
		if (A && C && D && !E) (B +=> Z) = (`HS65_LS_AO32X18_B_R_Z_R_1110,`HS65_LS_AO32X18_B_F_Z_F_1110);
		if (A && C && !D && E) (B +=> Z) = (`HS65_LS_AO32X18_B_R_Z_R_1101,`HS65_LS_AO32X18_B_F_Z_F_1101);
		if (A && B && !D && !E) (C +=> Z) = (`HS65_LS_AO32X18_C_R_Z_R_1100,`HS65_LS_AO32X18_C_F_Z_F_1100);
		if (A && B && D && !E) (C +=> Z) = (`HS65_LS_AO32X18_C_R_Z_R_1110,`HS65_LS_AO32X18_C_F_Z_F_1110);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_AO32X18_C_R_Z_R_1101,`HS65_LS_AO32X18_C_F_Z_F_1101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_0011,`HS65_LS_AO32X18_D_F_Z_F_0011);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_0101,`HS65_LS_AO32X18_D_F_Z_F_0101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_1001,`HS65_LS_AO32X18_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_0111,`HS65_LS_AO32X18_D_F_Z_F_0111);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_1011,`HS65_LS_AO32X18_D_F_Z_F_1011);
		if (!A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_0001,`HS65_LS_AO32X18_D_F_Z_F_0001);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X18_D_R_Z_R_1101,`HS65_LS_AO32X18_D_F_Z_F_1101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_0011,`HS65_LS_AO32X18_E_F_Z_F_0011);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_0101,`HS65_LS_AO32X18_E_F_Z_F_0101);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_1001,`HS65_LS_AO32X18_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_0111,`HS65_LS_AO32X18_E_F_Z_F_0111);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_1011,`HS65_LS_AO32X18_E_F_Z_F_1011);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_0001,`HS65_LS_AO32X18_E_F_Z_F_0001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X18_E_R_Z_R_1101,`HS65_LS_AO32X18_E_F_Z_F_1101);


	endspecify

endmodule // HS65_LS_AO32X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO32X27_A_R_Z_R_1100 0.1
`define HS65_LS_AO32X27_A_F_Z_F_1100 0.1
`define HS65_LS_AO32X27_A_R_Z_R_1110 0.1
`define HS65_LS_AO32X27_A_F_Z_F_1110 0.1
`define HS65_LS_AO32X27_A_R_Z_R_1101 0.1
`define HS65_LS_AO32X27_A_F_Z_F_1101 0.1
`define HS65_LS_AO32X27_B_R_Z_R_1100 0.1
`define HS65_LS_AO32X27_B_F_Z_F_1100 0.1
`define HS65_LS_AO32X27_B_R_Z_R_1110 0.1
`define HS65_LS_AO32X27_B_F_Z_F_1110 0.1
`define HS65_LS_AO32X27_B_R_Z_R_1101 0.1
`define HS65_LS_AO32X27_B_F_Z_F_1101 0.1
`define HS65_LS_AO32X27_C_R_Z_R_1100 0.1
`define HS65_LS_AO32X27_C_F_Z_F_1100 0.1
`define HS65_LS_AO32X27_C_R_Z_R_1110 0.1
`define HS65_LS_AO32X27_C_F_Z_F_1110 0.1
`define HS65_LS_AO32X27_C_R_Z_R_1101 0.1
`define HS65_LS_AO32X27_C_F_Z_F_1101 0.1
`define HS65_LS_AO32X27_D_R_Z_R_0011 0.1
`define HS65_LS_AO32X27_D_F_Z_F_0011 0.1
`define HS65_LS_AO32X27_D_R_Z_R_0101 0.1
`define HS65_LS_AO32X27_D_F_Z_F_0101 0.1
`define HS65_LS_AO32X27_D_R_Z_R_1001 0.1
`define HS65_LS_AO32X27_D_F_Z_F_1001 0.1
`define HS65_LS_AO32X27_D_R_Z_R_0111 0.1
`define HS65_LS_AO32X27_D_F_Z_F_0111 0.1
`define HS65_LS_AO32X27_D_R_Z_R_1011 0.1
`define HS65_LS_AO32X27_D_F_Z_F_1011 0.1
`define HS65_LS_AO32X27_D_R_Z_R_0001 0.1
`define HS65_LS_AO32X27_D_F_Z_F_0001 0.1
`define HS65_LS_AO32X27_D_R_Z_R_1101 0.1
`define HS65_LS_AO32X27_D_F_Z_F_1101 0.1
`define HS65_LS_AO32X27_E_R_Z_R_0011 0.1
`define HS65_LS_AO32X27_E_F_Z_F_0011 0.1
`define HS65_LS_AO32X27_E_R_Z_R_0101 0.1
`define HS65_LS_AO32X27_E_F_Z_F_0101 0.1
`define HS65_LS_AO32X27_E_R_Z_R_1001 0.1
`define HS65_LS_AO32X27_E_F_Z_F_1001 0.1
`define HS65_LS_AO32X27_E_R_Z_R_0111 0.1
`define HS65_LS_AO32X27_E_F_Z_F_0111 0.1
`define HS65_LS_AO32X27_E_R_Z_R_1011 0.1
`define HS65_LS_AO32X27_E_F_Z_F_1011 0.1
`define HS65_LS_AO32X27_E_R_Z_R_0001 0.1
`define HS65_LS_AO32X27_E_F_Z_F_0001 0.1
`define HS65_LS_AO32X27_E_R_Z_R_1101 0.1
`define HS65_LS_AO32X27_E_F_Z_F_1101 0.1

module HS65_LS_AO32X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO32X27_A_R_Z_R_1100,`HS65_LS_AO32X27_A_F_Z_F_1100);
		if (B && C && D && !E) (A +=> Z) = (`HS65_LS_AO32X27_A_R_Z_R_1110,`HS65_LS_AO32X27_A_F_Z_F_1110);
		if (B && C && !D && E) (A +=> Z) = (`HS65_LS_AO32X27_A_R_Z_R_1101,`HS65_LS_AO32X27_A_F_Z_F_1101);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO32X27_B_R_Z_R_1100,`HS65_LS_AO32X27_B_F_Z_F_1100);
		if (A && C && D && !E) (B +=> Z) = (`HS65_LS_AO32X27_B_R_Z_R_1110,`HS65_LS_AO32X27_B_F_Z_F_1110);
		if (A && C && !D && E) (B +=> Z) = (`HS65_LS_AO32X27_B_R_Z_R_1101,`HS65_LS_AO32X27_B_F_Z_F_1101);
		if (A && B && !D && !E) (C +=> Z) = (`HS65_LS_AO32X27_C_R_Z_R_1100,`HS65_LS_AO32X27_C_F_Z_F_1100);
		if (A && B && D && !E) (C +=> Z) = (`HS65_LS_AO32X27_C_R_Z_R_1110,`HS65_LS_AO32X27_C_F_Z_F_1110);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_AO32X27_C_R_Z_R_1101,`HS65_LS_AO32X27_C_F_Z_F_1101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_0011,`HS65_LS_AO32X27_D_F_Z_F_0011);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_0101,`HS65_LS_AO32X27_D_F_Z_F_0101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_1001,`HS65_LS_AO32X27_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_0111,`HS65_LS_AO32X27_D_F_Z_F_0111);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_1011,`HS65_LS_AO32X27_D_F_Z_F_1011);
		if (!A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_0001,`HS65_LS_AO32X27_D_F_Z_F_0001);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X27_D_R_Z_R_1101,`HS65_LS_AO32X27_D_F_Z_F_1101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_0011,`HS65_LS_AO32X27_E_F_Z_F_0011);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_0101,`HS65_LS_AO32X27_E_F_Z_F_0101);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_1001,`HS65_LS_AO32X27_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_0111,`HS65_LS_AO32X27_E_F_Z_F_0111);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_1011,`HS65_LS_AO32X27_E_F_Z_F_1011);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_0001,`HS65_LS_AO32X27_E_F_Z_F_0001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X27_E_R_Z_R_1101,`HS65_LS_AO32X27_E_F_Z_F_1101);


	endspecify

endmodule // HS65_LS_AO32X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO32X35_A_R_Z_R_1100 0.1
`define HS65_LS_AO32X35_A_F_Z_F_1100 0.1
`define HS65_LS_AO32X35_A_R_Z_R_1110 0.1
`define HS65_LS_AO32X35_A_F_Z_F_1110 0.1
`define HS65_LS_AO32X35_A_R_Z_R_1101 0.1
`define HS65_LS_AO32X35_A_F_Z_F_1101 0.1
`define HS65_LS_AO32X35_B_R_Z_R_1100 0.1
`define HS65_LS_AO32X35_B_F_Z_F_1100 0.1
`define HS65_LS_AO32X35_B_R_Z_R_1110 0.1
`define HS65_LS_AO32X35_B_F_Z_F_1110 0.1
`define HS65_LS_AO32X35_B_R_Z_R_1101 0.1
`define HS65_LS_AO32X35_B_F_Z_F_1101 0.1
`define HS65_LS_AO32X35_C_R_Z_R_1100 0.1
`define HS65_LS_AO32X35_C_F_Z_F_1100 0.1
`define HS65_LS_AO32X35_C_R_Z_R_1110 0.1
`define HS65_LS_AO32X35_C_F_Z_F_1110 0.1
`define HS65_LS_AO32X35_C_R_Z_R_1101 0.1
`define HS65_LS_AO32X35_C_F_Z_F_1101 0.1
`define HS65_LS_AO32X35_D_R_Z_R_0011 0.1
`define HS65_LS_AO32X35_D_F_Z_F_0011 0.1
`define HS65_LS_AO32X35_D_R_Z_R_0101 0.1
`define HS65_LS_AO32X35_D_F_Z_F_0101 0.1
`define HS65_LS_AO32X35_D_R_Z_R_1001 0.1
`define HS65_LS_AO32X35_D_F_Z_F_1001 0.1
`define HS65_LS_AO32X35_D_R_Z_R_0111 0.1
`define HS65_LS_AO32X35_D_F_Z_F_0111 0.1
`define HS65_LS_AO32X35_D_R_Z_R_1011 0.1
`define HS65_LS_AO32X35_D_F_Z_F_1011 0.1
`define HS65_LS_AO32X35_D_R_Z_R_0001 0.1
`define HS65_LS_AO32X35_D_F_Z_F_0001 0.1
`define HS65_LS_AO32X35_D_R_Z_R_1101 0.1
`define HS65_LS_AO32X35_D_F_Z_F_1101 0.1
`define HS65_LS_AO32X35_E_R_Z_R_0011 0.1
`define HS65_LS_AO32X35_E_F_Z_F_0011 0.1
`define HS65_LS_AO32X35_E_R_Z_R_0101 0.1
`define HS65_LS_AO32X35_E_F_Z_F_0101 0.1
`define HS65_LS_AO32X35_E_R_Z_R_1001 0.1
`define HS65_LS_AO32X35_E_F_Z_F_1001 0.1
`define HS65_LS_AO32X35_E_R_Z_R_0111 0.1
`define HS65_LS_AO32X35_E_F_Z_F_0111 0.1
`define HS65_LS_AO32X35_E_R_Z_R_1011 0.1
`define HS65_LS_AO32X35_E_F_Z_F_1011 0.1
`define HS65_LS_AO32X35_E_R_Z_R_0001 0.1
`define HS65_LS_AO32X35_E_F_Z_F_0001 0.1
`define HS65_LS_AO32X35_E_R_Z_R_1101 0.1
`define HS65_LS_AO32X35_E_F_Z_F_1101 0.1

module HS65_LS_AO32X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO32X35_A_R_Z_R_1100,`HS65_LS_AO32X35_A_F_Z_F_1100);
		if (B && C && D && !E) (A +=> Z) = (`HS65_LS_AO32X35_A_R_Z_R_1110,`HS65_LS_AO32X35_A_F_Z_F_1110);
		if (B && C && !D && E) (A +=> Z) = (`HS65_LS_AO32X35_A_R_Z_R_1101,`HS65_LS_AO32X35_A_F_Z_F_1101);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO32X35_B_R_Z_R_1100,`HS65_LS_AO32X35_B_F_Z_F_1100);
		if (A && C && D && !E) (B +=> Z) = (`HS65_LS_AO32X35_B_R_Z_R_1110,`HS65_LS_AO32X35_B_F_Z_F_1110);
		if (A && C && !D && E) (B +=> Z) = (`HS65_LS_AO32X35_B_R_Z_R_1101,`HS65_LS_AO32X35_B_F_Z_F_1101);
		if (A && B && !D && !E) (C +=> Z) = (`HS65_LS_AO32X35_C_R_Z_R_1100,`HS65_LS_AO32X35_C_F_Z_F_1100);
		if (A && B && D && !E) (C +=> Z) = (`HS65_LS_AO32X35_C_R_Z_R_1110,`HS65_LS_AO32X35_C_F_Z_F_1110);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_AO32X35_C_R_Z_R_1101,`HS65_LS_AO32X35_C_F_Z_F_1101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_0011,`HS65_LS_AO32X35_D_F_Z_F_0011);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_0101,`HS65_LS_AO32X35_D_F_Z_F_0101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_1001,`HS65_LS_AO32X35_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_0111,`HS65_LS_AO32X35_D_F_Z_F_0111);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_1011,`HS65_LS_AO32X35_D_F_Z_F_1011);
		if (!A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_0001,`HS65_LS_AO32X35_D_F_Z_F_0001);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X35_D_R_Z_R_1101,`HS65_LS_AO32X35_D_F_Z_F_1101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_0011,`HS65_LS_AO32X35_E_F_Z_F_0011);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_0101,`HS65_LS_AO32X35_E_F_Z_F_0101);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_1001,`HS65_LS_AO32X35_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_0111,`HS65_LS_AO32X35_E_F_Z_F_0111);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_1011,`HS65_LS_AO32X35_E_F_Z_F_1011);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_0001,`HS65_LS_AO32X35_E_F_Z_F_0001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X35_E_R_Z_R_1101,`HS65_LS_AO32X35_E_F_Z_F_1101);


	endspecify

endmodule // HS65_LS_AO32X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO32X4_A_R_Z_R_1100 0.1
`define HS65_LS_AO32X4_A_F_Z_F_1100 0.1
`define HS65_LS_AO32X4_A_R_Z_R_1110 0.1
`define HS65_LS_AO32X4_A_F_Z_F_1110 0.1
`define HS65_LS_AO32X4_A_R_Z_R_1101 0.1
`define HS65_LS_AO32X4_A_F_Z_F_1101 0.1
`define HS65_LS_AO32X4_B_R_Z_R_1100 0.1
`define HS65_LS_AO32X4_B_F_Z_F_1100 0.1
`define HS65_LS_AO32X4_B_R_Z_R_1110 0.1
`define HS65_LS_AO32X4_B_F_Z_F_1110 0.1
`define HS65_LS_AO32X4_B_R_Z_R_1101 0.1
`define HS65_LS_AO32X4_B_F_Z_F_1101 0.1
`define HS65_LS_AO32X4_C_R_Z_R_1100 0.1
`define HS65_LS_AO32X4_C_F_Z_F_1100 0.1
`define HS65_LS_AO32X4_C_R_Z_R_1110 0.1
`define HS65_LS_AO32X4_C_F_Z_F_1110 0.1
`define HS65_LS_AO32X4_C_R_Z_R_1101 0.1
`define HS65_LS_AO32X4_C_F_Z_F_1101 0.1
`define HS65_LS_AO32X4_D_R_Z_R_0011 0.1
`define HS65_LS_AO32X4_D_F_Z_F_0011 0.1
`define HS65_LS_AO32X4_D_R_Z_R_0101 0.1
`define HS65_LS_AO32X4_D_F_Z_F_0101 0.1
`define HS65_LS_AO32X4_D_R_Z_R_1001 0.1
`define HS65_LS_AO32X4_D_F_Z_F_1001 0.1
`define HS65_LS_AO32X4_D_R_Z_R_0111 0.1
`define HS65_LS_AO32X4_D_F_Z_F_0111 0.1
`define HS65_LS_AO32X4_D_R_Z_R_1011 0.1
`define HS65_LS_AO32X4_D_F_Z_F_1011 0.1
`define HS65_LS_AO32X4_D_R_Z_R_0001 0.1
`define HS65_LS_AO32X4_D_F_Z_F_0001 0.1
`define HS65_LS_AO32X4_D_R_Z_R_1101 0.1
`define HS65_LS_AO32X4_D_F_Z_F_1101 0.1
`define HS65_LS_AO32X4_E_R_Z_R_0011 0.1
`define HS65_LS_AO32X4_E_F_Z_F_0011 0.1
`define HS65_LS_AO32X4_E_R_Z_R_0101 0.1
`define HS65_LS_AO32X4_E_F_Z_F_0101 0.1
`define HS65_LS_AO32X4_E_R_Z_R_1001 0.1
`define HS65_LS_AO32X4_E_F_Z_F_1001 0.1
`define HS65_LS_AO32X4_E_R_Z_R_0111 0.1
`define HS65_LS_AO32X4_E_F_Z_F_0111 0.1
`define HS65_LS_AO32X4_E_R_Z_R_1011 0.1
`define HS65_LS_AO32X4_E_F_Z_F_1011 0.1
`define HS65_LS_AO32X4_E_R_Z_R_0001 0.1
`define HS65_LS_AO32X4_E_F_Z_F_0001 0.1
`define HS65_LS_AO32X4_E_R_Z_R_1101 0.1
`define HS65_LS_AO32X4_E_F_Z_F_1101 0.1

module HS65_LS_AO32X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO32X4_A_R_Z_R_1100,`HS65_LS_AO32X4_A_F_Z_F_1100);
		if (B && C && D && !E) (A +=> Z) = (`HS65_LS_AO32X4_A_R_Z_R_1110,`HS65_LS_AO32X4_A_F_Z_F_1110);
		if (B && C && !D && E) (A +=> Z) = (`HS65_LS_AO32X4_A_R_Z_R_1101,`HS65_LS_AO32X4_A_F_Z_F_1101);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO32X4_B_R_Z_R_1100,`HS65_LS_AO32X4_B_F_Z_F_1100);
		if (A && C && D && !E) (B +=> Z) = (`HS65_LS_AO32X4_B_R_Z_R_1110,`HS65_LS_AO32X4_B_F_Z_F_1110);
		if (A && C && !D && E) (B +=> Z) = (`HS65_LS_AO32X4_B_R_Z_R_1101,`HS65_LS_AO32X4_B_F_Z_F_1101);
		if (A && B && !D && !E) (C +=> Z) = (`HS65_LS_AO32X4_C_R_Z_R_1100,`HS65_LS_AO32X4_C_F_Z_F_1100);
		if (A && B && D && !E) (C +=> Z) = (`HS65_LS_AO32X4_C_R_Z_R_1110,`HS65_LS_AO32X4_C_F_Z_F_1110);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_AO32X4_C_R_Z_R_1101,`HS65_LS_AO32X4_C_F_Z_F_1101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_0011,`HS65_LS_AO32X4_D_F_Z_F_0011);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_0101,`HS65_LS_AO32X4_D_F_Z_F_0101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_1001,`HS65_LS_AO32X4_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_0111,`HS65_LS_AO32X4_D_F_Z_F_0111);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_1011,`HS65_LS_AO32X4_D_F_Z_F_1011);
		if (!A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_0001,`HS65_LS_AO32X4_D_F_Z_F_0001);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X4_D_R_Z_R_1101,`HS65_LS_AO32X4_D_F_Z_F_1101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_0011,`HS65_LS_AO32X4_E_F_Z_F_0011);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_0101,`HS65_LS_AO32X4_E_F_Z_F_0101);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_1001,`HS65_LS_AO32X4_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_0111,`HS65_LS_AO32X4_E_F_Z_F_0111);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_1011,`HS65_LS_AO32X4_E_F_Z_F_1011);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_0001,`HS65_LS_AO32X4_E_F_Z_F_0001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X4_E_R_Z_R_1101,`HS65_LS_AO32X4_E_F_Z_F_1101);


	endspecify

endmodule // HS65_LS_AO32X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO32X9_A_R_Z_R_1100 0.1
`define HS65_LS_AO32X9_A_F_Z_F_1100 0.1
`define HS65_LS_AO32X9_A_R_Z_R_1110 0.1
`define HS65_LS_AO32X9_A_F_Z_F_1110 0.1
`define HS65_LS_AO32X9_A_R_Z_R_1101 0.1
`define HS65_LS_AO32X9_A_F_Z_F_1101 0.1
`define HS65_LS_AO32X9_B_R_Z_R_1100 0.1
`define HS65_LS_AO32X9_B_F_Z_F_1100 0.1
`define HS65_LS_AO32X9_B_R_Z_R_1110 0.1
`define HS65_LS_AO32X9_B_F_Z_F_1110 0.1
`define HS65_LS_AO32X9_B_R_Z_R_1101 0.1
`define HS65_LS_AO32X9_B_F_Z_F_1101 0.1
`define HS65_LS_AO32X9_C_R_Z_R_1100 0.1
`define HS65_LS_AO32X9_C_F_Z_F_1100 0.1
`define HS65_LS_AO32X9_C_R_Z_R_1110 0.1
`define HS65_LS_AO32X9_C_F_Z_F_1110 0.1
`define HS65_LS_AO32X9_C_R_Z_R_1101 0.1
`define HS65_LS_AO32X9_C_F_Z_F_1101 0.1
`define HS65_LS_AO32X9_D_R_Z_R_0011 0.1
`define HS65_LS_AO32X9_D_F_Z_F_0011 0.1
`define HS65_LS_AO32X9_D_R_Z_R_0101 0.1
`define HS65_LS_AO32X9_D_F_Z_F_0101 0.1
`define HS65_LS_AO32X9_D_R_Z_R_1001 0.1
`define HS65_LS_AO32X9_D_F_Z_F_1001 0.1
`define HS65_LS_AO32X9_D_R_Z_R_0111 0.1
`define HS65_LS_AO32X9_D_F_Z_F_0111 0.1
`define HS65_LS_AO32X9_D_R_Z_R_1011 0.1
`define HS65_LS_AO32X9_D_F_Z_F_1011 0.1
`define HS65_LS_AO32X9_D_R_Z_R_0001 0.1
`define HS65_LS_AO32X9_D_F_Z_F_0001 0.1
`define HS65_LS_AO32X9_D_R_Z_R_1101 0.1
`define HS65_LS_AO32X9_D_F_Z_F_1101 0.1
`define HS65_LS_AO32X9_E_R_Z_R_0011 0.1
`define HS65_LS_AO32X9_E_F_Z_F_0011 0.1
`define HS65_LS_AO32X9_E_R_Z_R_0101 0.1
`define HS65_LS_AO32X9_E_F_Z_F_0101 0.1
`define HS65_LS_AO32X9_E_R_Z_R_1001 0.1
`define HS65_LS_AO32X9_E_F_Z_F_1001 0.1
`define HS65_LS_AO32X9_E_R_Z_R_0111 0.1
`define HS65_LS_AO32X9_E_F_Z_F_0111 0.1
`define HS65_LS_AO32X9_E_R_Z_R_1011 0.1
`define HS65_LS_AO32X9_E_F_Z_F_1011 0.1
`define HS65_LS_AO32X9_E_R_Z_R_0001 0.1
`define HS65_LS_AO32X9_E_F_Z_F_0001 0.1
`define HS65_LS_AO32X9_E_R_Z_R_1101 0.1
`define HS65_LS_AO32X9_E_F_Z_F_1101 0.1

module HS65_LS_AO32X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && !D && !E) (A +=> Z) = (`HS65_LS_AO32X9_A_R_Z_R_1100,`HS65_LS_AO32X9_A_F_Z_F_1100);
		if (B && C && D && !E) (A +=> Z) = (`HS65_LS_AO32X9_A_R_Z_R_1110,`HS65_LS_AO32X9_A_F_Z_F_1110);
		if (B && C && !D && E) (A +=> Z) = (`HS65_LS_AO32X9_A_R_Z_R_1101,`HS65_LS_AO32X9_A_F_Z_F_1101);
		if (A && C && !D && !E) (B +=> Z) = (`HS65_LS_AO32X9_B_R_Z_R_1100,`HS65_LS_AO32X9_B_F_Z_F_1100);
		if (A && C && D && !E) (B +=> Z) = (`HS65_LS_AO32X9_B_R_Z_R_1110,`HS65_LS_AO32X9_B_F_Z_F_1110);
		if (A && C && !D && E) (B +=> Z) = (`HS65_LS_AO32X9_B_R_Z_R_1101,`HS65_LS_AO32X9_B_F_Z_F_1101);
		if (A && B && !D && !E) (C +=> Z) = (`HS65_LS_AO32X9_C_R_Z_R_1100,`HS65_LS_AO32X9_C_F_Z_F_1100);
		if (A && B && D && !E) (C +=> Z) = (`HS65_LS_AO32X9_C_R_Z_R_1110,`HS65_LS_AO32X9_C_F_Z_F_1110);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_AO32X9_C_R_Z_R_1101,`HS65_LS_AO32X9_C_F_Z_F_1101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_0011,`HS65_LS_AO32X9_D_F_Z_F_0011);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_0101,`HS65_LS_AO32X9_D_F_Z_F_0101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_1001,`HS65_LS_AO32X9_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_0111,`HS65_LS_AO32X9_D_F_Z_F_0111);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_1011,`HS65_LS_AO32X9_D_F_Z_F_1011);
		if (!A && !B && !C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_0001,`HS65_LS_AO32X9_D_F_Z_F_0001);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_AO32X9_D_R_Z_R_1101,`HS65_LS_AO32X9_D_F_Z_F_1101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_0011,`HS65_LS_AO32X9_E_F_Z_F_0011);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_0101,`HS65_LS_AO32X9_E_F_Z_F_0101);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_1001,`HS65_LS_AO32X9_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_0111,`HS65_LS_AO32X9_E_F_Z_F_0111);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_1011,`HS65_LS_AO32X9_E_F_Z_F_1011);
		if (!A && !B && !C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_0001,`HS65_LS_AO32X9_E_F_Z_F_0001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_AO32X9_E_R_Z_R_1101,`HS65_LS_AO32X9_E_F_Z_F_1101);


	endspecify

endmodule // HS65_LS_AO32X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO33X18_A_R_Z_R_11110 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11110 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11010 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11010 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11100 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11100 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11101 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11101 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11001 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11001 0.1
`define HS65_LS_AO33X18_A_R_Z_R_11000 0.1
`define HS65_LS_AO33X18_A_F_Z_F_11000 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11110 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11110 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11010 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11010 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11100 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11100 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11101 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11101 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11001 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11001 0.1
`define HS65_LS_AO33X18_B_R_Z_R_11000 0.1
`define HS65_LS_AO33X18_B_F_Z_F_11000 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11110 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11110 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11010 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11010 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11100 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11100 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11101 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11101 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11001 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11001 0.1
`define HS65_LS_AO33X18_C_R_Z_R_11000 0.1
`define HS65_LS_AO33X18_C_F_Z_F_11000 0.1
`define HS65_LS_AO33X18_D_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_D_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_D_R_Z_R_01011 0.1
`define HS65_LS_AO33X18_D_F_Z_F_01011 0.1
`define HS65_LS_AO33X18_D_R_Z_R_10011 0.1
`define HS65_LS_AO33X18_D_F_Z_F_10011 0.1
`define HS65_LS_AO33X18_D_R_Z_R_01111 0.1
`define HS65_LS_AO33X18_D_F_Z_F_01111 0.1
`define HS65_LS_AO33X18_D_R_Z_R_10111 0.1
`define HS65_LS_AO33X18_D_F_Z_F_10111 0.1
`define HS65_LS_AO33X18_D_R_Z_R_00111 0.1
`define HS65_LS_AO33X18_D_F_Z_F_00111 0.1
`define HS65_LS_AO33X18_D_R_Z_R_00011 0.1
`define HS65_LS_AO33X18_D_F_Z_F_00011 0.1
`define HS65_LS_AO33X18_E_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_E_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_E_R_Z_R_01011 0.1
`define HS65_LS_AO33X18_E_F_Z_F_01011 0.1
`define HS65_LS_AO33X18_E_R_Z_R_10011 0.1
`define HS65_LS_AO33X18_E_F_Z_F_10011 0.1
`define HS65_LS_AO33X18_E_R_Z_R_01111 0.1
`define HS65_LS_AO33X18_E_F_Z_F_01111 0.1
`define HS65_LS_AO33X18_E_R_Z_R_10111 0.1
`define HS65_LS_AO33X18_E_F_Z_F_10111 0.1
`define HS65_LS_AO33X18_E_R_Z_R_00111 0.1
`define HS65_LS_AO33X18_E_F_Z_F_00111 0.1
`define HS65_LS_AO33X18_E_R_Z_R_00011 0.1
`define HS65_LS_AO33X18_E_F_Z_F_00011 0.1
`define HS65_LS_AO33X18_F_R_Z_R_11011 0.1
`define HS65_LS_AO33X18_F_F_Z_F_11011 0.1
`define HS65_LS_AO33X18_F_R_Z_R_01011 0.1
`define HS65_LS_AO33X18_F_F_Z_F_01011 0.1
`define HS65_LS_AO33X18_F_R_Z_R_10011 0.1
`define HS65_LS_AO33X18_F_F_Z_F_10011 0.1
`define HS65_LS_AO33X18_F_R_Z_R_01111 0.1
`define HS65_LS_AO33X18_F_F_Z_F_01111 0.1
`define HS65_LS_AO33X18_F_R_Z_R_10111 0.1
`define HS65_LS_AO33X18_F_F_Z_F_10111 0.1
`define HS65_LS_AO33X18_F_R_Z_R_00111 0.1
`define HS65_LS_AO33X18_F_F_Z_F_00111 0.1
`define HS65_LS_AO33X18_F_R_Z_R_00011 0.1
`define HS65_LS_AO33X18_F_F_Z_F_00011 0.1

module HS65_LS_AO33X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E, F) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && D && E && !F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11110,`HS65_LS_AO33X18_A_F_Z_F_11110);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11010,`HS65_LS_AO33X18_A_F_Z_F_11010);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11100,`HS65_LS_AO33X18_A_F_Z_F_11100);
		if (B && C && !D && E && F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11011,`HS65_LS_AO33X18_A_F_Z_F_11011);
		if (B && C && D && !E && F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11101,`HS65_LS_AO33X18_A_F_Z_F_11101);
		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11001,`HS65_LS_AO33X18_A_F_Z_F_11001);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X18_A_R_Z_R_11000,`HS65_LS_AO33X18_A_F_Z_F_11000);
		if (A && C && D && E && !F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11110,`HS65_LS_AO33X18_B_F_Z_F_11110);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11010,`HS65_LS_AO33X18_B_F_Z_F_11010);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11100,`HS65_LS_AO33X18_B_F_Z_F_11100);
		if (A && C && !D && E && F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11011,`HS65_LS_AO33X18_B_F_Z_F_11011);
		if (A && C && D && !E && F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11101,`HS65_LS_AO33X18_B_F_Z_F_11101);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11001,`HS65_LS_AO33X18_B_F_Z_F_11001);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X18_B_R_Z_R_11000,`HS65_LS_AO33X18_B_F_Z_F_11000);
		if (A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11110,`HS65_LS_AO33X18_C_F_Z_F_11110);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11010,`HS65_LS_AO33X18_C_F_Z_F_11010);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11100,`HS65_LS_AO33X18_C_F_Z_F_11100);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11011,`HS65_LS_AO33X18_C_F_Z_F_11011);
		if (A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11101,`HS65_LS_AO33X18_C_F_Z_F_11101);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11001,`HS65_LS_AO33X18_C_F_Z_F_11001);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X18_C_R_Z_R_11000,`HS65_LS_AO33X18_C_F_Z_F_11000);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_11011,`HS65_LS_AO33X18_D_F_Z_F_11011);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_01011,`HS65_LS_AO33X18_D_F_Z_F_01011);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_10011,`HS65_LS_AO33X18_D_F_Z_F_10011);
		if (!A && B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_01111,`HS65_LS_AO33X18_D_F_Z_F_01111);
		if (A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_10111,`HS65_LS_AO33X18_D_F_Z_F_10111);
		if (!A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_00111,`HS65_LS_AO33X18_D_F_Z_F_00111);
		if (!A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X18_D_R_Z_R_00011,`HS65_LS_AO33X18_D_F_Z_F_00011);
		if (A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_11011,`HS65_LS_AO33X18_E_F_Z_F_11011);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_01011,`HS65_LS_AO33X18_E_F_Z_F_01011);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_10011,`HS65_LS_AO33X18_E_F_Z_F_10011);
		if (!A && B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_01111,`HS65_LS_AO33X18_E_F_Z_F_01111);
		if (A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_10111,`HS65_LS_AO33X18_E_F_Z_F_10111);
		if (!A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_00111,`HS65_LS_AO33X18_E_F_Z_F_00111);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X18_E_R_Z_R_00011,`HS65_LS_AO33X18_E_F_Z_F_00011);
		if (A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_11011,`HS65_LS_AO33X18_F_F_Z_F_11011);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_01011,`HS65_LS_AO33X18_F_F_Z_F_01011);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_10011,`HS65_LS_AO33X18_F_F_Z_F_10011);
		if (!A && B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_01111,`HS65_LS_AO33X18_F_F_Z_F_01111);
		if (A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_10111,`HS65_LS_AO33X18_F_F_Z_F_10111);
		if (!A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_00111,`HS65_LS_AO33X18_F_F_Z_F_00111);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X18_F_R_Z_R_00011,`HS65_LS_AO33X18_F_F_Z_F_00011);


	endspecify

endmodule // HS65_LS_AO33X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO33X27_A_R_Z_R_11110 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11110 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11010 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11010 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11100 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11100 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11101 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11101 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11001 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11001 0.1
`define HS65_LS_AO33X27_A_R_Z_R_11000 0.1
`define HS65_LS_AO33X27_A_F_Z_F_11000 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11110 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11110 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11010 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11010 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11100 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11100 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11101 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11101 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11001 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11001 0.1
`define HS65_LS_AO33X27_B_R_Z_R_11000 0.1
`define HS65_LS_AO33X27_B_F_Z_F_11000 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11110 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11110 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11010 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11010 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11100 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11100 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11101 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11101 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11001 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11001 0.1
`define HS65_LS_AO33X27_C_R_Z_R_11000 0.1
`define HS65_LS_AO33X27_C_F_Z_F_11000 0.1
`define HS65_LS_AO33X27_D_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_D_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_D_R_Z_R_01011 0.1
`define HS65_LS_AO33X27_D_F_Z_F_01011 0.1
`define HS65_LS_AO33X27_D_R_Z_R_10011 0.1
`define HS65_LS_AO33X27_D_F_Z_F_10011 0.1
`define HS65_LS_AO33X27_D_R_Z_R_01111 0.1
`define HS65_LS_AO33X27_D_F_Z_F_01111 0.1
`define HS65_LS_AO33X27_D_R_Z_R_10111 0.1
`define HS65_LS_AO33X27_D_F_Z_F_10111 0.1
`define HS65_LS_AO33X27_D_R_Z_R_00111 0.1
`define HS65_LS_AO33X27_D_F_Z_F_00111 0.1
`define HS65_LS_AO33X27_D_R_Z_R_00011 0.1
`define HS65_LS_AO33X27_D_F_Z_F_00011 0.1
`define HS65_LS_AO33X27_E_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_E_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_E_R_Z_R_01011 0.1
`define HS65_LS_AO33X27_E_F_Z_F_01011 0.1
`define HS65_LS_AO33X27_E_R_Z_R_10011 0.1
`define HS65_LS_AO33X27_E_F_Z_F_10011 0.1
`define HS65_LS_AO33X27_E_R_Z_R_01111 0.1
`define HS65_LS_AO33X27_E_F_Z_F_01111 0.1
`define HS65_LS_AO33X27_E_R_Z_R_10111 0.1
`define HS65_LS_AO33X27_E_F_Z_F_10111 0.1
`define HS65_LS_AO33X27_E_R_Z_R_00111 0.1
`define HS65_LS_AO33X27_E_F_Z_F_00111 0.1
`define HS65_LS_AO33X27_E_R_Z_R_00011 0.1
`define HS65_LS_AO33X27_E_F_Z_F_00011 0.1
`define HS65_LS_AO33X27_F_R_Z_R_11011 0.1
`define HS65_LS_AO33X27_F_F_Z_F_11011 0.1
`define HS65_LS_AO33X27_F_R_Z_R_01011 0.1
`define HS65_LS_AO33X27_F_F_Z_F_01011 0.1
`define HS65_LS_AO33X27_F_R_Z_R_10011 0.1
`define HS65_LS_AO33X27_F_F_Z_F_10011 0.1
`define HS65_LS_AO33X27_F_R_Z_R_01111 0.1
`define HS65_LS_AO33X27_F_F_Z_F_01111 0.1
`define HS65_LS_AO33X27_F_R_Z_R_10111 0.1
`define HS65_LS_AO33X27_F_F_Z_F_10111 0.1
`define HS65_LS_AO33X27_F_R_Z_R_00111 0.1
`define HS65_LS_AO33X27_F_F_Z_F_00111 0.1
`define HS65_LS_AO33X27_F_R_Z_R_00011 0.1
`define HS65_LS_AO33X27_F_F_Z_F_00011 0.1

module HS65_LS_AO33X27 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E, F) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && D && E && !F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11110,`HS65_LS_AO33X27_A_F_Z_F_11110);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11010,`HS65_LS_AO33X27_A_F_Z_F_11010);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11100,`HS65_LS_AO33X27_A_F_Z_F_11100);
		if (B && C && !D && E && F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11011,`HS65_LS_AO33X27_A_F_Z_F_11011);
		if (B && C && D && !E && F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11101,`HS65_LS_AO33X27_A_F_Z_F_11101);
		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11001,`HS65_LS_AO33X27_A_F_Z_F_11001);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X27_A_R_Z_R_11000,`HS65_LS_AO33X27_A_F_Z_F_11000);
		if (A && C && D && E && !F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11110,`HS65_LS_AO33X27_B_F_Z_F_11110);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11010,`HS65_LS_AO33X27_B_F_Z_F_11010);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11100,`HS65_LS_AO33X27_B_F_Z_F_11100);
		if (A && C && !D && E && F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11011,`HS65_LS_AO33X27_B_F_Z_F_11011);
		if (A && C && D && !E && F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11101,`HS65_LS_AO33X27_B_F_Z_F_11101);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11001,`HS65_LS_AO33X27_B_F_Z_F_11001);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X27_B_R_Z_R_11000,`HS65_LS_AO33X27_B_F_Z_F_11000);
		if (A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11110,`HS65_LS_AO33X27_C_F_Z_F_11110);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11010,`HS65_LS_AO33X27_C_F_Z_F_11010);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11100,`HS65_LS_AO33X27_C_F_Z_F_11100);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11011,`HS65_LS_AO33X27_C_F_Z_F_11011);
		if (A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11101,`HS65_LS_AO33X27_C_F_Z_F_11101);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11001,`HS65_LS_AO33X27_C_F_Z_F_11001);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X27_C_R_Z_R_11000,`HS65_LS_AO33X27_C_F_Z_F_11000);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_11011,`HS65_LS_AO33X27_D_F_Z_F_11011);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_01011,`HS65_LS_AO33X27_D_F_Z_F_01011);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_10011,`HS65_LS_AO33X27_D_F_Z_F_10011);
		if (!A && B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_01111,`HS65_LS_AO33X27_D_F_Z_F_01111);
		if (A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_10111,`HS65_LS_AO33X27_D_F_Z_F_10111);
		if (!A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_00111,`HS65_LS_AO33X27_D_F_Z_F_00111);
		if (!A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X27_D_R_Z_R_00011,`HS65_LS_AO33X27_D_F_Z_F_00011);
		if (A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_11011,`HS65_LS_AO33X27_E_F_Z_F_11011);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_01011,`HS65_LS_AO33X27_E_F_Z_F_01011);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_10011,`HS65_LS_AO33X27_E_F_Z_F_10011);
		if (!A && B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_01111,`HS65_LS_AO33X27_E_F_Z_F_01111);
		if (A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_10111,`HS65_LS_AO33X27_E_F_Z_F_10111);
		if (!A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_00111,`HS65_LS_AO33X27_E_F_Z_F_00111);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X27_E_R_Z_R_00011,`HS65_LS_AO33X27_E_F_Z_F_00011);
		if (A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_11011,`HS65_LS_AO33X27_F_F_Z_F_11011);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_01011,`HS65_LS_AO33X27_F_F_Z_F_01011);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_10011,`HS65_LS_AO33X27_F_F_Z_F_10011);
		if (!A && B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_01111,`HS65_LS_AO33X27_F_F_Z_F_01111);
		if (A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_10111,`HS65_LS_AO33X27_F_F_Z_F_10111);
		if (!A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_00111,`HS65_LS_AO33X27_F_F_Z_F_00111);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X27_F_R_Z_R_00011,`HS65_LS_AO33X27_F_F_Z_F_00011);


	endspecify

endmodule // HS65_LS_AO33X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO33X35_A_R_Z_R_11110 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11110 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11010 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11010 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11100 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11100 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11101 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11101 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11001 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11001 0.1
`define HS65_LS_AO33X35_A_R_Z_R_11000 0.1
`define HS65_LS_AO33X35_A_F_Z_F_11000 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11110 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11110 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11010 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11010 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11100 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11100 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11101 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11101 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11001 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11001 0.1
`define HS65_LS_AO33X35_B_R_Z_R_11000 0.1
`define HS65_LS_AO33X35_B_F_Z_F_11000 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11110 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11110 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11010 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11010 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11100 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11100 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11101 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11101 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11001 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11001 0.1
`define HS65_LS_AO33X35_C_R_Z_R_11000 0.1
`define HS65_LS_AO33X35_C_F_Z_F_11000 0.1
`define HS65_LS_AO33X35_D_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_D_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_D_R_Z_R_01011 0.1
`define HS65_LS_AO33X35_D_F_Z_F_01011 0.1
`define HS65_LS_AO33X35_D_R_Z_R_10011 0.1
`define HS65_LS_AO33X35_D_F_Z_F_10011 0.1
`define HS65_LS_AO33X35_D_R_Z_R_01111 0.1
`define HS65_LS_AO33X35_D_F_Z_F_01111 0.1
`define HS65_LS_AO33X35_D_R_Z_R_10111 0.1
`define HS65_LS_AO33X35_D_F_Z_F_10111 0.1
`define HS65_LS_AO33X35_D_R_Z_R_00111 0.1
`define HS65_LS_AO33X35_D_F_Z_F_00111 0.1
`define HS65_LS_AO33X35_D_R_Z_R_00011 0.1
`define HS65_LS_AO33X35_D_F_Z_F_00011 0.1
`define HS65_LS_AO33X35_E_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_E_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_E_R_Z_R_01011 0.1
`define HS65_LS_AO33X35_E_F_Z_F_01011 0.1
`define HS65_LS_AO33X35_E_R_Z_R_10011 0.1
`define HS65_LS_AO33X35_E_F_Z_F_10011 0.1
`define HS65_LS_AO33X35_E_R_Z_R_01111 0.1
`define HS65_LS_AO33X35_E_F_Z_F_01111 0.1
`define HS65_LS_AO33X35_E_R_Z_R_10111 0.1
`define HS65_LS_AO33X35_E_F_Z_F_10111 0.1
`define HS65_LS_AO33X35_E_R_Z_R_00111 0.1
`define HS65_LS_AO33X35_E_F_Z_F_00111 0.1
`define HS65_LS_AO33X35_E_R_Z_R_00011 0.1
`define HS65_LS_AO33X35_E_F_Z_F_00011 0.1
`define HS65_LS_AO33X35_F_R_Z_R_11011 0.1
`define HS65_LS_AO33X35_F_F_Z_F_11011 0.1
`define HS65_LS_AO33X35_F_R_Z_R_01011 0.1
`define HS65_LS_AO33X35_F_F_Z_F_01011 0.1
`define HS65_LS_AO33X35_F_R_Z_R_10011 0.1
`define HS65_LS_AO33X35_F_F_Z_F_10011 0.1
`define HS65_LS_AO33X35_F_R_Z_R_01111 0.1
`define HS65_LS_AO33X35_F_F_Z_F_01111 0.1
`define HS65_LS_AO33X35_F_R_Z_R_10111 0.1
`define HS65_LS_AO33X35_F_F_Z_F_10111 0.1
`define HS65_LS_AO33X35_F_R_Z_R_00111 0.1
`define HS65_LS_AO33X35_F_F_Z_F_00111 0.1
`define HS65_LS_AO33X35_F_R_Z_R_00011 0.1
`define HS65_LS_AO33X35_F_F_Z_F_00011 0.1

module HS65_LS_AO33X35 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E, F) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && D && E && !F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11110,`HS65_LS_AO33X35_A_F_Z_F_11110);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11010,`HS65_LS_AO33X35_A_F_Z_F_11010);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11100,`HS65_LS_AO33X35_A_F_Z_F_11100);
		if (B && C && !D && E && F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11011,`HS65_LS_AO33X35_A_F_Z_F_11011);
		if (B && C && D && !E && F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11101,`HS65_LS_AO33X35_A_F_Z_F_11101);
		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11001,`HS65_LS_AO33X35_A_F_Z_F_11001);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X35_A_R_Z_R_11000,`HS65_LS_AO33X35_A_F_Z_F_11000);
		if (A && C && D && E && !F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11110,`HS65_LS_AO33X35_B_F_Z_F_11110);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11010,`HS65_LS_AO33X35_B_F_Z_F_11010);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11100,`HS65_LS_AO33X35_B_F_Z_F_11100);
		if (A && C && !D && E && F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11011,`HS65_LS_AO33X35_B_F_Z_F_11011);
		if (A && C && D && !E && F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11101,`HS65_LS_AO33X35_B_F_Z_F_11101);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11001,`HS65_LS_AO33X35_B_F_Z_F_11001);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X35_B_R_Z_R_11000,`HS65_LS_AO33X35_B_F_Z_F_11000);
		if (A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11110,`HS65_LS_AO33X35_C_F_Z_F_11110);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11010,`HS65_LS_AO33X35_C_F_Z_F_11010);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11100,`HS65_LS_AO33X35_C_F_Z_F_11100);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11011,`HS65_LS_AO33X35_C_F_Z_F_11011);
		if (A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11101,`HS65_LS_AO33X35_C_F_Z_F_11101);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11001,`HS65_LS_AO33X35_C_F_Z_F_11001);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X35_C_R_Z_R_11000,`HS65_LS_AO33X35_C_F_Z_F_11000);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_11011,`HS65_LS_AO33X35_D_F_Z_F_11011);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_01011,`HS65_LS_AO33X35_D_F_Z_F_01011);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_10011,`HS65_LS_AO33X35_D_F_Z_F_10011);
		if (!A && B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_01111,`HS65_LS_AO33X35_D_F_Z_F_01111);
		if (A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_10111,`HS65_LS_AO33X35_D_F_Z_F_10111);
		if (!A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_00111,`HS65_LS_AO33X35_D_F_Z_F_00111);
		if (!A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X35_D_R_Z_R_00011,`HS65_LS_AO33X35_D_F_Z_F_00011);
		if (A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_11011,`HS65_LS_AO33X35_E_F_Z_F_11011);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_01011,`HS65_LS_AO33X35_E_F_Z_F_01011);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_10011,`HS65_LS_AO33X35_E_F_Z_F_10011);
		if (!A && B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_01111,`HS65_LS_AO33X35_E_F_Z_F_01111);
		if (A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_10111,`HS65_LS_AO33X35_E_F_Z_F_10111);
		if (!A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_00111,`HS65_LS_AO33X35_E_F_Z_F_00111);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X35_E_R_Z_R_00011,`HS65_LS_AO33X35_E_F_Z_F_00011);
		if (A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_11011,`HS65_LS_AO33X35_F_F_Z_F_11011);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_01011,`HS65_LS_AO33X35_F_F_Z_F_01011);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_10011,`HS65_LS_AO33X35_F_F_Z_F_10011);
		if (!A && B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_01111,`HS65_LS_AO33X35_F_F_Z_F_01111);
		if (A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_10111,`HS65_LS_AO33X35_F_F_Z_F_10111);
		if (!A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_00111,`HS65_LS_AO33X35_F_F_Z_F_00111);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X35_F_R_Z_R_00011,`HS65_LS_AO33X35_F_F_Z_F_00011);


	endspecify

endmodule // HS65_LS_AO33X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO33X4_A_R_Z_R_11110 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11110 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11010 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11010 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11100 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11100 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11101 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11101 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11001 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11001 0.1
`define HS65_LS_AO33X4_A_R_Z_R_11000 0.1
`define HS65_LS_AO33X4_A_F_Z_F_11000 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11110 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11110 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11010 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11010 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11100 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11100 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11101 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11101 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11001 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11001 0.1
`define HS65_LS_AO33X4_B_R_Z_R_11000 0.1
`define HS65_LS_AO33X4_B_F_Z_F_11000 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11110 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11110 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11010 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11010 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11100 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11100 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11101 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11101 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11001 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11001 0.1
`define HS65_LS_AO33X4_C_R_Z_R_11000 0.1
`define HS65_LS_AO33X4_C_F_Z_F_11000 0.1
`define HS65_LS_AO33X4_D_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_D_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_D_R_Z_R_01011 0.1
`define HS65_LS_AO33X4_D_F_Z_F_01011 0.1
`define HS65_LS_AO33X4_D_R_Z_R_10011 0.1
`define HS65_LS_AO33X4_D_F_Z_F_10011 0.1
`define HS65_LS_AO33X4_D_R_Z_R_01111 0.1
`define HS65_LS_AO33X4_D_F_Z_F_01111 0.1
`define HS65_LS_AO33X4_D_R_Z_R_10111 0.1
`define HS65_LS_AO33X4_D_F_Z_F_10111 0.1
`define HS65_LS_AO33X4_D_R_Z_R_00111 0.1
`define HS65_LS_AO33X4_D_F_Z_F_00111 0.1
`define HS65_LS_AO33X4_D_R_Z_R_00011 0.1
`define HS65_LS_AO33X4_D_F_Z_F_00011 0.1
`define HS65_LS_AO33X4_E_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_E_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_E_R_Z_R_01011 0.1
`define HS65_LS_AO33X4_E_F_Z_F_01011 0.1
`define HS65_LS_AO33X4_E_R_Z_R_10011 0.1
`define HS65_LS_AO33X4_E_F_Z_F_10011 0.1
`define HS65_LS_AO33X4_E_R_Z_R_01111 0.1
`define HS65_LS_AO33X4_E_F_Z_F_01111 0.1
`define HS65_LS_AO33X4_E_R_Z_R_10111 0.1
`define HS65_LS_AO33X4_E_F_Z_F_10111 0.1
`define HS65_LS_AO33X4_E_R_Z_R_00111 0.1
`define HS65_LS_AO33X4_E_F_Z_F_00111 0.1
`define HS65_LS_AO33X4_E_R_Z_R_00011 0.1
`define HS65_LS_AO33X4_E_F_Z_F_00011 0.1
`define HS65_LS_AO33X4_F_R_Z_R_11011 0.1
`define HS65_LS_AO33X4_F_F_Z_F_11011 0.1
`define HS65_LS_AO33X4_F_R_Z_R_01011 0.1
`define HS65_LS_AO33X4_F_F_Z_F_01011 0.1
`define HS65_LS_AO33X4_F_R_Z_R_10011 0.1
`define HS65_LS_AO33X4_F_F_Z_F_10011 0.1
`define HS65_LS_AO33X4_F_R_Z_R_01111 0.1
`define HS65_LS_AO33X4_F_F_Z_F_01111 0.1
`define HS65_LS_AO33X4_F_R_Z_R_10111 0.1
`define HS65_LS_AO33X4_F_F_Z_F_10111 0.1
`define HS65_LS_AO33X4_F_R_Z_R_00111 0.1
`define HS65_LS_AO33X4_F_F_Z_F_00111 0.1
`define HS65_LS_AO33X4_F_R_Z_R_00011 0.1
`define HS65_LS_AO33X4_F_F_Z_F_00011 0.1

module HS65_LS_AO33X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E, F) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && D && E && !F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11110,`HS65_LS_AO33X4_A_F_Z_F_11110);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11010,`HS65_LS_AO33X4_A_F_Z_F_11010);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11100,`HS65_LS_AO33X4_A_F_Z_F_11100);
		if (B && C && !D && E && F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11011,`HS65_LS_AO33X4_A_F_Z_F_11011);
		if (B && C && D && !E && F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11101,`HS65_LS_AO33X4_A_F_Z_F_11101);
		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11001,`HS65_LS_AO33X4_A_F_Z_F_11001);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X4_A_R_Z_R_11000,`HS65_LS_AO33X4_A_F_Z_F_11000);
		if (A && C && D && E && !F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11110,`HS65_LS_AO33X4_B_F_Z_F_11110);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11010,`HS65_LS_AO33X4_B_F_Z_F_11010);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11100,`HS65_LS_AO33X4_B_F_Z_F_11100);
		if (A && C && !D && E && F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11011,`HS65_LS_AO33X4_B_F_Z_F_11011);
		if (A && C && D && !E && F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11101,`HS65_LS_AO33X4_B_F_Z_F_11101);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11001,`HS65_LS_AO33X4_B_F_Z_F_11001);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X4_B_R_Z_R_11000,`HS65_LS_AO33X4_B_F_Z_F_11000);
		if (A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11110,`HS65_LS_AO33X4_C_F_Z_F_11110);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11010,`HS65_LS_AO33X4_C_F_Z_F_11010);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11100,`HS65_LS_AO33X4_C_F_Z_F_11100);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11011,`HS65_LS_AO33X4_C_F_Z_F_11011);
		if (A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11101,`HS65_LS_AO33X4_C_F_Z_F_11101);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11001,`HS65_LS_AO33X4_C_F_Z_F_11001);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X4_C_R_Z_R_11000,`HS65_LS_AO33X4_C_F_Z_F_11000);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_11011,`HS65_LS_AO33X4_D_F_Z_F_11011);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_01011,`HS65_LS_AO33X4_D_F_Z_F_01011);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_10011,`HS65_LS_AO33X4_D_F_Z_F_10011);
		if (!A && B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_01111,`HS65_LS_AO33X4_D_F_Z_F_01111);
		if (A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_10111,`HS65_LS_AO33X4_D_F_Z_F_10111);
		if (!A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_00111,`HS65_LS_AO33X4_D_F_Z_F_00111);
		if (!A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X4_D_R_Z_R_00011,`HS65_LS_AO33X4_D_F_Z_F_00011);
		if (A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_11011,`HS65_LS_AO33X4_E_F_Z_F_11011);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_01011,`HS65_LS_AO33X4_E_F_Z_F_01011);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_10011,`HS65_LS_AO33X4_E_F_Z_F_10011);
		if (!A && B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_01111,`HS65_LS_AO33X4_E_F_Z_F_01111);
		if (A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_10111,`HS65_LS_AO33X4_E_F_Z_F_10111);
		if (!A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_00111,`HS65_LS_AO33X4_E_F_Z_F_00111);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X4_E_R_Z_R_00011,`HS65_LS_AO33X4_E_F_Z_F_00011);
		if (A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_11011,`HS65_LS_AO33X4_F_F_Z_F_11011);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_01011,`HS65_LS_AO33X4_F_F_Z_F_01011);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_10011,`HS65_LS_AO33X4_F_F_Z_F_10011);
		if (!A && B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_01111,`HS65_LS_AO33X4_F_F_Z_F_01111);
		if (A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_10111,`HS65_LS_AO33X4_F_F_Z_F_10111);
		if (!A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_00111,`HS65_LS_AO33X4_F_F_Z_F_00111);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X4_F_R_Z_R_00011,`HS65_LS_AO33X4_F_F_Z_F_00011);


	endspecify

endmodule // HS65_LS_AO33X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AO33X9_A_R_Z_R_11110 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11110 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11010 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11010 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11100 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11100 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11101 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11101 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11001 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11001 0.1
`define HS65_LS_AO33X9_A_R_Z_R_11000 0.1
`define HS65_LS_AO33X9_A_F_Z_F_11000 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11110 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11110 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11010 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11010 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11100 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11100 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11101 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11101 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11001 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11001 0.1
`define HS65_LS_AO33X9_B_R_Z_R_11000 0.1
`define HS65_LS_AO33X9_B_F_Z_F_11000 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11110 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11110 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11010 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11010 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11100 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11100 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11101 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11101 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11001 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11001 0.1
`define HS65_LS_AO33X9_C_R_Z_R_11000 0.1
`define HS65_LS_AO33X9_C_F_Z_F_11000 0.1
`define HS65_LS_AO33X9_D_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_D_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_D_R_Z_R_01011 0.1
`define HS65_LS_AO33X9_D_F_Z_F_01011 0.1
`define HS65_LS_AO33X9_D_R_Z_R_10011 0.1
`define HS65_LS_AO33X9_D_F_Z_F_10011 0.1
`define HS65_LS_AO33X9_D_R_Z_R_01111 0.1
`define HS65_LS_AO33X9_D_F_Z_F_01111 0.1
`define HS65_LS_AO33X9_D_R_Z_R_10111 0.1
`define HS65_LS_AO33X9_D_F_Z_F_10111 0.1
`define HS65_LS_AO33X9_D_R_Z_R_00111 0.1
`define HS65_LS_AO33X9_D_F_Z_F_00111 0.1
`define HS65_LS_AO33X9_D_R_Z_R_00011 0.1
`define HS65_LS_AO33X9_D_F_Z_F_00011 0.1
`define HS65_LS_AO33X9_E_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_E_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_E_R_Z_R_01011 0.1
`define HS65_LS_AO33X9_E_F_Z_F_01011 0.1
`define HS65_LS_AO33X9_E_R_Z_R_10011 0.1
`define HS65_LS_AO33X9_E_F_Z_F_10011 0.1
`define HS65_LS_AO33X9_E_R_Z_R_01111 0.1
`define HS65_LS_AO33X9_E_F_Z_F_01111 0.1
`define HS65_LS_AO33X9_E_R_Z_R_10111 0.1
`define HS65_LS_AO33X9_E_F_Z_F_10111 0.1
`define HS65_LS_AO33X9_E_R_Z_R_00111 0.1
`define HS65_LS_AO33X9_E_F_Z_F_00111 0.1
`define HS65_LS_AO33X9_E_R_Z_R_00011 0.1
`define HS65_LS_AO33X9_E_F_Z_F_00011 0.1
`define HS65_LS_AO33X9_F_R_Z_R_11011 0.1
`define HS65_LS_AO33X9_F_F_Z_F_11011 0.1
`define HS65_LS_AO33X9_F_R_Z_R_01011 0.1
`define HS65_LS_AO33X9_F_F_Z_F_01011 0.1
`define HS65_LS_AO33X9_F_R_Z_R_10011 0.1
`define HS65_LS_AO33X9_F_F_Z_F_10011 0.1
`define HS65_LS_AO33X9_F_R_Z_R_01111 0.1
`define HS65_LS_AO33X9_F_F_Z_F_01111 0.1
`define HS65_LS_AO33X9_F_R_Z_R_10111 0.1
`define HS65_LS_AO33X9_F_F_Z_F_10111 0.1
`define HS65_LS_AO33X9_F_R_Z_R_00111 0.1
`define HS65_LS_AO33X9_F_F_Z_F_00111 0.1
`define HS65_LS_AO33X9_F_R_Z_R_00011 0.1
`define HS65_LS_AO33X9_F_F_Z_F_00011 0.1

module HS65_LS_AO33X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL1, A, B, C) ;
	and    U2 (INTERNAL2, D, E, F) ;
	or   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (B && C && D && E && !F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11110,`HS65_LS_AO33X9_A_F_Z_F_11110);
		if (B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11010,`HS65_LS_AO33X9_A_F_Z_F_11010);
		if (B && C && D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11100,`HS65_LS_AO33X9_A_F_Z_F_11100);
		if (B && C && !D && E && F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11011,`HS65_LS_AO33X9_A_F_Z_F_11011);
		if (B && C && D && !E && F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11101,`HS65_LS_AO33X9_A_F_Z_F_11101);
		if (B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11001,`HS65_LS_AO33X9_A_F_Z_F_11001);
		if (B && C && !D && !E && !F) (A +=> Z) = (`HS65_LS_AO33X9_A_R_Z_R_11000,`HS65_LS_AO33X9_A_F_Z_F_11000);
		if (A && C && D && E && !F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11110,`HS65_LS_AO33X9_B_F_Z_F_11110);
		if (A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11010,`HS65_LS_AO33X9_B_F_Z_F_11010);
		if (A && C && D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11100,`HS65_LS_AO33X9_B_F_Z_F_11100);
		if (A && C && !D && E && F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11011,`HS65_LS_AO33X9_B_F_Z_F_11011);
		if (A && C && D && !E && F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11101,`HS65_LS_AO33X9_B_F_Z_F_11101);
		if (A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11001,`HS65_LS_AO33X9_B_F_Z_F_11001);
		if (A && C && !D && !E && !F) (B +=> Z) = (`HS65_LS_AO33X9_B_R_Z_R_11000,`HS65_LS_AO33X9_B_F_Z_F_11000);
		if (A && B && D && E && !F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11110,`HS65_LS_AO33X9_C_F_Z_F_11110);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11010,`HS65_LS_AO33X9_C_F_Z_F_11010);
		if (A && B && D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11100,`HS65_LS_AO33X9_C_F_Z_F_11100);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11011,`HS65_LS_AO33X9_C_F_Z_F_11011);
		if (A && B && D && !E && F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11101,`HS65_LS_AO33X9_C_F_Z_F_11101);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11001,`HS65_LS_AO33X9_C_F_Z_F_11001);
		if (A && B && !D && !E && !F) (C +=> Z) = (`HS65_LS_AO33X9_C_R_Z_R_11000,`HS65_LS_AO33X9_C_F_Z_F_11000);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_11011,`HS65_LS_AO33X9_D_F_Z_F_11011);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_01011,`HS65_LS_AO33X9_D_F_Z_F_01011);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_10011,`HS65_LS_AO33X9_D_F_Z_F_10011);
		if (!A && B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_01111,`HS65_LS_AO33X9_D_F_Z_F_01111);
		if (A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_10111,`HS65_LS_AO33X9_D_F_Z_F_10111);
		if (!A && !B && C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_00111,`HS65_LS_AO33X9_D_F_Z_F_00111);
		if (!A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_AO33X9_D_R_Z_R_00011,`HS65_LS_AO33X9_D_F_Z_F_00011);
		if (A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_11011,`HS65_LS_AO33X9_E_F_Z_F_11011);
		if (!A && B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_01011,`HS65_LS_AO33X9_E_F_Z_F_01011);
		if (A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_10011,`HS65_LS_AO33X9_E_F_Z_F_10011);
		if (!A && B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_01111,`HS65_LS_AO33X9_E_F_Z_F_01111);
		if (A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_10111,`HS65_LS_AO33X9_E_F_Z_F_10111);
		if (!A && !B && C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_00111,`HS65_LS_AO33X9_E_F_Z_F_00111);
		if (!A && !B && !C && D && F) (E +=> Z) = (`HS65_LS_AO33X9_E_R_Z_R_00011,`HS65_LS_AO33X9_E_F_Z_F_00011);
		if (A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_11011,`HS65_LS_AO33X9_F_F_Z_F_11011);
		if (!A && B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_01011,`HS65_LS_AO33X9_F_F_Z_F_01011);
		if (A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_10011,`HS65_LS_AO33X9_F_F_Z_F_10011);
		if (!A && B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_01111,`HS65_LS_AO33X9_F_F_Z_F_01111);
		if (A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_10111,`HS65_LS_AO33X9_F_F_Z_F_10111);
		if (!A && !B && C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_00111,`HS65_LS_AO33X9_F_F_Z_F_00111);
		if (!A && !B && !C && D && E) (F +=> Z) = (`HS65_LS_AO33X9_F_R_Z_R_00011,`HS65_LS_AO33X9_F_F_Z_F_00011);


	endspecify

endmodule // HS65_LS_AO33X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X1_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X1_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X1_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X1_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X1_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X1_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X1_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X1_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X1_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X1_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X1_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X1_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X1_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X1_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X1_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X1_D_F_Z_R_100 0.1

module HS65_LS_AOI112X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X1_A_F_Z_R_100,`HS65_LS_AOI112X1_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X1_B_F_Z_R_100,`HS65_LS_AOI112X1_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X1_C_F_Z_R_010,`HS65_LS_AOI112X1_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X1_C_F_Z_R_000,`HS65_LS_AOI112X1_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X1_C_F_Z_R_100,`HS65_LS_AOI112X1_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X1_D_F_Z_R_010,`HS65_LS_AOI112X1_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X1_D_F_Z_R_000,`HS65_LS_AOI112X1_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X1_D_F_Z_R_100,`HS65_LS_AOI112X1_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X13_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X13_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X13_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X13_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X13_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X13_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X13_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X13_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X13_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X13_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X13_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X13_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X13_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X13_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X13_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X13_D_F_Z_R_100 0.1

module HS65_LS_AOI112X13 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X13_A_F_Z_R_100,`HS65_LS_AOI112X13_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X13_B_F_Z_R_100,`HS65_LS_AOI112X13_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X13_C_F_Z_R_010,`HS65_LS_AOI112X13_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X13_C_F_Z_R_000,`HS65_LS_AOI112X13_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X13_C_F_Z_R_100,`HS65_LS_AOI112X13_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X13_D_F_Z_R_010,`HS65_LS_AOI112X13_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X13_D_F_Z_R_000,`HS65_LS_AOI112X13_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X13_D_F_Z_R_100,`HS65_LS_AOI112X13_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X18_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X18_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X18_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X18_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X18_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X18_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X18_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X18_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X18_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X18_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X18_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X18_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X18_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X18_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X18_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X18_D_F_Z_R_100 0.1

module HS65_LS_AOI112X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X18_A_F_Z_R_100,`HS65_LS_AOI112X18_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X18_B_F_Z_R_100,`HS65_LS_AOI112X18_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X18_C_F_Z_R_010,`HS65_LS_AOI112X18_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X18_C_F_Z_R_000,`HS65_LS_AOI112X18_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X18_C_F_Z_R_100,`HS65_LS_AOI112X18_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X18_D_F_Z_R_010,`HS65_LS_AOI112X18_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X18_D_F_Z_R_000,`HS65_LS_AOI112X18_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X18_D_F_Z_R_100,`HS65_LS_AOI112X18_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X2_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X2_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X2_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X2_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X2_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X2_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X2_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X2_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X2_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X2_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X2_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X2_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X2_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X2_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X2_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X2_D_F_Z_R_100 0.1

module HS65_LS_AOI112X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X2_A_F_Z_R_100,`HS65_LS_AOI112X2_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X2_B_F_Z_R_100,`HS65_LS_AOI112X2_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X2_C_F_Z_R_010,`HS65_LS_AOI112X2_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X2_C_F_Z_R_000,`HS65_LS_AOI112X2_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X2_C_F_Z_R_100,`HS65_LS_AOI112X2_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X2_D_F_Z_R_010,`HS65_LS_AOI112X2_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X2_D_F_Z_R_000,`HS65_LS_AOI112X2_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X2_D_F_Z_R_100,`HS65_LS_AOI112X2_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X26_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X26_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X26_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X26_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X26_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X26_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X26_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X26_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X26_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X26_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X26_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X26_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X26_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X26_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X26_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X26_D_F_Z_R_100 0.1

module HS65_LS_AOI112X26 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X26_A_F_Z_R_100,`HS65_LS_AOI112X26_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X26_B_F_Z_R_100,`HS65_LS_AOI112X26_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X26_C_F_Z_R_010,`HS65_LS_AOI112X26_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X26_C_F_Z_R_000,`HS65_LS_AOI112X26_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X26_C_F_Z_R_100,`HS65_LS_AOI112X26_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X26_D_F_Z_R_010,`HS65_LS_AOI112X26_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X26_D_F_Z_R_000,`HS65_LS_AOI112X26_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X26_D_F_Z_R_100,`HS65_LS_AOI112X26_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X26

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X3_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X3_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X3_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X3_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X3_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X3_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X3_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X3_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X3_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X3_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X3_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X3_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X3_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X3_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X3_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X3_D_F_Z_R_100 0.1

module HS65_LS_AOI112X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X3_A_F_Z_R_100,`HS65_LS_AOI112X3_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X3_B_F_Z_R_100,`HS65_LS_AOI112X3_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X3_C_F_Z_R_010,`HS65_LS_AOI112X3_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X3_C_F_Z_R_000,`HS65_LS_AOI112X3_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X3_C_F_Z_R_100,`HS65_LS_AOI112X3_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X3_D_F_Z_R_010,`HS65_LS_AOI112X3_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X3_D_F_Z_R_000,`HS65_LS_AOI112X3_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X3_D_F_Z_R_100,`HS65_LS_AOI112X3_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X35_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X35_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X35_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X35_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X35_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X35_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X35_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X35_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X35_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X35_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X35_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X35_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X35_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X35_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X35_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X35_D_F_Z_R_100 0.1

module HS65_LS_AOI112X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X35_A_F_Z_R_100,`HS65_LS_AOI112X35_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X35_B_F_Z_R_100,`HS65_LS_AOI112X35_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X35_C_F_Z_R_010,`HS65_LS_AOI112X35_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X35_C_F_Z_R_000,`HS65_LS_AOI112X35_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X35_C_F_Z_R_100,`HS65_LS_AOI112X35_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X35_D_F_Z_R_010,`HS65_LS_AOI112X35_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X35_D_F_Z_R_000,`HS65_LS_AOI112X35_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X35_D_F_Z_R_100,`HS65_LS_AOI112X35_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X4_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X4_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X4_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X4_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X4_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X4_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X4_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X4_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X4_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X4_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X4_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X4_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X4_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X4_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X4_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X4_D_F_Z_R_100 0.1

module HS65_LS_AOI112X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X4_A_F_Z_R_100,`HS65_LS_AOI112X4_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X4_B_F_Z_R_100,`HS65_LS_AOI112X4_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X4_C_F_Z_R_010,`HS65_LS_AOI112X4_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X4_C_F_Z_R_000,`HS65_LS_AOI112X4_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X4_C_F_Z_R_100,`HS65_LS_AOI112X4_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X4_D_F_Z_R_010,`HS65_LS_AOI112X4_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X4_D_F_Z_R_000,`HS65_LS_AOI112X4_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X4_D_F_Z_R_100,`HS65_LS_AOI112X4_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X7_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X7_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X7_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X7_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X7_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X7_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X7_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X7_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X7_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X7_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X7_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X7_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X7_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X7_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X7_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X7_D_F_Z_R_100 0.1

module HS65_LS_AOI112X7 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X7_A_F_Z_R_100,`HS65_LS_AOI112X7_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X7_B_F_Z_R_100,`HS65_LS_AOI112X7_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X7_C_F_Z_R_010,`HS65_LS_AOI112X7_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X7_C_F_Z_R_000,`HS65_LS_AOI112X7_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X7_C_F_Z_R_100,`HS65_LS_AOI112X7_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X7_D_F_Z_R_010,`HS65_LS_AOI112X7_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X7_D_F_Z_R_000,`HS65_LS_AOI112X7_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X7_D_F_Z_R_100,`HS65_LS_AOI112X7_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI112X9_A_R_Z_F_100 0.1
`define HS65_LS_AOI112X9_A_F_Z_R_100 0.1
`define HS65_LS_AOI112X9_B_R_Z_F_100 0.1
`define HS65_LS_AOI112X9_B_F_Z_R_100 0.1
`define HS65_LS_AOI112X9_C_R_Z_F_010 0.1
`define HS65_LS_AOI112X9_C_F_Z_R_010 0.1
`define HS65_LS_AOI112X9_C_R_Z_F_000 0.1
`define HS65_LS_AOI112X9_C_F_Z_R_000 0.1
`define HS65_LS_AOI112X9_C_R_Z_F_100 0.1
`define HS65_LS_AOI112X9_C_F_Z_R_100 0.1
`define HS65_LS_AOI112X9_D_R_Z_F_010 0.1
`define HS65_LS_AOI112X9_D_F_Z_R_010 0.1
`define HS65_LS_AOI112X9_D_R_Z_F_000 0.1
`define HS65_LS_AOI112X9_D_F_Z_R_000 0.1
`define HS65_LS_AOI112X9_D_R_Z_F_100 0.1
`define HS65_LS_AOI112X9_D_F_Z_R_100 0.1

module HS65_LS_AOI112X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI112X9_A_F_Z_R_100,`HS65_LS_AOI112X9_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI112X9_B_F_Z_R_100,`HS65_LS_AOI112X9_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI112X9_C_F_Z_R_010,`HS65_LS_AOI112X9_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X9_C_F_Z_R_000,`HS65_LS_AOI112X9_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI112X9_C_F_Z_R_100,`HS65_LS_AOI112X9_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI112X9_D_F_Z_R_010,`HS65_LS_AOI112X9_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X9_D_F_Z_R_000,`HS65_LS_AOI112X9_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI112X9_D_F_Z_R_100,`HS65_LS_AOI112X9_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI112X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X12_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X12_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X12_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X12_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X12_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X12_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X12_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X12_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X12_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X12_C_F_Z_R_01 0.1

module HS65_LS_AOI12X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X12_A_F_Z_R_10,`HS65_LS_AOI12X12_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X12_B_F_Z_R_10,`HS65_LS_AOI12X12_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X12_C_F_Z_R_00,`HS65_LS_AOI12X12_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X12_C_F_Z_R_10,`HS65_LS_AOI12X12_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X12_C_F_Z_R_01,`HS65_LS_AOI12X12_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X17_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X17_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X17_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X17_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X17_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X17_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X17_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X17_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X17_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X17_C_F_Z_R_01 0.1

module HS65_LS_AOI12X17 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X17_A_F_Z_R_10,`HS65_LS_AOI12X17_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X17_B_F_Z_R_10,`HS65_LS_AOI12X17_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X17_C_F_Z_R_00,`HS65_LS_AOI12X17_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X17_C_F_Z_R_10,`HS65_LS_AOI12X17_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X17_C_F_Z_R_01,`HS65_LS_AOI12X17_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X2_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X2_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X2_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X2_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X2_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X2_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X2_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X2_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X2_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X2_C_F_Z_R_01 0.1

module HS65_LS_AOI12X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X2_A_F_Z_R_10,`HS65_LS_AOI12X2_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X2_B_F_Z_R_10,`HS65_LS_AOI12X2_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X2_C_F_Z_R_00,`HS65_LS_AOI12X2_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X2_C_F_Z_R_10,`HS65_LS_AOI12X2_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X2_C_F_Z_R_01,`HS65_LS_AOI12X2_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X23_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X23_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X23_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X23_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X23_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X23_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X23_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X23_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X23_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X23_C_F_Z_R_01 0.1

module HS65_LS_AOI12X23 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X23_A_F_Z_R_10,`HS65_LS_AOI12X23_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X23_B_F_Z_R_10,`HS65_LS_AOI12X23_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X23_C_F_Z_R_00,`HS65_LS_AOI12X23_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X23_C_F_Z_R_10,`HS65_LS_AOI12X23_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X23_C_F_Z_R_01,`HS65_LS_AOI12X23_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X23

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X3_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X3_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X3_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X3_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X3_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X3_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X3_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X3_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X3_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X3_C_F_Z_R_01 0.1

module HS65_LS_AOI12X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X3_A_F_Z_R_10,`HS65_LS_AOI12X3_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X3_B_F_Z_R_10,`HS65_LS_AOI12X3_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X3_C_F_Z_R_00,`HS65_LS_AOI12X3_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X3_C_F_Z_R_10,`HS65_LS_AOI12X3_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X3_C_F_Z_R_01,`HS65_LS_AOI12X3_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X35_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X35_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X35_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X35_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X35_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X35_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X35_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X35_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X35_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X35_C_F_Z_R_01 0.1

module HS65_LS_AOI12X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X35_A_F_Z_R_10,`HS65_LS_AOI12X35_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X35_B_F_Z_R_10,`HS65_LS_AOI12X35_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X35_C_F_Z_R_00,`HS65_LS_AOI12X35_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X35_C_F_Z_R_10,`HS65_LS_AOI12X35_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X35_C_F_Z_R_01,`HS65_LS_AOI12X35_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X4_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X4_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X4_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X4_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X4_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X4_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X4_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X4_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X4_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X4_C_F_Z_R_01 0.1

module HS65_LS_AOI12X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X4_A_F_Z_R_10,`HS65_LS_AOI12X4_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X4_B_F_Z_R_10,`HS65_LS_AOI12X4_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X4_C_F_Z_R_00,`HS65_LS_AOI12X4_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X4_C_F_Z_R_10,`HS65_LS_AOI12X4_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X4_C_F_Z_R_01,`HS65_LS_AOI12X4_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X46_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X46_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X46_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X46_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X46_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X46_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X46_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X46_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X46_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X46_C_F_Z_R_01 0.1

module HS65_LS_AOI12X46 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X46_A_F_Z_R_10,`HS65_LS_AOI12X46_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X46_B_F_Z_R_10,`HS65_LS_AOI12X46_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X46_C_F_Z_R_00,`HS65_LS_AOI12X46_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X46_C_F_Z_R_10,`HS65_LS_AOI12X46_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X46_C_F_Z_R_01,`HS65_LS_AOI12X46_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X46

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X6_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X6_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X6_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X6_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X6_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X6_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X6_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X6_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X6_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X6_C_F_Z_R_01 0.1

module HS65_LS_AOI12X6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X6_A_F_Z_R_10,`HS65_LS_AOI12X6_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X6_B_F_Z_R_10,`HS65_LS_AOI12X6_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X6_C_F_Z_R_00,`HS65_LS_AOI12X6_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X6_C_F_Z_R_10,`HS65_LS_AOI12X6_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X6_C_F_Z_R_01,`HS65_LS_AOI12X6_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI12X9_A_R_Z_F_10 0.1
`define HS65_LS_AOI12X9_A_F_Z_R_10 0.1
`define HS65_LS_AOI12X9_B_R_Z_F_10 0.1
`define HS65_LS_AOI12X9_B_F_Z_R_10 0.1
`define HS65_LS_AOI12X9_C_R_Z_F_00 0.1
`define HS65_LS_AOI12X9_C_F_Z_R_00 0.1
`define HS65_LS_AOI12X9_C_R_Z_F_10 0.1
`define HS65_LS_AOI12X9_C_F_Z_R_10 0.1
`define HS65_LS_AOI12X9_C_R_Z_F_01 0.1
`define HS65_LS_AOI12X9_C_F_Z_R_01 0.1

module HS65_LS_AOI12X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI12X9_A_F_Z_R_10,`HS65_LS_AOI12X9_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI12X9_B_F_Z_R_10,`HS65_LS_AOI12X9_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI12X9_C_F_Z_R_00,`HS65_LS_AOI12X9_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI12X9_C_F_Z_R_10,`HS65_LS_AOI12X9_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI12X9_C_F_Z_R_01,`HS65_LS_AOI12X9_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI12X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X10_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X10_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X10_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X10_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X10_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X10_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X10_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X10_D_F_Z_R_001 0.1

module HS65_LS_AOI13X10 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X10_A_F_Z_R_110,`HS65_LS_AOI13X10_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X10_B_F_Z_R_110,`HS65_LS_AOI13X10_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X10_C_F_Z_R_110,`HS65_LS_AOI13X10_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_110,`HS65_LS_AOI13X10_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_101,`HS65_LS_AOI13X10_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_011,`HS65_LS_AOI13X10_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_000,`HS65_LS_AOI13X10_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_100,`HS65_LS_AOI13X10_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_010,`HS65_LS_AOI13X10_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X10_D_F_Z_R_001,`HS65_LS_AOI13X10_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X15_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X15_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X15_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X15_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X15_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X15_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X15_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X15_D_F_Z_R_001 0.1

module HS65_LS_AOI13X15 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X15_A_F_Z_R_110,`HS65_LS_AOI13X15_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X15_B_F_Z_R_110,`HS65_LS_AOI13X15_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X15_C_F_Z_R_110,`HS65_LS_AOI13X15_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_110,`HS65_LS_AOI13X15_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_101,`HS65_LS_AOI13X15_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_011,`HS65_LS_AOI13X15_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_000,`HS65_LS_AOI13X15_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_100,`HS65_LS_AOI13X15_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_010,`HS65_LS_AOI13X15_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X15_D_F_Z_R_001,`HS65_LS_AOI13X15_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X2_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X2_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X2_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X2_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X2_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X2_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X2_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X2_D_F_Z_R_001 0.1

module HS65_LS_AOI13X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X2_A_F_Z_R_110,`HS65_LS_AOI13X2_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X2_B_F_Z_R_110,`HS65_LS_AOI13X2_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X2_C_F_Z_R_110,`HS65_LS_AOI13X2_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_110,`HS65_LS_AOI13X2_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_101,`HS65_LS_AOI13X2_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_011,`HS65_LS_AOI13X2_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_000,`HS65_LS_AOI13X2_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_100,`HS65_LS_AOI13X2_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_010,`HS65_LS_AOI13X2_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X2_D_F_Z_R_001,`HS65_LS_AOI13X2_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X20_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X20_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X20_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X20_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X20_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X20_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X20_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X20_D_F_Z_R_001 0.1

module HS65_LS_AOI13X20 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X20_A_F_Z_R_110,`HS65_LS_AOI13X20_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X20_B_F_Z_R_110,`HS65_LS_AOI13X20_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X20_C_F_Z_R_110,`HS65_LS_AOI13X20_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_110,`HS65_LS_AOI13X20_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_101,`HS65_LS_AOI13X20_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_011,`HS65_LS_AOI13X20_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_000,`HS65_LS_AOI13X20_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_100,`HS65_LS_AOI13X20_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_010,`HS65_LS_AOI13X20_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X20_D_F_Z_R_001,`HS65_LS_AOI13X20_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X3_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X3_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X3_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X3_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X3_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X3_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X3_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X3_D_F_Z_R_001 0.1

module HS65_LS_AOI13X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X3_A_F_Z_R_110,`HS65_LS_AOI13X3_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X3_B_F_Z_R_110,`HS65_LS_AOI13X3_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X3_C_F_Z_R_110,`HS65_LS_AOI13X3_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_110,`HS65_LS_AOI13X3_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_101,`HS65_LS_AOI13X3_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_011,`HS65_LS_AOI13X3_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_000,`HS65_LS_AOI13X3_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_100,`HS65_LS_AOI13X3_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_010,`HS65_LS_AOI13X3_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X3_D_F_Z_R_001,`HS65_LS_AOI13X3_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X31_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X31_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X31_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X31_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X31_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X31_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X31_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X31_D_F_Z_R_001 0.1

module HS65_LS_AOI13X31 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X31_A_F_Z_R_110,`HS65_LS_AOI13X31_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X31_B_F_Z_R_110,`HS65_LS_AOI13X31_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X31_C_F_Z_R_110,`HS65_LS_AOI13X31_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_110,`HS65_LS_AOI13X31_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_101,`HS65_LS_AOI13X31_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_011,`HS65_LS_AOI13X31_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_000,`HS65_LS_AOI13X31_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_100,`HS65_LS_AOI13X31_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_010,`HS65_LS_AOI13X31_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X31_D_F_Z_R_001,`HS65_LS_AOI13X31_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X31

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X4_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X4_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X4_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X4_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X4_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X4_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X4_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X4_D_F_Z_R_001 0.1

module HS65_LS_AOI13X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X4_A_F_Z_R_110,`HS65_LS_AOI13X4_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X4_B_F_Z_R_110,`HS65_LS_AOI13X4_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X4_C_F_Z_R_110,`HS65_LS_AOI13X4_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_110,`HS65_LS_AOI13X4_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_101,`HS65_LS_AOI13X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_011,`HS65_LS_AOI13X4_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_000,`HS65_LS_AOI13X4_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_100,`HS65_LS_AOI13X4_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_010,`HS65_LS_AOI13X4_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X4_D_F_Z_R_001,`HS65_LS_AOI13X4_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X41_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X41_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X41_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X41_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X41_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X41_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X41_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X41_D_F_Z_R_001 0.1

module HS65_LS_AOI13X41 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X41_A_F_Z_R_110,`HS65_LS_AOI13X41_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X41_B_F_Z_R_110,`HS65_LS_AOI13X41_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X41_C_F_Z_R_110,`HS65_LS_AOI13X41_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_110,`HS65_LS_AOI13X41_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_101,`HS65_LS_AOI13X41_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_011,`HS65_LS_AOI13X41_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_000,`HS65_LS_AOI13X41_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_100,`HS65_LS_AOI13X41_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_010,`HS65_LS_AOI13X41_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X41_D_F_Z_R_001,`HS65_LS_AOI13X41_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X41

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X5_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X5_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X5_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X5_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X5_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X5_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X5_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X5_D_F_Z_R_001 0.1

module HS65_LS_AOI13X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X5_A_F_Z_R_110,`HS65_LS_AOI13X5_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X5_B_F_Z_R_110,`HS65_LS_AOI13X5_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X5_C_F_Z_R_110,`HS65_LS_AOI13X5_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_110,`HS65_LS_AOI13X5_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_101,`HS65_LS_AOI13X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_011,`HS65_LS_AOI13X5_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_000,`HS65_LS_AOI13X5_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_100,`HS65_LS_AOI13X5_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_010,`HS65_LS_AOI13X5_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X5_D_F_Z_R_001,`HS65_LS_AOI13X5_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI13X8_A_R_Z_F_110 0.1
`define HS65_LS_AOI13X8_A_F_Z_R_110 0.1
`define HS65_LS_AOI13X8_B_R_Z_F_110 0.1
`define HS65_LS_AOI13X8_B_F_Z_R_110 0.1
`define HS65_LS_AOI13X8_C_R_Z_F_110 0.1
`define HS65_LS_AOI13X8_C_F_Z_R_110 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_110 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_110 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_101 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_101 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_011 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_011 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_000 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_000 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_100 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_100 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_010 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_010 0.1
`define HS65_LS_AOI13X8_D_R_Z_F_001 0.1
`define HS65_LS_AOI13X8_D_F_Z_R_001 0.1

module HS65_LS_AOI13X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI13X8_A_F_Z_R_110,`HS65_LS_AOI13X8_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI13X8_B_F_Z_R_110,`HS65_LS_AOI13X8_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI13X8_C_F_Z_R_110,`HS65_LS_AOI13X8_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_110,`HS65_LS_AOI13X8_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_101,`HS65_LS_AOI13X8_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_011,`HS65_LS_AOI13X8_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_000,`HS65_LS_AOI13X8_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_100,`HS65_LS_AOI13X8_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_010,`HS65_LS_AOI13X8_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI13X8_D_F_Z_R_001,`HS65_LS_AOI13X8_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI13X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X1_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X1_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X1_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X1_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X1_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X1_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X1_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X1_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X1_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X1_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X1_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X1_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X1_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X1_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X1_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X1_D_F_Z_R_100 0.1

module HS65_LS_AOI211X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X1_A_F_Z_R_100,`HS65_LS_AOI211X1_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X1_B_F_Z_R_100,`HS65_LS_AOI211X1_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X1_C_F_Z_R_010,`HS65_LS_AOI211X1_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X1_C_F_Z_R_000,`HS65_LS_AOI211X1_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X1_C_F_Z_R_100,`HS65_LS_AOI211X1_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X1_D_F_Z_R_010,`HS65_LS_AOI211X1_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X1_D_F_Z_R_000,`HS65_LS_AOI211X1_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X1_D_F_Z_R_100,`HS65_LS_AOI211X1_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X13_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X13_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X13_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X13_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X13_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X13_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X13_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X13_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X13_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X13_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X13_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X13_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X13_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X13_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X13_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X13_D_F_Z_R_100 0.1

module HS65_LS_AOI211X13 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X13_A_F_Z_R_100,`HS65_LS_AOI211X13_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X13_B_F_Z_R_100,`HS65_LS_AOI211X13_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X13_C_F_Z_R_010,`HS65_LS_AOI211X13_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X13_C_F_Z_R_000,`HS65_LS_AOI211X13_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X13_C_F_Z_R_100,`HS65_LS_AOI211X13_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X13_D_F_Z_R_010,`HS65_LS_AOI211X13_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X13_D_F_Z_R_000,`HS65_LS_AOI211X13_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X13_D_F_Z_R_100,`HS65_LS_AOI211X13_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X18_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X18_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X18_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X18_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X18_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X18_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X18_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X18_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X18_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X18_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X18_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X18_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X18_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X18_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X18_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X18_D_F_Z_R_100 0.1

module HS65_LS_AOI211X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X18_A_F_Z_R_100,`HS65_LS_AOI211X18_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X18_B_F_Z_R_100,`HS65_LS_AOI211X18_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X18_C_F_Z_R_010,`HS65_LS_AOI211X18_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X18_C_F_Z_R_000,`HS65_LS_AOI211X18_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X18_C_F_Z_R_100,`HS65_LS_AOI211X18_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X18_D_F_Z_R_010,`HS65_LS_AOI211X18_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X18_D_F_Z_R_000,`HS65_LS_AOI211X18_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X18_D_F_Z_R_100,`HS65_LS_AOI211X18_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X2_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X2_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X2_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X2_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X2_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X2_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X2_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X2_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X2_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X2_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X2_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X2_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X2_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X2_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X2_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X2_D_F_Z_R_100 0.1

module HS65_LS_AOI211X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X2_A_F_Z_R_100,`HS65_LS_AOI211X2_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X2_B_F_Z_R_100,`HS65_LS_AOI211X2_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X2_C_F_Z_R_010,`HS65_LS_AOI211X2_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X2_C_F_Z_R_000,`HS65_LS_AOI211X2_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X2_C_F_Z_R_100,`HS65_LS_AOI211X2_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X2_D_F_Z_R_010,`HS65_LS_AOI211X2_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X2_D_F_Z_R_000,`HS65_LS_AOI211X2_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X2_D_F_Z_R_100,`HS65_LS_AOI211X2_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X26_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X26_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X26_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X26_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X26_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X26_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X26_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X26_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X26_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X26_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X26_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X26_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X26_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X26_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X26_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X26_D_F_Z_R_100 0.1

module HS65_LS_AOI211X26 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X26_A_F_Z_R_100,`HS65_LS_AOI211X26_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X26_B_F_Z_R_100,`HS65_LS_AOI211X26_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X26_C_F_Z_R_010,`HS65_LS_AOI211X26_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X26_C_F_Z_R_000,`HS65_LS_AOI211X26_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X26_C_F_Z_R_100,`HS65_LS_AOI211X26_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X26_D_F_Z_R_010,`HS65_LS_AOI211X26_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X26_D_F_Z_R_000,`HS65_LS_AOI211X26_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X26_D_F_Z_R_100,`HS65_LS_AOI211X26_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X26

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X3_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X3_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X3_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X3_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X3_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X3_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X3_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X3_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X3_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X3_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X3_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X3_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X3_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X3_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X3_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X3_D_F_Z_R_100 0.1

module HS65_LS_AOI211X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X3_A_F_Z_R_100,`HS65_LS_AOI211X3_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X3_B_F_Z_R_100,`HS65_LS_AOI211X3_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X3_C_F_Z_R_010,`HS65_LS_AOI211X3_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X3_C_F_Z_R_000,`HS65_LS_AOI211X3_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X3_C_F_Z_R_100,`HS65_LS_AOI211X3_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X3_D_F_Z_R_010,`HS65_LS_AOI211X3_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X3_D_F_Z_R_000,`HS65_LS_AOI211X3_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X3_D_F_Z_R_100,`HS65_LS_AOI211X3_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X35_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X35_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X35_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X35_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X35_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X35_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X35_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X35_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X35_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X35_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X35_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X35_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X35_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X35_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X35_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X35_D_F_Z_R_100 0.1

module HS65_LS_AOI211X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X35_A_F_Z_R_100,`HS65_LS_AOI211X35_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X35_B_F_Z_R_100,`HS65_LS_AOI211X35_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X35_C_F_Z_R_010,`HS65_LS_AOI211X35_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X35_C_F_Z_R_000,`HS65_LS_AOI211X35_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X35_C_F_Z_R_100,`HS65_LS_AOI211X35_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X35_D_F_Z_R_010,`HS65_LS_AOI211X35_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X35_D_F_Z_R_000,`HS65_LS_AOI211X35_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X35_D_F_Z_R_100,`HS65_LS_AOI211X35_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X4_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X4_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X4_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X4_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X4_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X4_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X4_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X4_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X4_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X4_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X4_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X4_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X4_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X4_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X4_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X4_D_F_Z_R_100 0.1

module HS65_LS_AOI211X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X4_A_F_Z_R_100,`HS65_LS_AOI211X4_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X4_B_F_Z_R_100,`HS65_LS_AOI211X4_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X4_C_F_Z_R_010,`HS65_LS_AOI211X4_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X4_C_F_Z_R_000,`HS65_LS_AOI211X4_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X4_C_F_Z_R_100,`HS65_LS_AOI211X4_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X4_D_F_Z_R_010,`HS65_LS_AOI211X4_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X4_D_F_Z_R_000,`HS65_LS_AOI211X4_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X4_D_F_Z_R_100,`HS65_LS_AOI211X4_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X7_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X7_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X7_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X7_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X7_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X7_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X7_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X7_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X7_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X7_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X7_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X7_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X7_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X7_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X7_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X7_D_F_Z_R_100 0.1

module HS65_LS_AOI211X7 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X7_A_F_Z_R_100,`HS65_LS_AOI211X7_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X7_B_F_Z_R_100,`HS65_LS_AOI211X7_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X7_C_F_Z_R_010,`HS65_LS_AOI211X7_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X7_C_F_Z_R_000,`HS65_LS_AOI211X7_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X7_C_F_Z_R_100,`HS65_LS_AOI211X7_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X7_D_F_Z_R_010,`HS65_LS_AOI211X7_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X7_D_F_Z_R_000,`HS65_LS_AOI211X7_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X7_D_F_Z_R_100,`HS65_LS_AOI211X7_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI211X9_A_R_Z_F_100 0.1
`define HS65_LS_AOI211X9_A_F_Z_R_100 0.1
`define HS65_LS_AOI211X9_B_R_Z_F_100 0.1
`define HS65_LS_AOI211X9_B_F_Z_R_100 0.1
`define HS65_LS_AOI211X9_C_R_Z_F_010 0.1
`define HS65_LS_AOI211X9_C_F_Z_R_010 0.1
`define HS65_LS_AOI211X9_C_R_Z_F_000 0.1
`define HS65_LS_AOI211X9_C_F_Z_R_000 0.1
`define HS65_LS_AOI211X9_C_R_Z_F_100 0.1
`define HS65_LS_AOI211X9_C_F_Z_R_100 0.1
`define HS65_LS_AOI211X9_D_R_Z_F_010 0.1
`define HS65_LS_AOI211X9_D_F_Z_R_010 0.1
`define HS65_LS_AOI211X9_D_R_Z_F_000 0.1
`define HS65_LS_AOI211X9_D_F_Z_R_000 0.1
`define HS65_LS_AOI211X9_D_R_Z_F_100 0.1
`define HS65_LS_AOI211X9_D_F_Z_R_100 0.1

module HS65_LS_AOI211X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI211X9_A_F_Z_R_100,`HS65_LS_AOI211X9_A_R_Z_F_100);
		(B -=> Z) = (`HS65_LS_AOI211X9_B_F_Z_R_100,`HS65_LS_AOI211X9_B_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_AOI211X9_C_F_Z_R_010,`HS65_LS_AOI211X9_C_R_Z_F_010);
		if (!A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X9_C_F_Z_R_000,`HS65_LS_AOI211X9_C_R_Z_F_000);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_AOI211X9_C_F_Z_R_100,`HS65_LS_AOI211X9_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI211X9_D_F_Z_R_010,`HS65_LS_AOI211X9_D_R_Z_F_010);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X9_D_F_Z_R_000,`HS65_LS_AOI211X9_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI211X9_D_F_Z_R_100,`HS65_LS_AOI211X9_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_AOI211X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI212X13_A_R_Z_F_1000 0.1
`define HS65_LS_AOI212X13_A_F_Z_R_1000 0.1
`define HS65_LS_AOI212X13_A_R_Z_F_1100 0.1
`define HS65_LS_AOI212X13_A_F_Z_R_1100 0.1
`define HS65_LS_AOI212X13_A_R_Z_F_1010 0.1
`define HS65_LS_AOI212X13_A_F_Z_R_1010 0.1
`define HS65_LS_AOI212X13_B_R_Z_F_1000 0.1
`define HS65_LS_AOI212X13_B_F_Z_R_1000 0.1
`define HS65_LS_AOI212X13_B_R_Z_F_1100 0.1
`define HS65_LS_AOI212X13_B_F_Z_R_1100 0.1
`define HS65_LS_AOI212X13_B_R_Z_F_1010 0.1
`define HS65_LS_AOI212X13_B_F_Z_R_1010 0.1
`define HS65_LS_AOI212X13_C_R_Z_F_0010 0.1
`define HS65_LS_AOI212X13_C_F_Z_R_0010 0.1
`define HS65_LS_AOI212X13_C_R_Z_F_1010 0.1
`define HS65_LS_AOI212X13_C_F_Z_R_1010 0.1
`define HS65_LS_AOI212X13_C_R_Z_F_0110 0.1
`define HS65_LS_AOI212X13_C_F_Z_R_0110 0.1
`define HS65_LS_AOI212X13_D_R_Z_F_0010 0.1
`define HS65_LS_AOI212X13_D_F_Z_R_0010 0.1
`define HS65_LS_AOI212X13_D_R_Z_F_1010 0.1
`define HS65_LS_AOI212X13_D_F_Z_R_1010 0.1
`define HS65_LS_AOI212X13_D_R_Z_F_0110 0.1
`define HS65_LS_AOI212X13_D_F_Z_R_0110 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_1000 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_1000 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_1010 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_1010 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_1001 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_1001 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0110 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0110 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0101 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0101 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0000 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0000 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0010 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0010 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0001 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0001 0.1
`define HS65_LS_AOI212X13_E_R_Z_F_0100 0.1
`define HS65_LS_AOI212X13_E_F_Z_R_0100 0.1

module HS65_LS_AOI212X13 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X13_A_F_Z_R_1000,`HS65_LS_AOI212X13_A_R_Z_F_1000);
		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X13_A_F_Z_R_1100,`HS65_LS_AOI212X13_A_R_Z_F_1100);
		if (B && !C && D && !E) (A -=> Z) = (`HS65_LS_AOI212X13_A_F_Z_R_1010,`HS65_LS_AOI212X13_A_R_Z_F_1010);
		if (A && !C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X13_B_F_Z_R_1000,`HS65_LS_AOI212X13_B_R_Z_F_1000);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X13_B_F_Z_R_1100,`HS65_LS_AOI212X13_B_R_Z_F_1100);
		if (A && !C && D && !E) (B -=> Z) = (`HS65_LS_AOI212X13_B_F_Z_R_1010,`HS65_LS_AOI212X13_B_R_Z_F_1010);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X13_C_F_Z_R_0010,`HS65_LS_AOI212X13_C_R_Z_F_0010);
		if (A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X13_C_F_Z_R_1010,`HS65_LS_AOI212X13_C_R_Z_F_1010);
		if (!A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X13_C_F_Z_R_0110,`HS65_LS_AOI212X13_C_R_Z_F_0110);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X13_D_F_Z_R_0010,`HS65_LS_AOI212X13_D_R_Z_F_0010);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X13_D_F_Z_R_1010,`HS65_LS_AOI212X13_D_R_Z_F_1010);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X13_D_F_Z_R_0110,`HS65_LS_AOI212X13_D_R_Z_F_0110);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_1000,`HS65_LS_AOI212X13_E_R_Z_F_1000);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_1010,`HS65_LS_AOI212X13_E_R_Z_F_1010);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_1001,`HS65_LS_AOI212X13_E_R_Z_F_1001);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0110,`HS65_LS_AOI212X13_E_R_Z_F_0110);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0101,`HS65_LS_AOI212X13_E_R_Z_F_0101);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0000,`HS65_LS_AOI212X13_E_R_Z_F_0000);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0010,`HS65_LS_AOI212X13_E_R_Z_F_0010);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0001,`HS65_LS_AOI212X13_E_R_Z_F_0001);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X13_E_F_Z_R_0100,`HS65_LS_AOI212X13_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI212X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI212X18_A_R_Z_F_1000 0.1
`define HS65_LS_AOI212X18_A_F_Z_R_1000 0.1
`define HS65_LS_AOI212X18_A_R_Z_F_1100 0.1
`define HS65_LS_AOI212X18_A_F_Z_R_1100 0.1
`define HS65_LS_AOI212X18_A_R_Z_F_1010 0.1
`define HS65_LS_AOI212X18_A_F_Z_R_1010 0.1
`define HS65_LS_AOI212X18_B_R_Z_F_1000 0.1
`define HS65_LS_AOI212X18_B_F_Z_R_1000 0.1
`define HS65_LS_AOI212X18_B_R_Z_F_1100 0.1
`define HS65_LS_AOI212X18_B_F_Z_R_1100 0.1
`define HS65_LS_AOI212X18_B_R_Z_F_1010 0.1
`define HS65_LS_AOI212X18_B_F_Z_R_1010 0.1
`define HS65_LS_AOI212X18_C_R_Z_F_0010 0.1
`define HS65_LS_AOI212X18_C_F_Z_R_0010 0.1
`define HS65_LS_AOI212X18_C_R_Z_F_1010 0.1
`define HS65_LS_AOI212X18_C_F_Z_R_1010 0.1
`define HS65_LS_AOI212X18_C_R_Z_F_0110 0.1
`define HS65_LS_AOI212X18_C_F_Z_R_0110 0.1
`define HS65_LS_AOI212X18_D_R_Z_F_0010 0.1
`define HS65_LS_AOI212X18_D_F_Z_R_0010 0.1
`define HS65_LS_AOI212X18_D_R_Z_F_1010 0.1
`define HS65_LS_AOI212X18_D_F_Z_R_1010 0.1
`define HS65_LS_AOI212X18_D_R_Z_F_0110 0.1
`define HS65_LS_AOI212X18_D_F_Z_R_0110 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_1000 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_1000 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_1010 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_1010 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_1001 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_1001 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0110 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0110 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0101 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0101 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0000 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0000 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0010 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0010 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0001 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0001 0.1
`define HS65_LS_AOI212X18_E_R_Z_F_0100 0.1
`define HS65_LS_AOI212X18_E_F_Z_R_0100 0.1

module HS65_LS_AOI212X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X18_A_F_Z_R_1000,`HS65_LS_AOI212X18_A_R_Z_F_1000);
		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X18_A_F_Z_R_1100,`HS65_LS_AOI212X18_A_R_Z_F_1100);
		if (B && !C && D && !E) (A -=> Z) = (`HS65_LS_AOI212X18_A_F_Z_R_1010,`HS65_LS_AOI212X18_A_R_Z_F_1010);
		if (A && !C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X18_B_F_Z_R_1000,`HS65_LS_AOI212X18_B_R_Z_F_1000);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X18_B_F_Z_R_1100,`HS65_LS_AOI212X18_B_R_Z_F_1100);
		if (A && !C && D && !E) (B -=> Z) = (`HS65_LS_AOI212X18_B_F_Z_R_1010,`HS65_LS_AOI212X18_B_R_Z_F_1010);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X18_C_F_Z_R_0010,`HS65_LS_AOI212X18_C_R_Z_F_0010);
		if (A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X18_C_F_Z_R_1010,`HS65_LS_AOI212X18_C_R_Z_F_1010);
		if (!A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X18_C_F_Z_R_0110,`HS65_LS_AOI212X18_C_R_Z_F_0110);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X18_D_F_Z_R_0010,`HS65_LS_AOI212X18_D_R_Z_F_0010);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X18_D_F_Z_R_1010,`HS65_LS_AOI212X18_D_R_Z_F_1010);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X18_D_F_Z_R_0110,`HS65_LS_AOI212X18_D_R_Z_F_0110);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_1000,`HS65_LS_AOI212X18_E_R_Z_F_1000);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_1010,`HS65_LS_AOI212X18_E_R_Z_F_1010);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_1001,`HS65_LS_AOI212X18_E_R_Z_F_1001);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0110,`HS65_LS_AOI212X18_E_R_Z_F_0110);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0101,`HS65_LS_AOI212X18_E_R_Z_F_0101);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0000,`HS65_LS_AOI212X18_E_R_Z_F_0000);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0010,`HS65_LS_AOI212X18_E_R_Z_F_0010);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0001,`HS65_LS_AOI212X18_E_R_Z_F_0001);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X18_E_F_Z_R_0100,`HS65_LS_AOI212X18_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI212X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI212X2_A_R_Z_F_1000 0.1
`define HS65_LS_AOI212X2_A_F_Z_R_1000 0.1
`define HS65_LS_AOI212X2_A_R_Z_F_1100 0.1
`define HS65_LS_AOI212X2_A_F_Z_R_1100 0.1
`define HS65_LS_AOI212X2_A_R_Z_F_1010 0.1
`define HS65_LS_AOI212X2_A_F_Z_R_1010 0.1
`define HS65_LS_AOI212X2_B_R_Z_F_1000 0.1
`define HS65_LS_AOI212X2_B_F_Z_R_1000 0.1
`define HS65_LS_AOI212X2_B_R_Z_F_1100 0.1
`define HS65_LS_AOI212X2_B_F_Z_R_1100 0.1
`define HS65_LS_AOI212X2_B_R_Z_F_1010 0.1
`define HS65_LS_AOI212X2_B_F_Z_R_1010 0.1
`define HS65_LS_AOI212X2_C_R_Z_F_0010 0.1
`define HS65_LS_AOI212X2_C_F_Z_R_0010 0.1
`define HS65_LS_AOI212X2_C_R_Z_F_1010 0.1
`define HS65_LS_AOI212X2_C_F_Z_R_1010 0.1
`define HS65_LS_AOI212X2_C_R_Z_F_0110 0.1
`define HS65_LS_AOI212X2_C_F_Z_R_0110 0.1
`define HS65_LS_AOI212X2_D_R_Z_F_0010 0.1
`define HS65_LS_AOI212X2_D_F_Z_R_0010 0.1
`define HS65_LS_AOI212X2_D_R_Z_F_1010 0.1
`define HS65_LS_AOI212X2_D_F_Z_R_1010 0.1
`define HS65_LS_AOI212X2_D_R_Z_F_0110 0.1
`define HS65_LS_AOI212X2_D_F_Z_R_0110 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_1000 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_1000 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_1010 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_1010 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_1001 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_1001 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0110 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0110 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0101 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0101 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0000 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0000 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0010 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0010 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0001 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0001 0.1
`define HS65_LS_AOI212X2_E_R_Z_F_0100 0.1
`define HS65_LS_AOI212X2_E_F_Z_R_0100 0.1

module HS65_LS_AOI212X2 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X2_A_F_Z_R_1000,`HS65_LS_AOI212X2_A_R_Z_F_1000);
		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X2_A_F_Z_R_1100,`HS65_LS_AOI212X2_A_R_Z_F_1100);
		if (B && !C && D && !E) (A -=> Z) = (`HS65_LS_AOI212X2_A_F_Z_R_1010,`HS65_LS_AOI212X2_A_R_Z_F_1010);
		if (A && !C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X2_B_F_Z_R_1000,`HS65_LS_AOI212X2_B_R_Z_F_1000);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X2_B_F_Z_R_1100,`HS65_LS_AOI212X2_B_R_Z_F_1100);
		if (A && !C && D && !E) (B -=> Z) = (`HS65_LS_AOI212X2_B_F_Z_R_1010,`HS65_LS_AOI212X2_B_R_Z_F_1010);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X2_C_F_Z_R_0010,`HS65_LS_AOI212X2_C_R_Z_F_0010);
		if (A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X2_C_F_Z_R_1010,`HS65_LS_AOI212X2_C_R_Z_F_1010);
		if (!A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X2_C_F_Z_R_0110,`HS65_LS_AOI212X2_C_R_Z_F_0110);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X2_D_F_Z_R_0010,`HS65_LS_AOI212X2_D_R_Z_F_0010);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X2_D_F_Z_R_1010,`HS65_LS_AOI212X2_D_R_Z_F_1010);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X2_D_F_Z_R_0110,`HS65_LS_AOI212X2_D_R_Z_F_0110);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_1000,`HS65_LS_AOI212X2_E_R_Z_F_1000);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_1010,`HS65_LS_AOI212X2_E_R_Z_F_1010);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_1001,`HS65_LS_AOI212X2_E_R_Z_F_1001);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0110,`HS65_LS_AOI212X2_E_R_Z_F_0110);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0101,`HS65_LS_AOI212X2_E_R_Z_F_0101);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0000,`HS65_LS_AOI212X2_E_R_Z_F_0000);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0010,`HS65_LS_AOI212X2_E_R_Z_F_0010);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0001,`HS65_LS_AOI212X2_E_R_Z_F_0001);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X2_E_F_Z_R_0100,`HS65_LS_AOI212X2_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI212X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI212X4_A_R_Z_F_1000 0.1
`define HS65_LS_AOI212X4_A_F_Z_R_1000 0.1
`define HS65_LS_AOI212X4_A_R_Z_F_1100 0.1
`define HS65_LS_AOI212X4_A_F_Z_R_1100 0.1
`define HS65_LS_AOI212X4_A_R_Z_F_1010 0.1
`define HS65_LS_AOI212X4_A_F_Z_R_1010 0.1
`define HS65_LS_AOI212X4_B_R_Z_F_1000 0.1
`define HS65_LS_AOI212X4_B_F_Z_R_1000 0.1
`define HS65_LS_AOI212X4_B_R_Z_F_1100 0.1
`define HS65_LS_AOI212X4_B_F_Z_R_1100 0.1
`define HS65_LS_AOI212X4_B_R_Z_F_1010 0.1
`define HS65_LS_AOI212X4_B_F_Z_R_1010 0.1
`define HS65_LS_AOI212X4_C_R_Z_F_0010 0.1
`define HS65_LS_AOI212X4_C_F_Z_R_0010 0.1
`define HS65_LS_AOI212X4_C_R_Z_F_1010 0.1
`define HS65_LS_AOI212X4_C_F_Z_R_1010 0.1
`define HS65_LS_AOI212X4_C_R_Z_F_0110 0.1
`define HS65_LS_AOI212X4_C_F_Z_R_0110 0.1
`define HS65_LS_AOI212X4_D_R_Z_F_0010 0.1
`define HS65_LS_AOI212X4_D_F_Z_R_0010 0.1
`define HS65_LS_AOI212X4_D_R_Z_F_1010 0.1
`define HS65_LS_AOI212X4_D_F_Z_R_1010 0.1
`define HS65_LS_AOI212X4_D_R_Z_F_0110 0.1
`define HS65_LS_AOI212X4_D_F_Z_R_0110 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_1000 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_1000 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_1010 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_1010 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_1001 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_1001 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0110 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0110 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0101 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0101 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0000 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0000 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0010 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0010 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0001 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0001 0.1
`define HS65_LS_AOI212X4_E_R_Z_F_0100 0.1
`define HS65_LS_AOI212X4_E_F_Z_R_0100 0.1

module HS65_LS_AOI212X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X4_A_F_Z_R_1000,`HS65_LS_AOI212X4_A_R_Z_F_1000);
		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X4_A_F_Z_R_1100,`HS65_LS_AOI212X4_A_R_Z_F_1100);
		if (B && !C && D && !E) (A -=> Z) = (`HS65_LS_AOI212X4_A_F_Z_R_1010,`HS65_LS_AOI212X4_A_R_Z_F_1010);
		if (A && !C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X4_B_F_Z_R_1000,`HS65_LS_AOI212X4_B_R_Z_F_1000);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X4_B_F_Z_R_1100,`HS65_LS_AOI212X4_B_R_Z_F_1100);
		if (A && !C && D && !E) (B -=> Z) = (`HS65_LS_AOI212X4_B_F_Z_R_1010,`HS65_LS_AOI212X4_B_R_Z_F_1010);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X4_C_F_Z_R_0010,`HS65_LS_AOI212X4_C_R_Z_F_0010);
		if (A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X4_C_F_Z_R_1010,`HS65_LS_AOI212X4_C_R_Z_F_1010);
		if (!A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X4_C_F_Z_R_0110,`HS65_LS_AOI212X4_C_R_Z_F_0110);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X4_D_F_Z_R_0010,`HS65_LS_AOI212X4_D_R_Z_F_0010);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X4_D_F_Z_R_1010,`HS65_LS_AOI212X4_D_R_Z_F_1010);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X4_D_F_Z_R_0110,`HS65_LS_AOI212X4_D_R_Z_F_0110);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_1000,`HS65_LS_AOI212X4_E_R_Z_F_1000);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_1010,`HS65_LS_AOI212X4_E_R_Z_F_1010);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_1001,`HS65_LS_AOI212X4_E_R_Z_F_1001);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0110,`HS65_LS_AOI212X4_E_R_Z_F_0110);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0101,`HS65_LS_AOI212X4_E_R_Z_F_0101);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0000,`HS65_LS_AOI212X4_E_R_Z_F_0000);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0010,`HS65_LS_AOI212X4_E_R_Z_F_0010);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0001,`HS65_LS_AOI212X4_E_R_Z_F_0001);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X4_E_F_Z_R_0100,`HS65_LS_AOI212X4_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI212X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI212X9_A_R_Z_F_1000 0.1
`define HS65_LS_AOI212X9_A_F_Z_R_1000 0.1
`define HS65_LS_AOI212X9_A_R_Z_F_1100 0.1
`define HS65_LS_AOI212X9_A_F_Z_R_1100 0.1
`define HS65_LS_AOI212X9_A_R_Z_F_1010 0.1
`define HS65_LS_AOI212X9_A_F_Z_R_1010 0.1
`define HS65_LS_AOI212X9_B_R_Z_F_1000 0.1
`define HS65_LS_AOI212X9_B_F_Z_R_1000 0.1
`define HS65_LS_AOI212X9_B_R_Z_F_1100 0.1
`define HS65_LS_AOI212X9_B_F_Z_R_1100 0.1
`define HS65_LS_AOI212X9_B_R_Z_F_1010 0.1
`define HS65_LS_AOI212X9_B_F_Z_R_1010 0.1
`define HS65_LS_AOI212X9_C_R_Z_F_0010 0.1
`define HS65_LS_AOI212X9_C_F_Z_R_0010 0.1
`define HS65_LS_AOI212X9_C_R_Z_F_1010 0.1
`define HS65_LS_AOI212X9_C_F_Z_R_1010 0.1
`define HS65_LS_AOI212X9_C_R_Z_F_0110 0.1
`define HS65_LS_AOI212X9_C_F_Z_R_0110 0.1
`define HS65_LS_AOI212X9_D_R_Z_F_0010 0.1
`define HS65_LS_AOI212X9_D_F_Z_R_0010 0.1
`define HS65_LS_AOI212X9_D_R_Z_F_1010 0.1
`define HS65_LS_AOI212X9_D_F_Z_R_1010 0.1
`define HS65_LS_AOI212X9_D_R_Z_F_0110 0.1
`define HS65_LS_AOI212X9_D_F_Z_R_0110 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_1000 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_1000 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_1010 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_1010 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_1001 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_1001 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0110 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0110 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0101 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0101 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0000 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0000 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0010 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0010 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0001 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0001 0.1
`define HS65_LS_AOI212X9_E_R_Z_F_0100 0.1
`define HS65_LS_AOI212X9_E_F_Z_R_0100 0.1

module HS65_LS_AOI212X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X9_A_F_Z_R_1000,`HS65_LS_AOI212X9_A_R_Z_F_1000);
		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI212X9_A_F_Z_R_1100,`HS65_LS_AOI212X9_A_R_Z_F_1100);
		if (B && !C && D && !E) (A -=> Z) = (`HS65_LS_AOI212X9_A_F_Z_R_1010,`HS65_LS_AOI212X9_A_R_Z_F_1010);
		if (A && !C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X9_B_F_Z_R_1000,`HS65_LS_AOI212X9_B_R_Z_F_1000);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI212X9_B_F_Z_R_1100,`HS65_LS_AOI212X9_B_R_Z_F_1100);
		if (A && !C && D && !E) (B -=> Z) = (`HS65_LS_AOI212X9_B_F_Z_R_1010,`HS65_LS_AOI212X9_B_R_Z_F_1010);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X9_C_F_Z_R_0010,`HS65_LS_AOI212X9_C_R_Z_F_0010);
		if (A && !B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X9_C_F_Z_R_1010,`HS65_LS_AOI212X9_C_R_Z_F_1010);
		if (!A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI212X9_C_F_Z_R_0110,`HS65_LS_AOI212X9_C_R_Z_F_0110);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X9_D_F_Z_R_0010,`HS65_LS_AOI212X9_D_R_Z_F_0010);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X9_D_F_Z_R_1010,`HS65_LS_AOI212X9_D_R_Z_F_1010);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI212X9_D_F_Z_R_0110,`HS65_LS_AOI212X9_D_R_Z_F_0110);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_1000,`HS65_LS_AOI212X9_E_R_Z_F_1000);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_1010,`HS65_LS_AOI212X9_E_R_Z_F_1010);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_1001,`HS65_LS_AOI212X9_E_R_Z_F_1001);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0110,`HS65_LS_AOI212X9_E_R_Z_F_0110);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0101,`HS65_LS_AOI212X9_E_R_Z_F_0101);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0000,`HS65_LS_AOI212X9_E_R_Z_F_0000);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0010,`HS65_LS_AOI212X9_E_R_Z_F_0010);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0001,`HS65_LS_AOI212X9_E_R_Z_F_0001);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI212X9_E_F_Z_R_0100,`HS65_LS_AOI212X9_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI212X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X12_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X12_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X12_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X12_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X12_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X12_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X12_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X12_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X12_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X12_C_F_Z_R_01 0.1

module HS65_LS_AOI21X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X12_A_F_Z_R_10,`HS65_LS_AOI21X12_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X12_B_F_Z_R_10,`HS65_LS_AOI21X12_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X12_C_F_Z_R_00,`HS65_LS_AOI21X12_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X12_C_F_Z_R_10,`HS65_LS_AOI21X12_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X12_C_F_Z_R_01,`HS65_LS_AOI21X12_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X17_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X17_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X17_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X17_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X17_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X17_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X17_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X17_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X17_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X17_C_F_Z_R_01 0.1

module HS65_LS_AOI21X17 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X17_A_F_Z_R_10,`HS65_LS_AOI21X17_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X17_B_F_Z_R_10,`HS65_LS_AOI21X17_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X17_C_F_Z_R_00,`HS65_LS_AOI21X17_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X17_C_F_Z_R_10,`HS65_LS_AOI21X17_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X17_C_F_Z_R_01,`HS65_LS_AOI21X17_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X2_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X2_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X2_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X2_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X2_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X2_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X2_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X2_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X2_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X2_C_F_Z_R_01 0.1

module HS65_LS_AOI21X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X2_A_F_Z_R_10,`HS65_LS_AOI21X2_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X2_B_F_Z_R_10,`HS65_LS_AOI21X2_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X2_C_F_Z_R_00,`HS65_LS_AOI21X2_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X2_C_F_Z_R_10,`HS65_LS_AOI21X2_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X2_C_F_Z_R_01,`HS65_LS_AOI21X2_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X23_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X23_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X23_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X23_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X23_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X23_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X23_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X23_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X23_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X23_C_F_Z_R_01 0.1

module HS65_LS_AOI21X23 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X23_A_F_Z_R_10,`HS65_LS_AOI21X23_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X23_B_F_Z_R_10,`HS65_LS_AOI21X23_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X23_C_F_Z_R_00,`HS65_LS_AOI21X23_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X23_C_F_Z_R_10,`HS65_LS_AOI21X23_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X23_C_F_Z_R_01,`HS65_LS_AOI21X23_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X23

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X3_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X3_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X3_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X3_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X3_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X3_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X3_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X3_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X3_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X3_C_F_Z_R_01 0.1

module HS65_LS_AOI21X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X3_A_F_Z_R_10,`HS65_LS_AOI21X3_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X3_B_F_Z_R_10,`HS65_LS_AOI21X3_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X3_C_F_Z_R_00,`HS65_LS_AOI21X3_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X3_C_F_Z_R_10,`HS65_LS_AOI21X3_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X3_C_F_Z_R_01,`HS65_LS_AOI21X3_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X35_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X35_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X35_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X35_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X35_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X35_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X35_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X35_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X35_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X35_C_F_Z_R_01 0.1

module HS65_LS_AOI21X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X35_A_F_Z_R_10,`HS65_LS_AOI21X35_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X35_B_F_Z_R_10,`HS65_LS_AOI21X35_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X35_C_F_Z_R_00,`HS65_LS_AOI21X35_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X35_C_F_Z_R_10,`HS65_LS_AOI21X35_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X35_C_F_Z_R_01,`HS65_LS_AOI21X35_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X4_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X4_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X4_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X4_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X4_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X4_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X4_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X4_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X4_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X4_C_F_Z_R_01 0.1

module HS65_LS_AOI21X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X4_A_F_Z_R_10,`HS65_LS_AOI21X4_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X4_B_F_Z_R_10,`HS65_LS_AOI21X4_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X4_C_F_Z_R_00,`HS65_LS_AOI21X4_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X4_C_F_Z_R_10,`HS65_LS_AOI21X4_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X4_C_F_Z_R_01,`HS65_LS_AOI21X4_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X46_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X46_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X46_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X46_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X46_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X46_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X46_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X46_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X46_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X46_C_F_Z_R_01 0.1

module HS65_LS_AOI21X46 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X46_A_F_Z_R_10,`HS65_LS_AOI21X46_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X46_B_F_Z_R_10,`HS65_LS_AOI21X46_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X46_C_F_Z_R_00,`HS65_LS_AOI21X46_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X46_C_F_Z_R_10,`HS65_LS_AOI21X46_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X46_C_F_Z_R_01,`HS65_LS_AOI21X46_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X46

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X6_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X6_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X6_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X6_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X6_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X6_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X6_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X6_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X6_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X6_C_F_Z_R_01 0.1

module HS65_LS_AOI21X6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X6_A_F_Z_R_10,`HS65_LS_AOI21X6_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X6_B_F_Z_R_10,`HS65_LS_AOI21X6_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X6_C_F_Z_R_00,`HS65_LS_AOI21X6_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X6_C_F_Z_R_10,`HS65_LS_AOI21X6_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X6_C_F_Z_R_01,`HS65_LS_AOI21X6_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI21X9_A_R_Z_F_10 0.1
`define HS65_LS_AOI21X9_A_F_Z_R_10 0.1
`define HS65_LS_AOI21X9_B_R_Z_F_10 0.1
`define HS65_LS_AOI21X9_B_F_Z_R_10 0.1
`define HS65_LS_AOI21X9_C_R_Z_F_00 0.1
`define HS65_LS_AOI21X9_C_F_Z_R_00 0.1
`define HS65_LS_AOI21X9_C_R_Z_F_10 0.1
`define HS65_LS_AOI21X9_C_F_Z_R_10 0.1
`define HS65_LS_AOI21X9_C_R_Z_F_01 0.1
`define HS65_LS_AOI21X9_C_F_Z_R_01 0.1

module HS65_LS_AOI21X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI21X9_A_F_Z_R_10,`HS65_LS_AOI21X9_A_R_Z_F_10);
		(B -=> Z) = (`HS65_LS_AOI21X9_B_F_Z_R_10,`HS65_LS_AOI21X9_B_R_Z_F_10);
		if (!A && !B) (C -=> Z) = (`HS65_LS_AOI21X9_C_F_Z_R_00,`HS65_LS_AOI21X9_C_R_Z_F_00);
		if (A && !B) (C -=> Z) = (`HS65_LS_AOI21X9_C_F_Z_R_10,`HS65_LS_AOI21X9_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_AOI21X9_C_F_Z_R_01,`HS65_LS_AOI21X9_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_AOI21X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI222X13_A_R_Z_F_11001 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_11001 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_11010 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_11010 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10100 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10100 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10110 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10110 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_11000 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_11000 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10001 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10001 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10000 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10000 0.1
`define HS65_LS_AOI222X13_A_R_Z_F_10010 0.1
`define HS65_LS_AOI222X13_A_F_Z_R_10010 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_11001 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_11001 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_11010 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_11010 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10100 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10100 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10110 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10110 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_11000 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_11000 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10001 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10001 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10000 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10000 0.1
`define HS65_LS_AOI222X13_B_R_Z_F_10010 0.1
`define HS65_LS_AOI222X13_B_F_Z_R_10010 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_10110 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_10110 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_01100 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_01100 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_01110 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_01110 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_01101 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_01101 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_10100 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_10100 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_00101 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_00101 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_00100 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_00100 0.1
`define HS65_LS_AOI222X13_C_R_Z_F_00110 0.1
`define HS65_LS_AOI222X13_C_F_Z_R_00110 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_10110 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_10110 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_01100 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_01100 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_01110 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_01110 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_01101 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_01101 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_10100 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_10100 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_00101 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_00101 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_00100 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_00100 0.1
`define HS65_LS_AOI222X13_D_R_Z_F_00110 0.1
`define HS65_LS_AOI222X13_D_F_Z_R_00110 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_10011 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_10011 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_01001 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_01001 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_01101 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_01101 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_01011 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_01011 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_10001 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_10001 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_00011 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_00011 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_00001 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_00001 0.1
`define HS65_LS_AOI222X13_E_R_Z_F_00101 0.1
`define HS65_LS_AOI222X13_E_F_Z_R_00101 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_10011 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_10011 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_10101 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_10101 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_01001 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_01001 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_01101 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_01101 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_01011 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_01011 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_10001 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_10001 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_00011 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_00011 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_00001 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_00001 0.1
`define HS65_LS_AOI222X13_F_R_Z_F_00101 0.1
`define HS65_LS_AOI222X13_F_F_Z_R_00101 0.1

module HS65_LS_AOI222X13 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL4, E, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_11001,`HS65_LS_AOI222X13_A_R_Z_F_11001);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_11010,`HS65_LS_AOI222X13_A_R_Z_F_11010);
		if (B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10100,`HS65_LS_AOI222X13_A_R_Z_F_10100);
		if (B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10110,`HS65_LS_AOI222X13_A_R_Z_F_10110);
		if (B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10101,`HS65_LS_AOI222X13_A_R_Z_F_10101);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_11000,`HS65_LS_AOI222X13_A_R_Z_F_11000);
		if (B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10001,`HS65_LS_AOI222X13_A_R_Z_F_10001);
		if (B && !C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10000,`HS65_LS_AOI222X13_A_R_Z_F_10000);
		if (B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X13_A_F_Z_R_10010,`HS65_LS_AOI222X13_A_R_Z_F_10010);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_11001,`HS65_LS_AOI222X13_B_R_Z_F_11001);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_11010,`HS65_LS_AOI222X13_B_R_Z_F_11010);
		if (A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10100,`HS65_LS_AOI222X13_B_R_Z_F_10100);
		if (A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10110,`HS65_LS_AOI222X13_B_R_Z_F_10110);
		if (A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10101,`HS65_LS_AOI222X13_B_R_Z_F_10101);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_11000,`HS65_LS_AOI222X13_B_R_Z_F_11000);
		if (A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10001,`HS65_LS_AOI222X13_B_R_Z_F_10001);
		if (A && !C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10000,`HS65_LS_AOI222X13_B_R_Z_F_10000);
		if (A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X13_B_F_Z_R_10010,`HS65_LS_AOI222X13_B_R_Z_F_10010);
		if (A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_10101,`HS65_LS_AOI222X13_C_R_Z_F_10101);
		if (A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_10110,`HS65_LS_AOI222X13_C_R_Z_F_10110);
		if (!A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_01100,`HS65_LS_AOI222X13_C_R_Z_F_01100);
		if (!A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_01110,`HS65_LS_AOI222X13_C_R_Z_F_01110);
		if (!A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_01101,`HS65_LS_AOI222X13_C_R_Z_F_01101);
		if (A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_10100,`HS65_LS_AOI222X13_C_R_Z_F_10100);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_00101,`HS65_LS_AOI222X13_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_00100,`HS65_LS_AOI222X13_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X13_C_F_Z_R_00110,`HS65_LS_AOI222X13_C_R_Z_F_00110);
		if (A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_10101,`HS65_LS_AOI222X13_D_R_Z_F_10101);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_10110,`HS65_LS_AOI222X13_D_R_Z_F_10110);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_01100,`HS65_LS_AOI222X13_D_R_Z_F_01100);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_01110,`HS65_LS_AOI222X13_D_R_Z_F_01110);
		if (!A && B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_01101,`HS65_LS_AOI222X13_D_R_Z_F_01101);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_10100,`HS65_LS_AOI222X13_D_R_Z_F_10100);
		if (!A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_00101,`HS65_LS_AOI222X13_D_R_Z_F_00101);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_00100,`HS65_LS_AOI222X13_D_R_Z_F_00100);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X13_D_F_Z_R_00110,`HS65_LS_AOI222X13_D_R_Z_F_00110);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_10011,`HS65_LS_AOI222X13_E_R_Z_F_10011);
		if (A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_10101,`HS65_LS_AOI222X13_E_R_Z_F_10101);
		if (!A && B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_01001,`HS65_LS_AOI222X13_E_R_Z_F_01001);
		if (!A && B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_01101,`HS65_LS_AOI222X13_E_R_Z_F_01101);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_01011,`HS65_LS_AOI222X13_E_R_Z_F_01011);
		if (A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_10001,`HS65_LS_AOI222X13_E_R_Z_F_10001);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_00011,`HS65_LS_AOI222X13_E_R_Z_F_00011);
		if (!A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_00001,`HS65_LS_AOI222X13_E_R_Z_F_00001);
		if (!A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X13_E_F_Z_R_00101,`HS65_LS_AOI222X13_E_R_Z_F_00101);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_10011,`HS65_LS_AOI222X13_F_R_Z_F_10011);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_10101,`HS65_LS_AOI222X13_F_R_Z_F_10101);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_01001,`HS65_LS_AOI222X13_F_R_Z_F_01001);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_01101,`HS65_LS_AOI222X13_F_R_Z_F_01101);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_01011,`HS65_LS_AOI222X13_F_R_Z_F_01011);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_10001,`HS65_LS_AOI222X13_F_R_Z_F_10001);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_00011,`HS65_LS_AOI222X13_F_R_Z_F_00011);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_00001,`HS65_LS_AOI222X13_F_R_Z_F_00001);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X13_F_F_Z_R_00101,`HS65_LS_AOI222X13_F_R_Z_F_00101);


	endspecify

endmodule // HS65_LS_AOI222X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI222X18_A_R_Z_F_11001 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_11001 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_11010 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_11010 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10100 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10100 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10110 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10110 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_11000 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_11000 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10001 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10001 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10000 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10000 0.1
`define HS65_LS_AOI222X18_A_R_Z_F_10010 0.1
`define HS65_LS_AOI222X18_A_F_Z_R_10010 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_11001 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_11001 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_11010 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_11010 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10100 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10100 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10110 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10110 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_11000 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_11000 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10001 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10001 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10000 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10000 0.1
`define HS65_LS_AOI222X18_B_R_Z_F_10010 0.1
`define HS65_LS_AOI222X18_B_F_Z_R_10010 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_10110 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_10110 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_01100 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_01100 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_01110 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_01110 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_01101 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_01101 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_10100 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_10100 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_00101 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_00101 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_00100 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_00100 0.1
`define HS65_LS_AOI222X18_C_R_Z_F_00110 0.1
`define HS65_LS_AOI222X18_C_F_Z_R_00110 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_10110 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_10110 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_01100 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_01100 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_01110 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_01110 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_01101 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_01101 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_10100 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_10100 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_00101 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_00101 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_00100 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_00100 0.1
`define HS65_LS_AOI222X18_D_R_Z_F_00110 0.1
`define HS65_LS_AOI222X18_D_F_Z_R_00110 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_10011 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_10011 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_01001 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_01001 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_01101 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_01101 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_01011 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_01011 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_10001 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_10001 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_00011 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_00011 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_00001 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_00001 0.1
`define HS65_LS_AOI222X18_E_R_Z_F_00101 0.1
`define HS65_LS_AOI222X18_E_F_Z_R_00101 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_10011 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_10011 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_10101 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_10101 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_01001 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_01001 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_01101 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_01101 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_01011 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_01011 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_10001 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_10001 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_00011 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_00011 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_00001 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_00001 0.1
`define HS65_LS_AOI222X18_F_R_Z_F_00101 0.1
`define HS65_LS_AOI222X18_F_F_Z_R_00101 0.1

module HS65_LS_AOI222X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL4, E, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_11001,`HS65_LS_AOI222X18_A_R_Z_F_11001);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_11010,`HS65_LS_AOI222X18_A_R_Z_F_11010);
		if (B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10100,`HS65_LS_AOI222X18_A_R_Z_F_10100);
		if (B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10110,`HS65_LS_AOI222X18_A_R_Z_F_10110);
		if (B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10101,`HS65_LS_AOI222X18_A_R_Z_F_10101);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_11000,`HS65_LS_AOI222X18_A_R_Z_F_11000);
		if (B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10001,`HS65_LS_AOI222X18_A_R_Z_F_10001);
		if (B && !C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10000,`HS65_LS_AOI222X18_A_R_Z_F_10000);
		if (B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X18_A_F_Z_R_10010,`HS65_LS_AOI222X18_A_R_Z_F_10010);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_11001,`HS65_LS_AOI222X18_B_R_Z_F_11001);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_11010,`HS65_LS_AOI222X18_B_R_Z_F_11010);
		if (A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10100,`HS65_LS_AOI222X18_B_R_Z_F_10100);
		if (A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10110,`HS65_LS_AOI222X18_B_R_Z_F_10110);
		if (A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10101,`HS65_LS_AOI222X18_B_R_Z_F_10101);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_11000,`HS65_LS_AOI222X18_B_R_Z_F_11000);
		if (A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10001,`HS65_LS_AOI222X18_B_R_Z_F_10001);
		if (A && !C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10000,`HS65_LS_AOI222X18_B_R_Z_F_10000);
		if (A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X18_B_F_Z_R_10010,`HS65_LS_AOI222X18_B_R_Z_F_10010);
		if (A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_10101,`HS65_LS_AOI222X18_C_R_Z_F_10101);
		if (A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_10110,`HS65_LS_AOI222X18_C_R_Z_F_10110);
		if (!A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_01100,`HS65_LS_AOI222X18_C_R_Z_F_01100);
		if (!A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_01110,`HS65_LS_AOI222X18_C_R_Z_F_01110);
		if (!A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_01101,`HS65_LS_AOI222X18_C_R_Z_F_01101);
		if (A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_10100,`HS65_LS_AOI222X18_C_R_Z_F_10100);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_00101,`HS65_LS_AOI222X18_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_00100,`HS65_LS_AOI222X18_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X18_C_F_Z_R_00110,`HS65_LS_AOI222X18_C_R_Z_F_00110);
		if (A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_10101,`HS65_LS_AOI222X18_D_R_Z_F_10101);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_10110,`HS65_LS_AOI222X18_D_R_Z_F_10110);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_01100,`HS65_LS_AOI222X18_D_R_Z_F_01100);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_01110,`HS65_LS_AOI222X18_D_R_Z_F_01110);
		if (!A && B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_01101,`HS65_LS_AOI222X18_D_R_Z_F_01101);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_10100,`HS65_LS_AOI222X18_D_R_Z_F_10100);
		if (!A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_00101,`HS65_LS_AOI222X18_D_R_Z_F_00101);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_00100,`HS65_LS_AOI222X18_D_R_Z_F_00100);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X18_D_F_Z_R_00110,`HS65_LS_AOI222X18_D_R_Z_F_00110);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_10011,`HS65_LS_AOI222X18_E_R_Z_F_10011);
		if (A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_10101,`HS65_LS_AOI222X18_E_R_Z_F_10101);
		if (!A && B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_01001,`HS65_LS_AOI222X18_E_R_Z_F_01001);
		if (!A && B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_01101,`HS65_LS_AOI222X18_E_R_Z_F_01101);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_01011,`HS65_LS_AOI222X18_E_R_Z_F_01011);
		if (A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_10001,`HS65_LS_AOI222X18_E_R_Z_F_10001);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_00011,`HS65_LS_AOI222X18_E_R_Z_F_00011);
		if (!A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_00001,`HS65_LS_AOI222X18_E_R_Z_F_00001);
		if (!A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X18_E_F_Z_R_00101,`HS65_LS_AOI222X18_E_R_Z_F_00101);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_10011,`HS65_LS_AOI222X18_F_R_Z_F_10011);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_10101,`HS65_LS_AOI222X18_F_R_Z_F_10101);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_01001,`HS65_LS_AOI222X18_F_R_Z_F_01001);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_01101,`HS65_LS_AOI222X18_F_R_Z_F_01101);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_01011,`HS65_LS_AOI222X18_F_R_Z_F_01011);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_10001,`HS65_LS_AOI222X18_F_R_Z_F_10001);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_00011,`HS65_LS_AOI222X18_F_R_Z_F_00011);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_00001,`HS65_LS_AOI222X18_F_R_Z_F_00001);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X18_F_F_Z_R_00101,`HS65_LS_AOI222X18_F_R_Z_F_00101);


	endspecify

endmodule // HS65_LS_AOI222X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI222X2_A_R_Z_F_11001 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_11001 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_11010 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_11010 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10100 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10100 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10110 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10110 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_11000 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_11000 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10001 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10001 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10000 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10000 0.1
`define HS65_LS_AOI222X2_A_R_Z_F_10010 0.1
`define HS65_LS_AOI222X2_A_F_Z_R_10010 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_11001 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_11001 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_11010 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_11010 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10100 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10100 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10110 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10110 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_11000 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_11000 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10001 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10001 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10000 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10000 0.1
`define HS65_LS_AOI222X2_B_R_Z_F_10010 0.1
`define HS65_LS_AOI222X2_B_F_Z_R_10010 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_10110 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_10110 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_01100 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_01100 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_01110 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_01110 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_01101 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_01101 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_10100 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_10100 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_00101 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_00101 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_00100 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_00100 0.1
`define HS65_LS_AOI222X2_C_R_Z_F_00110 0.1
`define HS65_LS_AOI222X2_C_F_Z_R_00110 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_10110 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_10110 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_01100 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_01100 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_01110 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_01110 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_01101 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_01101 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_10100 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_10100 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_00101 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_00101 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_00100 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_00100 0.1
`define HS65_LS_AOI222X2_D_R_Z_F_00110 0.1
`define HS65_LS_AOI222X2_D_F_Z_R_00110 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_10011 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_10011 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_01001 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_01001 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_01101 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_01101 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_01011 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_01011 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_10001 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_10001 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_00011 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_00011 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_00001 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_00001 0.1
`define HS65_LS_AOI222X2_E_R_Z_F_00101 0.1
`define HS65_LS_AOI222X2_E_F_Z_R_00101 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_10011 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_10011 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_10101 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_10101 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_01001 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_01001 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_01101 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_01101 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_01011 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_01011 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_10001 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_10001 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_00011 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_00011 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_00001 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_00001 0.1
`define HS65_LS_AOI222X2_F_R_Z_F_00101 0.1
`define HS65_LS_AOI222X2_F_F_Z_R_00101 0.1

module HS65_LS_AOI222X2 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL4, E, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_11001,`HS65_LS_AOI222X2_A_R_Z_F_11001);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_11010,`HS65_LS_AOI222X2_A_R_Z_F_11010);
		if (B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10100,`HS65_LS_AOI222X2_A_R_Z_F_10100);
		if (B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10110,`HS65_LS_AOI222X2_A_R_Z_F_10110);
		if (B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10101,`HS65_LS_AOI222X2_A_R_Z_F_10101);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_11000,`HS65_LS_AOI222X2_A_R_Z_F_11000);
		if (B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10001,`HS65_LS_AOI222X2_A_R_Z_F_10001);
		if (B && !C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10000,`HS65_LS_AOI222X2_A_R_Z_F_10000);
		if (B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X2_A_F_Z_R_10010,`HS65_LS_AOI222X2_A_R_Z_F_10010);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_11001,`HS65_LS_AOI222X2_B_R_Z_F_11001);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_11010,`HS65_LS_AOI222X2_B_R_Z_F_11010);
		if (A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10100,`HS65_LS_AOI222X2_B_R_Z_F_10100);
		if (A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10110,`HS65_LS_AOI222X2_B_R_Z_F_10110);
		if (A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10101,`HS65_LS_AOI222X2_B_R_Z_F_10101);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_11000,`HS65_LS_AOI222X2_B_R_Z_F_11000);
		if (A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10001,`HS65_LS_AOI222X2_B_R_Z_F_10001);
		if (A && !C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10000,`HS65_LS_AOI222X2_B_R_Z_F_10000);
		if (A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X2_B_F_Z_R_10010,`HS65_LS_AOI222X2_B_R_Z_F_10010);
		if (A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_10101,`HS65_LS_AOI222X2_C_R_Z_F_10101);
		if (A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_10110,`HS65_LS_AOI222X2_C_R_Z_F_10110);
		if (!A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_01100,`HS65_LS_AOI222X2_C_R_Z_F_01100);
		if (!A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_01110,`HS65_LS_AOI222X2_C_R_Z_F_01110);
		if (!A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_01101,`HS65_LS_AOI222X2_C_R_Z_F_01101);
		if (A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_10100,`HS65_LS_AOI222X2_C_R_Z_F_10100);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_00101,`HS65_LS_AOI222X2_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_00100,`HS65_LS_AOI222X2_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X2_C_F_Z_R_00110,`HS65_LS_AOI222X2_C_R_Z_F_00110);
		if (A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_10101,`HS65_LS_AOI222X2_D_R_Z_F_10101);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_10110,`HS65_LS_AOI222X2_D_R_Z_F_10110);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_01100,`HS65_LS_AOI222X2_D_R_Z_F_01100);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_01110,`HS65_LS_AOI222X2_D_R_Z_F_01110);
		if (!A && B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_01101,`HS65_LS_AOI222X2_D_R_Z_F_01101);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_10100,`HS65_LS_AOI222X2_D_R_Z_F_10100);
		if (!A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_00101,`HS65_LS_AOI222X2_D_R_Z_F_00101);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_00100,`HS65_LS_AOI222X2_D_R_Z_F_00100);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X2_D_F_Z_R_00110,`HS65_LS_AOI222X2_D_R_Z_F_00110);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_10011,`HS65_LS_AOI222X2_E_R_Z_F_10011);
		if (A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_10101,`HS65_LS_AOI222X2_E_R_Z_F_10101);
		if (!A && B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_01001,`HS65_LS_AOI222X2_E_R_Z_F_01001);
		if (!A && B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_01101,`HS65_LS_AOI222X2_E_R_Z_F_01101);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_01011,`HS65_LS_AOI222X2_E_R_Z_F_01011);
		if (A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_10001,`HS65_LS_AOI222X2_E_R_Z_F_10001);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_00011,`HS65_LS_AOI222X2_E_R_Z_F_00011);
		if (!A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_00001,`HS65_LS_AOI222X2_E_R_Z_F_00001);
		if (!A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X2_E_F_Z_R_00101,`HS65_LS_AOI222X2_E_R_Z_F_00101);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_10011,`HS65_LS_AOI222X2_F_R_Z_F_10011);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_10101,`HS65_LS_AOI222X2_F_R_Z_F_10101);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_01001,`HS65_LS_AOI222X2_F_R_Z_F_01001);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_01101,`HS65_LS_AOI222X2_F_R_Z_F_01101);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_01011,`HS65_LS_AOI222X2_F_R_Z_F_01011);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_10001,`HS65_LS_AOI222X2_F_R_Z_F_10001);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_00011,`HS65_LS_AOI222X2_F_R_Z_F_00011);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_00001,`HS65_LS_AOI222X2_F_R_Z_F_00001);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X2_F_F_Z_R_00101,`HS65_LS_AOI222X2_F_R_Z_F_00101);


	endspecify

endmodule // HS65_LS_AOI222X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI222X4_A_R_Z_F_11001 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_11001 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_11010 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_11010 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10100 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10100 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10110 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10110 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_11000 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_11000 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10001 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10001 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10000 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10000 0.1
`define HS65_LS_AOI222X4_A_R_Z_F_10010 0.1
`define HS65_LS_AOI222X4_A_F_Z_R_10010 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_11001 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_11001 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_11010 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_11010 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10100 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10100 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10110 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10110 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_11000 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_11000 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10001 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10001 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10000 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10000 0.1
`define HS65_LS_AOI222X4_B_R_Z_F_10010 0.1
`define HS65_LS_AOI222X4_B_F_Z_R_10010 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_10110 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_10110 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_01100 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_01100 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_01110 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_01110 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_01101 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_01101 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_10100 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_10100 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_00101 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_00101 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_00100 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_00100 0.1
`define HS65_LS_AOI222X4_C_R_Z_F_00110 0.1
`define HS65_LS_AOI222X4_C_F_Z_R_00110 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_10110 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_10110 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_01100 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_01100 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_01110 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_01110 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_01101 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_01101 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_10100 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_10100 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_00101 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_00101 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_00100 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_00100 0.1
`define HS65_LS_AOI222X4_D_R_Z_F_00110 0.1
`define HS65_LS_AOI222X4_D_F_Z_R_00110 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_10011 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_10011 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_01001 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_01001 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_01101 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_01101 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_01011 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_01011 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_10001 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_10001 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_00011 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_00011 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_00001 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_00001 0.1
`define HS65_LS_AOI222X4_E_R_Z_F_00101 0.1
`define HS65_LS_AOI222X4_E_F_Z_R_00101 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_10011 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_10011 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_10101 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_10101 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_01001 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_01001 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_01101 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_01101 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_01011 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_01011 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_10001 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_10001 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_00011 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_00011 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_00001 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_00001 0.1
`define HS65_LS_AOI222X4_F_R_Z_F_00101 0.1
`define HS65_LS_AOI222X4_F_F_Z_R_00101 0.1

module HS65_LS_AOI222X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL4, E, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_11001,`HS65_LS_AOI222X4_A_R_Z_F_11001);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_11010,`HS65_LS_AOI222X4_A_R_Z_F_11010);
		if (B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10100,`HS65_LS_AOI222X4_A_R_Z_F_10100);
		if (B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10110,`HS65_LS_AOI222X4_A_R_Z_F_10110);
		if (B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10101,`HS65_LS_AOI222X4_A_R_Z_F_10101);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_11000,`HS65_LS_AOI222X4_A_R_Z_F_11000);
		if (B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10001,`HS65_LS_AOI222X4_A_R_Z_F_10001);
		if (B && !C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10000,`HS65_LS_AOI222X4_A_R_Z_F_10000);
		if (B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X4_A_F_Z_R_10010,`HS65_LS_AOI222X4_A_R_Z_F_10010);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_11001,`HS65_LS_AOI222X4_B_R_Z_F_11001);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_11010,`HS65_LS_AOI222X4_B_R_Z_F_11010);
		if (A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10100,`HS65_LS_AOI222X4_B_R_Z_F_10100);
		if (A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10110,`HS65_LS_AOI222X4_B_R_Z_F_10110);
		if (A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10101,`HS65_LS_AOI222X4_B_R_Z_F_10101);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_11000,`HS65_LS_AOI222X4_B_R_Z_F_11000);
		if (A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10001,`HS65_LS_AOI222X4_B_R_Z_F_10001);
		if (A && !C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10000,`HS65_LS_AOI222X4_B_R_Z_F_10000);
		if (A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X4_B_F_Z_R_10010,`HS65_LS_AOI222X4_B_R_Z_F_10010);
		if (A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_10101,`HS65_LS_AOI222X4_C_R_Z_F_10101);
		if (A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_10110,`HS65_LS_AOI222X4_C_R_Z_F_10110);
		if (!A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_01100,`HS65_LS_AOI222X4_C_R_Z_F_01100);
		if (!A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_01110,`HS65_LS_AOI222X4_C_R_Z_F_01110);
		if (!A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_01101,`HS65_LS_AOI222X4_C_R_Z_F_01101);
		if (A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_10100,`HS65_LS_AOI222X4_C_R_Z_F_10100);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_00101,`HS65_LS_AOI222X4_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_00100,`HS65_LS_AOI222X4_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X4_C_F_Z_R_00110,`HS65_LS_AOI222X4_C_R_Z_F_00110);
		if (A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_10101,`HS65_LS_AOI222X4_D_R_Z_F_10101);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_10110,`HS65_LS_AOI222X4_D_R_Z_F_10110);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_01100,`HS65_LS_AOI222X4_D_R_Z_F_01100);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_01110,`HS65_LS_AOI222X4_D_R_Z_F_01110);
		if (!A && B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_01101,`HS65_LS_AOI222X4_D_R_Z_F_01101);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_10100,`HS65_LS_AOI222X4_D_R_Z_F_10100);
		if (!A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_00101,`HS65_LS_AOI222X4_D_R_Z_F_00101);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_00100,`HS65_LS_AOI222X4_D_R_Z_F_00100);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X4_D_F_Z_R_00110,`HS65_LS_AOI222X4_D_R_Z_F_00110);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_10011,`HS65_LS_AOI222X4_E_R_Z_F_10011);
		if (A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_10101,`HS65_LS_AOI222X4_E_R_Z_F_10101);
		if (!A && B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_01001,`HS65_LS_AOI222X4_E_R_Z_F_01001);
		if (!A && B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_01101,`HS65_LS_AOI222X4_E_R_Z_F_01101);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_01011,`HS65_LS_AOI222X4_E_R_Z_F_01011);
		if (A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_10001,`HS65_LS_AOI222X4_E_R_Z_F_10001);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_00011,`HS65_LS_AOI222X4_E_R_Z_F_00011);
		if (!A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_00001,`HS65_LS_AOI222X4_E_R_Z_F_00001);
		if (!A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X4_E_F_Z_R_00101,`HS65_LS_AOI222X4_E_R_Z_F_00101);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_10011,`HS65_LS_AOI222X4_F_R_Z_F_10011);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_10101,`HS65_LS_AOI222X4_F_R_Z_F_10101);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_01001,`HS65_LS_AOI222X4_F_R_Z_F_01001);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_01101,`HS65_LS_AOI222X4_F_R_Z_F_01101);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_01011,`HS65_LS_AOI222X4_F_R_Z_F_01011);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_10001,`HS65_LS_AOI222X4_F_R_Z_F_10001);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_00011,`HS65_LS_AOI222X4_F_R_Z_F_00011);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_00001,`HS65_LS_AOI222X4_F_R_Z_F_00001);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X4_F_F_Z_R_00101,`HS65_LS_AOI222X4_F_R_Z_F_00101);


	endspecify

endmodule // HS65_LS_AOI222X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI222X9_A_R_Z_F_11001 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_11001 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_11010 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_11010 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10100 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10100 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10110 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10110 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_11000 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_11000 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10001 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10001 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10000 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10000 0.1
`define HS65_LS_AOI222X9_A_R_Z_F_10010 0.1
`define HS65_LS_AOI222X9_A_F_Z_R_10010 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_11001 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_11001 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_11010 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_11010 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10100 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10100 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10110 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10110 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_11000 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_11000 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10001 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10001 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10000 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10000 0.1
`define HS65_LS_AOI222X9_B_R_Z_F_10010 0.1
`define HS65_LS_AOI222X9_B_F_Z_R_10010 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_10110 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_10110 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_01100 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_01100 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_01110 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_01110 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_01101 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_01101 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_10100 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_10100 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_00101 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_00101 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_00100 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_00100 0.1
`define HS65_LS_AOI222X9_C_R_Z_F_00110 0.1
`define HS65_LS_AOI222X9_C_F_Z_R_00110 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_10110 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_10110 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_01100 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_01100 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_01110 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_01110 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_01101 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_01101 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_10100 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_10100 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_00101 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_00101 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_00100 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_00100 0.1
`define HS65_LS_AOI222X9_D_R_Z_F_00110 0.1
`define HS65_LS_AOI222X9_D_F_Z_R_00110 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_10011 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_10011 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_01001 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_01001 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_01101 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_01101 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_01011 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_01011 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_10001 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_10001 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_00011 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_00011 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_00001 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_00001 0.1
`define HS65_LS_AOI222X9_E_R_Z_F_00101 0.1
`define HS65_LS_AOI222X9_E_F_Z_R_00101 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_10011 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_10011 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_10101 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_10101 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_01001 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_01001 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_01101 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_01101 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_01011 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_01011 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_10001 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_10001 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_00011 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_00011 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_00001 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_00001 0.1
`define HS65_LS_AOI222X9_F_R_Z_F_00101 0.1
`define HS65_LS_AOI222X9_F_F_Z_R_00101 0.1

module HS65_LS_AOI222X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL4, E, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_11001,`HS65_LS_AOI222X9_A_R_Z_F_11001);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_11010,`HS65_LS_AOI222X9_A_R_Z_F_11010);
		if (B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10100,`HS65_LS_AOI222X9_A_R_Z_F_10100);
		if (B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10110,`HS65_LS_AOI222X9_A_R_Z_F_10110);
		if (B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10101,`HS65_LS_AOI222X9_A_R_Z_F_10101);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_11000,`HS65_LS_AOI222X9_A_R_Z_F_11000);
		if (B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10001,`HS65_LS_AOI222X9_A_R_Z_F_10001);
		if (B && !C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10000,`HS65_LS_AOI222X9_A_R_Z_F_10000);
		if (B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI222X9_A_F_Z_R_10010,`HS65_LS_AOI222X9_A_R_Z_F_10010);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_11001,`HS65_LS_AOI222X9_B_R_Z_F_11001);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_11010,`HS65_LS_AOI222X9_B_R_Z_F_11010);
		if (A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10100,`HS65_LS_AOI222X9_B_R_Z_F_10100);
		if (A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10110,`HS65_LS_AOI222X9_B_R_Z_F_10110);
		if (A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10101,`HS65_LS_AOI222X9_B_R_Z_F_10101);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_11000,`HS65_LS_AOI222X9_B_R_Z_F_11000);
		if (A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10001,`HS65_LS_AOI222X9_B_R_Z_F_10001);
		if (A && !C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10000,`HS65_LS_AOI222X9_B_R_Z_F_10000);
		if (A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI222X9_B_F_Z_R_10010,`HS65_LS_AOI222X9_B_R_Z_F_10010);
		if (A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_10101,`HS65_LS_AOI222X9_C_R_Z_F_10101);
		if (A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_10110,`HS65_LS_AOI222X9_C_R_Z_F_10110);
		if (!A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_01100,`HS65_LS_AOI222X9_C_R_Z_F_01100);
		if (!A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_01110,`HS65_LS_AOI222X9_C_R_Z_F_01110);
		if (!A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_01101,`HS65_LS_AOI222X9_C_R_Z_F_01101);
		if (A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_10100,`HS65_LS_AOI222X9_C_R_Z_F_10100);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_00101,`HS65_LS_AOI222X9_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_00100,`HS65_LS_AOI222X9_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI222X9_C_F_Z_R_00110,`HS65_LS_AOI222X9_C_R_Z_F_00110);
		if (A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_10101,`HS65_LS_AOI222X9_D_R_Z_F_10101);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_10110,`HS65_LS_AOI222X9_D_R_Z_F_10110);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_01100,`HS65_LS_AOI222X9_D_R_Z_F_01100);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_01110,`HS65_LS_AOI222X9_D_R_Z_F_01110);
		if (!A && B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_01101,`HS65_LS_AOI222X9_D_R_Z_F_01101);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_10100,`HS65_LS_AOI222X9_D_R_Z_F_10100);
		if (!A && !B && C && !E && F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_00101,`HS65_LS_AOI222X9_D_R_Z_F_00101);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_00100,`HS65_LS_AOI222X9_D_R_Z_F_00100);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI222X9_D_F_Z_R_00110,`HS65_LS_AOI222X9_D_R_Z_F_00110);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_10011,`HS65_LS_AOI222X9_E_R_Z_F_10011);
		if (A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_10101,`HS65_LS_AOI222X9_E_R_Z_F_10101);
		if (!A && B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_01001,`HS65_LS_AOI222X9_E_R_Z_F_01001);
		if (!A && B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_01101,`HS65_LS_AOI222X9_E_R_Z_F_01101);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_01011,`HS65_LS_AOI222X9_E_R_Z_F_01011);
		if (A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_10001,`HS65_LS_AOI222X9_E_R_Z_F_10001);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_00011,`HS65_LS_AOI222X9_E_R_Z_F_00011);
		if (!A && !B && !C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_00001,`HS65_LS_AOI222X9_E_R_Z_F_00001);
		if (!A && !B && C && !D && F) (E -=> Z) = (`HS65_LS_AOI222X9_E_F_Z_R_00101,`HS65_LS_AOI222X9_E_R_Z_F_00101);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_10011,`HS65_LS_AOI222X9_F_R_Z_F_10011);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_10101,`HS65_LS_AOI222X9_F_R_Z_F_10101);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_01001,`HS65_LS_AOI222X9_F_R_Z_F_01001);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_01101,`HS65_LS_AOI222X9_F_R_Z_F_01101);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_01011,`HS65_LS_AOI222X9_F_R_Z_F_01011);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_10001,`HS65_LS_AOI222X9_F_R_Z_F_10001);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_00011,`HS65_LS_AOI222X9_F_R_Z_F_00011);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_00001,`HS65_LS_AOI222X9_F_R_Z_F_00001);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI222X9_F_F_Z_R_00101,`HS65_LS_AOI222X9_F_R_Z_F_00101);


	endspecify

endmodule // HS65_LS_AOI222X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X1_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X1_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X1_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X1_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X1_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X1_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X1_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X1_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X1_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X1_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X1_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X1_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X1_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X1_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X1_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X1_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X1_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X1_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X1_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X1_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X1_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X1_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X1_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X1_D_F_Z_R_101 0.1

module HS65_LS_AOI22X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X1_A_F_Z_R_101,`HS65_LS_AOI22X1_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X1_A_F_Z_R_100,`HS65_LS_AOI22X1_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X1_A_F_Z_R_110,`HS65_LS_AOI22X1_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X1_B_F_Z_R_101,`HS65_LS_AOI22X1_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X1_B_F_Z_R_100,`HS65_LS_AOI22X1_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X1_B_F_Z_R_110,`HS65_LS_AOI22X1_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X1_C_F_Z_R_011,`HS65_LS_AOI22X1_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X1_C_F_Z_R_001,`HS65_LS_AOI22X1_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X1_C_F_Z_R_101,`HS65_LS_AOI22X1_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X1_D_F_Z_R_011,`HS65_LS_AOI22X1_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X1_D_F_Z_R_001,`HS65_LS_AOI22X1_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X1_D_F_Z_R_101,`HS65_LS_AOI22X1_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X11_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X11_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X11_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X11_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X11_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X11_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X11_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X11_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X11_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X11_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X11_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X11_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X11_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X11_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X11_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X11_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X11_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X11_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X11_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X11_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X11_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X11_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X11_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X11_D_F_Z_R_101 0.1

module HS65_LS_AOI22X11 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X11_A_F_Z_R_101,`HS65_LS_AOI22X11_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X11_A_F_Z_R_100,`HS65_LS_AOI22X11_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X11_A_F_Z_R_110,`HS65_LS_AOI22X11_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X11_B_F_Z_R_101,`HS65_LS_AOI22X11_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X11_B_F_Z_R_100,`HS65_LS_AOI22X11_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X11_B_F_Z_R_110,`HS65_LS_AOI22X11_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X11_C_F_Z_R_011,`HS65_LS_AOI22X11_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X11_C_F_Z_R_001,`HS65_LS_AOI22X11_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X11_C_F_Z_R_101,`HS65_LS_AOI22X11_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X11_D_F_Z_R_011,`HS65_LS_AOI22X11_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X11_D_F_Z_R_001,`HS65_LS_AOI22X11_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X11_D_F_Z_R_101,`HS65_LS_AOI22X11_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X17_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X17_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X17_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X17_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X17_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X17_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X17_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X17_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X17_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X17_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X17_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X17_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X17_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X17_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X17_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X17_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X17_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X17_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X17_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X17_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X17_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X17_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X17_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X17_D_F_Z_R_101 0.1

module HS65_LS_AOI22X17 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X17_A_F_Z_R_101,`HS65_LS_AOI22X17_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X17_A_F_Z_R_100,`HS65_LS_AOI22X17_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X17_A_F_Z_R_110,`HS65_LS_AOI22X17_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X17_B_F_Z_R_101,`HS65_LS_AOI22X17_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X17_B_F_Z_R_100,`HS65_LS_AOI22X17_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X17_B_F_Z_R_110,`HS65_LS_AOI22X17_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X17_C_F_Z_R_011,`HS65_LS_AOI22X17_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X17_C_F_Z_R_001,`HS65_LS_AOI22X17_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X17_C_F_Z_R_101,`HS65_LS_AOI22X17_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X17_D_F_Z_R_011,`HS65_LS_AOI22X17_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X17_D_F_Z_R_001,`HS65_LS_AOI22X17_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X17_D_F_Z_R_101,`HS65_LS_AOI22X17_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X22_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X22_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X22_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X22_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X22_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X22_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X22_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X22_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X22_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X22_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X22_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X22_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X22_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X22_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X22_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X22_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X22_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X22_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X22_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X22_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X22_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X22_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X22_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X22_D_F_Z_R_101 0.1

module HS65_LS_AOI22X22 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X22_A_F_Z_R_101,`HS65_LS_AOI22X22_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X22_A_F_Z_R_100,`HS65_LS_AOI22X22_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X22_A_F_Z_R_110,`HS65_LS_AOI22X22_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X22_B_F_Z_R_101,`HS65_LS_AOI22X22_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X22_B_F_Z_R_100,`HS65_LS_AOI22X22_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X22_B_F_Z_R_110,`HS65_LS_AOI22X22_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X22_C_F_Z_R_011,`HS65_LS_AOI22X22_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X22_C_F_Z_R_001,`HS65_LS_AOI22X22_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X22_C_F_Z_R_101,`HS65_LS_AOI22X22_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X22_D_F_Z_R_011,`HS65_LS_AOI22X22_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X22_D_F_Z_R_001,`HS65_LS_AOI22X22_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X22_D_F_Z_R_101,`HS65_LS_AOI22X22_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X3_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X3_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X3_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X3_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X3_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X3_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X3_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X3_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X3_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X3_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X3_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X3_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X3_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X3_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X3_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X3_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X3_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X3_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X3_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X3_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X3_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X3_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X3_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X3_D_F_Z_R_101 0.1

module HS65_LS_AOI22X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X3_A_F_Z_R_101,`HS65_LS_AOI22X3_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X3_A_F_Z_R_100,`HS65_LS_AOI22X3_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X3_A_F_Z_R_110,`HS65_LS_AOI22X3_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X3_B_F_Z_R_101,`HS65_LS_AOI22X3_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X3_B_F_Z_R_100,`HS65_LS_AOI22X3_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X3_B_F_Z_R_110,`HS65_LS_AOI22X3_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X3_C_F_Z_R_011,`HS65_LS_AOI22X3_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X3_C_F_Z_R_001,`HS65_LS_AOI22X3_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X3_C_F_Z_R_101,`HS65_LS_AOI22X3_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X3_D_F_Z_R_011,`HS65_LS_AOI22X3_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X3_D_F_Z_R_001,`HS65_LS_AOI22X3_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X3_D_F_Z_R_101,`HS65_LS_AOI22X3_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X33_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X33_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X33_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X33_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X33_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X33_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X33_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X33_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X33_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X33_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X33_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X33_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X33_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X33_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X33_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X33_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X33_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X33_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X33_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X33_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X33_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X33_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X33_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X33_D_F_Z_R_101 0.1

module HS65_LS_AOI22X33 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X33_A_F_Z_R_101,`HS65_LS_AOI22X33_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X33_A_F_Z_R_100,`HS65_LS_AOI22X33_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X33_A_F_Z_R_110,`HS65_LS_AOI22X33_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X33_B_F_Z_R_101,`HS65_LS_AOI22X33_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X33_B_F_Z_R_100,`HS65_LS_AOI22X33_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X33_B_F_Z_R_110,`HS65_LS_AOI22X33_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X33_C_F_Z_R_011,`HS65_LS_AOI22X33_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X33_C_F_Z_R_001,`HS65_LS_AOI22X33_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X33_C_F_Z_R_101,`HS65_LS_AOI22X33_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X33_D_F_Z_R_011,`HS65_LS_AOI22X33_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X33_D_F_Z_R_001,`HS65_LS_AOI22X33_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X33_D_F_Z_R_101,`HS65_LS_AOI22X33_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X4_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X4_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X4_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X4_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X4_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X4_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X4_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X4_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X4_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X4_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X4_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X4_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X4_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X4_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X4_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X4_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X4_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X4_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X4_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X4_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X4_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X4_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X4_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X4_D_F_Z_R_101 0.1

module HS65_LS_AOI22X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X4_A_F_Z_R_101,`HS65_LS_AOI22X4_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X4_A_F_Z_R_100,`HS65_LS_AOI22X4_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X4_A_F_Z_R_110,`HS65_LS_AOI22X4_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X4_B_F_Z_R_101,`HS65_LS_AOI22X4_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X4_B_F_Z_R_100,`HS65_LS_AOI22X4_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X4_B_F_Z_R_110,`HS65_LS_AOI22X4_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X4_C_F_Z_R_011,`HS65_LS_AOI22X4_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X4_C_F_Z_R_001,`HS65_LS_AOI22X4_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X4_C_F_Z_R_101,`HS65_LS_AOI22X4_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X4_D_F_Z_R_011,`HS65_LS_AOI22X4_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X4_D_F_Z_R_001,`HS65_LS_AOI22X4_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X4_D_F_Z_R_101,`HS65_LS_AOI22X4_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X44_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X44_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X44_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X44_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X44_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X44_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X44_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X44_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X44_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X44_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X44_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X44_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X44_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X44_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X44_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X44_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X44_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X44_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X44_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X44_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X44_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X44_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X44_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X44_D_F_Z_R_101 0.1

module HS65_LS_AOI22X44 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X44_A_F_Z_R_101,`HS65_LS_AOI22X44_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X44_A_F_Z_R_100,`HS65_LS_AOI22X44_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X44_A_F_Z_R_110,`HS65_LS_AOI22X44_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X44_B_F_Z_R_101,`HS65_LS_AOI22X44_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X44_B_F_Z_R_100,`HS65_LS_AOI22X44_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X44_B_F_Z_R_110,`HS65_LS_AOI22X44_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X44_C_F_Z_R_011,`HS65_LS_AOI22X44_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X44_C_F_Z_R_001,`HS65_LS_AOI22X44_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X44_C_F_Z_R_101,`HS65_LS_AOI22X44_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X44_D_F_Z_R_011,`HS65_LS_AOI22X44_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X44_D_F_Z_R_001,`HS65_LS_AOI22X44_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X44_D_F_Z_R_101,`HS65_LS_AOI22X44_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X6_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X6_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X6_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X6_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X6_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X6_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X6_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X6_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X6_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X6_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X6_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X6_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X6_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X6_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X6_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X6_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X6_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X6_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X6_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X6_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X6_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X6_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X6_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X6_D_F_Z_R_101 0.1

module HS65_LS_AOI22X6 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X6_A_F_Z_R_101,`HS65_LS_AOI22X6_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X6_A_F_Z_R_100,`HS65_LS_AOI22X6_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X6_A_F_Z_R_110,`HS65_LS_AOI22X6_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X6_B_F_Z_R_101,`HS65_LS_AOI22X6_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X6_B_F_Z_R_100,`HS65_LS_AOI22X6_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X6_B_F_Z_R_110,`HS65_LS_AOI22X6_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X6_C_F_Z_R_011,`HS65_LS_AOI22X6_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X6_C_F_Z_R_001,`HS65_LS_AOI22X6_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X6_C_F_Z_R_101,`HS65_LS_AOI22X6_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X6_D_F_Z_R_011,`HS65_LS_AOI22X6_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X6_D_F_Z_R_001,`HS65_LS_AOI22X6_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X6_D_F_Z_R_101,`HS65_LS_AOI22X6_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI22X8_A_R_Z_F_101 0.1
`define HS65_LS_AOI22X8_A_F_Z_R_101 0.1
`define HS65_LS_AOI22X8_A_R_Z_F_100 0.1
`define HS65_LS_AOI22X8_A_F_Z_R_100 0.1
`define HS65_LS_AOI22X8_A_R_Z_F_110 0.1
`define HS65_LS_AOI22X8_A_F_Z_R_110 0.1
`define HS65_LS_AOI22X8_B_R_Z_F_101 0.1
`define HS65_LS_AOI22X8_B_F_Z_R_101 0.1
`define HS65_LS_AOI22X8_B_R_Z_F_100 0.1
`define HS65_LS_AOI22X8_B_F_Z_R_100 0.1
`define HS65_LS_AOI22X8_B_R_Z_F_110 0.1
`define HS65_LS_AOI22X8_B_F_Z_R_110 0.1
`define HS65_LS_AOI22X8_C_R_Z_F_011 0.1
`define HS65_LS_AOI22X8_C_F_Z_R_011 0.1
`define HS65_LS_AOI22X8_C_R_Z_F_001 0.1
`define HS65_LS_AOI22X8_C_F_Z_R_001 0.1
`define HS65_LS_AOI22X8_C_R_Z_F_101 0.1
`define HS65_LS_AOI22X8_C_F_Z_R_101 0.1
`define HS65_LS_AOI22X8_D_R_Z_F_011 0.1
`define HS65_LS_AOI22X8_D_F_Z_R_011 0.1
`define HS65_LS_AOI22X8_D_R_Z_F_001 0.1
`define HS65_LS_AOI22X8_D_F_Z_R_001 0.1
`define HS65_LS_AOI22X8_D_R_Z_F_101 0.1
`define HS65_LS_AOI22X8_D_F_Z_R_101 0.1

module HS65_LS_AOI22X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && !C && D) (A -=> Z) = (`HS65_LS_AOI22X8_A_F_Z_R_101,`HS65_LS_AOI22X8_A_R_Z_F_101);
		if (B && !C && !D) (A -=> Z) = (`HS65_LS_AOI22X8_A_F_Z_R_100,`HS65_LS_AOI22X8_A_R_Z_F_100);
		if (B && C && !D) (A -=> Z) = (`HS65_LS_AOI22X8_A_F_Z_R_110,`HS65_LS_AOI22X8_A_R_Z_F_110);
		if (A && !C && D) (B -=> Z) = (`HS65_LS_AOI22X8_B_F_Z_R_101,`HS65_LS_AOI22X8_B_R_Z_F_101);
		if (A && !C && !D) (B -=> Z) = (`HS65_LS_AOI22X8_B_F_Z_R_100,`HS65_LS_AOI22X8_B_R_Z_F_100);
		if (A && C && !D) (B -=> Z) = (`HS65_LS_AOI22X8_B_F_Z_R_110,`HS65_LS_AOI22X8_B_R_Z_F_110);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_AOI22X8_C_F_Z_R_011,`HS65_LS_AOI22X8_C_R_Z_F_011);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X8_C_F_Z_R_001,`HS65_LS_AOI22X8_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_AOI22X8_C_F_Z_R_101,`HS65_LS_AOI22X8_C_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI22X8_D_F_Z_R_011,`HS65_LS_AOI22X8_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X8_D_F_Z_R_001,`HS65_LS_AOI22X8_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI22X8_D_F_Z_R_101,`HS65_LS_AOI22X8_D_R_Z_F_101);


	endspecify

endmodule // HS65_LS_AOI22X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI311X12_A_R_Z_F_1100 0.1
`define HS65_LS_AOI311X12_A_F_Z_R_1100 0.1
`define HS65_LS_AOI311X12_B_R_Z_F_1100 0.1
`define HS65_LS_AOI311X12_B_F_Z_R_1100 0.1
`define HS65_LS_AOI311X12_C_R_Z_F_1100 0.1
`define HS65_LS_AOI311X12_C_F_Z_R_1100 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_1010 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_1010 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_1000 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_1000 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_1100 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_1100 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_0010 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_0010 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_0000 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_0000 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_0110 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_0110 0.1
`define HS65_LS_AOI311X12_D_R_Z_F_0100 0.1
`define HS65_LS_AOI311X12_D_F_Z_R_0100 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_1010 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_1010 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_1000 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_1000 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_1100 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_1100 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_0010 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_0010 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_0000 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_0000 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_0110 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_0110 0.1
`define HS65_LS_AOI311X12_E_R_Z_F_0100 0.1
`define HS65_LS_AOI311X12_E_F_Z_R_0100 0.1

module HS65_LS_AOI311X12 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI311X12_A_F_Z_R_1100,`HS65_LS_AOI311X12_A_R_Z_F_1100);
		(B -=> Z) = (`HS65_LS_AOI311X12_B_F_Z_R_1100,`HS65_LS_AOI311X12_B_R_Z_F_1100);
		(C -=> Z) = (`HS65_LS_AOI311X12_C_F_Z_R_1100,`HS65_LS_AOI311X12_C_R_Z_F_1100);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_1010,`HS65_LS_AOI311X12_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_1000,`HS65_LS_AOI311X12_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_1100,`HS65_LS_AOI311X12_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_0010,`HS65_LS_AOI311X12_D_R_Z_F_0010);
		if (!A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_0000,`HS65_LS_AOI311X12_D_R_Z_F_0000);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_0110,`HS65_LS_AOI311X12_D_R_Z_F_0110);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X12_D_F_Z_R_0100,`HS65_LS_AOI311X12_D_R_Z_F_0100);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_1010,`HS65_LS_AOI311X12_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_1000,`HS65_LS_AOI311X12_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_1100,`HS65_LS_AOI311X12_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_0010,`HS65_LS_AOI311X12_E_R_Z_F_0010);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_0000,`HS65_LS_AOI311X12_E_R_Z_F_0000);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_0110,`HS65_LS_AOI311X12_E_R_Z_F_0110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X12_E_F_Z_R_0100,`HS65_LS_AOI311X12_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI311X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI311X16_A_R_Z_F_1100 0.1
`define HS65_LS_AOI311X16_A_F_Z_R_1100 0.1
`define HS65_LS_AOI311X16_B_R_Z_F_1100 0.1
`define HS65_LS_AOI311X16_B_F_Z_R_1100 0.1
`define HS65_LS_AOI311X16_C_R_Z_F_1100 0.1
`define HS65_LS_AOI311X16_C_F_Z_R_1100 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_1010 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_1010 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_1000 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_1000 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_1100 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_1100 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_0010 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_0010 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_0000 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_0000 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_0110 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_0110 0.1
`define HS65_LS_AOI311X16_D_R_Z_F_0100 0.1
`define HS65_LS_AOI311X16_D_F_Z_R_0100 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_1010 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_1010 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_1000 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_1000 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_1100 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_1100 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_0010 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_0010 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_0000 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_0000 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_0110 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_0110 0.1
`define HS65_LS_AOI311X16_E_R_Z_F_0100 0.1
`define HS65_LS_AOI311X16_E_F_Z_R_0100 0.1

module HS65_LS_AOI311X16 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI311X16_A_F_Z_R_1100,`HS65_LS_AOI311X16_A_R_Z_F_1100);
		(B -=> Z) = (`HS65_LS_AOI311X16_B_F_Z_R_1100,`HS65_LS_AOI311X16_B_R_Z_F_1100);
		(C -=> Z) = (`HS65_LS_AOI311X16_C_F_Z_R_1100,`HS65_LS_AOI311X16_C_R_Z_F_1100);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_1010,`HS65_LS_AOI311X16_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_1000,`HS65_LS_AOI311X16_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_1100,`HS65_LS_AOI311X16_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_0010,`HS65_LS_AOI311X16_D_R_Z_F_0010);
		if (!A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_0000,`HS65_LS_AOI311X16_D_R_Z_F_0000);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_0110,`HS65_LS_AOI311X16_D_R_Z_F_0110);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X16_D_F_Z_R_0100,`HS65_LS_AOI311X16_D_R_Z_F_0100);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_1010,`HS65_LS_AOI311X16_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_1000,`HS65_LS_AOI311X16_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_1100,`HS65_LS_AOI311X16_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_0010,`HS65_LS_AOI311X16_E_R_Z_F_0010);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_0000,`HS65_LS_AOI311X16_E_R_Z_F_0000);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_0110,`HS65_LS_AOI311X16_E_R_Z_F_0110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X16_E_F_Z_R_0100,`HS65_LS_AOI311X16_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI311X16

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI311X2_A_R_Z_F_1100 0.1
`define HS65_LS_AOI311X2_A_F_Z_R_1100 0.1
`define HS65_LS_AOI311X2_B_R_Z_F_1100 0.1
`define HS65_LS_AOI311X2_B_F_Z_R_1100 0.1
`define HS65_LS_AOI311X2_C_R_Z_F_1100 0.1
`define HS65_LS_AOI311X2_C_F_Z_R_1100 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_1010 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_1010 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_1000 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_1000 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_1100 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_1100 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_0010 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_0010 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_0000 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_0000 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_0110 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_0110 0.1
`define HS65_LS_AOI311X2_D_R_Z_F_0100 0.1
`define HS65_LS_AOI311X2_D_F_Z_R_0100 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_1010 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_1010 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_1000 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_1000 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_1100 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_1100 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_0010 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_0010 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_0000 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_0000 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_0110 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_0110 0.1
`define HS65_LS_AOI311X2_E_R_Z_F_0100 0.1
`define HS65_LS_AOI311X2_E_F_Z_R_0100 0.1

module HS65_LS_AOI311X2 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI311X2_A_F_Z_R_1100,`HS65_LS_AOI311X2_A_R_Z_F_1100);
		(B -=> Z) = (`HS65_LS_AOI311X2_B_F_Z_R_1100,`HS65_LS_AOI311X2_B_R_Z_F_1100);
		(C -=> Z) = (`HS65_LS_AOI311X2_C_F_Z_R_1100,`HS65_LS_AOI311X2_C_R_Z_F_1100);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_1010,`HS65_LS_AOI311X2_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_1000,`HS65_LS_AOI311X2_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_1100,`HS65_LS_AOI311X2_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_0010,`HS65_LS_AOI311X2_D_R_Z_F_0010);
		if (!A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_0000,`HS65_LS_AOI311X2_D_R_Z_F_0000);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_0110,`HS65_LS_AOI311X2_D_R_Z_F_0110);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X2_D_F_Z_R_0100,`HS65_LS_AOI311X2_D_R_Z_F_0100);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_1010,`HS65_LS_AOI311X2_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_1000,`HS65_LS_AOI311X2_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_1100,`HS65_LS_AOI311X2_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_0010,`HS65_LS_AOI311X2_E_R_Z_F_0010);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_0000,`HS65_LS_AOI311X2_E_R_Z_F_0000);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_0110,`HS65_LS_AOI311X2_E_R_Z_F_0110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X2_E_F_Z_R_0100,`HS65_LS_AOI311X2_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI311X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI311X4_A_R_Z_F_1100 0.1
`define HS65_LS_AOI311X4_A_F_Z_R_1100 0.1
`define HS65_LS_AOI311X4_B_R_Z_F_1100 0.1
`define HS65_LS_AOI311X4_B_F_Z_R_1100 0.1
`define HS65_LS_AOI311X4_C_R_Z_F_1100 0.1
`define HS65_LS_AOI311X4_C_F_Z_R_1100 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_1010 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_1010 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_1000 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_1000 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_1100 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_1100 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_0010 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_0010 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_0000 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_0000 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_0110 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_0110 0.1
`define HS65_LS_AOI311X4_D_R_Z_F_0100 0.1
`define HS65_LS_AOI311X4_D_F_Z_R_0100 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_1010 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_1010 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_1000 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_1000 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_1100 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_1100 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_0010 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_0010 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_0000 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_0000 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_0110 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_0110 0.1
`define HS65_LS_AOI311X4_E_R_Z_F_0100 0.1
`define HS65_LS_AOI311X4_E_F_Z_R_0100 0.1

module HS65_LS_AOI311X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI311X4_A_F_Z_R_1100,`HS65_LS_AOI311X4_A_R_Z_F_1100);
		(B -=> Z) = (`HS65_LS_AOI311X4_B_F_Z_R_1100,`HS65_LS_AOI311X4_B_R_Z_F_1100);
		(C -=> Z) = (`HS65_LS_AOI311X4_C_F_Z_R_1100,`HS65_LS_AOI311X4_C_R_Z_F_1100);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_1010,`HS65_LS_AOI311X4_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_1000,`HS65_LS_AOI311X4_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_1100,`HS65_LS_AOI311X4_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_0010,`HS65_LS_AOI311X4_D_R_Z_F_0010);
		if (!A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_0000,`HS65_LS_AOI311X4_D_R_Z_F_0000);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_0110,`HS65_LS_AOI311X4_D_R_Z_F_0110);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X4_D_F_Z_R_0100,`HS65_LS_AOI311X4_D_R_Z_F_0100);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_1010,`HS65_LS_AOI311X4_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_1000,`HS65_LS_AOI311X4_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_1100,`HS65_LS_AOI311X4_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_0010,`HS65_LS_AOI311X4_E_R_Z_F_0010);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_0000,`HS65_LS_AOI311X4_E_R_Z_F_0000);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_0110,`HS65_LS_AOI311X4_E_R_Z_F_0110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X4_E_F_Z_R_0100,`HS65_LS_AOI311X4_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI311X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI311X8_A_R_Z_F_1100 0.1
`define HS65_LS_AOI311X8_A_F_Z_R_1100 0.1
`define HS65_LS_AOI311X8_B_R_Z_F_1100 0.1
`define HS65_LS_AOI311X8_B_F_Z_R_1100 0.1
`define HS65_LS_AOI311X8_C_R_Z_F_1100 0.1
`define HS65_LS_AOI311X8_C_F_Z_R_1100 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_1010 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_1010 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_1000 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_1000 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_1100 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_1100 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_0010 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_0010 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_0000 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_0000 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_0110 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_0110 0.1
`define HS65_LS_AOI311X8_D_R_Z_F_0100 0.1
`define HS65_LS_AOI311X8_D_F_Z_R_0100 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_1010 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_1010 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_1000 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_1000 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_1100 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_1100 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_0010 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_0010 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_0000 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_0000 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_0110 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_0110 0.1
`define HS65_LS_AOI311X8_E_R_Z_F_0100 0.1
`define HS65_LS_AOI311X8_E_F_Z_R_0100 0.1

module HS65_LS_AOI311X8 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI311X8_A_F_Z_R_1100,`HS65_LS_AOI311X8_A_R_Z_F_1100);
		(B -=> Z) = (`HS65_LS_AOI311X8_B_F_Z_R_1100,`HS65_LS_AOI311X8_B_R_Z_F_1100);
		(C -=> Z) = (`HS65_LS_AOI311X8_C_F_Z_R_1100,`HS65_LS_AOI311X8_C_R_Z_F_1100);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_1010,`HS65_LS_AOI311X8_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_1000,`HS65_LS_AOI311X8_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_1100,`HS65_LS_AOI311X8_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_0010,`HS65_LS_AOI311X8_D_R_Z_F_0010);
		if (!A && !B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_0000,`HS65_LS_AOI311X8_D_R_Z_F_0000);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_0110,`HS65_LS_AOI311X8_D_R_Z_F_0110);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_AOI311X8_D_F_Z_R_0100,`HS65_LS_AOI311X8_D_R_Z_F_0100);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_1010,`HS65_LS_AOI311X8_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_1000,`HS65_LS_AOI311X8_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_1100,`HS65_LS_AOI311X8_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_0010,`HS65_LS_AOI311X8_E_R_Z_F_0010);
		if (!A && !B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_0000,`HS65_LS_AOI311X8_E_R_Z_F_0000);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_0110,`HS65_LS_AOI311X8_E_R_Z_F_0110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_AOI311X8_E_F_Z_R_0100,`HS65_LS_AOI311X8_E_R_Z_F_0100);


	endspecify

endmodule // HS65_LS_AOI311X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI312X13_A_R_Z_F_11000 0.1
`define HS65_LS_AOI312X13_A_F_Z_R_11000 0.1
`define HS65_LS_AOI312X13_A_R_Z_F_11100 0.1
`define HS65_LS_AOI312X13_A_F_Z_R_11100 0.1
`define HS65_LS_AOI312X13_A_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_A_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_B_R_Z_F_11000 0.1
`define HS65_LS_AOI312X13_B_F_Z_R_11000 0.1
`define HS65_LS_AOI312X13_B_R_Z_F_11100 0.1
`define HS65_LS_AOI312X13_B_F_Z_R_11100 0.1
`define HS65_LS_AOI312X13_B_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_B_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_C_R_Z_F_11000 0.1
`define HS65_LS_AOI312X13_C_F_Z_R_11000 0.1
`define HS65_LS_AOI312X13_C_R_Z_F_11100 0.1
`define HS65_LS_AOI312X13_C_F_Z_R_11100 0.1
`define HS65_LS_AOI312X13_C_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_C_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_01010 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_01010 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_10010 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_10010 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_01110 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_01110 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_10110 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_10110 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_00110 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_00110 0.1
`define HS65_LS_AOI312X13_D_R_Z_F_00010 0.1
`define HS65_LS_AOI312X13_D_F_Z_R_00010 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_01010 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_01010 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_10010 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_10010 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_01110 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_01110 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_10110 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_10110 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_00110 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_00110 0.1
`define HS65_LS_AOI312X13_E_R_Z_F_00010 0.1
`define HS65_LS_AOI312X13_E_F_Z_R_00010 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01000 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01000 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01010 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01010 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01001 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01001 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01100 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01100 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00110 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00110 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00101 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00101 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00000 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00000 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00010 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00010 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00001 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00001 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_00100 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_00100 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01110 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01110 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_01101 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_01101 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_11000 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_11000 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_11010 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_11010 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_11001 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_11001 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10110 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10110 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10101 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10101 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10000 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10000 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10010 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10010 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10001 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10001 0.1
`define HS65_LS_AOI312X13_F_R_Z_F_10100 0.1
`define HS65_LS_AOI312X13_F_F_Z_R_10100 0.1

module HS65_LS_AOI312X13 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL4, D, E) ;
	or    U3 (INTERNAL3, INTERNAL4, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X13_A_F_Z_R_11000,`HS65_LS_AOI312X13_A_R_Z_F_11000);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X13_A_F_Z_R_11100,`HS65_LS_AOI312X13_A_R_Z_F_11100);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI312X13_A_F_Z_R_11010,`HS65_LS_AOI312X13_A_R_Z_F_11010);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X13_B_F_Z_R_11000,`HS65_LS_AOI312X13_B_R_Z_F_11000);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X13_B_F_Z_R_11100,`HS65_LS_AOI312X13_B_R_Z_F_11100);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI312X13_B_F_Z_R_11010,`HS65_LS_AOI312X13_B_R_Z_F_11010);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X13_C_F_Z_R_11000,`HS65_LS_AOI312X13_C_R_Z_F_11000);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X13_C_F_Z_R_11100,`HS65_LS_AOI312X13_C_R_Z_F_11100);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI312X13_C_F_Z_R_11010,`HS65_LS_AOI312X13_C_R_Z_F_11010);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_11010,`HS65_LS_AOI312X13_D_R_Z_F_11010);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_01010,`HS65_LS_AOI312X13_D_R_Z_F_01010);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_10010,`HS65_LS_AOI312X13_D_R_Z_F_10010);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_01110,`HS65_LS_AOI312X13_D_R_Z_F_01110);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_10110,`HS65_LS_AOI312X13_D_R_Z_F_10110);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_00110,`HS65_LS_AOI312X13_D_R_Z_F_00110);
		if (!A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X13_D_F_Z_R_00010,`HS65_LS_AOI312X13_D_R_Z_F_00010);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_11010,`HS65_LS_AOI312X13_E_R_Z_F_11010);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_01010,`HS65_LS_AOI312X13_E_R_Z_F_01010);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_10010,`HS65_LS_AOI312X13_E_R_Z_F_10010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_01110,`HS65_LS_AOI312X13_E_R_Z_F_01110);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_10110,`HS65_LS_AOI312X13_E_R_Z_F_10110);
		if (!A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_00110,`HS65_LS_AOI312X13_E_R_Z_F_00110);
		if (!A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X13_E_F_Z_R_00010,`HS65_LS_AOI312X13_E_R_Z_F_00010);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01000,`HS65_LS_AOI312X13_F_R_Z_F_01000);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01010,`HS65_LS_AOI312X13_F_R_Z_F_01010);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01001,`HS65_LS_AOI312X13_F_R_Z_F_01001);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01100,`HS65_LS_AOI312X13_F_R_Z_F_01100);
		if (!A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00110,`HS65_LS_AOI312X13_F_R_Z_F_00110);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00101,`HS65_LS_AOI312X13_F_R_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00000,`HS65_LS_AOI312X13_F_R_Z_F_00000);
		if (!A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00010,`HS65_LS_AOI312X13_F_R_Z_F_00010);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00001,`HS65_LS_AOI312X13_F_R_Z_F_00001);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_00100,`HS65_LS_AOI312X13_F_R_Z_F_00100);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01110,`HS65_LS_AOI312X13_F_R_Z_F_01110);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_01101,`HS65_LS_AOI312X13_F_R_Z_F_01101);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_11000,`HS65_LS_AOI312X13_F_R_Z_F_11000);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_11010,`HS65_LS_AOI312X13_F_R_Z_F_11010);
		if (A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_11001,`HS65_LS_AOI312X13_F_R_Z_F_11001);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10110,`HS65_LS_AOI312X13_F_R_Z_F_10110);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10101,`HS65_LS_AOI312X13_F_R_Z_F_10101);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10000,`HS65_LS_AOI312X13_F_R_Z_F_10000);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10010,`HS65_LS_AOI312X13_F_R_Z_F_10010);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10001,`HS65_LS_AOI312X13_F_R_Z_F_10001);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X13_F_F_Z_R_10100,`HS65_LS_AOI312X13_F_R_Z_F_10100);


	endspecify

endmodule // HS65_LS_AOI312X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI312X17_A_R_Z_F_11000 0.1
`define HS65_LS_AOI312X17_A_F_Z_R_11000 0.1
`define HS65_LS_AOI312X17_A_R_Z_F_11100 0.1
`define HS65_LS_AOI312X17_A_F_Z_R_11100 0.1
`define HS65_LS_AOI312X17_A_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_A_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_B_R_Z_F_11000 0.1
`define HS65_LS_AOI312X17_B_F_Z_R_11000 0.1
`define HS65_LS_AOI312X17_B_R_Z_F_11100 0.1
`define HS65_LS_AOI312X17_B_F_Z_R_11100 0.1
`define HS65_LS_AOI312X17_B_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_B_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_C_R_Z_F_11000 0.1
`define HS65_LS_AOI312X17_C_F_Z_R_11000 0.1
`define HS65_LS_AOI312X17_C_R_Z_F_11100 0.1
`define HS65_LS_AOI312X17_C_F_Z_R_11100 0.1
`define HS65_LS_AOI312X17_C_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_C_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_01010 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_01010 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_10010 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_10010 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_01110 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_01110 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_10110 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_10110 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_00110 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_00110 0.1
`define HS65_LS_AOI312X17_D_R_Z_F_00010 0.1
`define HS65_LS_AOI312X17_D_F_Z_R_00010 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_01010 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_01010 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_10010 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_10010 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_01110 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_01110 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_10110 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_10110 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_00110 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_00110 0.1
`define HS65_LS_AOI312X17_E_R_Z_F_00010 0.1
`define HS65_LS_AOI312X17_E_F_Z_R_00010 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01000 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01000 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01010 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01010 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01001 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01001 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01100 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01100 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00110 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00110 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00101 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00101 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00000 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00000 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00010 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00010 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00001 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00001 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_00100 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_00100 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01110 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01110 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_01101 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_01101 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_11000 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_11000 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_11010 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_11010 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_11001 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_11001 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10110 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10110 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10101 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10101 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10000 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10000 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10010 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10010 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10001 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10001 0.1
`define HS65_LS_AOI312X17_F_R_Z_F_10100 0.1
`define HS65_LS_AOI312X17_F_F_Z_R_10100 0.1

module HS65_LS_AOI312X17 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL4, D, E) ;
	or    U3 (INTERNAL3, INTERNAL4, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X17_A_F_Z_R_11000,`HS65_LS_AOI312X17_A_R_Z_F_11000);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X17_A_F_Z_R_11100,`HS65_LS_AOI312X17_A_R_Z_F_11100);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI312X17_A_F_Z_R_11010,`HS65_LS_AOI312X17_A_R_Z_F_11010);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X17_B_F_Z_R_11000,`HS65_LS_AOI312X17_B_R_Z_F_11000);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X17_B_F_Z_R_11100,`HS65_LS_AOI312X17_B_R_Z_F_11100);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI312X17_B_F_Z_R_11010,`HS65_LS_AOI312X17_B_R_Z_F_11010);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X17_C_F_Z_R_11000,`HS65_LS_AOI312X17_C_R_Z_F_11000);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X17_C_F_Z_R_11100,`HS65_LS_AOI312X17_C_R_Z_F_11100);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI312X17_C_F_Z_R_11010,`HS65_LS_AOI312X17_C_R_Z_F_11010);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_11010,`HS65_LS_AOI312X17_D_R_Z_F_11010);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_01010,`HS65_LS_AOI312X17_D_R_Z_F_01010);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_10010,`HS65_LS_AOI312X17_D_R_Z_F_10010);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_01110,`HS65_LS_AOI312X17_D_R_Z_F_01110);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_10110,`HS65_LS_AOI312X17_D_R_Z_F_10110);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_00110,`HS65_LS_AOI312X17_D_R_Z_F_00110);
		if (!A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X17_D_F_Z_R_00010,`HS65_LS_AOI312X17_D_R_Z_F_00010);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_11010,`HS65_LS_AOI312X17_E_R_Z_F_11010);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_01010,`HS65_LS_AOI312X17_E_R_Z_F_01010);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_10010,`HS65_LS_AOI312X17_E_R_Z_F_10010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_01110,`HS65_LS_AOI312X17_E_R_Z_F_01110);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_10110,`HS65_LS_AOI312X17_E_R_Z_F_10110);
		if (!A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_00110,`HS65_LS_AOI312X17_E_R_Z_F_00110);
		if (!A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X17_E_F_Z_R_00010,`HS65_LS_AOI312X17_E_R_Z_F_00010);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01000,`HS65_LS_AOI312X17_F_R_Z_F_01000);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01010,`HS65_LS_AOI312X17_F_R_Z_F_01010);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01001,`HS65_LS_AOI312X17_F_R_Z_F_01001);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01100,`HS65_LS_AOI312X17_F_R_Z_F_01100);
		if (!A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00110,`HS65_LS_AOI312X17_F_R_Z_F_00110);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00101,`HS65_LS_AOI312X17_F_R_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00000,`HS65_LS_AOI312X17_F_R_Z_F_00000);
		if (!A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00010,`HS65_LS_AOI312X17_F_R_Z_F_00010);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00001,`HS65_LS_AOI312X17_F_R_Z_F_00001);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_00100,`HS65_LS_AOI312X17_F_R_Z_F_00100);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01110,`HS65_LS_AOI312X17_F_R_Z_F_01110);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_01101,`HS65_LS_AOI312X17_F_R_Z_F_01101);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_11000,`HS65_LS_AOI312X17_F_R_Z_F_11000);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_11010,`HS65_LS_AOI312X17_F_R_Z_F_11010);
		if (A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_11001,`HS65_LS_AOI312X17_F_R_Z_F_11001);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10110,`HS65_LS_AOI312X17_F_R_Z_F_10110);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10101,`HS65_LS_AOI312X17_F_R_Z_F_10101);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10000,`HS65_LS_AOI312X17_F_R_Z_F_10000);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10010,`HS65_LS_AOI312X17_F_R_Z_F_10010);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10001,`HS65_LS_AOI312X17_F_R_Z_F_10001);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X17_F_F_Z_R_10100,`HS65_LS_AOI312X17_F_R_Z_F_10100);


	endspecify

endmodule // HS65_LS_AOI312X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI312X2_A_R_Z_F_11000 0.1
`define HS65_LS_AOI312X2_A_F_Z_R_11000 0.1
`define HS65_LS_AOI312X2_A_R_Z_F_11100 0.1
`define HS65_LS_AOI312X2_A_F_Z_R_11100 0.1
`define HS65_LS_AOI312X2_A_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_A_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_B_R_Z_F_11000 0.1
`define HS65_LS_AOI312X2_B_F_Z_R_11000 0.1
`define HS65_LS_AOI312X2_B_R_Z_F_11100 0.1
`define HS65_LS_AOI312X2_B_F_Z_R_11100 0.1
`define HS65_LS_AOI312X2_B_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_B_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_C_R_Z_F_11000 0.1
`define HS65_LS_AOI312X2_C_F_Z_R_11000 0.1
`define HS65_LS_AOI312X2_C_R_Z_F_11100 0.1
`define HS65_LS_AOI312X2_C_F_Z_R_11100 0.1
`define HS65_LS_AOI312X2_C_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_C_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_01010 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_01010 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_10010 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_10010 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_01110 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_01110 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_10110 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_10110 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_00110 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_00110 0.1
`define HS65_LS_AOI312X2_D_R_Z_F_00010 0.1
`define HS65_LS_AOI312X2_D_F_Z_R_00010 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_01010 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_01010 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_10010 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_10010 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_01110 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_01110 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_10110 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_10110 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_00110 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_00110 0.1
`define HS65_LS_AOI312X2_E_R_Z_F_00010 0.1
`define HS65_LS_AOI312X2_E_F_Z_R_00010 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01000 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01000 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01010 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01010 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01001 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01001 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01100 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01100 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00110 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00110 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00101 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00101 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00000 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00000 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00010 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00010 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00001 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00001 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_00100 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_00100 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01110 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01110 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_01101 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_01101 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_11000 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_11000 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_11010 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_11010 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_11001 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_11001 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10110 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10110 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10101 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10101 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10000 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10000 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10010 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10010 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10001 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10001 0.1
`define HS65_LS_AOI312X2_F_R_Z_F_10100 0.1
`define HS65_LS_AOI312X2_F_F_Z_R_10100 0.1

module HS65_LS_AOI312X2 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL4, D, E) ;
	or    U3 (INTERNAL3, INTERNAL4, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X2_A_F_Z_R_11000,`HS65_LS_AOI312X2_A_R_Z_F_11000);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X2_A_F_Z_R_11100,`HS65_LS_AOI312X2_A_R_Z_F_11100);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI312X2_A_F_Z_R_11010,`HS65_LS_AOI312X2_A_R_Z_F_11010);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X2_B_F_Z_R_11000,`HS65_LS_AOI312X2_B_R_Z_F_11000);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X2_B_F_Z_R_11100,`HS65_LS_AOI312X2_B_R_Z_F_11100);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI312X2_B_F_Z_R_11010,`HS65_LS_AOI312X2_B_R_Z_F_11010);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X2_C_F_Z_R_11000,`HS65_LS_AOI312X2_C_R_Z_F_11000);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X2_C_F_Z_R_11100,`HS65_LS_AOI312X2_C_R_Z_F_11100);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI312X2_C_F_Z_R_11010,`HS65_LS_AOI312X2_C_R_Z_F_11010);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_11010,`HS65_LS_AOI312X2_D_R_Z_F_11010);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_01010,`HS65_LS_AOI312X2_D_R_Z_F_01010);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_10010,`HS65_LS_AOI312X2_D_R_Z_F_10010);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_01110,`HS65_LS_AOI312X2_D_R_Z_F_01110);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_10110,`HS65_LS_AOI312X2_D_R_Z_F_10110);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_00110,`HS65_LS_AOI312X2_D_R_Z_F_00110);
		if (!A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X2_D_F_Z_R_00010,`HS65_LS_AOI312X2_D_R_Z_F_00010);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_11010,`HS65_LS_AOI312X2_E_R_Z_F_11010);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_01010,`HS65_LS_AOI312X2_E_R_Z_F_01010);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_10010,`HS65_LS_AOI312X2_E_R_Z_F_10010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_01110,`HS65_LS_AOI312X2_E_R_Z_F_01110);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_10110,`HS65_LS_AOI312X2_E_R_Z_F_10110);
		if (!A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_00110,`HS65_LS_AOI312X2_E_R_Z_F_00110);
		if (!A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X2_E_F_Z_R_00010,`HS65_LS_AOI312X2_E_R_Z_F_00010);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01000,`HS65_LS_AOI312X2_F_R_Z_F_01000);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01010,`HS65_LS_AOI312X2_F_R_Z_F_01010);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01001,`HS65_LS_AOI312X2_F_R_Z_F_01001);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01100,`HS65_LS_AOI312X2_F_R_Z_F_01100);
		if (!A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00110,`HS65_LS_AOI312X2_F_R_Z_F_00110);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00101,`HS65_LS_AOI312X2_F_R_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00000,`HS65_LS_AOI312X2_F_R_Z_F_00000);
		if (!A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00010,`HS65_LS_AOI312X2_F_R_Z_F_00010);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00001,`HS65_LS_AOI312X2_F_R_Z_F_00001);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_00100,`HS65_LS_AOI312X2_F_R_Z_F_00100);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01110,`HS65_LS_AOI312X2_F_R_Z_F_01110);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_01101,`HS65_LS_AOI312X2_F_R_Z_F_01101);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_11000,`HS65_LS_AOI312X2_F_R_Z_F_11000);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_11010,`HS65_LS_AOI312X2_F_R_Z_F_11010);
		if (A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_11001,`HS65_LS_AOI312X2_F_R_Z_F_11001);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10110,`HS65_LS_AOI312X2_F_R_Z_F_10110);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10101,`HS65_LS_AOI312X2_F_R_Z_F_10101);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10000,`HS65_LS_AOI312X2_F_R_Z_F_10000);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10010,`HS65_LS_AOI312X2_F_R_Z_F_10010);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10001,`HS65_LS_AOI312X2_F_R_Z_F_10001);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X2_F_F_Z_R_10100,`HS65_LS_AOI312X2_F_R_Z_F_10100);


	endspecify

endmodule // HS65_LS_AOI312X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI312X4_A_R_Z_F_11000 0.1
`define HS65_LS_AOI312X4_A_F_Z_R_11000 0.1
`define HS65_LS_AOI312X4_A_R_Z_F_11100 0.1
`define HS65_LS_AOI312X4_A_F_Z_R_11100 0.1
`define HS65_LS_AOI312X4_A_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_A_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_B_R_Z_F_11000 0.1
`define HS65_LS_AOI312X4_B_F_Z_R_11000 0.1
`define HS65_LS_AOI312X4_B_R_Z_F_11100 0.1
`define HS65_LS_AOI312X4_B_F_Z_R_11100 0.1
`define HS65_LS_AOI312X4_B_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_B_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_C_R_Z_F_11000 0.1
`define HS65_LS_AOI312X4_C_F_Z_R_11000 0.1
`define HS65_LS_AOI312X4_C_R_Z_F_11100 0.1
`define HS65_LS_AOI312X4_C_F_Z_R_11100 0.1
`define HS65_LS_AOI312X4_C_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_C_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_01010 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_01010 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_10010 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_10010 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_01110 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_01110 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_10110 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_10110 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_00110 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_00110 0.1
`define HS65_LS_AOI312X4_D_R_Z_F_00010 0.1
`define HS65_LS_AOI312X4_D_F_Z_R_00010 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_01010 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_01010 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_10010 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_10010 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_01110 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_01110 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_10110 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_10110 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_00110 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_00110 0.1
`define HS65_LS_AOI312X4_E_R_Z_F_00010 0.1
`define HS65_LS_AOI312X4_E_F_Z_R_00010 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01000 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01000 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01010 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01010 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01001 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01001 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01100 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01100 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00110 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00110 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00101 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00101 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00000 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00000 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00010 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00010 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00001 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00001 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_00100 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_00100 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01110 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01110 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_01101 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_01101 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_11000 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_11000 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_11010 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_11010 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_11001 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_11001 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10110 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10110 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10101 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10101 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10000 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10000 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10010 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10010 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10001 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10001 0.1
`define HS65_LS_AOI312X4_F_R_Z_F_10100 0.1
`define HS65_LS_AOI312X4_F_F_Z_R_10100 0.1

module HS65_LS_AOI312X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL4, D, E) ;
	or    U3 (INTERNAL3, INTERNAL4, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X4_A_F_Z_R_11000,`HS65_LS_AOI312X4_A_R_Z_F_11000);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X4_A_F_Z_R_11100,`HS65_LS_AOI312X4_A_R_Z_F_11100);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI312X4_A_F_Z_R_11010,`HS65_LS_AOI312X4_A_R_Z_F_11010);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X4_B_F_Z_R_11000,`HS65_LS_AOI312X4_B_R_Z_F_11000);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X4_B_F_Z_R_11100,`HS65_LS_AOI312X4_B_R_Z_F_11100);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI312X4_B_F_Z_R_11010,`HS65_LS_AOI312X4_B_R_Z_F_11010);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X4_C_F_Z_R_11000,`HS65_LS_AOI312X4_C_R_Z_F_11000);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X4_C_F_Z_R_11100,`HS65_LS_AOI312X4_C_R_Z_F_11100);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI312X4_C_F_Z_R_11010,`HS65_LS_AOI312X4_C_R_Z_F_11010);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_11010,`HS65_LS_AOI312X4_D_R_Z_F_11010);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_01010,`HS65_LS_AOI312X4_D_R_Z_F_01010);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_10010,`HS65_LS_AOI312X4_D_R_Z_F_10010);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_01110,`HS65_LS_AOI312X4_D_R_Z_F_01110);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_10110,`HS65_LS_AOI312X4_D_R_Z_F_10110);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_00110,`HS65_LS_AOI312X4_D_R_Z_F_00110);
		if (!A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X4_D_F_Z_R_00010,`HS65_LS_AOI312X4_D_R_Z_F_00010);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_11010,`HS65_LS_AOI312X4_E_R_Z_F_11010);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_01010,`HS65_LS_AOI312X4_E_R_Z_F_01010);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_10010,`HS65_LS_AOI312X4_E_R_Z_F_10010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_01110,`HS65_LS_AOI312X4_E_R_Z_F_01110);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_10110,`HS65_LS_AOI312X4_E_R_Z_F_10110);
		if (!A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_00110,`HS65_LS_AOI312X4_E_R_Z_F_00110);
		if (!A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X4_E_F_Z_R_00010,`HS65_LS_AOI312X4_E_R_Z_F_00010);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01000,`HS65_LS_AOI312X4_F_R_Z_F_01000);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01010,`HS65_LS_AOI312X4_F_R_Z_F_01010);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01001,`HS65_LS_AOI312X4_F_R_Z_F_01001);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01100,`HS65_LS_AOI312X4_F_R_Z_F_01100);
		if (!A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00110,`HS65_LS_AOI312X4_F_R_Z_F_00110);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00101,`HS65_LS_AOI312X4_F_R_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00000,`HS65_LS_AOI312X4_F_R_Z_F_00000);
		if (!A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00010,`HS65_LS_AOI312X4_F_R_Z_F_00010);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00001,`HS65_LS_AOI312X4_F_R_Z_F_00001);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_00100,`HS65_LS_AOI312X4_F_R_Z_F_00100);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01110,`HS65_LS_AOI312X4_F_R_Z_F_01110);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_01101,`HS65_LS_AOI312X4_F_R_Z_F_01101);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_11000,`HS65_LS_AOI312X4_F_R_Z_F_11000);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_11010,`HS65_LS_AOI312X4_F_R_Z_F_11010);
		if (A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_11001,`HS65_LS_AOI312X4_F_R_Z_F_11001);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10110,`HS65_LS_AOI312X4_F_R_Z_F_10110);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10101,`HS65_LS_AOI312X4_F_R_Z_F_10101);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10000,`HS65_LS_AOI312X4_F_R_Z_F_10000);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10010,`HS65_LS_AOI312X4_F_R_Z_F_10010);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10001,`HS65_LS_AOI312X4_F_R_Z_F_10001);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X4_F_F_Z_R_10100,`HS65_LS_AOI312X4_F_R_Z_F_10100);


	endspecify

endmodule // HS65_LS_AOI312X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI312X8_A_R_Z_F_11000 0.1
`define HS65_LS_AOI312X8_A_F_Z_R_11000 0.1
`define HS65_LS_AOI312X8_A_R_Z_F_11100 0.1
`define HS65_LS_AOI312X8_A_F_Z_R_11100 0.1
`define HS65_LS_AOI312X8_A_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_A_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_B_R_Z_F_11000 0.1
`define HS65_LS_AOI312X8_B_F_Z_R_11000 0.1
`define HS65_LS_AOI312X8_B_R_Z_F_11100 0.1
`define HS65_LS_AOI312X8_B_F_Z_R_11100 0.1
`define HS65_LS_AOI312X8_B_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_B_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_C_R_Z_F_11000 0.1
`define HS65_LS_AOI312X8_C_F_Z_R_11000 0.1
`define HS65_LS_AOI312X8_C_R_Z_F_11100 0.1
`define HS65_LS_AOI312X8_C_F_Z_R_11100 0.1
`define HS65_LS_AOI312X8_C_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_C_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_01010 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_01010 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_10010 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_10010 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_01110 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_01110 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_10110 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_10110 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_00110 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_00110 0.1
`define HS65_LS_AOI312X8_D_R_Z_F_00010 0.1
`define HS65_LS_AOI312X8_D_F_Z_R_00010 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_01010 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_01010 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_10010 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_10010 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_01110 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_01110 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_10110 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_10110 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_00110 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_00110 0.1
`define HS65_LS_AOI312X8_E_R_Z_F_00010 0.1
`define HS65_LS_AOI312X8_E_F_Z_R_00010 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01000 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01000 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01010 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01010 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01001 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01001 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01100 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01100 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00110 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00110 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00101 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00101 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00000 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00000 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00010 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00010 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00001 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00001 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_00100 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_00100 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01110 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01110 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_01101 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_01101 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_11000 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_11000 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_11010 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_11010 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_11001 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_11001 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10110 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10110 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10101 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10101 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10000 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10000 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10010 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10010 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10001 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10001 0.1
`define HS65_LS_AOI312X8_F_R_Z_F_10100 0.1
`define HS65_LS_AOI312X8_F_F_Z_R_10100 0.1

module HS65_LS_AOI312X8 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL4, D, E) ;
	or    U3 (INTERNAL3, INTERNAL4, F) ;
	or    U4 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X8_A_F_Z_R_11000,`HS65_LS_AOI312X8_A_R_Z_F_11000);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI312X8_A_F_Z_R_11100,`HS65_LS_AOI312X8_A_R_Z_F_11100);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI312X8_A_F_Z_R_11010,`HS65_LS_AOI312X8_A_R_Z_F_11010);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X8_B_F_Z_R_11000,`HS65_LS_AOI312X8_B_R_Z_F_11000);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI312X8_B_F_Z_R_11100,`HS65_LS_AOI312X8_B_R_Z_F_11100);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI312X8_B_F_Z_R_11010,`HS65_LS_AOI312X8_B_R_Z_F_11010);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X8_C_F_Z_R_11000,`HS65_LS_AOI312X8_C_R_Z_F_11000);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI312X8_C_F_Z_R_11100,`HS65_LS_AOI312X8_C_R_Z_F_11100);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI312X8_C_F_Z_R_11010,`HS65_LS_AOI312X8_C_R_Z_F_11010);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_11010,`HS65_LS_AOI312X8_D_R_Z_F_11010);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_01010,`HS65_LS_AOI312X8_D_R_Z_F_01010);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_10010,`HS65_LS_AOI312X8_D_R_Z_F_10010);
		if (!A && B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_01110,`HS65_LS_AOI312X8_D_R_Z_F_01110);
		if (A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_10110,`HS65_LS_AOI312X8_D_R_Z_F_10110);
		if (!A && !B && C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_00110,`HS65_LS_AOI312X8_D_R_Z_F_00110);
		if (!A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_AOI312X8_D_F_Z_R_00010,`HS65_LS_AOI312X8_D_R_Z_F_00010);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_11010,`HS65_LS_AOI312X8_E_R_Z_F_11010);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_01010,`HS65_LS_AOI312X8_E_R_Z_F_01010);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_10010,`HS65_LS_AOI312X8_E_R_Z_F_10010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_01110,`HS65_LS_AOI312X8_E_R_Z_F_01110);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_10110,`HS65_LS_AOI312X8_E_R_Z_F_10110);
		if (!A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_00110,`HS65_LS_AOI312X8_E_R_Z_F_00110);
		if (!A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_AOI312X8_E_F_Z_R_00010,`HS65_LS_AOI312X8_E_R_Z_F_00010);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01000,`HS65_LS_AOI312X8_F_R_Z_F_01000);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01010,`HS65_LS_AOI312X8_F_R_Z_F_01010);
		if (!A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01001,`HS65_LS_AOI312X8_F_R_Z_F_01001);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01100,`HS65_LS_AOI312X8_F_R_Z_F_01100);
		if (!A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00110,`HS65_LS_AOI312X8_F_R_Z_F_00110);
		if (!A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00101,`HS65_LS_AOI312X8_F_R_Z_F_00101);
		if (!A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00000,`HS65_LS_AOI312X8_F_R_Z_F_00000);
		if (!A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00010,`HS65_LS_AOI312X8_F_R_Z_F_00010);
		if (!A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00001,`HS65_LS_AOI312X8_F_R_Z_F_00001);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_00100,`HS65_LS_AOI312X8_F_R_Z_F_00100);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01110,`HS65_LS_AOI312X8_F_R_Z_F_01110);
		if (!A && B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_01101,`HS65_LS_AOI312X8_F_R_Z_F_01101);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_11000,`HS65_LS_AOI312X8_F_R_Z_F_11000);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_11010,`HS65_LS_AOI312X8_F_R_Z_F_11010);
		if (A && B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_11001,`HS65_LS_AOI312X8_F_R_Z_F_11001);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10110,`HS65_LS_AOI312X8_F_R_Z_F_10110);
		if (A && !B && C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10101,`HS65_LS_AOI312X8_F_R_Z_F_10101);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10000,`HS65_LS_AOI312X8_F_R_Z_F_10000);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10010,`HS65_LS_AOI312X8_F_R_Z_F_10010);
		if (A && !B && !C && !D && E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10001,`HS65_LS_AOI312X8_F_R_Z_F_10001);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_AOI312X8_F_F_Z_R_10100,`HS65_LS_AOI312X8_F_R_Z_F_10100);


	endspecify

endmodule // HS65_LS_AOI312X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X10_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X10_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X10_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X10_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X10_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X10_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X10_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X10_D_F_Z_R_001 0.1

module HS65_LS_AOI31X10 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X10_A_F_Z_R_110,`HS65_LS_AOI31X10_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X10_B_F_Z_R_110,`HS65_LS_AOI31X10_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X10_C_F_Z_R_110,`HS65_LS_AOI31X10_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_110,`HS65_LS_AOI31X10_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_101,`HS65_LS_AOI31X10_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_011,`HS65_LS_AOI31X10_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_000,`HS65_LS_AOI31X10_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_100,`HS65_LS_AOI31X10_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_010,`HS65_LS_AOI31X10_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X10_D_F_Z_R_001,`HS65_LS_AOI31X10_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X15_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X15_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X15_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X15_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X15_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X15_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X15_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X15_D_F_Z_R_001 0.1

module HS65_LS_AOI31X15 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X15_A_F_Z_R_110,`HS65_LS_AOI31X15_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X15_B_F_Z_R_110,`HS65_LS_AOI31X15_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X15_C_F_Z_R_110,`HS65_LS_AOI31X15_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_110,`HS65_LS_AOI31X15_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_101,`HS65_LS_AOI31X15_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_011,`HS65_LS_AOI31X15_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_000,`HS65_LS_AOI31X15_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_100,`HS65_LS_AOI31X15_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_010,`HS65_LS_AOI31X15_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X15_D_F_Z_R_001,`HS65_LS_AOI31X15_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X2_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X2_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X2_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X2_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X2_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X2_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X2_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X2_D_F_Z_R_001 0.1

module HS65_LS_AOI31X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X2_A_F_Z_R_110,`HS65_LS_AOI31X2_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X2_B_F_Z_R_110,`HS65_LS_AOI31X2_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X2_C_F_Z_R_110,`HS65_LS_AOI31X2_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_110,`HS65_LS_AOI31X2_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_101,`HS65_LS_AOI31X2_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_011,`HS65_LS_AOI31X2_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_000,`HS65_LS_AOI31X2_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_100,`HS65_LS_AOI31X2_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_010,`HS65_LS_AOI31X2_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X2_D_F_Z_R_001,`HS65_LS_AOI31X2_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X20_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X20_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X20_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X20_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X20_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X20_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X20_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X20_D_F_Z_R_001 0.1

module HS65_LS_AOI31X20 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X20_A_F_Z_R_110,`HS65_LS_AOI31X20_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X20_B_F_Z_R_110,`HS65_LS_AOI31X20_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X20_C_F_Z_R_110,`HS65_LS_AOI31X20_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_110,`HS65_LS_AOI31X20_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_101,`HS65_LS_AOI31X20_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_011,`HS65_LS_AOI31X20_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_000,`HS65_LS_AOI31X20_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_100,`HS65_LS_AOI31X20_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_010,`HS65_LS_AOI31X20_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X20_D_F_Z_R_001,`HS65_LS_AOI31X20_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X3_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X3_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X3_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X3_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X3_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X3_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X3_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X3_D_F_Z_R_001 0.1

module HS65_LS_AOI31X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X3_A_F_Z_R_110,`HS65_LS_AOI31X3_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X3_B_F_Z_R_110,`HS65_LS_AOI31X3_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X3_C_F_Z_R_110,`HS65_LS_AOI31X3_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_110,`HS65_LS_AOI31X3_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_101,`HS65_LS_AOI31X3_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_011,`HS65_LS_AOI31X3_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_000,`HS65_LS_AOI31X3_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_100,`HS65_LS_AOI31X3_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_010,`HS65_LS_AOI31X3_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X3_D_F_Z_R_001,`HS65_LS_AOI31X3_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X31_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X31_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X31_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X31_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X31_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X31_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X31_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X31_D_F_Z_R_001 0.1

module HS65_LS_AOI31X31 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X31_A_F_Z_R_110,`HS65_LS_AOI31X31_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X31_B_F_Z_R_110,`HS65_LS_AOI31X31_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X31_C_F_Z_R_110,`HS65_LS_AOI31X31_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_110,`HS65_LS_AOI31X31_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_101,`HS65_LS_AOI31X31_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_011,`HS65_LS_AOI31X31_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_000,`HS65_LS_AOI31X31_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_100,`HS65_LS_AOI31X31_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_010,`HS65_LS_AOI31X31_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X31_D_F_Z_R_001,`HS65_LS_AOI31X31_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X31

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X4_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X4_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X4_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X4_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X4_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X4_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X4_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X4_D_F_Z_R_001 0.1

module HS65_LS_AOI31X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X4_A_F_Z_R_110,`HS65_LS_AOI31X4_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X4_B_F_Z_R_110,`HS65_LS_AOI31X4_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X4_C_F_Z_R_110,`HS65_LS_AOI31X4_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_110,`HS65_LS_AOI31X4_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_101,`HS65_LS_AOI31X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_011,`HS65_LS_AOI31X4_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_000,`HS65_LS_AOI31X4_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_100,`HS65_LS_AOI31X4_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_010,`HS65_LS_AOI31X4_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X4_D_F_Z_R_001,`HS65_LS_AOI31X4_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X41_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X41_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X41_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X41_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X41_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X41_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X41_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X41_D_F_Z_R_001 0.1

module HS65_LS_AOI31X41 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X41_A_F_Z_R_110,`HS65_LS_AOI31X41_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X41_B_F_Z_R_110,`HS65_LS_AOI31X41_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X41_C_F_Z_R_110,`HS65_LS_AOI31X41_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_110,`HS65_LS_AOI31X41_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_101,`HS65_LS_AOI31X41_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_011,`HS65_LS_AOI31X41_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_000,`HS65_LS_AOI31X41_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_100,`HS65_LS_AOI31X41_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_010,`HS65_LS_AOI31X41_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X41_D_F_Z_R_001,`HS65_LS_AOI31X41_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X41

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X5_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X5_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X5_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X5_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X5_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X5_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X5_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X5_D_F_Z_R_001 0.1

module HS65_LS_AOI31X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X5_A_F_Z_R_110,`HS65_LS_AOI31X5_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X5_B_F_Z_R_110,`HS65_LS_AOI31X5_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X5_C_F_Z_R_110,`HS65_LS_AOI31X5_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_110,`HS65_LS_AOI31X5_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_101,`HS65_LS_AOI31X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_011,`HS65_LS_AOI31X5_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_000,`HS65_LS_AOI31X5_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_100,`HS65_LS_AOI31X5_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_010,`HS65_LS_AOI31X5_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X5_D_F_Z_R_001,`HS65_LS_AOI31X5_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI31X8_A_R_Z_F_110 0.1
`define HS65_LS_AOI31X8_A_F_Z_R_110 0.1
`define HS65_LS_AOI31X8_B_R_Z_F_110 0.1
`define HS65_LS_AOI31X8_B_F_Z_R_110 0.1
`define HS65_LS_AOI31X8_C_R_Z_F_110 0.1
`define HS65_LS_AOI31X8_C_F_Z_R_110 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_110 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_110 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_101 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_101 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_011 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_011 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_000 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_000 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_100 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_100 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_010 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_010 0.1
`define HS65_LS_AOI31X8_D_R_Z_F_001 0.1
`define HS65_LS_AOI31X8_D_F_Z_R_001 0.1

module HS65_LS_AOI31X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_AOI31X8_A_F_Z_R_110,`HS65_LS_AOI31X8_A_R_Z_F_110);
		(B -=> Z) = (`HS65_LS_AOI31X8_B_F_Z_R_110,`HS65_LS_AOI31X8_B_R_Z_F_110);
		(C -=> Z) = (`HS65_LS_AOI31X8_C_F_Z_R_110,`HS65_LS_AOI31X8_C_R_Z_F_110);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_110,`HS65_LS_AOI31X8_D_R_Z_F_110);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_101,`HS65_LS_AOI31X8_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_011,`HS65_LS_AOI31X8_D_R_Z_F_011);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_000,`HS65_LS_AOI31X8_D_R_Z_F_000);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_100,`HS65_LS_AOI31X8_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_010,`HS65_LS_AOI31X8_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_AOI31X8_D_F_Z_R_001,`HS65_LS_AOI31X8_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_AOI31X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI32X10_A_R_Z_F_1100 0.1
`define HS65_LS_AOI32X10_A_F_Z_R_1100 0.1
`define HS65_LS_AOI32X10_A_R_Z_F_1110 0.1
`define HS65_LS_AOI32X10_A_F_Z_R_1110 0.1
`define HS65_LS_AOI32X10_A_R_Z_F_1101 0.1
`define HS65_LS_AOI32X10_A_F_Z_R_1101 0.1
`define HS65_LS_AOI32X10_B_R_Z_F_1100 0.1
`define HS65_LS_AOI32X10_B_F_Z_R_1100 0.1
`define HS65_LS_AOI32X10_B_R_Z_F_1110 0.1
`define HS65_LS_AOI32X10_B_F_Z_R_1110 0.1
`define HS65_LS_AOI32X10_B_R_Z_F_1101 0.1
`define HS65_LS_AOI32X10_B_F_Z_R_1101 0.1
`define HS65_LS_AOI32X10_C_R_Z_F_1100 0.1
`define HS65_LS_AOI32X10_C_F_Z_R_1100 0.1
`define HS65_LS_AOI32X10_C_R_Z_F_1110 0.1
`define HS65_LS_AOI32X10_C_F_Z_R_1110 0.1
`define HS65_LS_AOI32X10_C_R_Z_F_1101 0.1
`define HS65_LS_AOI32X10_C_F_Z_R_1101 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_0011 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_0011 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_0101 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_0101 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_1001 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_1001 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_0111 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_0111 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_1011 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_1011 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_0001 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_0001 0.1
`define HS65_LS_AOI32X10_D_R_Z_F_1101 0.1
`define HS65_LS_AOI32X10_D_F_Z_R_1101 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_0011 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_0011 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_0101 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_0101 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_1001 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_1001 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_0111 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_0111 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_1011 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_1011 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_0001 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_0001 0.1
`define HS65_LS_AOI32X10_E_R_Z_F_1101 0.1
`define HS65_LS_AOI32X10_E_F_Z_R_1101 0.1

module HS65_LS_AOI32X10 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI32X10_A_F_Z_R_1100,`HS65_LS_AOI32X10_A_R_Z_F_1100);
		if (B && C && D && !E) (A -=> Z) = (`HS65_LS_AOI32X10_A_F_Z_R_1110,`HS65_LS_AOI32X10_A_R_Z_F_1110);
		if (B && C && !D && E) (A -=> Z) = (`HS65_LS_AOI32X10_A_F_Z_R_1101,`HS65_LS_AOI32X10_A_R_Z_F_1101);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI32X10_B_F_Z_R_1100,`HS65_LS_AOI32X10_B_R_Z_F_1100);
		if (A && C && D && !E) (B -=> Z) = (`HS65_LS_AOI32X10_B_F_Z_R_1110,`HS65_LS_AOI32X10_B_R_Z_F_1110);
		if (A && C && !D && E) (B -=> Z) = (`HS65_LS_AOI32X10_B_F_Z_R_1101,`HS65_LS_AOI32X10_B_R_Z_F_1101);
		if (A && B && !D && !E) (C -=> Z) = (`HS65_LS_AOI32X10_C_F_Z_R_1100,`HS65_LS_AOI32X10_C_R_Z_F_1100);
		if (A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI32X10_C_F_Z_R_1110,`HS65_LS_AOI32X10_C_R_Z_F_1110);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_AOI32X10_C_F_Z_R_1101,`HS65_LS_AOI32X10_C_R_Z_F_1101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_0011,`HS65_LS_AOI32X10_D_R_Z_F_0011);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_0101,`HS65_LS_AOI32X10_D_R_Z_F_0101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_1001,`HS65_LS_AOI32X10_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_0111,`HS65_LS_AOI32X10_D_R_Z_F_0111);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_1011,`HS65_LS_AOI32X10_D_R_Z_F_1011);
		if (!A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_0001,`HS65_LS_AOI32X10_D_R_Z_F_0001);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X10_D_F_Z_R_1101,`HS65_LS_AOI32X10_D_R_Z_F_1101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_0011,`HS65_LS_AOI32X10_E_R_Z_F_0011);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_0101,`HS65_LS_AOI32X10_E_R_Z_F_0101);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_1001,`HS65_LS_AOI32X10_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_0111,`HS65_LS_AOI32X10_E_R_Z_F_0111);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_1011,`HS65_LS_AOI32X10_E_R_Z_F_1011);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_0001,`HS65_LS_AOI32X10_E_R_Z_F_0001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X10_E_F_Z_R_1101,`HS65_LS_AOI32X10_E_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_AOI32X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI32X15_A_R_Z_F_1100 0.1
`define HS65_LS_AOI32X15_A_F_Z_R_1100 0.1
`define HS65_LS_AOI32X15_A_R_Z_F_1110 0.1
`define HS65_LS_AOI32X15_A_F_Z_R_1110 0.1
`define HS65_LS_AOI32X15_A_R_Z_F_1101 0.1
`define HS65_LS_AOI32X15_A_F_Z_R_1101 0.1
`define HS65_LS_AOI32X15_B_R_Z_F_1100 0.1
`define HS65_LS_AOI32X15_B_F_Z_R_1100 0.1
`define HS65_LS_AOI32X15_B_R_Z_F_1110 0.1
`define HS65_LS_AOI32X15_B_F_Z_R_1110 0.1
`define HS65_LS_AOI32X15_B_R_Z_F_1101 0.1
`define HS65_LS_AOI32X15_B_F_Z_R_1101 0.1
`define HS65_LS_AOI32X15_C_R_Z_F_1100 0.1
`define HS65_LS_AOI32X15_C_F_Z_R_1100 0.1
`define HS65_LS_AOI32X15_C_R_Z_F_1110 0.1
`define HS65_LS_AOI32X15_C_F_Z_R_1110 0.1
`define HS65_LS_AOI32X15_C_R_Z_F_1101 0.1
`define HS65_LS_AOI32X15_C_F_Z_R_1101 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_0011 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_0011 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_0101 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_0101 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_1001 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_1001 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_0111 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_0111 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_1011 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_1011 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_0001 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_0001 0.1
`define HS65_LS_AOI32X15_D_R_Z_F_1101 0.1
`define HS65_LS_AOI32X15_D_F_Z_R_1101 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_0011 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_0011 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_0101 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_0101 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_1001 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_1001 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_0111 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_0111 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_1011 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_1011 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_0001 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_0001 0.1
`define HS65_LS_AOI32X15_E_R_Z_F_1101 0.1
`define HS65_LS_AOI32X15_E_F_Z_R_1101 0.1

module HS65_LS_AOI32X15 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI32X15_A_F_Z_R_1100,`HS65_LS_AOI32X15_A_R_Z_F_1100);
		if (B && C && D && !E) (A -=> Z) = (`HS65_LS_AOI32X15_A_F_Z_R_1110,`HS65_LS_AOI32X15_A_R_Z_F_1110);
		if (B && C && !D && E) (A -=> Z) = (`HS65_LS_AOI32X15_A_F_Z_R_1101,`HS65_LS_AOI32X15_A_R_Z_F_1101);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI32X15_B_F_Z_R_1100,`HS65_LS_AOI32X15_B_R_Z_F_1100);
		if (A && C && D && !E) (B -=> Z) = (`HS65_LS_AOI32X15_B_F_Z_R_1110,`HS65_LS_AOI32X15_B_R_Z_F_1110);
		if (A && C && !D && E) (B -=> Z) = (`HS65_LS_AOI32X15_B_F_Z_R_1101,`HS65_LS_AOI32X15_B_R_Z_F_1101);
		if (A && B && !D && !E) (C -=> Z) = (`HS65_LS_AOI32X15_C_F_Z_R_1100,`HS65_LS_AOI32X15_C_R_Z_F_1100);
		if (A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI32X15_C_F_Z_R_1110,`HS65_LS_AOI32X15_C_R_Z_F_1110);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_AOI32X15_C_F_Z_R_1101,`HS65_LS_AOI32X15_C_R_Z_F_1101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_0011,`HS65_LS_AOI32X15_D_R_Z_F_0011);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_0101,`HS65_LS_AOI32X15_D_R_Z_F_0101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_1001,`HS65_LS_AOI32X15_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_0111,`HS65_LS_AOI32X15_D_R_Z_F_0111);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_1011,`HS65_LS_AOI32X15_D_R_Z_F_1011);
		if (!A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_0001,`HS65_LS_AOI32X15_D_R_Z_F_0001);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X15_D_F_Z_R_1101,`HS65_LS_AOI32X15_D_R_Z_F_1101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_0011,`HS65_LS_AOI32X15_E_R_Z_F_0011);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_0101,`HS65_LS_AOI32X15_E_R_Z_F_0101);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_1001,`HS65_LS_AOI32X15_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_0111,`HS65_LS_AOI32X15_E_R_Z_F_0111);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_1011,`HS65_LS_AOI32X15_E_R_Z_F_1011);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_0001,`HS65_LS_AOI32X15_E_R_Z_F_0001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X15_E_F_Z_R_1101,`HS65_LS_AOI32X15_E_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_AOI32X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI32X20_A_R_Z_F_1100 0.1
`define HS65_LS_AOI32X20_A_F_Z_R_1100 0.1
`define HS65_LS_AOI32X20_A_R_Z_F_1110 0.1
`define HS65_LS_AOI32X20_A_F_Z_R_1110 0.1
`define HS65_LS_AOI32X20_A_R_Z_F_1101 0.1
`define HS65_LS_AOI32X20_A_F_Z_R_1101 0.1
`define HS65_LS_AOI32X20_B_R_Z_F_1100 0.1
`define HS65_LS_AOI32X20_B_F_Z_R_1100 0.1
`define HS65_LS_AOI32X20_B_R_Z_F_1110 0.1
`define HS65_LS_AOI32X20_B_F_Z_R_1110 0.1
`define HS65_LS_AOI32X20_B_R_Z_F_1101 0.1
`define HS65_LS_AOI32X20_B_F_Z_R_1101 0.1
`define HS65_LS_AOI32X20_C_R_Z_F_1100 0.1
`define HS65_LS_AOI32X20_C_F_Z_R_1100 0.1
`define HS65_LS_AOI32X20_C_R_Z_F_1110 0.1
`define HS65_LS_AOI32X20_C_F_Z_R_1110 0.1
`define HS65_LS_AOI32X20_C_R_Z_F_1101 0.1
`define HS65_LS_AOI32X20_C_F_Z_R_1101 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_0011 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_0011 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_0101 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_0101 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_1001 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_1001 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_0111 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_0111 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_1011 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_1011 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_0001 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_0001 0.1
`define HS65_LS_AOI32X20_D_R_Z_F_1101 0.1
`define HS65_LS_AOI32X20_D_F_Z_R_1101 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_0011 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_0011 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_0101 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_0101 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_1001 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_1001 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_0111 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_0111 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_1011 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_1011 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_0001 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_0001 0.1
`define HS65_LS_AOI32X20_E_R_Z_F_1101 0.1
`define HS65_LS_AOI32X20_E_F_Z_R_1101 0.1

module HS65_LS_AOI32X20 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI32X20_A_F_Z_R_1100,`HS65_LS_AOI32X20_A_R_Z_F_1100);
		if (B && C && D && !E) (A -=> Z) = (`HS65_LS_AOI32X20_A_F_Z_R_1110,`HS65_LS_AOI32X20_A_R_Z_F_1110);
		if (B && C && !D && E) (A -=> Z) = (`HS65_LS_AOI32X20_A_F_Z_R_1101,`HS65_LS_AOI32X20_A_R_Z_F_1101);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI32X20_B_F_Z_R_1100,`HS65_LS_AOI32X20_B_R_Z_F_1100);
		if (A && C && D && !E) (B -=> Z) = (`HS65_LS_AOI32X20_B_F_Z_R_1110,`HS65_LS_AOI32X20_B_R_Z_F_1110);
		if (A && C && !D && E) (B -=> Z) = (`HS65_LS_AOI32X20_B_F_Z_R_1101,`HS65_LS_AOI32X20_B_R_Z_F_1101);
		if (A && B && !D && !E) (C -=> Z) = (`HS65_LS_AOI32X20_C_F_Z_R_1100,`HS65_LS_AOI32X20_C_R_Z_F_1100);
		if (A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI32X20_C_F_Z_R_1110,`HS65_LS_AOI32X20_C_R_Z_F_1110);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_AOI32X20_C_F_Z_R_1101,`HS65_LS_AOI32X20_C_R_Z_F_1101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_0011,`HS65_LS_AOI32X20_D_R_Z_F_0011);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_0101,`HS65_LS_AOI32X20_D_R_Z_F_0101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_1001,`HS65_LS_AOI32X20_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_0111,`HS65_LS_AOI32X20_D_R_Z_F_0111);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_1011,`HS65_LS_AOI32X20_D_R_Z_F_1011);
		if (!A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_0001,`HS65_LS_AOI32X20_D_R_Z_F_0001);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X20_D_F_Z_R_1101,`HS65_LS_AOI32X20_D_R_Z_F_1101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_0011,`HS65_LS_AOI32X20_E_R_Z_F_0011);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_0101,`HS65_LS_AOI32X20_E_R_Z_F_0101);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_1001,`HS65_LS_AOI32X20_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_0111,`HS65_LS_AOI32X20_E_R_Z_F_0111);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_1011,`HS65_LS_AOI32X20_E_R_Z_F_1011);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_0001,`HS65_LS_AOI32X20_E_R_Z_F_0001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X20_E_F_Z_R_1101,`HS65_LS_AOI32X20_E_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_AOI32X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI32X3_A_R_Z_F_1100 0.1
`define HS65_LS_AOI32X3_A_F_Z_R_1100 0.1
`define HS65_LS_AOI32X3_A_R_Z_F_1110 0.1
`define HS65_LS_AOI32X3_A_F_Z_R_1110 0.1
`define HS65_LS_AOI32X3_A_R_Z_F_1101 0.1
`define HS65_LS_AOI32X3_A_F_Z_R_1101 0.1
`define HS65_LS_AOI32X3_B_R_Z_F_1100 0.1
`define HS65_LS_AOI32X3_B_F_Z_R_1100 0.1
`define HS65_LS_AOI32X3_B_R_Z_F_1110 0.1
`define HS65_LS_AOI32X3_B_F_Z_R_1110 0.1
`define HS65_LS_AOI32X3_B_R_Z_F_1101 0.1
`define HS65_LS_AOI32X3_B_F_Z_R_1101 0.1
`define HS65_LS_AOI32X3_C_R_Z_F_1100 0.1
`define HS65_LS_AOI32X3_C_F_Z_R_1100 0.1
`define HS65_LS_AOI32X3_C_R_Z_F_1110 0.1
`define HS65_LS_AOI32X3_C_F_Z_R_1110 0.1
`define HS65_LS_AOI32X3_C_R_Z_F_1101 0.1
`define HS65_LS_AOI32X3_C_F_Z_R_1101 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_0011 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_0011 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_0101 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_0101 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_1001 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_1001 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_0111 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_0111 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_1011 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_1011 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_0001 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_0001 0.1
`define HS65_LS_AOI32X3_D_R_Z_F_1101 0.1
`define HS65_LS_AOI32X3_D_F_Z_R_1101 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_0011 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_0011 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_0101 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_0101 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_1001 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_1001 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_0111 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_0111 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_1011 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_1011 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_0001 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_0001 0.1
`define HS65_LS_AOI32X3_E_R_Z_F_1101 0.1
`define HS65_LS_AOI32X3_E_F_Z_R_1101 0.1

module HS65_LS_AOI32X3 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI32X3_A_F_Z_R_1100,`HS65_LS_AOI32X3_A_R_Z_F_1100);
		if (B && C && D && !E) (A -=> Z) = (`HS65_LS_AOI32X3_A_F_Z_R_1110,`HS65_LS_AOI32X3_A_R_Z_F_1110);
		if (B && C && !D && E) (A -=> Z) = (`HS65_LS_AOI32X3_A_F_Z_R_1101,`HS65_LS_AOI32X3_A_R_Z_F_1101);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI32X3_B_F_Z_R_1100,`HS65_LS_AOI32X3_B_R_Z_F_1100);
		if (A && C && D && !E) (B -=> Z) = (`HS65_LS_AOI32X3_B_F_Z_R_1110,`HS65_LS_AOI32X3_B_R_Z_F_1110);
		if (A && C && !D && E) (B -=> Z) = (`HS65_LS_AOI32X3_B_F_Z_R_1101,`HS65_LS_AOI32X3_B_R_Z_F_1101);
		if (A && B && !D && !E) (C -=> Z) = (`HS65_LS_AOI32X3_C_F_Z_R_1100,`HS65_LS_AOI32X3_C_R_Z_F_1100);
		if (A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI32X3_C_F_Z_R_1110,`HS65_LS_AOI32X3_C_R_Z_F_1110);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_AOI32X3_C_F_Z_R_1101,`HS65_LS_AOI32X3_C_R_Z_F_1101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_0011,`HS65_LS_AOI32X3_D_R_Z_F_0011);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_0101,`HS65_LS_AOI32X3_D_R_Z_F_0101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_1001,`HS65_LS_AOI32X3_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_0111,`HS65_LS_AOI32X3_D_R_Z_F_0111);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_1011,`HS65_LS_AOI32X3_D_R_Z_F_1011);
		if (!A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_0001,`HS65_LS_AOI32X3_D_R_Z_F_0001);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X3_D_F_Z_R_1101,`HS65_LS_AOI32X3_D_R_Z_F_1101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_0011,`HS65_LS_AOI32X3_E_R_Z_F_0011);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_0101,`HS65_LS_AOI32X3_E_R_Z_F_0101);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_1001,`HS65_LS_AOI32X3_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_0111,`HS65_LS_AOI32X3_E_R_Z_F_0111);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_1011,`HS65_LS_AOI32X3_E_R_Z_F_1011);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_0001,`HS65_LS_AOI32X3_E_R_Z_F_0001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X3_E_F_Z_R_1101,`HS65_LS_AOI32X3_E_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_AOI32X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI32X5_A_R_Z_F_1100 0.1
`define HS65_LS_AOI32X5_A_F_Z_R_1100 0.1
`define HS65_LS_AOI32X5_A_R_Z_F_1110 0.1
`define HS65_LS_AOI32X5_A_F_Z_R_1110 0.1
`define HS65_LS_AOI32X5_A_R_Z_F_1101 0.1
`define HS65_LS_AOI32X5_A_F_Z_R_1101 0.1
`define HS65_LS_AOI32X5_B_R_Z_F_1100 0.1
`define HS65_LS_AOI32X5_B_F_Z_R_1100 0.1
`define HS65_LS_AOI32X5_B_R_Z_F_1110 0.1
`define HS65_LS_AOI32X5_B_F_Z_R_1110 0.1
`define HS65_LS_AOI32X5_B_R_Z_F_1101 0.1
`define HS65_LS_AOI32X5_B_F_Z_R_1101 0.1
`define HS65_LS_AOI32X5_C_R_Z_F_1100 0.1
`define HS65_LS_AOI32X5_C_F_Z_R_1100 0.1
`define HS65_LS_AOI32X5_C_R_Z_F_1110 0.1
`define HS65_LS_AOI32X5_C_F_Z_R_1110 0.1
`define HS65_LS_AOI32X5_C_R_Z_F_1101 0.1
`define HS65_LS_AOI32X5_C_F_Z_R_1101 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_0011 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_0011 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_0101 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_0101 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_1001 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_1001 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_0111 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_0111 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_1011 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_1011 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_0001 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_0001 0.1
`define HS65_LS_AOI32X5_D_R_Z_F_1101 0.1
`define HS65_LS_AOI32X5_D_F_Z_R_1101 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_0011 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_0011 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_0101 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_0101 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_1001 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_1001 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_0111 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_0111 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_1011 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_1011 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_0001 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_0001 0.1
`define HS65_LS_AOI32X5_E_R_Z_F_1101 0.1
`define HS65_LS_AOI32X5_E_F_Z_R_1101 0.1

module HS65_LS_AOI32X5 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && !D && !E) (A -=> Z) = (`HS65_LS_AOI32X5_A_F_Z_R_1100,`HS65_LS_AOI32X5_A_R_Z_F_1100);
		if (B && C && D && !E) (A -=> Z) = (`HS65_LS_AOI32X5_A_F_Z_R_1110,`HS65_LS_AOI32X5_A_R_Z_F_1110);
		if (B && C && !D && E) (A -=> Z) = (`HS65_LS_AOI32X5_A_F_Z_R_1101,`HS65_LS_AOI32X5_A_R_Z_F_1101);
		if (A && C && !D && !E) (B -=> Z) = (`HS65_LS_AOI32X5_B_F_Z_R_1100,`HS65_LS_AOI32X5_B_R_Z_F_1100);
		if (A && C && D && !E) (B -=> Z) = (`HS65_LS_AOI32X5_B_F_Z_R_1110,`HS65_LS_AOI32X5_B_R_Z_F_1110);
		if (A && C && !D && E) (B -=> Z) = (`HS65_LS_AOI32X5_B_F_Z_R_1101,`HS65_LS_AOI32X5_B_R_Z_F_1101);
		if (A && B && !D && !E) (C -=> Z) = (`HS65_LS_AOI32X5_C_F_Z_R_1100,`HS65_LS_AOI32X5_C_R_Z_F_1100);
		if (A && B && D && !E) (C -=> Z) = (`HS65_LS_AOI32X5_C_F_Z_R_1110,`HS65_LS_AOI32X5_C_R_Z_F_1110);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_AOI32X5_C_F_Z_R_1101,`HS65_LS_AOI32X5_C_R_Z_F_1101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_0011,`HS65_LS_AOI32X5_D_R_Z_F_0011);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_0101,`HS65_LS_AOI32X5_D_R_Z_F_0101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_1001,`HS65_LS_AOI32X5_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_0111,`HS65_LS_AOI32X5_D_R_Z_F_0111);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_1011,`HS65_LS_AOI32X5_D_R_Z_F_1011);
		if (!A && !B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_0001,`HS65_LS_AOI32X5_D_R_Z_F_0001);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_AOI32X5_D_F_Z_R_1101,`HS65_LS_AOI32X5_D_R_Z_F_1101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_0011,`HS65_LS_AOI32X5_E_R_Z_F_0011);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_0101,`HS65_LS_AOI32X5_E_R_Z_F_0101);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_1001,`HS65_LS_AOI32X5_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_0111,`HS65_LS_AOI32X5_E_R_Z_F_0111);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_1011,`HS65_LS_AOI32X5_E_R_Z_F_1011);
		if (!A && !B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_0001,`HS65_LS_AOI32X5_E_R_Z_F_0001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_AOI32X5_E_F_Z_R_1101,`HS65_LS_AOI32X5_E_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_AOI32X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI33X14_A_R_Z_F_11110 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11110 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11010 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11010 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11100 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11100 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11101 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11101 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11001 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11001 0.1
`define HS65_LS_AOI33X14_A_R_Z_F_11000 0.1
`define HS65_LS_AOI33X14_A_F_Z_R_11000 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11110 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11110 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11010 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11010 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11100 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11100 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11101 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11101 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11001 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11001 0.1
`define HS65_LS_AOI33X14_B_R_Z_F_11000 0.1
`define HS65_LS_AOI33X14_B_F_Z_R_11000 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11110 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11110 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11010 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11010 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11100 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11100 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11101 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11101 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11001 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11001 0.1
`define HS65_LS_AOI33X14_C_R_Z_F_11000 0.1
`define HS65_LS_AOI33X14_C_F_Z_R_11000 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_01011 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_01011 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_10011 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_10011 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_01111 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_01111 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_10111 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_10111 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_00111 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_00111 0.1
`define HS65_LS_AOI33X14_D_R_Z_F_00011 0.1
`define HS65_LS_AOI33X14_D_F_Z_R_00011 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_01011 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_01011 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_10011 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_10011 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_01111 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_01111 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_10111 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_10111 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_00111 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_00111 0.1
`define HS65_LS_AOI33X14_E_R_Z_F_00011 0.1
`define HS65_LS_AOI33X14_E_F_Z_R_00011 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_11011 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_11011 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_01011 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_01011 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_10011 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_10011 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_01111 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_01111 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_10111 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_10111 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_00111 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_00111 0.1
`define HS65_LS_AOI33X14_F_R_Z_F_00011 0.1
`define HS65_LS_AOI33X14_F_F_Z_R_00011 0.1

module HS65_LS_AOI33X14 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E, F) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11110,`HS65_LS_AOI33X14_A_R_Z_F_11110);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11010,`HS65_LS_AOI33X14_A_R_Z_F_11010);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11100,`HS65_LS_AOI33X14_A_R_Z_F_11100);
		if (B && C && !D && E && F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11011,`HS65_LS_AOI33X14_A_R_Z_F_11011);
		if (B && C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11101,`HS65_LS_AOI33X14_A_R_Z_F_11101);
		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11001,`HS65_LS_AOI33X14_A_R_Z_F_11001);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X14_A_F_Z_R_11000,`HS65_LS_AOI33X14_A_R_Z_F_11000);
		if (A && C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11110,`HS65_LS_AOI33X14_B_R_Z_F_11110);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11010,`HS65_LS_AOI33X14_B_R_Z_F_11010);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11100,`HS65_LS_AOI33X14_B_R_Z_F_11100);
		if (A && C && !D && E && F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11011,`HS65_LS_AOI33X14_B_R_Z_F_11011);
		if (A && C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11101,`HS65_LS_AOI33X14_B_R_Z_F_11101);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11001,`HS65_LS_AOI33X14_B_R_Z_F_11001);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X14_B_F_Z_R_11000,`HS65_LS_AOI33X14_B_R_Z_F_11000);
		if (A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11110,`HS65_LS_AOI33X14_C_R_Z_F_11110);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11010,`HS65_LS_AOI33X14_C_R_Z_F_11010);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11100,`HS65_LS_AOI33X14_C_R_Z_F_11100);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11011,`HS65_LS_AOI33X14_C_R_Z_F_11011);
		if (A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11101,`HS65_LS_AOI33X14_C_R_Z_F_11101);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11001,`HS65_LS_AOI33X14_C_R_Z_F_11001);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X14_C_F_Z_R_11000,`HS65_LS_AOI33X14_C_R_Z_F_11000);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_11011,`HS65_LS_AOI33X14_D_R_Z_F_11011);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_01011,`HS65_LS_AOI33X14_D_R_Z_F_01011);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_10011,`HS65_LS_AOI33X14_D_R_Z_F_10011);
		if (!A && B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_01111,`HS65_LS_AOI33X14_D_R_Z_F_01111);
		if (A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_10111,`HS65_LS_AOI33X14_D_R_Z_F_10111);
		if (!A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_00111,`HS65_LS_AOI33X14_D_R_Z_F_00111);
		if (!A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X14_D_F_Z_R_00011,`HS65_LS_AOI33X14_D_R_Z_F_00011);
		if (A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_11011,`HS65_LS_AOI33X14_E_R_Z_F_11011);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_01011,`HS65_LS_AOI33X14_E_R_Z_F_01011);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_10011,`HS65_LS_AOI33X14_E_R_Z_F_10011);
		if (!A && B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_01111,`HS65_LS_AOI33X14_E_R_Z_F_01111);
		if (A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_10111,`HS65_LS_AOI33X14_E_R_Z_F_10111);
		if (!A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_00111,`HS65_LS_AOI33X14_E_R_Z_F_00111);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X14_E_F_Z_R_00011,`HS65_LS_AOI33X14_E_R_Z_F_00011);
		if (A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_11011,`HS65_LS_AOI33X14_F_R_Z_F_11011);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_01011,`HS65_LS_AOI33X14_F_R_Z_F_01011);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_10011,`HS65_LS_AOI33X14_F_R_Z_F_10011);
		if (!A && B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_01111,`HS65_LS_AOI33X14_F_R_Z_F_01111);
		if (A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_10111,`HS65_LS_AOI33X14_F_R_Z_F_10111);
		if (!A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_00111,`HS65_LS_AOI33X14_F_R_Z_F_00111);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X14_F_F_Z_R_00011,`HS65_LS_AOI33X14_F_R_Z_F_00011);


	endspecify

endmodule // HS65_LS_AOI33X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI33X19_A_R_Z_F_11110 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11110 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11010 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11010 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11100 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11100 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11101 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11101 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11001 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11001 0.1
`define HS65_LS_AOI33X19_A_R_Z_F_11000 0.1
`define HS65_LS_AOI33X19_A_F_Z_R_11000 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11110 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11110 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11010 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11010 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11100 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11100 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11101 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11101 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11001 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11001 0.1
`define HS65_LS_AOI33X19_B_R_Z_F_11000 0.1
`define HS65_LS_AOI33X19_B_F_Z_R_11000 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11110 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11110 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11010 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11010 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11100 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11100 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11101 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11101 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11001 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11001 0.1
`define HS65_LS_AOI33X19_C_R_Z_F_11000 0.1
`define HS65_LS_AOI33X19_C_F_Z_R_11000 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_01011 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_01011 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_10011 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_10011 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_01111 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_01111 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_10111 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_10111 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_00111 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_00111 0.1
`define HS65_LS_AOI33X19_D_R_Z_F_00011 0.1
`define HS65_LS_AOI33X19_D_F_Z_R_00011 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_01011 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_01011 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_10011 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_10011 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_01111 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_01111 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_10111 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_10111 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_00111 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_00111 0.1
`define HS65_LS_AOI33X19_E_R_Z_F_00011 0.1
`define HS65_LS_AOI33X19_E_F_Z_R_00011 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_11011 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_11011 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_01011 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_01011 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_10011 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_10011 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_01111 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_01111 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_10111 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_10111 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_00111 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_00111 0.1
`define HS65_LS_AOI33X19_F_R_Z_F_00011 0.1
`define HS65_LS_AOI33X19_F_F_Z_R_00011 0.1

module HS65_LS_AOI33X19 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E, F) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11110,`HS65_LS_AOI33X19_A_R_Z_F_11110);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11010,`HS65_LS_AOI33X19_A_R_Z_F_11010);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11100,`HS65_LS_AOI33X19_A_R_Z_F_11100);
		if (B && C && !D && E && F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11011,`HS65_LS_AOI33X19_A_R_Z_F_11011);
		if (B && C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11101,`HS65_LS_AOI33X19_A_R_Z_F_11101);
		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11001,`HS65_LS_AOI33X19_A_R_Z_F_11001);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X19_A_F_Z_R_11000,`HS65_LS_AOI33X19_A_R_Z_F_11000);
		if (A && C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11110,`HS65_LS_AOI33X19_B_R_Z_F_11110);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11010,`HS65_LS_AOI33X19_B_R_Z_F_11010);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11100,`HS65_LS_AOI33X19_B_R_Z_F_11100);
		if (A && C && !D && E && F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11011,`HS65_LS_AOI33X19_B_R_Z_F_11011);
		if (A && C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11101,`HS65_LS_AOI33X19_B_R_Z_F_11101);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11001,`HS65_LS_AOI33X19_B_R_Z_F_11001);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X19_B_F_Z_R_11000,`HS65_LS_AOI33X19_B_R_Z_F_11000);
		if (A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11110,`HS65_LS_AOI33X19_C_R_Z_F_11110);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11010,`HS65_LS_AOI33X19_C_R_Z_F_11010);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11100,`HS65_LS_AOI33X19_C_R_Z_F_11100);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11011,`HS65_LS_AOI33X19_C_R_Z_F_11011);
		if (A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11101,`HS65_LS_AOI33X19_C_R_Z_F_11101);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11001,`HS65_LS_AOI33X19_C_R_Z_F_11001);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X19_C_F_Z_R_11000,`HS65_LS_AOI33X19_C_R_Z_F_11000);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_11011,`HS65_LS_AOI33X19_D_R_Z_F_11011);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_01011,`HS65_LS_AOI33X19_D_R_Z_F_01011);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_10011,`HS65_LS_AOI33X19_D_R_Z_F_10011);
		if (!A && B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_01111,`HS65_LS_AOI33X19_D_R_Z_F_01111);
		if (A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_10111,`HS65_LS_AOI33X19_D_R_Z_F_10111);
		if (!A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_00111,`HS65_LS_AOI33X19_D_R_Z_F_00111);
		if (!A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X19_D_F_Z_R_00011,`HS65_LS_AOI33X19_D_R_Z_F_00011);
		if (A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_11011,`HS65_LS_AOI33X19_E_R_Z_F_11011);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_01011,`HS65_LS_AOI33X19_E_R_Z_F_01011);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_10011,`HS65_LS_AOI33X19_E_R_Z_F_10011);
		if (!A && B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_01111,`HS65_LS_AOI33X19_E_R_Z_F_01111);
		if (A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_10111,`HS65_LS_AOI33X19_E_R_Z_F_10111);
		if (!A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_00111,`HS65_LS_AOI33X19_E_R_Z_F_00111);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X19_E_F_Z_R_00011,`HS65_LS_AOI33X19_E_R_Z_F_00011);
		if (A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_11011,`HS65_LS_AOI33X19_F_R_Z_F_11011);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_01011,`HS65_LS_AOI33X19_F_R_Z_F_01011);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_10011,`HS65_LS_AOI33X19_F_R_Z_F_10011);
		if (!A && B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_01111,`HS65_LS_AOI33X19_F_R_Z_F_01111);
		if (A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_10111,`HS65_LS_AOI33X19_F_R_Z_F_10111);
		if (!A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_00111,`HS65_LS_AOI33X19_F_R_Z_F_00111);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X19_F_F_Z_R_00011,`HS65_LS_AOI33X19_F_R_Z_F_00011);


	endspecify

endmodule // HS65_LS_AOI33X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI33X2_A_R_Z_F_11110 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11110 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11010 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11010 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11100 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11100 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11101 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11101 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11001 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11001 0.1
`define HS65_LS_AOI33X2_A_R_Z_F_11000 0.1
`define HS65_LS_AOI33X2_A_F_Z_R_11000 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11110 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11110 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11010 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11010 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11100 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11100 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11101 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11101 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11001 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11001 0.1
`define HS65_LS_AOI33X2_B_R_Z_F_11000 0.1
`define HS65_LS_AOI33X2_B_F_Z_R_11000 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11110 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11110 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11010 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11010 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11100 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11100 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11101 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11101 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11001 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11001 0.1
`define HS65_LS_AOI33X2_C_R_Z_F_11000 0.1
`define HS65_LS_AOI33X2_C_F_Z_R_11000 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_01011 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_01011 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_10011 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_10011 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_01111 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_01111 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_10111 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_10111 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_00111 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_00111 0.1
`define HS65_LS_AOI33X2_D_R_Z_F_00011 0.1
`define HS65_LS_AOI33X2_D_F_Z_R_00011 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_01011 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_01011 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_10011 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_10011 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_01111 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_01111 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_10111 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_10111 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_00111 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_00111 0.1
`define HS65_LS_AOI33X2_E_R_Z_F_00011 0.1
`define HS65_LS_AOI33X2_E_F_Z_R_00011 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_11011 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_11011 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_01011 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_01011 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_10011 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_10011 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_01111 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_01111 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_10111 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_10111 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_00111 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_00111 0.1
`define HS65_LS_AOI33X2_F_R_Z_F_00011 0.1
`define HS65_LS_AOI33X2_F_F_Z_R_00011 0.1

module HS65_LS_AOI33X2 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E, F) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11110,`HS65_LS_AOI33X2_A_R_Z_F_11110);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11010,`HS65_LS_AOI33X2_A_R_Z_F_11010);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11100,`HS65_LS_AOI33X2_A_R_Z_F_11100);
		if (B && C && !D && E && F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11011,`HS65_LS_AOI33X2_A_R_Z_F_11011);
		if (B && C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11101,`HS65_LS_AOI33X2_A_R_Z_F_11101);
		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11001,`HS65_LS_AOI33X2_A_R_Z_F_11001);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X2_A_F_Z_R_11000,`HS65_LS_AOI33X2_A_R_Z_F_11000);
		if (A && C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11110,`HS65_LS_AOI33X2_B_R_Z_F_11110);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11010,`HS65_LS_AOI33X2_B_R_Z_F_11010);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11100,`HS65_LS_AOI33X2_B_R_Z_F_11100);
		if (A && C && !D && E && F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11011,`HS65_LS_AOI33X2_B_R_Z_F_11011);
		if (A && C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11101,`HS65_LS_AOI33X2_B_R_Z_F_11101);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11001,`HS65_LS_AOI33X2_B_R_Z_F_11001);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X2_B_F_Z_R_11000,`HS65_LS_AOI33X2_B_R_Z_F_11000);
		if (A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11110,`HS65_LS_AOI33X2_C_R_Z_F_11110);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11010,`HS65_LS_AOI33X2_C_R_Z_F_11010);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11100,`HS65_LS_AOI33X2_C_R_Z_F_11100);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11011,`HS65_LS_AOI33X2_C_R_Z_F_11011);
		if (A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11101,`HS65_LS_AOI33X2_C_R_Z_F_11101);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11001,`HS65_LS_AOI33X2_C_R_Z_F_11001);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X2_C_F_Z_R_11000,`HS65_LS_AOI33X2_C_R_Z_F_11000);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_11011,`HS65_LS_AOI33X2_D_R_Z_F_11011);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_01011,`HS65_LS_AOI33X2_D_R_Z_F_01011);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_10011,`HS65_LS_AOI33X2_D_R_Z_F_10011);
		if (!A && B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_01111,`HS65_LS_AOI33X2_D_R_Z_F_01111);
		if (A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_10111,`HS65_LS_AOI33X2_D_R_Z_F_10111);
		if (!A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_00111,`HS65_LS_AOI33X2_D_R_Z_F_00111);
		if (!A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X2_D_F_Z_R_00011,`HS65_LS_AOI33X2_D_R_Z_F_00011);
		if (A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_11011,`HS65_LS_AOI33X2_E_R_Z_F_11011);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_01011,`HS65_LS_AOI33X2_E_R_Z_F_01011);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_10011,`HS65_LS_AOI33X2_E_R_Z_F_10011);
		if (!A && B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_01111,`HS65_LS_AOI33X2_E_R_Z_F_01111);
		if (A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_10111,`HS65_LS_AOI33X2_E_R_Z_F_10111);
		if (!A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_00111,`HS65_LS_AOI33X2_E_R_Z_F_00111);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X2_E_F_Z_R_00011,`HS65_LS_AOI33X2_E_R_Z_F_00011);
		if (A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_11011,`HS65_LS_AOI33X2_F_R_Z_F_11011);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_01011,`HS65_LS_AOI33X2_F_R_Z_F_01011);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_10011,`HS65_LS_AOI33X2_F_R_Z_F_10011);
		if (!A && B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_01111,`HS65_LS_AOI33X2_F_R_Z_F_01111);
		if (A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_10111,`HS65_LS_AOI33X2_F_R_Z_F_10111);
		if (!A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_00111,`HS65_LS_AOI33X2_F_R_Z_F_00111);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X2_F_F_Z_R_00011,`HS65_LS_AOI33X2_F_R_Z_F_00011);


	endspecify

endmodule // HS65_LS_AOI33X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI33X5_A_R_Z_F_11110 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11110 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11010 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11010 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11100 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11100 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11101 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11101 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11001 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11001 0.1
`define HS65_LS_AOI33X5_A_R_Z_F_11000 0.1
`define HS65_LS_AOI33X5_A_F_Z_R_11000 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11110 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11110 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11010 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11010 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11100 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11100 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11101 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11101 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11001 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11001 0.1
`define HS65_LS_AOI33X5_B_R_Z_F_11000 0.1
`define HS65_LS_AOI33X5_B_F_Z_R_11000 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11110 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11110 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11010 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11010 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11100 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11100 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11101 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11101 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11001 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11001 0.1
`define HS65_LS_AOI33X5_C_R_Z_F_11000 0.1
`define HS65_LS_AOI33X5_C_F_Z_R_11000 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_01011 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_01011 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_10011 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_10011 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_01111 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_01111 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_10111 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_10111 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_00111 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_00111 0.1
`define HS65_LS_AOI33X5_D_R_Z_F_00011 0.1
`define HS65_LS_AOI33X5_D_F_Z_R_00011 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_01011 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_01011 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_10011 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_10011 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_01111 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_01111 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_10111 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_10111 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_00111 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_00111 0.1
`define HS65_LS_AOI33X5_E_R_Z_F_00011 0.1
`define HS65_LS_AOI33X5_E_F_Z_R_00011 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_11011 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_11011 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_01011 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_01011 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_10011 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_10011 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_01111 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_01111 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_10111 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_10111 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_00111 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_00111 0.1
`define HS65_LS_AOI33X5_F_R_Z_F_00011 0.1
`define HS65_LS_AOI33X5_F_F_Z_R_00011 0.1

module HS65_LS_AOI33X5 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E, F) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11110,`HS65_LS_AOI33X5_A_R_Z_F_11110);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11010,`HS65_LS_AOI33X5_A_R_Z_F_11010);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11100,`HS65_LS_AOI33X5_A_R_Z_F_11100);
		if (B && C && !D && E && F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11011,`HS65_LS_AOI33X5_A_R_Z_F_11011);
		if (B && C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11101,`HS65_LS_AOI33X5_A_R_Z_F_11101);
		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11001,`HS65_LS_AOI33X5_A_R_Z_F_11001);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X5_A_F_Z_R_11000,`HS65_LS_AOI33X5_A_R_Z_F_11000);
		if (A && C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11110,`HS65_LS_AOI33X5_B_R_Z_F_11110);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11010,`HS65_LS_AOI33X5_B_R_Z_F_11010);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11100,`HS65_LS_AOI33X5_B_R_Z_F_11100);
		if (A && C && !D && E && F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11011,`HS65_LS_AOI33X5_B_R_Z_F_11011);
		if (A && C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11101,`HS65_LS_AOI33X5_B_R_Z_F_11101);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11001,`HS65_LS_AOI33X5_B_R_Z_F_11001);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X5_B_F_Z_R_11000,`HS65_LS_AOI33X5_B_R_Z_F_11000);
		if (A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11110,`HS65_LS_AOI33X5_C_R_Z_F_11110);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11010,`HS65_LS_AOI33X5_C_R_Z_F_11010);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11100,`HS65_LS_AOI33X5_C_R_Z_F_11100);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11011,`HS65_LS_AOI33X5_C_R_Z_F_11011);
		if (A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11101,`HS65_LS_AOI33X5_C_R_Z_F_11101);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11001,`HS65_LS_AOI33X5_C_R_Z_F_11001);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X5_C_F_Z_R_11000,`HS65_LS_AOI33X5_C_R_Z_F_11000);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_11011,`HS65_LS_AOI33X5_D_R_Z_F_11011);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_01011,`HS65_LS_AOI33X5_D_R_Z_F_01011);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_10011,`HS65_LS_AOI33X5_D_R_Z_F_10011);
		if (!A && B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_01111,`HS65_LS_AOI33X5_D_R_Z_F_01111);
		if (A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_10111,`HS65_LS_AOI33X5_D_R_Z_F_10111);
		if (!A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_00111,`HS65_LS_AOI33X5_D_R_Z_F_00111);
		if (!A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X5_D_F_Z_R_00011,`HS65_LS_AOI33X5_D_R_Z_F_00011);
		if (A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_11011,`HS65_LS_AOI33X5_E_R_Z_F_11011);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_01011,`HS65_LS_AOI33X5_E_R_Z_F_01011);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_10011,`HS65_LS_AOI33X5_E_R_Z_F_10011);
		if (!A && B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_01111,`HS65_LS_AOI33X5_E_R_Z_F_01111);
		if (A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_10111,`HS65_LS_AOI33X5_E_R_Z_F_10111);
		if (!A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_00111,`HS65_LS_AOI33X5_E_R_Z_F_00111);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X5_E_F_Z_R_00011,`HS65_LS_AOI33X5_E_R_Z_F_00011);
		if (A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_11011,`HS65_LS_AOI33X5_F_R_Z_F_11011);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_01011,`HS65_LS_AOI33X5_F_R_Z_F_01011);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_10011,`HS65_LS_AOI33X5_F_R_Z_F_10011);
		if (!A && B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_01111,`HS65_LS_AOI33X5_F_R_Z_F_01111);
		if (A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_10111,`HS65_LS_AOI33X5_F_R_Z_F_10111);
		if (!A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_00111,`HS65_LS_AOI33X5_F_R_Z_F_00111);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X5_F_F_Z_R_00011,`HS65_LS_AOI33X5_F_R_Z_F_00011);


	endspecify

endmodule // HS65_LS_AOI33X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_AOI33X9_A_R_Z_F_11110 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11110 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11010 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11010 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11100 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11100 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11101 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11101 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11001 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11001 0.1
`define HS65_LS_AOI33X9_A_R_Z_F_11000 0.1
`define HS65_LS_AOI33X9_A_F_Z_R_11000 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11110 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11110 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11010 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11010 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11100 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11100 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11101 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11101 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11001 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11001 0.1
`define HS65_LS_AOI33X9_B_R_Z_F_11000 0.1
`define HS65_LS_AOI33X9_B_F_Z_R_11000 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11110 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11110 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11010 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11010 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11100 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11100 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11101 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11101 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11001 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11001 0.1
`define HS65_LS_AOI33X9_C_R_Z_F_11000 0.1
`define HS65_LS_AOI33X9_C_F_Z_R_11000 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_01011 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_01011 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_10011 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_10011 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_01111 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_01111 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_10111 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_10111 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_00111 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_00111 0.1
`define HS65_LS_AOI33X9_D_R_Z_F_00011 0.1
`define HS65_LS_AOI33X9_D_F_Z_R_00011 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_01011 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_01011 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_10011 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_10011 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_01111 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_01111 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_10111 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_10111 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_00111 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_00111 0.1
`define HS65_LS_AOI33X9_E_R_Z_F_00011 0.1
`define HS65_LS_AOI33X9_E_F_Z_R_00011 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_11011 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_11011 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_01011 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_01011 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_10011 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_10011 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_01111 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_01111 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_10111 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_10111 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_00111 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_00111 0.1
`define HS65_LS_AOI33X9_F_R_Z_F_00011 0.1
`define HS65_LS_AOI33X9_F_F_Z_R_00011 0.1

module HS65_LS_AOI33X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	and    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL3, D, E, F) ;
	or    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (B && C && D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11110,`HS65_LS_AOI33X9_A_R_Z_F_11110);
		if (B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11010,`HS65_LS_AOI33X9_A_R_Z_F_11010);
		if (B && C && D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11100,`HS65_LS_AOI33X9_A_R_Z_F_11100);
		if (B && C && !D && E && F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11011,`HS65_LS_AOI33X9_A_R_Z_F_11011);
		if (B && C && D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11101,`HS65_LS_AOI33X9_A_R_Z_F_11101);
		if (B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11001,`HS65_LS_AOI33X9_A_R_Z_F_11001);
		if (B && C && !D && !E && !F) (A -=> Z) = (`HS65_LS_AOI33X9_A_F_Z_R_11000,`HS65_LS_AOI33X9_A_R_Z_F_11000);
		if (A && C && D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11110,`HS65_LS_AOI33X9_B_R_Z_F_11110);
		if (A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11010,`HS65_LS_AOI33X9_B_R_Z_F_11010);
		if (A && C && D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11100,`HS65_LS_AOI33X9_B_R_Z_F_11100);
		if (A && C && !D && E && F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11011,`HS65_LS_AOI33X9_B_R_Z_F_11011);
		if (A && C && D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11101,`HS65_LS_AOI33X9_B_R_Z_F_11101);
		if (A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11001,`HS65_LS_AOI33X9_B_R_Z_F_11001);
		if (A && C && !D && !E && !F) (B -=> Z) = (`HS65_LS_AOI33X9_B_F_Z_R_11000,`HS65_LS_AOI33X9_B_R_Z_F_11000);
		if (A && B && D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11110,`HS65_LS_AOI33X9_C_R_Z_F_11110);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11010,`HS65_LS_AOI33X9_C_R_Z_F_11010);
		if (A && B && D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11100,`HS65_LS_AOI33X9_C_R_Z_F_11100);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11011,`HS65_LS_AOI33X9_C_R_Z_F_11011);
		if (A && B && D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11101,`HS65_LS_AOI33X9_C_R_Z_F_11101);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11001,`HS65_LS_AOI33X9_C_R_Z_F_11001);
		if (A && B && !D && !E && !F) (C -=> Z) = (`HS65_LS_AOI33X9_C_F_Z_R_11000,`HS65_LS_AOI33X9_C_R_Z_F_11000);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_11011,`HS65_LS_AOI33X9_D_R_Z_F_11011);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_01011,`HS65_LS_AOI33X9_D_R_Z_F_01011);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_10011,`HS65_LS_AOI33X9_D_R_Z_F_10011);
		if (!A && B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_01111,`HS65_LS_AOI33X9_D_R_Z_F_01111);
		if (A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_10111,`HS65_LS_AOI33X9_D_R_Z_F_10111);
		if (!A && !B && C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_00111,`HS65_LS_AOI33X9_D_R_Z_F_00111);
		if (!A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_AOI33X9_D_F_Z_R_00011,`HS65_LS_AOI33X9_D_R_Z_F_00011);
		if (A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_11011,`HS65_LS_AOI33X9_E_R_Z_F_11011);
		if (!A && B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_01011,`HS65_LS_AOI33X9_E_R_Z_F_01011);
		if (A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_10011,`HS65_LS_AOI33X9_E_R_Z_F_10011);
		if (!A && B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_01111,`HS65_LS_AOI33X9_E_R_Z_F_01111);
		if (A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_10111,`HS65_LS_AOI33X9_E_R_Z_F_10111);
		if (!A && !B && C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_00111,`HS65_LS_AOI33X9_E_R_Z_F_00111);
		if (!A && !B && !C && D && F) (E -=> Z) = (`HS65_LS_AOI33X9_E_F_Z_R_00011,`HS65_LS_AOI33X9_E_R_Z_F_00011);
		if (A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_11011,`HS65_LS_AOI33X9_F_R_Z_F_11011);
		if (!A && B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_01011,`HS65_LS_AOI33X9_F_R_Z_F_01011);
		if (A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_10011,`HS65_LS_AOI33X9_F_R_Z_F_10011);
		if (!A && B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_01111,`HS65_LS_AOI33X9_F_R_Z_F_01111);
		if (A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_10111,`HS65_LS_AOI33X9_F_R_Z_F_10111);
		if (!A && !B && C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_00111,`HS65_LS_AOI33X9_F_R_Z_F_00111);
		if (!A && !B && !C && D && E) (F -=> Z) = (`HS65_LS_AOI33X9_F_F_Z_R_00011,`HS65_LS_AOI33X9_F_R_Z_F_00011);


	endspecify

endmodule // HS65_LS_AOI33X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BDECNX20_DNM1_R_Z_F_0110 0.1
`define HS65_LS_BDECNX20_DNM1_F_Z_R_0110 0.1
`define HS65_LS_BDECNX20_DNM1_R_Z_R_0001 0.1
`define HS65_LS_BDECNX20_DNM1_F_Z_F_0001 0.1
`define HS65_LS_BDECNX20_DNM1_R_Z_R_0101 0.1
`define HS65_LS_BDECNX20_DNM1_F_Z_F_0101 0.1
`define HS65_LS_BDECNX20_DNM1_R_Z_F_0010 0.1
`define HS65_LS_BDECNX20_DNM1_F_Z_R_0010 0.1
`define HS65_LS_BDECNX20_DN_R_Z_F_1110 0.1
`define HS65_LS_BDECNX20_DN_F_Z_R_1110 0.1
`define HS65_LS_BDECNX20_DN_R_Z_R_1001 0.1
`define HS65_LS_BDECNX20_DN_F_Z_F_1001 0.1
`define HS65_LS_BDECNX20_DN_R_Z_R_1101 0.1
`define HS65_LS_BDECNX20_DN_F_Z_F_1101 0.1
`define HS65_LS_BDECNX20_DN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX20_DN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX20_NDBL_R_Z_F_1010 0.1
`define HS65_LS_BDECNX20_NDBL_F_Z_R_1010 0.1
`define HS65_LS_BDECNX20_NDBL_R_Z_R_0110 0.1
`define HS65_LS_BDECNX20_NDBL_F_Z_F_0110 0.1
`define HS65_LS_BDECNX20_NDBL_R_Z_R_1001 0.1
`define HS65_LS_BDECNX20_NDBL_F_Z_F_1001 0.1
`define HS65_LS_BDECNX20_NDBL_R_Z_F_0101 0.1
`define HS65_LS_BDECNX20_NDBL_F_Z_R_0101 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_0000 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_0000 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_1001 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_1001 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_1011 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_1011 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_1000 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_1000 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_0001 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_0001 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_0100 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_0100 0.1
`define HS65_LS_BDECNX20_ZNN_R_Z_F_0101 0.1
`define HS65_LS_BDECNX20_ZNN_F_Z_R_0101 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_0010 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_0010 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_1101 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_1101 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_1110 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_1110 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_1111 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_1111 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_1100 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_1100 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_0011 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_0011 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_0110 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_0110 0.1
`define HS65_LS_BDECNX20_ZNP_R_Z_F_0111 0.1
`define HS65_LS_BDECNX20_ZNP_F_Z_R_0111 0.1

module HS65_LS_BDECNX20 (Z, DN, DNM1, NDBL, ZNN, ZNP);

	output Z;
	input NDBL;
	input DN;
	input DNM1;
	input ZNP;
	input ZNN;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, DNM1, DN, NDBL) ;
	not    U2 (inter, INTERNAL1) ;
	CORE65LPSVT_U_MUX2   U3 (INTERNAL2, ZNP, ZNN, inter) ;
	not   #1 U4 (Z, INTERNAL2) ;


`ifdef functional
`else

	specify

		if (DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX20_DNM1_F_Z_R_0110,`HS65_LS_BDECNX20_DNM1_R_Z_F_0110);
		if (!DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX20_DNM1_R_Z_R_0001,`HS65_LS_BDECNX20_DNM1_F_Z_F_0001);
		if (DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX20_DNM1_R_Z_R_0101,`HS65_LS_BDECNX20_DNM1_F_Z_F_0101);
		if (!DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX20_DNM1_F_Z_R_0010,`HS65_LS_BDECNX20_DNM1_R_Z_F_0010);
		if (DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX20_DN_F_Z_R_1110,`HS65_LS_BDECNX20_DN_R_Z_F_1110);
		if (!DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX20_DN_R_Z_R_1001,`HS65_LS_BDECNX20_DN_F_Z_F_1001);
		if (DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX20_DN_R_Z_R_1101,`HS65_LS_BDECNX20_DN_F_Z_F_1101);
		if (!DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX20_DN_F_Z_R_1010,`HS65_LS_BDECNX20_DN_R_Z_F_1010);
		if (DN && !DNM1 && !ZNN && ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX20_NDBL_F_Z_R_1010,`HS65_LS_BDECNX20_NDBL_R_Z_F_1010);
		if (!DN && DNM1 && !ZNN && ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX20_NDBL_R_Z_R_0110,`HS65_LS_BDECNX20_NDBL_F_Z_F_0110);
		if (DN && !DNM1 && ZNN && !ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX20_NDBL_R_Z_R_1001,`HS65_LS_BDECNX20_NDBL_F_Z_F_1001);
		if (!DN && DNM1 && ZNN && !ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX20_NDBL_F_Z_R_0101,`HS65_LS_BDECNX20_NDBL_R_Z_F_0101);
		if (!DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_0000,`HS65_LS_BDECNX20_ZNN_R_Z_F_0000);
		if (!DN && !DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_1001,`HS65_LS_BDECNX20_ZNN_R_Z_F_1001);
		if (!DN && DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_1010,`HS65_LS_BDECNX20_ZNN_R_Z_F_1010);
		if (!DN && DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_1011,`HS65_LS_BDECNX20_ZNN_R_Z_F_1011);
		if (!DN && !DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_1000,`HS65_LS_BDECNX20_ZNN_R_Z_F_1000);
		if (!DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_0001,`HS65_LS_BDECNX20_ZNN_R_Z_F_0001);
		if (DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_0100,`HS65_LS_BDECNX20_ZNN_R_Z_F_0100);
		if (DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX20_ZNN_F_Z_R_0101,`HS65_LS_BDECNX20_ZNN_R_Z_F_0101);
		if (!DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_0010,`HS65_LS_BDECNX20_ZNP_R_Z_F_0010);
		if (DN && !DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_1101,`HS65_LS_BDECNX20_ZNP_R_Z_F_1101);
		if (DN && DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_1110,`HS65_LS_BDECNX20_ZNP_R_Z_F_1110);
		if (DN && DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_1111,`HS65_LS_BDECNX20_ZNP_R_Z_F_1111);
		if (DN && !DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_1100,`HS65_LS_BDECNX20_ZNP_R_Z_F_1100);
		if (!DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_0011,`HS65_LS_BDECNX20_ZNP_R_Z_F_0011);
		if (DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_0110,`HS65_LS_BDECNX20_ZNP_R_Z_F_0110);
		if (DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX20_ZNP_F_Z_R_0111,`HS65_LS_BDECNX20_ZNP_R_Z_F_0111);


	endspecify

`endif

endmodule // HS65_LS_BDECNX20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BDECNX4_DNM1_R_Z_F_0110 0.1
`define HS65_LS_BDECNX4_DNM1_F_Z_R_0110 0.1
`define HS65_LS_BDECNX4_DNM1_R_Z_R_0001 0.1
`define HS65_LS_BDECNX4_DNM1_F_Z_F_0001 0.1
`define HS65_LS_BDECNX4_DNM1_R_Z_R_0101 0.1
`define HS65_LS_BDECNX4_DNM1_F_Z_F_0101 0.1
`define HS65_LS_BDECNX4_DNM1_R_Z_F_0010 0.1
`define HS65_LS_BDECNX4_DNM1_F_Z_R_0010 0.1
`define HS65_LS_BDECNX4_DN_R_Z_F_1110 0.1
`define HS65_LS_BDECNX4_DN_F_Z_R_1110 0.1
`define HS65_LS_BDECNX4_DN_R_Z_R_1001 0.1
`define HS65_LS_BDECNX4_DN_F_Z_F_1001 0.1
`define HS65_LS_BDECNX4_DN_R_Z_R_1101 0.1
`define HS65_LS_BDECNX4_DN_F_Z_F_1101 0.1
`define HS65_LS_BDECNX4_DN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX4_DN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX4_NDBL_R_Z_F_1010 0.1
`define HS65_LS_BDECNX4_NDBL_F_Z_R_1010 0.1
`define HS65_LS_BDECNX4_NDBL_R_Z_R_0110 0.1
`define HS65_LS_BDECNX4_NDBL_F_Z_F_0110 0.1
`define HS65_LS_BDECNX4_NDBL_R_Z_R_1001 0.1
`define HS65_LS_BDECNX4_NDBL_F_Z_F_1001 0.1
`define HS65_LS_BDECNX4_NDBL_R_Z_F_0101 0.1
`define HS65_LS_BDECNX4_NDBL_F_Z_R_0101 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_0000 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_0000 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_1001 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_1001 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_1011 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_1011 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_1000 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_1000 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_0001 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_0001 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_0100 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_0100 0.1
`define HS65_LS_BDECNX4_ZNN_R_Z_F_0101 0.1
`define HS65_LS_BDECNX4_ZNN_F_Z_R_0101 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_0010 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_0010 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_1101 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_1101 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_1110 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_1110 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_1111 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_1111 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_1100 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_1100 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_0011 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_0011 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_0110 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_0110 0.1
`define HS65_LS_BDECNX4_ZNP_R_Z_F_0111 0.1
`define HS65_LS_BDECNX4_ZNP_F_Z_R_0111 0.1

module HS65_LS_BDECNX4 (Z, DN, DNM1, NDBL, ZNN, ZNP);

	output Z;
	input NDBL;
	input DN;
	input DNM1;
	input ZNP;
	input ZNN;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, DNM1, DN, NDBL) ;
	not    U2 (inter, INTERNAL1) ;
	CORE65LPSVT_U_MUX2   U3 (INTERNAL2, ZNP, ZNN, inter) ;
	not   #1 U4 (Z, INTERNAL2) ;


`ifdef functional
`else

	specify

		if (DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX4_DNM1_F_Z_R_0110,`HS65_LS_BDECNX4_DNM1_R_Z_F_0110);
		if (!DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX4_DNM1_R_Z_R_0001,`HS65_LS_BDECNX4_DNM1_F_Z_F_0001);
		if (DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX4_DNM1_R_Z_R_0101,`HS65_LS_BDECNX4_DNM1_F_Z_F_0101);
		if (!DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX4_DNM1_F_Z_R_0010,`HS65_LS_BDECNX4_DNM1_R_Z_F_0010);
		if (DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX4_DN_F_Z_R_1110,`HS65_LS_BDECNX4_DN_R_Z_F_1110);
		if (!DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX4_DN_R_Z_R_1001,`HS65_LS_BDECNX4_DN_F_Z_F_1001);
		if (DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX4_DN_R_Z_R_1101,`HS65_LS_BDECNX4_DN_F_Z_F_1101);
		if (!DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX4_DN_F_Z_R_1010,`HS65_LS_BDECNX4_DN_R_Z_F_1010);
		if (DN && !DNM1 && !ZNN && ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX4_NDBL_F_Z_R_1010,`HS65_LS_BDECNX4_NDBL_R_Z_F_1010);
		if (!DN && DNM1 && !ZNN && ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX4_NDBL_R_Z_R_0110,`HS65_LS_BDECNX4_NDBL_F_Z_F_0110);
		if (DN && !DNM1 && ZNN && !ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX4_NDBL_R_Z_R_1001,`HS65_LS_BDECNX4_NDBL_F_Z_F_1001);
		if (!DN && DNM1 && ZNN && !ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX4_NDBL_F_Z_R_0101,`HS65_LS_BDECNX4_NDBL_R_Z_F_0101);
		if (!DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_0000,`HS65_LS_BDECNX4_ZNN_R_Z_F_0000);
		if (!DN && !DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_1001,`HS65_LS_BDECNX4_ZNN_R_Z_F_1001);
		if (!DN && DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_1010,`HS65_LS_BDECNX4_ZNN_R_Z_F_1010);
		if (!DN && DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_1011,`HS65_LS_BDECNX4_ZNN_R_Z_F_1011);
		if (!DN && !DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_1000,`HS65_LS_BDECNX4_ZNN_R_Z_F_1000);
		if (!DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_0001,`HS65_LS_BDECNX4_ZNN_R_Z_F_0001);
		if (DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_0100,`HS65_LS_BDECNX4_ZNN_R_Z_F_0100);
		if (DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX4_ZNN_F_Z_R_0101,`HS65_LS_BDECNX4_ZNN_R_Z_F_0101);
		if (!DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_0010,`HS65_LS_BDECNX4_ZNP_R_Z_F_0010);
		if (DN && !DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_1101,`HS65_LS_BDECNX4_ZNP_R_Z_F_1101);
		if (DN && DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_1110,`HS65_LS_BDECNX4_ZNP_R_Z_F_1110);
		if (DN && DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_1111,`HS65_LS_BDECNX4_ZNP_R_Z_F_1111);
		if (DN && !DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_1100,`HS65_LS_BDECNX4_ZNP_R_Z_F_1100);
		if (!DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_0011,`HS65_LS_BDECNX4_ZNP_R_Z_F_0011);
		if (DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_0110,`HS65_LS_BDECNX4_ZNP_R_Z_F_0110);
		if (DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX4_ZNP_F_Z_R_0111,`HS65_LS_BDECNX4_ZNP_R_Z_F_0111);


	endspecify

`endif

endmodule // HS65_LS_BDECNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BDECNX9_DNM1_R_Z_F_0110 0.1
`define HS65_LS_BDECNX9_DNM1_F_Z_R_0110 0.1
`define HS65_LS_BDECNX9_DNM1_R_Z_R_0001 0.1
`define HS65_LS_BDECNX9_DNM1_F_Z_F_0001 0.1
`define HS65_LS_BDECNX9_DNM1_R_Z_R_0101 0.1
`define HS65_LS_BDECNX9_DNM1_F_Z_F_0101 0.1
`define HS65_LS_BDECNX9_DNM1_R_Z_F_0010 0.1
`define HS65_LS_BDECNX9_DNM1_F_Z_R_0010 0.1
`define HS65_LS_BDECNX9_DN_R_Z_F_1110 0.1
`define HS65_LS_BDECNX9_DN_F_Z_R_1110 0.1
`define HS65_LS_BDECNX9_DN_R_Z_R_1001 0.1
`define HS65_LS_BDECNX9_DN_F_Z_F_1001 0.1
`define HS65_LS_BDECNX9_DN_R_Z_R_1101 0.1
`define HS65_LS_BDECNX9_DN_F_Z_F_1101 0.1
`define HS65_LS_BDECNX9_DN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX9_DN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX9_NDBL_R_Z_F_1010 0.1
`define HS65_LS_BDECNX9_NDBL_F_Z_R_1010 0.1
`define HS65_LS_BDECNX9_NDBL_R_Z_R_0110 0.1
`define HS65_LS_BDECNX9_NDBL_F_Z_F_0110 0.1
`define HS65_LS_BDECNX9_NDBL_R_Z_R_1001 0.1
`define HS65_LS_BDECNX9_NDBL_F_Z_F_1001 0.1
`define HS65_LS_BDECNX9_NDBL_R_Z_F_0101 0.1
`define HS65_LS_BDECNX9_NDBL_F_Z_R_0101 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_0000 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_0000 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_1001 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_1001 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_1010 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_1010 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_1011 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_1011 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_1000 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_1000 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_0001 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_0001 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_0100 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_0100 0.1
`define HS65_LS_BDECNX9_ZNN_R_Z_F_0101 0.1
`define HS65_LS_BDECNX9_ZNN_F_Z_R_0101 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_0010 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_0010 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_1101 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_1101 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_1110 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_1110 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_1111 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_1111 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_1100 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_1100 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_0011 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_0011 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_0110 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_0110 0.1
`define HS65_LS_BDECNX9_ZNP_R_Z_F_0111 0.1
`define HS65_LS_BDECNX9_ZNP_F_Z_R_0111 0.1

module HS65_LS_BDECNX9 (Z, DN, DNM1, NDBL, ZNN, ZNP);

	output Z;
	input NDBL;
	input DN;
	input DNM1;
	input ZNP;
	input ZNN;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, DNM1, DN, NDBL) ;
	not    U2 (inter, INTERNAL1) ;
	CORE65LPSVT_U_MUX2   U3 (INTERNAL2, ZNP, ZNN, inter) ;
	not   #1 U4 (Z, INTERNAL2) ;


`ifdef functional
`else

	specify

		if (DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX9_DNM1_F_Z_R_0110,`HS65_LS_BDECNX9_DNM1_R_Z_F_0110);
		if (!DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX9_DNM1_R_Z_R_0001,`HS65_LS_BDECNX9_DNM1_F_Z_F_0001);
		if (DN && !NDBL && ZNN && !ZNP) (DNM1 +=> Z) = (`HS65_LS_BDECNX9_DNM1_R_Z_R_0101,`HS65_LS_BDECNX9_DNM1_F_Z_F_0101);
		if (!DN && !NDBL && !ZNN && ZNP) (DNM1 -=> Z) = (`HS65_LS_BDECNX9_DNM1_F_Z_R_0010,`HS65_LS_BDECNX9_DNM1_R_Z_F_0010);
		if (DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX9_DN_F_Z_R_1110,`HS65_LS_BDECNX9_DN_R_Z_F_1110);
		if (!DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX9_DN_R_Z_R_1001,`HS65_LS_BDECNX9_DN_F_Z_F_1001);
		if (DNM1 && NDBL && ZNN && !ZNP) (DN +=> Z) = (`HS65_LS_BDECNX9_DN_R_Z_R_1101,`HS65_LS_BDECNX9_DN_F_Z_F_1101);
		if (!DNM1 && NDBL && !ZNN && ZNP) (DN -=> Z) = (`HS65_LS_BDECNX9_DN_F_Z_R_1010,`HS65_LS_BDECNX9_DN_R_Z_F_1010);
		if (DN && !DNM1 && !ZNN && ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX9_NDBL_F_Z_R_1010,`HS65_LS_BDECNX9_NDBL_R_Z_F_1010);
		if (!DN && DNM1 && !ZNN && ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX9_NDBL_R_Z_R_0110,`HS65_LS_BDECNX9_NDBL_F_Z_F_0110);
		if (DN && !DNM1 && ZNN && !ZNP) (NDBL +=> Z) = (`HS65_LS_BDECNX9_NDBL_R_Z_R_1001,`HS65_LS_BDECNX9_NDBL_F_Z_F_1001);
		if (!DN && DNM1 && ZNN && !ZNP) (NDBL -=> Z) = (`HS65_LS_BDECNX9_NDBL_F_Z_R_0101,`HS65_LS_BDECNX9_NDBL_R_Z_F_0101);
		if (!DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_0000,`HS65_LS_BDECNX9_ZNN_R_Z_F_0000);
		if (!DN && !DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_1001,`HS65_LS_BDECNX9_ZNN_R_Z_F_1001);
		if (!DN && DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_1010,`HS65_LS_BDECNX9_ZNN_R_Z_F_1010);
		if (!DN && DNM1 && NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_1011,`HS65_LS_BDECNX9_ZNN_R_Z_F_1011);
		if (!DN && !DNM1 && NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_1000,`HS65_LS_BDECNX9_ZNN_R_Z_F_1000);
		if (!DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_0001,`HS65_LS_BDECNX9_ZNN_R_Z_F_0001);
		if (DN && !DNM1 && !NDBL && !ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_0100,`HS65_LS_BDECNX9_ZNN_R_Z_F_0100);
		if (DN && !DNM1 && !NDBL && ZNP) (ZNN -=> Z) = (`HS65_LS_BDECNX9_ZNN_F_Z_R_0101,`HS65_LS_BDECNX9_ZNN_R_Z_F_0101);
		if (!DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_0010,`HS65_LS_BDECNX9_ZNP_R_Z_F_0010);
		if (DN && !DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_1101,`HS65_LS_BDECNX9_ZNP_R_Z_F_1101);
		if (DN && DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_1110,`HS65_LS_BDECNX9_ZNP_R_Z_F_1110);
		if (DN && DNM1 && NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_1111,`HS65_LS_BDECNX9_ZNP_R_Z_F_1111);
		if (DN && !DNM1 && NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_1100,`HS65_LS_BDECNX9_ZNP_R_Z_F_1100);
		if (!DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_0011,`HS65_LS_BDECNX9_ZNP_R_Z_F_0011);
		if (DN && DNM1 && !NDBL && !ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_0110,`HS65_LS_BDECNX9_ZNP_R_Z_F_0110);
		if (DN && DNM1 && !NDBL && ZNN) (ZNP -=> Z) = (`HS65_LS_BDECNX9_ZNP_F_Z_R_0111,`HS65_LS_BDECNX9_ZNP_R_Z_F_0111);


	endspecify

`endif

endmodule // HS65_LS_BDECNX9

`endcelldefine
// Verilog model view for HS65_LS_BENCX41
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 25-May-2005
// Cell HS65_LS_BENCX41

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BENCX41_Y0_R_DBL_F_0 0.1
`define HS65_LS_BENCX41_Y0_F_DBL_R_0 0.1
`define HS65_LS_BENCX41_Y0_R_DBL_R_1 0.1
`define HS65_LS_BENCX41_Y0_F_DBL_F_1 0.1
`define HS65_LS_BENCX41_Y0_R_NZN_F_00 0.1
`define HS65_LS_BENCX41_Y0_F_NZN_R_00 0.1
`define HS65_LS_BENCX41_Y0_R_NZP_R_11 0.1
`define HS65_LS_BENCX41_Y0_F_NZP_F_11 0.1
`define HS65_LS_BENCX41_Y1_R_DBL_F_0 0.1
`define HS65_LS_BENCX41_Y1_F_DBL_R_0 0.1
`define HS65_LS_BENCX41_Y1_R_DBL_R_1 0.1
`define HS65_LS_BENCX41_Y1_F_DBL_F_1 0.1
`define HS65_LS_BENCX41_Y1_R_NZN_F_00 0.1
`define HS65_LS_BENCX41_Y1_F_NZN_R_00 0.1
`define HS65_LS_BENCX41_Y1_R_NZP_R_11 0.1
`define HS65_LS_BENCX41_Y1_F_NZP_F_11 0.1
`define HS65_LS_BENCX41_Y2_R_NZN_R_10 0.1
`define HS65_LS_BENCX41_Y2_F_NZN_F_10 0.1
`define HS65_LS_BENCX41_Y2_R_NZN_R_01 0.1
`define HS65_LS_BENCX41_Y2_F_NZN_F_01 0.1
`define HS65_LS_BENCX41_Y2_R_NZN_R_11 0.1
`define HS65_LS_BENCX41_Y2_F_NZN_F_11 0.1
`define HS65_LS_BENCX41_Y2_R_NZP_F_01 0.1
`define HS65_LS_BENCX41_Y2_F_NZP_R_01 0.1
`define HS65_LS_BENCX41_Y2_R_NZP_F_00 0.1
`define HS65_LS_BENCX41_Y2_F_NZP_R_00 0.1
`define HS65_LS_BENCX41_Y2_R_NZP_F_10 0.1
`define HS65_LS_BENCX41_Y2_F_NZP_R_10 0.1

module HS65_LS_BENCX41 (DBL, NZP, NZN, Y0, Y1, Y2);

	output DBL;
	output NZP;
	output NZN;
	input Y0;
	input Y1;
	input Y2;

	xor    U1 (INTERNAL1, Y0, Y1) ;
	not   #1 U2 (DBL, INTERNAL1) ;
	and    U3 (INTERNAL4, Y0, Y1) ;
	not    U4 (INTERNAL3, INTERNAL4) ;
	and    U5 (INTERNAL2, Y2, INTERNAL3) ;
	not   #1 U6 (NZP, INTERNAL2) ;
	not    U7 (INTERNAL6, Y2) ;
	not    U8 (INTERNAL9, Y0) ;
	not    U9 (INTERNAL10, Y1) ;
	and    U10 (INTERNAL8, INTERNAL9, INTERNAL10) ;
	not    U11 (INTERNAL7, INTERNAL8) ;
	and    U12 (INTERNAL5, INTERNAL6, INTERNAL7) ;
	not   #1 U13 (NZN, INTERNAL5) ;



	specify

		if (!Y1) (Y0 -=> DBL) = (`HS65_LS_BENCX41_Y0_F_DBL_R_0,`HS65_LS_BENCX41_Y0_R_DBL_F_0);
		if (Y1) (Y0 +=> DBL) = (`HS65_LS_BENCX41_Y0_R_DBL_R_1,`HS65_LS_BENCX41_Y0_F_DBL_F_1);
		(Y0 -=> NZN) = (`HS65_LS_BENCX41_Y0_F_NZN_R_00,`HS65_LS_BENCX41_Y0_R_NZN_F_00);
		(Y0 +=> NZP) = (`HS65_LS_BENCX41_Y0_R_NZP_R_11,`HS65_LS_BENCX41_Y0_F_NZP_F_11);
		if (!Y0) (Y1 -=> DBL) = (`HS65_LS_BENCX41_Y1_F_DBL_R_0,`HS65_LS_BENCX41_Y1_R_DBL_F_0);
		if (Y0) (Y1 +=> DBL) = (`HS65_LS_BENCX41_Y1_R_DBL_R_1,`HS65_LS_BENCX41_Y1_F_DBL_F_1);
		(Y1 -=> NZN) = (`HS65_LS_BENCX41_Y1_F_NZN_R_00,`HS65_LS_BENCX41_Y1_R_NZN_F_00);
		(Y1 +=> NZP) = (`HS65_LS_BENCX41_Y1_R_NZP_R_11,`HS65_LS_BENCX41_Y1_F_NZP_F_11);
		if (Y0 && !Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX41_Y2_R_NZN_R_10,`HS65_LS_BENCX41_Y2_F_NZN_F_10);
		if (!Y0 && Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX41_Y2_R_NZN_R_01,`HS65_LS_BENCX41_Y2_F_NZN_F_01);
		if (Y0 && Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX41_Y2_R_NZN_R_11,`HS65_LS_BENCX41_Y2_F_NZN_F_11);
		if (!Y0 && Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX41_Y2_F_NZP_R_01,`HS65_LS_BENCX41_Y2_R_NZP_F_01);
		if (!Y0 && !Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX41_Y2_F_NZP_R_00,`HS65_LS_BENCX41_Y2_R_NZP_F_00);
		if (Y0 && !Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX41_Y2_F_NZP_R_10,`HS65_LS_BENCX41_Y2_R_NZP_F_10);


	endspecify

endmodule // HS65_LS_BENCX41


`endcelldefine
// Verilog model view for HS65_LS_BENCX71
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 25-May-2005
// Cell HS65_LS_BENCX71

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BENCX71_Y0_R_DBL_F_0 0.1
`define HS65_LS_BENCX71_Y0_F_DBL_R_0 0.1
`define HS65_LS_BENCX71_Y0_R_DBL_R_1 0.1
`define HS65_LS_BENCX71_Y0_F_DBL_F_1 0.1
`define HS65_LS_BENCX71_Y0_R_NZN_F_00 0.1
`define HS65_LS_BENCX71_Y0_F_NZN_R_00 0.1
`define HS65_LS_BENCX71_Y0_R_NZP_R_11 0.1
`define HS65_LS_BENCX71_Y0_F_NZP_F_11 0.1
`define HS65_LS_BENCX71_Y1_R_DBL_F_0 0.1
`define HS65_LS_BENCX71_Y1_F_DBL_R_0 0.1
`define HS65_LS_BENCX71_Y1_R_DBL_R_1 0.1
`define HS65_LS_BENCX71_Y1_F_DBL_F_1 0.1
`define HS65_LS_BENCX71_Y1_R_NZN_F_00 0.1
`define HS65_LS_BENCX71_Y1_F_NZN_R_00 0.1
`define HS65_LS_BENCX71_Y1_R_NZP_R_11 0.1
`define HS65_LS_BENCX71_Y1_F_NZP_F_11 0.1
`define HS65_LS_BENCX71_Y2_R_NZN_R_10 0.1
`define HS65_LS_BENCX71_Y2_F_NZN_F_10 0.1
`define HS65_LS_BENCX71_Y2_R_NZN_R_01 0.1
`define HS65_LS_BENCX71_Y2_F_NZN_F_01 0.1
`define HS65_LS_BENCX71_Y2_R_NZN_R_11 0.1
`define HS65_LS_BENCX71_Y2_F_NZN_F_11 0.1
`define HS65_LS_BENCX71_Y2_R_NZP_F_01 0.1
`define HS65_LS_BENCX71_Y2_F_NZP_R_01 0.1
`define HS65_LS_BENCX71_Y2_R_NZP_F_00 0.1
`define HS65_LS_BENCX71_Y2_F_NZP_R_00 0.1
`define HS65_LS_BENCX71_Y2_R_NZP_F_10 0.1
`define HS65_LS_BENCX71_Y2_F_NZP_R_10 0.1

module HS65_LS_BENCX71 (DBL, NZP, NZN, Y0, Y1, Y2);

	output DBL;
	output NZP;
	output NZN;
	input Y0;
	input Y1;
	input Y2;

	xor    U1 (INTERNAL1, Y0, Y1) ;
	not   #1 U2 (DBL, INTERNAL1) ;
	and    U3 (INTERNAL4, Y0, Y1) ;
	not    U4 (INTERNAL3, INTERNAL4) ;
	and    U5 (INTERNAL2, Y2, INTERNAL3) ;
	not   #1 U6 (NZP, INTERNAL2) ;
	not    U7 (INTERNAL6, Y2) ;
	not    U8 (INTERNAL9, Y0) ;
	not    U9 (INTERNAL10, Y1) ;
	and    U10 (INTERNAL8, INTERNAL9, INTERNAL10) ;
	not    U11 (INTERNAL7, INTERNAL8) ;
	and    U12 (INTERNAL5, INTERNAL6, INTERNAL7) ;
	not   #1 U13 (NZN, INTERNAL5) ;



	specify

		if (!Y1) (Y0 -=> DBL) = (`HS65_LS_BENCX71_Y0_F_DBL_R_0,`HS65_LS_BENCX71_Y0_R_DBL_F_0);
		if (Y1) (Y0 +=> DBL) = (`HS65_LS_BENCX71_Y0_R_DBL_R_1,`HS65_LS_BENCX71_Y0_F_DBL_F_1);
		(Y0 -=> NZN) = (`HS65_LS_BENCX71_Y0_F_NZN_R_00,`HS65_LS_BENCX71_Y0_R_NZN_F_00);
		(Y0 +=> NZP) = (`HS65_LS_BENCX71_Y0_R_NZP_R_11,`HS65_LS_BENCX71_Y0_F_NZP_F_11);
		if (!Y0) (Y1 -=> DBL) = (`HS65_LS_BENCX71_Y1_F_DBL_R_0,`HS65_LS_BENCX71_Y1_R_DBL_F_0);
		if (Y0) (Y1 +=> DBL) = (`HS65_LS_BENCX71_Y1_R_DBL_R_1,`HS65_LS_BENCX71_Y1_F_DBL_F_1);
		(Y1 -=> NZN) = (`HS65_LS_BENCX71_Y1_F_NZN_R_00,`HS65_LS_BENCX71_Y1_R_NZN_F_00);
		(Y1 +=> NZP) = (`HS65_LS_BENCX71_Y1_R_NZP_R_11,`HS65_LS_BENCX71_Y1_F_NZP_F_11);
		if (Y0 && !Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX71_Y2_R_NZN_R_10,`HS65_LS_BENCX71_Y2_F_NZN_F_10);
		if (!Y0 && Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX71_Y2_R_NZN_R_01,`HS65_LS_BENCX71_Y2_F_NZN_F_01);
		if (Y0 && Y1) (Y2 +=> NZN) = (`HS65_LS_BENCX71_Y2_R_NZN_R_11,`HS65_LS_BENCX71_Y2_F_NZN_F_11);
		if (!Y0 && Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX71_Y2_F_NZP_R_01,`HS65_LS_BENCX71_Y2_R_NZP_F_01);
		if (!Y0 && !Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX71_Y2_F_NZP_R_00,`HS65_LS_BENCX71_Y2_R_NZP_F_00);
		if (Y0 && !Y1) (Y2 -=> NZP) = (`HS65_LS_BENCX71_Y2_F_NZP_R_10,`HS65_LS_BENCX71_Y2_R_NZP_F_10);


	endspecify

endmodule // HS65_LS_BENCX71


`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX106_A_R_Z_R 0.1
`define HS65_LS_BFX106_A_F_Z_F 0.1

module HS65_LS_BFX106 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX106_A_R_Z_R,`HS65_LS_BFX106_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX106

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX13_A_R_Z_R 0.1
`define HS65_LS_BFX13_A_F_Z_F 0.1

module HS65_LS_BFX13 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX13_A_R_Z_R,`HS65_LS_BFX13_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX142_A_R_Z_R 0.1
`define HS65_LS_BFX142_A_F_Z_F 0.1

module HS65_LS_BFX142 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX142_A_R_Z_R,`HS65_LS_BFX142_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX142

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX18_A_R_Z_R 0.1
`define HS65_LS_BFX18_A_F_Z_F 0.1

module HS65_LS_BFX18 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX18_A_R_Z_R,`HS65_LS_BFX18_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX2_A_R_Z_R 0.1
`define HS65_LS_BFX2_A_F_Z_F 0.1

module HS65_LS_BFX2 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX2_A_R_Z_R,`HS65_LS_BFX2_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX213_A_R_Z_R 0.1
`define HS65_LS_BFX213_A_F_Z_F 0.1

module HS65_LS_BFX213 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX213_A_R_Z_R,`HS65_LS_BFX213_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX213

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX22_A_R_Z_R 0.1
`define HS65_LS_BFX22_A_F_Z_F 0.1

module HS65_LS_BFX22 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX22_A_R_Z_R,`HS65_LS_BFX22_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX27_A_R_Z_R 0.1
`define HS65_LS_BFX27_A_F_Z_F 0.1

module HS65_LS_BFX27 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX27_A_R_Z_R,`HS65_LS_BFX27_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX284_A_R_Z_R 0.1
`define HS65_LS_BFX284_A_F_Z_F 0.1

module HS65_LS_BFX284 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX284_A_R_Z_R,`HS65_LS_BFX284_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX284

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX31_A_R_Z_R 0.1
`define HS65_LS_BFX31_A_F_Z_F 0.1

module HS65_LS_BFX31 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX31_A_R_Z_R,`HS65_LS_BFX31_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX31

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX35_A_R_Z_R 0.1
`define HS65_LS_BFX35_A_F_Z_F 0.1

module HS65_LS_BFX35 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX35_A_R_Z_R,`HS65_LS_BFX35_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX4_A_R_Z_R 0.1
`define HS65_LS_BFX4_A_F_Z_F 0.1

module HS65_LS_BFX4 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX4_A_R_Z_R,`HS65_LS_BFX4_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX40_A_R_Z_R 0.1
`define HS65_LS_BFX40_A_F_Z_F 0.1

module HS65_LS_BFX40 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX40_A_R_Z_R,`HS65_LS_BFX40_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX40

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX44_A_R_Z_R 0.1
`define HS65_LS_BFX44_A_F_Z_F 0.1

module HS65_LS_BFX44 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX44_A_R_Z_R,`HS65_LS_BFX44_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX49_A_R_Z_R 0.1
`define HS65_LS_BFX49_A_F_Z_F 0.1

module HS65_LS_BFX49 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX49_A_R_Z_R,`HS65_LS_BFX49_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX49

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX53_A_R_Z_R 0.1
`define HS65_LS_BFX53_A_F_Z_F 0.1

module HS65_LS_BFX53 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX53_A_R_Z_R,`HS65_LS_BFX53_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX53

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX62_A_R_Z_R 0.1
`define HS65_LS_BFX62_A_F_Z_F 0.1

module HS65_LS_BFX62 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX62_A_R_Z_R,`HS65_LS_BFX62_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX62

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX7_A_R_Z_R 0.1
`define HS65_LS_BFX7_A_F_Z_F 0.1

module HS65_LS_BFX7 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX7_A_R_Z_R,`HS65_LS_BFX7_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX71_A_R_Z_R 0.1
`define HS65_LS_BFX71_A_F_Z_F 0.1

module HS65_LS_BFX71 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX71_A_R_Z_R,`HS65_LS_BFX71_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX71

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BFX9_A_R_Z_R 0.1
`define HS65_LS_BFX9_A_F_Z_F 0.1

module HS65_LS_BFX9 (Z, A);

	output Z;
	input A;

	buf   #1 U1 (Z, A) ;



	specify

		(A +=> Z) = (`HS65_LS_BFX9_A_R_Z_R,`HS65_LS_BFX9_A_F_Z_F);


	endspecify

endmodule // HS65_LS_BFX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BK1SX1_TE_R_BB_R 0.1

module HS65_LS_BK1SX1 (TE, BB);

	input TE;
	inout BB;

	nor    U1 (IBB, TE, BB) ;
	not  (weak0,weak1) #1 U2 (BB, IBB) ;



	specify

		 (TE +=> BB) = (`HS65_LS_BK1SX1_TE_R_BB_R,`HS65_LS_BK1SX1_TE_R_BB_R);


	endspecify

endmodule // HS65_LS_BK1SX1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif


module HS65_LS_BK1X1 (BB);

	inout BB;

	not    U1 (IBB, BB) ;
	not  (weak0,weak1) #1 U2 (BB, IBB) ;


endmodule // HS65_LS_BK1X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BTHX10_A_R_Z_R_1 0.1
`define HS65_LS_BTHX10_A_F_Z_F_1 0.1
`define HS65_LS_BTHX10_E_R_Z_ZL_0 0.1
`define HS65_LS_BTHX10_E_R_Z_ZH_1 0.1
`define HS65_LS_BTHX10_E_F_Z_LZ_0 0.1
`define HS65_LS_BTHX10_E_F_Z_HZ_1 0.1

module HS65_LS_BTHX10 (Z, A, E);

	output Z;
	input E;
	input A;

	bufif1   #1 U1 (Z, A, E) ;



	specify

		(A +=> Z) = (`HS65_LS_BTHX10_A_R_Z_R_1,`HS65_LS_BTHX10_A_F_Z_F_1);
		(E => Z) = (`HS65_LS_BTHX10_E_F_Z_LZ_0,`HS65_LS_BTHX10_E_F_Z_HZ_1,`HS65_LS_BTHX10_E_F_Z_LZ_0,`HS65_LS_BTHX10_E_R_Z_ZH_1,`HS65_LS_BTHX10_E_F_Z_HZ_1,`HS65_LS_BTHX10_E_R_Z_ZL_0);


	endspecify

endmodule // HS65_LS_BTHX10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BTHX15_A_R_Z_R_1 0.1
`define HS65_LS_BTHX15_A_F_Z_F_1 0.1
`define HS65_LS_BTHX15_E_R_Z_ZL_0 0.1
`define HS65_LS_BTHX15_E_R_Z_ZH_1 0.1
`define HS65_LS_BTHX15_E_F_Z_LZ_0 0.1
`define HS65_LS_BTHX15_E_F_Z_HZ_1 0.1

module HS65_LS_BTHX15 (Z, A, E);

	output Z;
	input E;
	input A;

	bufif1   #1 U1 (Z, A, E) ;



	specify

		(A +=> Z) = (`HS65_LS_BTHX15_A_R_Z_R_1,`HS65_LS_BTHX15_A_F_Z_F_1);
		(E => Z) = (`HS65_LS_BTHX15_E_F_Z_LZ_0,`HS65_LS_BTHX15_E_F_Z_HZ_1,`HS65_LS_BTHX15_E_F_Z_LZ_0,`HS65_LS_BTHX15_E_R_Z_ZH_1,`HS65_LS_BTHX15_E_F_Z_HZ_1,`HS65_LS_BTHX15_E_R_Z_ZL_0);


	endspecify

endmodule // HS65_LS_BTHX15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BTHX20_A_R_Z_R_1 0.1
`define HS65_LS_BTHX20_A_F_Z_F_1 0.1
`define HS65_LS_BTHX20_E_R_Z_ZL_0 0.1
`define HS65_LS_BTHX20_E_R_Z_ZH_1 0.1
`define HS65_LS_BTHX20_E_F_Z_LZ_0 0.1
`define HS65_LS_BTHX20_E_F_Z_HZ_1 0.1

module HS65_LS_BTHX20 (Z, A, E);

	output Z;
	input E;
	input A;

	bufif1   #1 U1 (Z, A, E) ;



	specify

		(A +=> Z) = (`HS65_LS_BTHX20_A_R_Z_R_1,`HS65_LS_BTHX20_A_F_Z_F_1);
		(E => Z) = (`HS65_LS_BTHX20_E_F_Z_LZ_0,`HS65_LS_BTHX20_E_F_Z_HZ_1,`HS65_LS_BTHX20_E_F_Z_LZ_0,`HS65_LS_BTHX20_E_R_Z_ZH_1,`HS65_LS_BTHX20_E_F_Z_HZ_1,`HS65_LS_BTHX20_E_R_Z_ZL_0);


	endspecify

endmodule // HS65_LS_BTHX20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BTHX25_A_R_Z_R_1 0.1
`define HS65_LS_BTHX25_A_F_Z_F_1 0.1
`define HS65_LS_BTHX25_E_R_Z_ZL_0 0.1
`define HS65_LS_BTHX25_E_R_Z_ZH_1 0.1
`define HS65_LS_BTHX25_E_F_Z_LZ_0 0.1
`define HS65_LS_BTHX25_E_F_Z_HZ_1 0.1

module HS65_LS_BTHX25 (Z, A, E);

	output Z;
	input E;
	input A;

	bufif1   #1 U1 (Z, A, E) ;



	specify

		(A +=> Z) = (`HS65_LS_BTHX25_A_R_Z_R_1,`HS65_LS_BTHX25_A_F_Z_F_1);
		(E => Z) = (`HS65_LS_BTHX25_E_F_Z_LZ_0,`HS65_LS_BTHX25_E_F_Z_HZ_1,`HS65_LS_BTHX25_E_F_Z_LZ_0,`HS65_LS_BTHX25_E_R_Z_ZH_1,`HS65_LS_BTHX25_E_F_Z_HZ_1,`HS65_LS_BTHX25_E_R_Z_ZL_0);


	endspecify

endmodule // HS65_LS_BTHX25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_BTHX30_A_R_Z_R_1 0.1
`define HS65_LS_BTHX30_A_F_Z_F_1 0.1
`define HS65_LS_BTHX30_E_R_Z_ZL_0 0.1
`define HS65_LS_BTHX30_E_R_Z_ZH_1 0.1
`define HS65_LS_BTHX30_E_F_Z_LZ_0 0.1
`define HS65_LS_BTHX30_E_F_Z_HZ_1 0.1

module HS65_LS_BTHX30 (Z, A, E);

	output Z;
	input E;
	input A;

	bufif1   #1 U1 (Z, A, E) ;



	specify

		(A +=> Z) = (`HS65_LS_BTHX30_A_R_Z_R_1,`HS65_LS_BTHX30_A_F_Z_F_1);
		(E => Z) = (`HS65_LS_BTHX30_E_F_Z_LZ_0,`HS65_LS_BTHX30_E_F_Z_HZ_1,`HS65_LS_BTHX30_E_F_Z_LZ_0,`HS65_LS_BTHX30_E_R_Z_ZH_1,`HS65_LS_BTHX30_E_F_Z_HZ_1,`HS65_LS_BTHX30_E_R_Z_ZL_0);


	endspecify

endmodule // HS65_LS_BTHX30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I1X18_A_R_Z_R_101 0.1
`define HS65_LS_CB4I1X18_A_F_Z_F_101 0.1
`define HS65_LS_CB4I1X18_B_R_Z_R_101 0.1
`define HS65_LS_CB4I1X18_B_F_Z_F_101 0.1
`define HS65_LS_CB4I1X18_C_R_Z_R_001 0.1
`define HS65_LS_CB4I1X18_C_F_Z_F_001 0.1
`define HS65_LS_CB4I1X18_C_R_Z_R_101 0.1
`define HS65_LS_CB4I1X18_C_F_Z_F_101 0.1
`define HS65_LS_CB4I1X18_C_R_Z_R_011 0.1
`define HS65_LS_CB4I1X18_C_F_Z_F_011 0.1
`define HS65_LS_CB4I1X18_D_R_Z_R_101 0.1
`define HS65_LS_CB4I1X18_D_F_Z_F_101 0.1
`define HS65_LS_CB4I1X18_D_R_Z_R_011 0.1
`define HS65_LS_CB4I1X18_D_F_Z_F_011 0.1
`define HS65_LS_CB4I1X18_D_R_Z_R_001 0.1
`define HS65_LS_CB4I1X18_D_F_Z_F_001 0.1
`define HS65_LS_CB4I1X18_D_R_Z_R_111 0.1
`define HS65_LS_CB4I1X18_D_F_Z_F_111 0.1
`define HS65_LS_CB4I1X18_D_R_Z_R_110 0.1
`define HS65_LS_CB4I1X18_D_F_Z_F_110 0.1

module HS65_LS_CB4I1X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	and   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I1X18_A_R_Z_R_101,`HS65_LS_CB4I1X18_A_F_Z_F_101);
		(B +=> Z) = (`HS65_LS_CB4I1X18_B_R_Z_R_101,`HS65_LS_CB4I1X18_B_F_Z_F_101);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X18_C_R_Z_R_001,`HS65_LS_CB4I1X18_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X18_C_R_Z_R_101,`HS65_LS_CB4I1X18_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_CB4I1X18_C_R_Z_R_011,`HS65_LS_CB4I1X18_C_F_Z_F_011);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X18_D_R_Z_R_101,`HS65_LS_CB4I1X18_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X18_D_R_Z_R_011,`HS65_LS_CB4I1X18_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X18_D_R_Z_R_001,`HS65_LS_CB4I1X18_D_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X18_D_R_Z_R_111,`HS65_LS_CB4I1X18_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I1X18_D_R_Z_R_110,`HS65_LS_CB4I1X18_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_CB4I1X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I1X27_A_R_Z_R_101 0.1
`define HS65_LS_CB4I1X27_A_F_Z_F_101 0.1
`define HS65_LS_CB4I1X27_B_R_Z_R_101 0.1
`define HS65_LS_CB4I1X27_B_F_Z_F_101 0.1
`define HS65_LS_CB4I1X27_C_R_Z_R_001 0.1
`define HS65_LS_CB4I1X27_C_F_Z_F_001 0.1
`define HS65_LS_CB4I1X27_C_R_Z_R_101 0.1
`define HS65_LS_CB4I1X27_C_F_Z_F_101 0.1
`define HS65_LS_CB4I1X27_C_R_Z_R_011 0.1
`define HS65_LS_CB4I1X27_C_F_Z_F_011 0.1
`define HS65_LS_CB4I1X27_D_R_Z_R_101 0.1
`define HS65_LS_CB4I1X27_D_F_Z_F_101 0.1
`define HS65_LS_CB4I1X27_D_R_Z_R_011 0.1
`define HS65_LS_CB4I1X27_D_F_Z_F_011 0.1
`define HS65_LS_CB4I1X27_D_R_Z_R_001 0.1
`define HS65_LS_CB4I1X27_D_F_Z_F_001 0.1
`define HS65_LS_CB4I1X27_D_R_Z_R_111 0.1
`define HS65_LS_CB4I1X27_D_F_Z_F_111 0.1
`define HS65_LS_CB4I1X27_D_R_Z_R_110 0.1
`define HS65_LS_CB4I1X27_D_F_Z_F_110 0.1

module HS65_LS_CB4I1X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	and   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I1X27_A_R_Z_R_101,`HS65_LS_CB4I1X27_A_F_Z_F_101);
		(B +=> Z) = (`HS65_LS_CB4I1X27_B_R_Z_R_101,`HS65_LS_CB4I1X27_B_F_Z_F_101);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X27_C_R_Z_R_001,`HS65_LS_CB4I1X27_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X27_C_R_Z_R_101,`HS65_LS_CB4I1X27_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_CB4I1X27_C_R_Z_R_011,`HS65_LS_CB4I1X27_C_F_Z_F_011);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X27_D_R_Z_R_101,`HS65_LS_CB4I1X27_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X27_D_R_Z_R_011,`HS65_LS_CB4I1X27_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X27_D_R_Z_R_001,`HS65_LS_CB4I1X27_D_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X27_D_R_Z_R_111,`HS65_LS_CB4I1X27_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I1X27_D_R_Z_R_110,`HS65_LS_CB4I1X27_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_CB4I1X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I1X35_A_R_Z_R_101 0.1
`define HS65_LS_CB4I1X35_A_F_Z_F_101 0.1
`define HS65_LS_CB4I1X35_B_R_Z_R_101 0.1
`define HS65_LS_CB4I1X35_B_F_Z_F_101 0.1
`define HS65_LS_CB4I1X35_C_R_Z_R_001 0.1
`define HS65_LS_CB4I1X35_C_F_Z_F_001 0.1
`define HS65_LS_CB4I1X35_C_R_Z_R_101 0.1
`define HS65_LS_CB4I1X35_C_F_Z_F_101 0.1
`define HS65_LS_CB4I1X35_C_R_Z_R_011 0.1
`define HS65_LS_CB4I1X35_C_F_Z_F_011 0.1
`define HS65_LS_CB4I1X35_D_R_Z_R_101 0.1
`define HS65_LS_CB4I1X35_D_F_Z_F_101 0.1
`define HS65_LS_CB4I1X35_D_R_Z_R_011 0.1
`define HS65_LS_CB4I1X35_D_F_Z_F_011 0.1
`define HS65_LS_CB4I1X35_D_R_Z_R_001 0.1
`define HS65_LS_CB4I1X35_D_F_Z_F_001 0.1
`define HS65_LS_CB4I1X35_D_R_Z_R_111 0.1
`define HS65_LS_CB4I1X35_D_F_Z_F_111 0.1
`define HS65_LS_CB4I1X35_D_R_Z_R_110 0.1
`define HS65_LS_CB4I1X35_D_F_Z_F_110 0.1

module HS65_LS_CB4I1X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	and   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I1X35_A_R_Z_R_101,`HS65_LS_CB4I1X35_A_F_Z_F_101);
		(B +=> Z) = (`HS65_LS_CB4I1X35_B_R_Z_R_101,`HS65_LS_CB4I1X35_B_F_Z_F_101);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X35_C_R_Z_R_001,`HS65_LS_CB4I1X35_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X35_C_R_Z_R_101,`HS65_LS_CB4I1X35_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_CB4I1X35_C_R_Z_R_011,`HS65_LS_CB4I1X35_C_F_Z_F_011);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X35_D_R_Z_R_101,`HS65_LS_CB4I1X35_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X35_D_R_Z_R_011,`HS65_LS_CB4I1X35_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X35_D_R_Z_R_001,`HS65_LS_CB4I1X35_D_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X35_D_R_Z_R_111,`HS65_LS_CB4I1X35_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I1X35_D_R_Z_R_110,`HS65_LS_CB4I1X35_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_CB4I1X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I1X4_A_R_Z_R_101 0.1
`define HS65_LS_CB4I1X4_A_F_Z_F_101 0.1
`define HS65_LS_CB4I1X4_B_R_Z_R_101 0.1
`define HS65_LS_CB4I1X4_B_F_Z_F_101 0.1
`define HS65_LS_CB4I1X4_C_R_Z_R_001 0.1
`define HS65_LS_CB4I1X4_C_F_Z_F_001 0.1
`define HS65_LS_CB4I1X4_C_R_Z_R_101 0.1
`define HS65_LS_CB4I1X4_C_F_Z_F_101 0.1
`define HS65_LS_CB4I1X4_C_R_Z_R_011 0.1
`define HS65_LS_CB4I1X4_C_F_Z_F_011 0.1
`define HS65_LS_CB4I1X4_D_R_Z_R_101 0.1
`define HS65_LS_CB4I1X4_D_F_Z_F_101 0.1
`define HS65_LS_CB4I1X4_D_R_Z_R_011 0.1
`define HS65_LS_CB4I1X4_D_F_Z_F_011 0.1
`define HS65_LS_CB4I1X4_D_R_Z_R_001 0.1
`define HS65_LS_CB4I1X4_D_F_Z_F_001 0.1
`define HS65_LS_CB4I1X4_D_R_Z_R_111 0.1
`define HS65_LS_CB4I1X4_D_F_Z_F_111 0.1
`define HS65_LS_CB4I1X4_D_R_Z_R_110 0.1
`define HS65_LS_CB4I1X4_D_F_Z_F_110 0.1

module HS65_LS_CB4I1X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	and   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I1X4_A_R_Z_R_101,`HS65_LS_CB4I1X4_A_F_Z_F_101);
		(B +=> Z) = (`HS65_LS_CB4I1X4_B_R_Z_R_101,`HS65_LS_CB4I1X4_B_F_Z_F_101);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X4_C_R_Z_R_001,`HS65_LS_CB4I1X4_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X4_C_R_Z_R_101,`HS65_LS_CB4I1X4_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_CB4I1X4_C_R_Z_R_011,`HS65_LS_CB4I1X4_C_F_Z_F_011);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X4_D_R_Z_R_101,`HS65_LS_CB4I1X4_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X4_D_R_Z_R_011,`HS65_LS_CB4I1X4_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X4_D_R_Z_R_001,`HS65_LS_CB4I1X4_D_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X4_D_R_Z_R_111,`HS65_LS_CB4I1X4_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I1X4_D_R_Z_R_110,`HS65_LS_CB4I1X4_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_CB4I1X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I1X9_A_R_Z_R_101 0.1
`define HS65_LS_CB4I1X9_A_F_Z_F_101 0.1
`define HS65_LS_CB4I1X9_B_R_Z_R_101 0.1
`define HS65_LS_CB4I1X9_B_F_Z_F_101 0.1
`define HS65_LS_CB4I1X9_C_R_Z_R_001 0.1
`define HS65_LS_CB4I1X9_C_F_Z_F_001 0.1
`define HS65_LS_CB4I1X9_C_R_Z_R_101 0.1
`define HS65_LS_CB4I1X9_C_F_Z_F_101 0.1
`define HS65_LS_CB4I1X9_C_R_Z_R_011 0.1
`define HS65_LS_CB4I1X9_C_F_Z_F_011 0.1
`define HS65_LS_CB4I1X9_D_R_Z_R_101 0.1
`define HS65_LS_CB4I1X9_D_F_Z_F_101 0.1
`define HS65_LS_CB4I1X9_D_R_Z_R_011 0.1
`define HS65_LS_CB4I1X9_D_F_Z_F_011 0.1
`define HS65_LS_CB4I1X9_D_R_Z_R_001 0.1
`define HS65_LS_CB4I1X9_D_F_Z_F_001 0.1
`define HS65_LS_CB4I1X9_D_R_Z_R_111 0.1
`define HS65_LS_CB4I1X9_D_F_Z_F_111 0.1
`define HS65_LS_CB4I1X9_D_R_Z_R_110 0.1
`define HS65_LS_CB4I1X9_D_F_Z_F_110 0.1

module HS65_LS_CB4I1X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL1, INTERNAL2, C) ;
	and   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I1X9_A_R_Z_R_101,`HS65_LS_CB4I1X9_A_F_Z_F_101);
		(B +=> Z) = (`HS65_LS_CB4I1X9_B_R_Z_R_101,`HS65_LS_CB4I1X9_B_F_Z_F_101);
		if (!A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X9_C_R_Z_R_001,`HS65_LS_CB4I1X9_C_F_Z_F_001);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_CB4I1X9_C_R_Z_R_101,`HS65_LS_CB4I1X9_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_CB4I1X9_C_R_Z_R_011,`HS65_LS_CB4I1X9_C_F_Z_F_011);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X9_D_R_Z_R_101,`HS65_LS_CB4I1X9_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X9_D_R_Z_R_011,`HS65_LS_CB4I1X9_D_F_Z_F_011);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I1X9_D_R_Z_R_001,`HS65_LS_CB4I1X9_D_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_CB4I1X9_D_R_Z_R_111,`HS65_LS_CB4I1X9_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I1X9_D_R_Z_R_110,`HS65_LS_CB4I1X9_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_CB4I1X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I6X18_A_R_Z_R_010 0.1
`define HS65_LS_CB4I6X18_A_F_Z_F_010 0.1
`define HS65_LS_CB4I6X18_B_R_Z_R_010 0.1
`define HS65_LS_CB4I6X18_B_F_Z_F_010 0.1
`define HS65_LS_CB4I6X18_C_R_Z_R_010 0.1
`define HS65_LS_CB4I6X18_C_F_Z_F_010 0.1
`define HS65_LS_CB4I6X18_C_R_Z_R_110 0.1
`define HS65_LS_CB4I6X18_C_F_Z_F_110 0.1
`define HS65_LS_CB4I6X18_C_R_Z_R_100 0.1
`define HS65_LS_CB4I6X18_C_F_Z_F_100 0.1
`define HS65_LS_CB4I6X18_D_R_Z_R_010 0.1
`define HS65_LS_CB4I6X18_D_F_Z_F_010 0.1
`define HS65_LS_CB4I6X18_D_R_Z_R_001 0.1
`define HS65_LS_CB4I6X18_D_F_Z_F_001 0.1
`define HS65_LS_CB4I6X18_D_R_Z_R_000 0.1
`define HS65_LS_CB4I6X18_D_F_Z_F_000 0.1
`define HS65_LS_CB4I6X18_D_R_Z_R_110 0.1
`define HS65_LS_CB4I6X18_D_F_Z_F_110 0.1
`define HS65_LS_CB4I6X18_D_R_Z_R_100 0.1
`define HS65_LS_CB4I6X18_D_F_Z_F_100 0.1

module HS65_LS_CB4I6X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	or   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I6X18_A_R_Z_R_010,`HS65_LS_CB4I6X18_A_F_Z_F_010);
		(B +=> Z) = (`HS65_LS_CB4I6X18_B_R_Z_R_010,`HS65_LS_CB4I6X18_B_F_Z_F_010);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X18_C_R_Z_R_010,`HS65_LS_CB4I6X18_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X18_C_R_Z_R_110,`HS65_LS_CB4I6X18_C_F_Z_F_110);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_CB4I6X18_C_R_Z_R_100,`HS65_LS_CB4I6X18_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X18_D_R_Z_R_010,`HS65_LS_CB4I6X18_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I6X18_D_R_Z_R_001,`HS65_LS_CB4I6X18_D_F_Z_F_001);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X18_D_R_Z_R_000,`HS65_LS_CB4I6X18_D_F_Z_F_000);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X18_D_R_Z_R_110,`HS65_LS_CB4I6X18_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X18_D_R_Z_R_100,`HS65_LS_CB4I6X18_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_CB4I6X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I6X27_A_R_Z_R_010 0.1
`define HS65_LS_CB4I6X27_A_F_Z_F_010 0.1
`define HS65_LS_CB4I6X27_B_R_Z_R_010 0.1
`define HS65_LS_CB4I6X27_B_F_Z_F_010 0.1
`define HS65_LS_CB4I6X27_C_R_Z_R_010 0.1
`define HS65_LS_CB4I6X27_C_F_Z_F_010 0.1
`define HS65_LS_CB4I6X27_C_R_Z_R_110 0.1
`define HS65_LS_CB4I6X27_C_F_Z_F_110 0.1
`define HS65_LS_CB4I6X27_C_R_Z_R_100 0.1
`define HS65_LS_CB4I6X27_C_F_Z_F_100 0.1
`define HS65_LS_CB4I6X27_D_R_Z_R_010 0.1
`define HS65_LS_CB4I6X27_D_F_Z_F_010 0.1
`define HS65_LS_CB4I6X27_D_R_Z_R_001 0.1
`define HS65_LS_CB4I6X27_D_F_Z_F_001 0.1
`define HS65_LS_CB4I6X27_D_R_Z_R_000 0.1
`define HS65_LS_CB4I6X27_D_F_Z_F_000 0.1
`define HS65_LS_CB4I6X27_D_R_Z_R_110 0.1
`define HS65_LS_CB4I6X27_D_F_Z_F_110 0.1
`define HS65_LS_CB4I6X27_D_R_Z_R_100 0.1
`define HS65_LS_CB4I6X27_D_F_Z_F_100 0.1

module HS65_LS_CB4I6X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	or   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I6X27_A_R_Z_R_010,`HS65_LS_CB4I6X27_A_F_Z_F_010);
		(B +=> Z) = (`HS65_LS_CB4I6X27_B_R_Z_R_010,`HS65_LS_CB4I6X27_B_F_Z_F_010);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X27_C_R_Z_R_010,`HS65_LS_CB4I6X27_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X27_C_R_Z_R_110,`HS65_LS_CB4I6X27_C_F_Z_F_110);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_CB4I6X27_C_R_Z_R_100,`HS65_LS_CB4I6X27_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X27_D_R_Z_R_010,`HS65_LS_CB4I6X27_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I6X27_D_R_Z_R_001,`HS65_LS_CB4I6X27_D_F_Z_F_001);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X27_D_R_Z_R_000,`HS65_LS_CB4I6X27_D_F_Z_F_000);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X27_D_R_Z_R_110,`HS65_LS_CB4I6X27_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X27_D_R_Z_R_100,`HS65_LS_CB4I6X27_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_CB4I6X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I6X35_A_R_Z_R_010 0.1
`define HS65_LS_CB4I6X35_A_F_Z_F_010 0.1
`define HS65_LS_CB4I6X35_B_R_Z_R_010 0.1
`define HS65_LS_CB4I6X35_B_F_Z_F_010 0.1
`define HS65_LS_CB4I6X35_C_R_Z_R_010 0.1
`define HS65_LS_CB4I6X35_C_F_Z_F_010 0.1
`define HS65_LS_CB4I6X35_C_R_Z_R_110 0.1
`define HS65_LS_CB4I6X35_C_F_Z_F_110 0.1
`define HS65_LS_CB4I6X35_C_R_Z_R_100 0.1
`define HS65_LS_CB4I6X35_C_F_Z_F_100 0.1
`define HS65_LS_CB4I6X35_D_R_Z_R_010 0.1
`define HS65_LS_CB4I6X35_D_F_Z_F_010 0.1
`define HS65_LS_CB4I6X35_D_R_Z_R_001 0.1
`define HS65_LS_CB4I6X35_D_F_Z_F_001 0.1
`define HS65_LS_CB4I6X35_D_R_Z_R_000 0.1
`define HS65_LS_CB4I6X35_D_F_Z_F_000 0.1
`define HS65_LS_CB4I6X35_D_R_Z_R_110 0.1
`define HS65_LS_CB4I6X35_D_F_Z_F_110 0.1
`define HS65_LS_CB4I6X35_D_R_Z_R_100 0.1
`define HS65_LS_CB4I6X35_D_F_Z_F_100 0.1

module HS65_LS_CB4I6X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	or   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I6X35_A_R_Z_R_010,`HS65_LS_CB4I6X35_A_F_Z_F_010);
		(B +=> Z) = (`HS65_LS_CB4I6X35_B_R_Z_R_010,`HS65_LS_CB4I6X35_B_F_Z_F_010);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X35_C_R_Z_R_010,`HS65_LS_CB4I6X35_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X35_C_R_Z_R_110,`HS65_LS_CB4I6X35_C_F_Z_F_110);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_CB4I6X35_C_R_Z_R_100,`HS65_LS_CB4I6X35_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X35_D_R_Z_R_010,`HS65_LS_CB4I6X35_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I6X35_D_R_Z_R_001,`HS65_LS_CB4I6X35_D_F_Z_F_001);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X35_D_R_Z_R_000,`HS65_LS_CB4I6X35_D_F_Z_F_000);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X35_D_R_Z_R_110,`HS65_LS_CB4I6X35_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X35_D_R_Z_R_100,`HS65_LS_CB4I6X35_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_CB4I6X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I6X4_A_R_Z_R_010 0.1
`define HS65_LS_CB4I6X4_A_F_Z_F_010 0.1
`define HS65_LS_CB4I6X4_B_R_Z_R_010 0.1
`define HS65_LS_CB4I6X4_B_F_Z_F_010 0.1
`define HS65_LS_CB4I6X4_C_R_Z_R_010 0.1
`define HS65_LS_CB4I6X4_C_F_Z_F_010 0.1
`define HS65_LS_CB4I6X4_C_R_Z_R_110 0.1
`define HS65_LS_CB4I6X4_C_F_Z_F_110 0.1
`define HS65_LS_CB4I6X4_C_R_Z_R_100 0.1
`define HS65_LS_CB4I6X4_C_F_Z_F_100 0.1
`define HS65_LS_CB4I6X4_D_R_Z_R_010 0.1
`define HS65_LS_CB4I6X4_D_F_Z_F_010 0.1
`define HS65_LS_CB4I6X4_D_R_Z_R_001 0.1
`define HS65_LS_CB4I6X4_D_F_Z_F_001 0.1
`define HS65_LS_CB4I6X4_D_R_Z_R_000 0.1
`define HS65_LS_CB4I6X4_D_F_Z_F_000 0.1
`define HS65_LS_CB4I6X4_D_R_Z_R_110 0.1
`define HS65_LS_CB4I6X4_D_F_Z_F_110 0.1
`define HS65_LS_CB4I6X4_D_R_Z_R_100 0.1
`define HS65_LS_CB4I6X4_D_F_Z_F_100 0.1

module HS65_LS_CB4I6X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	or   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I6X4_A_R_Z_R_010,`HS65_LS_CB4I6X4_A_F_Z_F_010);
		(B +=> Z) = (`HS65_LS_CB4I6X4_B_R_Z_R_010,`HS65_LS_CB4I6X4_B_F_Z_F_010);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X4_C_R_Z_R_010,`HS65_LS_CB4I6X4_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X4_C_R_Z_R_110,`HS65_LS_CB4I6X4_C_F_Z_F_110);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_CB4I6X4_C_R_Z_R_100,`HS65_LS_CB4I6X4_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X4_D_R_Z_R_010,`HS65_LS_CB4I6X4_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I6X4_D_R_Z_R_001,`HS65_LS_CB4I6X4_D_F_Z_F_001);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X4_D_R_Z_R_000,`HS65_LS_CB4I6X4_D_F_Z_F_000);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X4_D_R_Z_R_110,`HS65_LS_CB4I6X4_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X4_D_R_Z_R_100,`HS65_LS_CB4I6X4_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_CB4I6X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CB4I6X9_A_R_Z_R_010 0.1
`define HS65_LS_CB4I6X9_A_F_Z_F_010 0.1
`define HS65_LS_CB4I6X9_B_R_Z_R_010 0.1
`define HS65_LS_CB4I6X9_B_F_Z_F_010 0.1
`define HS65_LS_CB4I6X9_C_R_Z_R_010 0.1
`define HS65_LS_CB4I6X9_C_F_Z_F_010 0.1
`define HS65_LS_CB4I6X9_C_R_Z_R_110 0.1
`define HS65_LS_CB4I6X9_C_F_Z_F_110 0.1
`define HS65_LS_CB4I6X9_C_R_Z_R_100 0.1
`define HS65_LS_CB4I6X9_C_F_Z_F_100 0.1
`define HS65_LS_CB4I6X9_D_R_Z_R_010 0.1
`define HS65_LS_CB4I6X9_D_F_Z_F_010 0.1
`define HS65_LS_CB4I6X9_D_R_Z_R_001 0.1
`define HS65_LS_CB4I6X9_D_F_Z_F_001 0.1
`define HS65_LS_CB4I6X9_D_R_Z_R_000 0.1
`define HS65_LS_CB4I6X9_D_F_Z_F_000 0.1
`define HS65_LS_CB4I6X9_D_R_Z_R_110 0.1
`define HS65_LS_CB4I6X9_D_F_Z_F_110 0.1
`define HS65_LS_CB4I6X9_D_R_Z_R_100 0.1
`define HS65_LS_CB4I6X9_D_F_Z_F_100 0.1

module HS65_LS_CB4I6X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	or   #1 U3 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_CB4I6X9_A_R_Z_R_010,`HS65_LS_CB4I6X9_A_F_Z_F_010);
		(B +=> Z) = (`HS65_LS_CB4I6X9_B_R_Z_R_010,`HS65_LS_CB4I6X9_B_F_Z_F_010);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X9_C_R_Z_R_010,`HS65_LS_CB4I6X9_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_CB4I6X9_C_R_Z_R_110,`HS65_LS_CB4I6X9_C_F_Z_F_110);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_CB4I6X9_C_R_Z_R_100,`HS65_LS_CB4I6X9_C_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X9_D_R_Z_R_010,`HS65_LS_CB4I6X9_D_F_Z_F_010);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_CB4I6X9_D_R_Z_R_001,`HS65_LS_CB4I6X9_D_F_Z_F_001);
		if (!A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X9_D_R_Z_R_000,`HS65_LS_CB4I6X9_D_F_Z_F_000);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_CB4I6X9_D_R_Z_R_110,`HS65_LS_CB4I6X9_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_CB4I6X9_D_R_Z_R_100,`HS65_LS_CB4I6X9_D_F_Z_F_100);


	endspecify

endmodule // HS65_LS_CB4I6X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I1X11_A_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X11_A_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X11_B_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X11_B_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X11_C_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X11_C_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X11_C_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X11_C_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X11_C_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X11_C_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X11_D_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X11_D_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X11_D_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X11_D_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X11_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X11_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X11_D_R_Z_F_111 0.1
`define HS65_LS_CBI4I1X11_D_F_Z_R_111 0.1
`define HS65_LS_CBI4I1X11_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I1X11_D_F_Z_R_110 0.1

module HS65_LS_CBI4I1X11 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, C) ;
	and    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I1X11_A_F_Z_R_101,`HS65_LS_CBI4I1X11_A_R_Z_F_101);
		(B -=> Z) = (`HS65_LS_CBI4I1X11_B_F_Z_R_101,`HS65_LS_CBI4I1X11_B_R_Z_F_101);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X11_C_F_Z_R_001,`HS65_LS_CBI4I1X11_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X11_C_F_Z_R_101,`HS65_LS_CBI4I1X11_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_CBI4I1X11_C_F_Z_R_011,`HS65_LS_CBI4I1X11_C_R_Z_F_011);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X11_D_F_Z_R_101,`HS65_LS_CBI4I1X11_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X11_D_F_Z_R_011,`HS65_LS_CBI4I1X11_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X11_D_F_Z_R_001,`HS65_LS_CBI4I1X11_D_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X11_D_F_Z_R_111,`HS65_LS_CBI4I1X11_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I1X11_D_F_Z_R_110,`HS65_LS_CBI4I1X11_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_CBI4I1X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I1X16_A_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X16_A_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X16_B_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X16_B_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X16_C_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X16_C_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X16_C_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X16_C_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X16_C_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X16_C_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X16_D_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X16_D_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X16_D_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X16_D_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X16_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X16_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X16_D_R_Z_F_111 0.1
`define HS65_LS_CBI4I1X16_D_F_Z_R_111 0.1
`define HS65_LS_CBI4I1X16_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I1X16_D_F_Z_R_110 0.1

module HS65_LS_CBI4I1X16 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, C) ;
	and    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I1X16_A_F_Z_R_101,`HS65_LS_CBI4I1X16_A_R_Z_F_101);
		(B -=> Z) = (`HS65_LS_CBI4I1X16_B_F_Z_R_101,`HS65_LS_CBI4I1X16_B_R_Z_F_101);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X16_C_F_Z_R_001,`HS65_LS_CBI4I1X16_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X16_C_F_Z_R_101,`HS65_LS_CBI4I1X16_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_CBI4I1X16_C_F_Z_R_011,`HS65_LS_CBI4I1X16_C_R_Z_F_011);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X16_D_F_Z_R_101,`HS65_LS_CBI4I1X16_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X16_D_F_Z_R_011,`HS65_LS_CBI4I1X16_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X16_D_F_Z_R_001,`HS65_LS_CBI4I1X16_D_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X16_D_F_Z_R_111,`HS65_LS_CBI4I1X16_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I1X16_D_F_Z_R_110,`HS65_LS_CBI4I1X16_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_CBI4I1X16

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I1X21_A_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X21_A_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X21_B_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X21_B_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X21_C_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X21_C_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X21_C_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X21_C_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X21_C_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X21_C_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X21_D_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X21_D_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X21_D_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X21_D_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X21_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X21_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X21_D_R_Z_F_111 0.1
`define HS65_LS_CBI4I1X21_D_F_Z_R_111 0.1
`define HS65_LS_CBI4I1X21_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I1X21_D_F_Z_R_110 0.1

module HS65_LS_CBI4I1X21 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, C) ;
	and    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I1X21_A_F_Z_R_101,`HS65_LS_CBI4I1X21_A_R_Z_F_101);
		(B -=> Z) = (`HS65_LS_CBI4I1X21_B_F_Z_R_101,`HS65_LS_CBI4I1X21_B_R_Z_F_101);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X21_C_F_Z_R_001,`HS65_LS_CBI4I1X21_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X21_C_F_Z_R_101,`HS65_LS_CBI4I1X21_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_CBI4I1X21_C_F_Z_R_011,`HS65_LS_CBI4I1X21_C_R_Z_F_011);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X21_D_F_Z_R_101,`HS65_LS_CBI4I1X21_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X21_D_F_Z_R_011,`HS65_LS_CBI4I1X21_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X21_D_F_Z_R_001,`HS65_LS_CBI4I1X21_D_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X21_D_F_Z_R_111,`HS65_LS_CBI4I1X21_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I1X21_D_F_Z_R_110,`HS65_LS_CBI4I1X21_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_CBI4I1X21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I1X3_A_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X3_A_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X3_B_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X3_B_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X3_C_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X3_C_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X3_C_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X3_C_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X3_C_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X3_C_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X3_D_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X3_D_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X3_D_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X3_D_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X3_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X3_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X3_D_R_Z_F_111 0.1
`define HS65_LS_CBI4I1X3_D_F_Z_R_111 0.1
`define HS65_LS_CBI4I1X3_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I1X3_D_F_Z_R_110 0.1

module HS65_LS_CBI4I1X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, C) ;
	and    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I1X3_A_F_Z_R_101,`HS65_LS_CBI4I1X3_A_R_Z_F_101);
		(B -=> Z) = (`HS65_LS_CBI4I1X3_B_F_Z_R_101,`HS65_LS_CBI4I1X3_B_R_Z_F_101);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X3_C_F_Z_R_001,`HS65_LS_CBI4I1X3_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X3_C_F_Z_R_101,`HS65_LS_CBI4I1X3_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_CBI4I1X3_C_F_Z_R_011,`HS65_LS_CBI4I1X3_C_R_Z_F_011);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X3_D_F_Z_R_101,`HS65_LS_CBI4I1X3_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X3_D_F_Z_R_011,`HS65_LS_CBI4I1X3_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X3_D_F_Z_R_001,`HS65_LS_CBI4I1X3_D_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X3_D_F_Z_R_111,`HS65_LS_CBI4I1X3_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I1X3_D_F_Z_R_110,`HS65_LS_CBI4I1X3_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_CBI4I1X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I1X5_A_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X5_A_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X5_B_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X5_B_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X5_C_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X5_C_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X5_C_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X5_C_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X5_C_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X5_C_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X5_D_R_Z_F_101 0.1
`define HS65_LS_CBI4I1X5_D_F_Z_R_101 0.1
`define HS65_LS_CBI4I1X5_D_R_Z_F_011 0.1
`define HS65_LS_CBI4I1X5_D_F_Z_R_011 0.1
`define HS65_LS_CBI4I1X5_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I1X5_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I1X5_D_R_Z_F_111 0.1
`define HS65_LS_CBI4I1X5_D_F_Z_R_111 0.1
`define HS65_LS_CBI4I1X5_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I1X5_D_F_Z_R_110 0.1

module HS65_LS_CBI4I1X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, C) ;
	and    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I1X5_A_F_Z_R_101,`HS65_LS_CBI4I1X5_A_R_Z_F_101);
		(B -=> Z) = (`HS65_LS_CBI4I1X5_B_F_Z_R_101,`HS65_LS_CBI4I1X5_B_R_Z_F_101);
		if (!A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X5_C_F_Z_R_001,`HS65_LS_CBI4I1X5_C_R_Z_F_001);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_CBI4I1X5_C_F_Z_R_101,`HS65_LS_CBI4I1X5_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_CBI4I1X5_C_F_Z_R_011,`HS65_LS_CBI4I1X5_C_R_Z_F_011);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X5_D_F_Z_R_101,`HS65_LS_CBI4I1X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X5_D_F_Z_R_011,`HS65_LS_CBI4I1X5_D_R_Z_F_011);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I1X5_D_F_Z_R_001,`HS65_LS_CBI4I1X5_D_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_CBI4I1X5_D_F_Z_R_111,`HS65_LS_CBI4I1X5_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I1X5_D_F_Z_R_110,`HS65_LS_CBI4I1X5_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_CBI4I1X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I6X14_A_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X14_A_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X14_B_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X14_B_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X14_C_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X14_C_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X14_C_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X14_C_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X14_C_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X14_C_F_Z_R_100 0.1
`define HS65_LS_CBI4I6X14_D_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X14_D_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X14_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I6X14_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I6X14_D_R_Z_F_000 0.1
`define HS65_LS_CBI4I6X14_D_F_Z_R_000 0.1
`define HS65_LS_CBI4I6X14_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X14_D_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X14_D_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X14_D_F_Z_R_100 0.1

module HS65_LS_CBI4I6X14 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL3, A, B) ;
	and    U2 (INTERNAL2, INTERNAL3, C) ;
	or    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I6X14_A_F_Z_R_010,`HS65_LS_CBI4I6X14_A_R_Z_F_010);
		(B -=> Z) = (`HS65_LS_CBI4I6X14_B_F_Z_R_010,`HS65_LS_CBI4I6X14_B_R_Z_F_010);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X14_C_F_Z_R_010,`HS65_LS_CBI4I6X14_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X14_C_F_Z_R_110,`HS65_LS_CBI4I6X14_C_R_Z_F_110);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X14_C_F_Z_R_100,`HS65_LS_CBI4I6X14_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X14_D_F_Z_R_010,`HS65_LS_CBI4I6X14_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I6X14_D_F_Z_R_001,`HS65_LS_CBI4I6X14_D_R_Z_F_001);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X14_D_F_Z_R_000,`HS65_LS_CBI4I6X14_D_R_Z_F_000);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X14_D_F_Z_R_110,`HS65_LS_CBI4I6X14_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X14_D_F_Z_R_100,`HS65_LS_CBI4I6X14_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_CBI4I6X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I6X18_A_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X18_A_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X18_B_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X18_B_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X18_C_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X18_C_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X18_C_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X18_C_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X18_C_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X18_C_F_Z_R_100 0.1
`define HS65_LS_CBI4I6X18_D_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X18_D_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X18_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I6X18_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I6X18_D_R_Z_F_000 0.1
`define HS65_LS_CBI4I6X18_D_F_Z_R_000 0.1
`define HS65_LS_CBI4I6X18_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X18_D_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X18_D_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X18_D_F_Z_R_100 0.1

module HS65_LS_CBI4I6X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL3, A, B) ;
	and    U2 (INTERNAL2, INTERNAL3, C) ;
	or    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I6X18_A_F_Z_R_010,`HS65_LS_CBI4I6X18_A_R_Z_F_010);
		(B -=> Z) = (`HS65_LS_CBI4I6X18_B_F_Z_R_010,`HS65_LS_CBI4I6X18_B_R_Z_F_010);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X18_C_F_Z_R_010,`HS65_LS_CBI4I6X18_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X18_C_F_Z_R_110,`HS65_LS_CBI4I6X18_C_R_Z_F_110);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X18_C_F_Z_R_100,`HS65_LS_CBI4I6X18_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X18_D_F_Z_R_010,`HS65_LS_CBI4I6X18_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I6X18_D_F_Z_R_001,`HS65_LS_CBI4I6X18_D_R_Z_F_001);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X18_D_F_Z_R_000,`HS65_LS_CBI4I6X18_D_R_Z_F_000);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X18_D_F_Z_R_110,`HS65_LS_CBI4I6X18_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X18_D_F_Z_R_100,`HS65_LS_CBI4I6X18_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_CBI4I6X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I6X2_A_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X2_A_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X2_B_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X2_B_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X2_C_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X2_C_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X2_C_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X2_C_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X2_C_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X2_C_F_Z_R_100 0.1
`define HS65_LS_CBI4I6X2_D_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X2_D_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X2_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I6X2_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I6X2_D_R_Z_F_000 0.1
`define HS65_LS_CBI4I6X2_D_F_Z_R_000 0.1
`define HS65_LS_CBI4I6X2_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X2_D_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X2_D_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X2_D_F_Z_R_100 0.1

module HS65_LS_CBI4I6X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL3, A, B) ;
	and    U2 (INTERNAL2, INTERNAL3, C) ;
	or    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I6X2_A_F_Z_R_010,`HS65_LS_CBI4I6X2_A_R_Z_F_010);
		(B -=> Z) = (`HS65_LS_CBI4I6X2_B_F_Z_R_010,`HS65_LS_CBI4I6X2_B_R_Z_F_010);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X2_C_F_Z_R_010,`HS65_LS_CBI4I6X2_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X2_C_F_Z_R_110,`HS65_LS_CBI4I6X2_C_R_Z_F_110);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X2_C_F_Z_R_100,`HS65_LS_CBI4I6X2_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X2_D_F_Z_R_010,`HS65_LS_CBI4I6X2_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I6X2_D_F_Z_R_001,`HS65_LS_CBI4I6X2_D_R_Z_F_001);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X2_D_F_Z_R_000,`HS65_LS_CBI4I6X2_D_R_Z_F_000);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X2_D_F_Z_R_110,`HS65_LS_CBI4I6X2_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X2_D_F_Z_R_100,`HS65_LS_CBI4I6X2_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_CBI4I6X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I6X5_A_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X5_A_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X5_B_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X5_B_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X5_C_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X5_C_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X5_C_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X5_C_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X5_C_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X5_C_F_Z_R_100 0.1
`define HS65_LS_CBI4I6X5_D_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X5_D_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X5_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I6X5_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I6X5_D_R_Z_F_000 0.1
`define HS65_LS_CBI4I6X5_D_F_Z_R_000 0.1
`define HS65_LS_CBI4I6X5_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X5_D_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X5_D_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X5_D_F_Z_R_100 0.1

module HS65_LS_CBI4I6X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL3, A, B) ;
	and    U2 (INTERNAL2, INTERNAL3, C) ;
	or    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I6X5_A_F_Z_R_010,`HS65_LS_CBI4I6X5_A_R_Z_F_010);
		(B -=> Z) = (`HS65_LS_CBI4I6X5_B_F_Z_R_010,`HS65_LS_CBI4I6X5_B_R_Z_F_010);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X5_C_F_Z_R_010,`HS65_LS_CBI4I6X5_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X5_C_F_Z_R_110,`HS65_LS_CBI4I6X5_C_R_Z_F_110);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X5_C_F_Z_R_100,`HS65_LS_CBI4I6X5_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X5_D_F_Z_R_010,`HS65_LS_CBI4I6X5_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I6X5_D_F_Z_R_001,`HS65_LS_CBI4I6X5_D_R_Z_F_001);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X5_D_F_Z_R_000,`HS65_LS_CBI4I6X5_D_R_Z_F_000);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X5_D_F_Z_R_110,`HS65_LS_CBI4I6X5_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X5_D_F_Z_R_100,`HS65_LS_CBI4I6X5_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_CBI4I6X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_CBI4I6X9_A_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X9_A_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X9_B_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X9_B_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X9_C_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X9_C_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X9_C_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X9_C_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X9_C_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X9_C_F_Z_R_100 0.1
`define HS65_LS_CBI4I6X9_D_R_Z_F_010 0.1
`define HS65_LS_CBI4I6X9_D_F_Z_R_010 0.1
`define HS65_LS_CBI4I6X9_D_R_Z_F_001 0.1
`define HS65_LS_CBI4I6X9_D_F_Z_R_001 0.1
`define HS65_LS_CBI4I6X9_D_R_Z_F_000 0.1
`define HS65_LS_CBI4I6X9_D_F_Z_R_000 0.1
`define HS65_LS_CBI4I6X9_D_R_Z_F_110 0.1
`define HS65_LS_CBI4I6X9_D_F_Z_R_110 0.1
`define HS65_LS_CBI4I6X9_D_R_Z_F_100 0.1
`define HS65_LS_CBI4I6X9_D_F_Z_R_100 0.1

module HS65_LS_CBI4I6X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL3, A, B) ;
	and    U2 (INTERNAL2, INTERNAL3, C) ;
	or    U3 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_CBI4I6X9_A_F_Z_R_010,`HS65_LS_CBI4I6X9_A_R_Z_F_010);
		(B -=> Z) = (`HS65_LS_CBI4I6X9_B_F_Z_R_010,`HS65_LS_CBI4I6X9_B_R_Z_F_010);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X9_C_F_Z_R_010,`HS65_LS_CBI4I6X9_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X9_C_F_Z_R_110,`HS65_LS_CBI4I6X9_C_R_Z_F_110);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_CBI4I6X9_C_F_Z_R_100,`HS65_LS_CBI4I6X9_C_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X9_D_F_Z_R_010,`HS65_LS_CBI4I6X9_D_R_Z_F_010);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_CBI4I6X9_D_F_Z_R_001,`HS65_LS_CBI4I6X9_D_R_Z_F_001);
		if (!A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X9_D_F_Z_R_000,`HS65_LS_CBI4I6X9_D_R_Z_F_000);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X9_D_F_Z_R_110,`HS65_LS_CBI4I6X9_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_CBI4I6X9_D_F_Z_R_100,`HS65_LS_CBI4I6X9_D_R_Z_F_100);


	endspecify

endmodule // HS65_LS_CBI4I6X9

`endcelldefine
// Verilog model view for HS65_LS_D42COX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 25-May-2005
// Cell HS65_LS_D42COX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_D42COX9_CI_R_C_F_0001 0.1
`define HS65_LS_D42COX9_CI_F_C_R_0001 0.1
`define HS65_LS_D42COX9_CI_R_C_F_1011 0.1
`define HS65_LS_D42COX9_CI_F_C_R_1011 0.1
`define HS65_LS_D42COX9_CI_R_C_F_1101 0.1
`define HS65_LS_D42COX9_CI_F_C_R_1101 0.1
`define HS65_LS_D42COX9_CI_R_C_F_1110 0.1
`define HS65_LS_D42COX9_CI_F_C_R_1110 0.1
`define HS65_LS_D42COX9_CI_R_C_F_1000 0.1
`define HS65_LS_D42COX9_CI_F_C_R_1000 0.1
`define HS65_LS_D42COX9_CI_R_C_F_0010 0.1
`define HS65_LS_D42COX9_CI_F_C_R_0010 0.1
`define HS65_LS_D42COX9_CI_R_C_F_0100 0.1
`define HS65_LS_D42COX9_CI_F_C_R_0100 0.1
`define HS65_LS_D42COX9_CI_R_C_F_0111 0.1
`define HS65_LS_D42COX9_CI_F_C_R_0111 0.1
`define HS65_LS_D42COX9_CI_R_S_F_0000 0.1
`define HS65_LS_D42COX9_CI_F_S_R_0000 0.1
`define HS65_LS_D42COX9_CI_R_S_F_1010 0.1
`define HS65_LS_D42COX9_CI_F_S_R_1010 0.1
`define HS65_LS_D42COX9_CI_R_S_F_1100 0.1
`define HS65_LS_D42COX9_CI_F_S_R_1100 0.1
`define HS65_LS_D42COX9_CI_R_S_F_1111 0.1
`define HS65_LS_D42COX9_CI_F_S_R_1111 0.1
`define HS65_LS_D42COX9_CI_R_S_F_1001 0.1
`define HS65_LS_D42COX9_CI_F_S_R_1001 0.1
`define HS65_LS_D42COX9_CI_R_S_F_0011 0.1
`define HS65_LS_D42COX9_CI_F_S_R_0011 0.1
`define HS65_LS_D42COX9_CI_R_S_F_0101 0.1
`define HS65_LS_D42COX9_CI_F_S_R_0101 0.1
`define HS65_LS_D42COX9_CI_R_S_F_0110 0.1
`define HS65_LS_D42COX9_CI_F_S_R_0110 0.1
`define HS65_LS_D42COX9_CI_R_S_R_0001 0.1
`define HS65_LS_D42COX9_CI_F_S_F_0001 0.1
`define HS65_LS_D42COX9_CI_R_S_R_1011 0.1
`define HS65_LS_D42COX9_CI_F_S_F_1011 0.1
`define HS65_LS_D42COX9_CI_R_S_R_1101 0.1
`define HS65_LS_D42COX9_CI_F_S_F_1101 0.1
`define HS65_LS_D42COX9_CI_R_S_R_1110 0.1
`define HS65_LS_D42COX9_CI_F_S_F_1110 0.1
`define HS65_LS_D42COX9_CI_R_S_R_1000 0.1
`define HS65_LS_D42COX9_CI_F_S_F_1000 0.1
`define HS65_LS_D42COX9_CI_R_S_R_0010 0.1
`define HS65_LS_D42COX9_CI_F_S_F_0010 0.1
`define HS65_LS_D42COX9_CI_R_S_R_0100 0.1
`define HS65_LS_D42COX9_CI_F_S_F_0100 0.1
`define HS65_LS_D42COX9_CI_R_S_R_0111 0.1
`define HS65_LS_D42COX9_CI_F_S_F_0111 0.1
`define HS65_LS_D42COX9_I1_R_C_F_1000 0.1
`define HS65_LS_D42COX9_I1_F_C_R_1000 0.1
`define HS65_LS_D42COX9_I1_R_C_F_0100 0.1
`define HS65_LS_D42COX9_I1_F_C_R_0100 0.1
`define HS65_LS_D42COX9_I1_R_C_F_0111 0.1
`define HS65_LS_D42COX9_I1_F_C_R_0111 0.1
`define HS65_LS_D42COX9_I1_R_C_R_1100 0.1
`define HS65_LS_D42COX9_I1_F_C_F_1100 0.1
`define HS65_LS_D42COX9_I1_R_C_F_1011 0.1
`define HS65_LS_D42COX9_I1_F_C_R_1011 0.1
`define HS65_LS_D42COX9_I1_R_C_R_0000 0.1
`define HS65_LS_D42COX9_I1_F_C_F_0000 0.1
`define HS65_LS_D42COX9_I1_R_C_R_0011 0.1
`define HS65_LS_D42COX9_I1_F_C_F_0011 0.1
`define HS65_LS_D42COX9_I1_R_C_R_1111 0.1
`define HS65_LS_D42COX9_I1_F_C_F_1111 0.1
`define HS65_LS_D42COX9_I1_R_CO_F_10 0.1
`define HS65_LS_D42COX9_I1_F_CO_R_10 0.1
`define HS65_LS_D42COX9_I1_R_CO_F_01 0.1
`define HS65_LS_D42COX9_I1_F_CO_R_01 0.1
`define HS65_LS_D42COX9_I1_R_S_F_0000 0.1
`define HS65_LS_D42COX9_I1_F_S_R_0000 0.1
`define HS65_LS_D42COX9_I1_R_S_F_1010 0.1
`define HS65_LS_D42COX9_I1_F_S_R_1010 0.1
`define HS65_LS_D42COX9_I1_R_S_F_1100 0.1
`define HS65_LS_D42COX9_I1_F_S_R_1100 0.1
`define HS65_LS_D42COX9_I1_R_S_F_1111 0.1
`define HS65_LS_D42COX9_I1_F_S_R_1111 0.1
`define HS65_LS_D42COX9_I1_R_S_F_1001 0.1
`define HS65_LS_D42COX9_I1_F_S_R_1001 0.1
`define HS65_LS_D42COX9_I1_R_S_F_0011 0.1
`define HS65_LS_D42COX9_I1_F_S_R_0011 0.1
`define HS65_LS_D42COX9_I1_R_S_F_0101 0.1
`define HS65_LS_D42COX9_I1_F_S_R_0101 0.1
`define HS65_LS_D42COX9_I1_R_S_F_0110 0.1
`define HS65_LS_D42COX9_I1_F_S_R_0110 0.1
`define HS65_LS_D42COX9_I1_R_S_R_0001 0.1
`define HS65_LS_D42COX9_I1_F_S_F_0001 0.1
`define HS65_LS_D42COX9_I1_R_S_R_1011 0.1
`define HS65_LS_D42COX9_I1_F_S_F_1011 0.1
`define HS65_LS_D42COX9_I1_R_S_R_1101 0.1
`define HS65_LS_D42COX9_I1_F_S_F_1101 0.1
`define HS65_LS_D42COX9_I1_R_S_R_1110 0.1
`define HS65_LS_D42COX9_I1_F_S_F_1110 0.1
`define HS65_LS_D42COX9_I1_R_S_R_1000 0.1
`define HS65_LS_D42COX9_I1_F_S_F_1000 0.1
`define HS65_LS_D42COX9_I1_R_S_R_0010 0.1
`define HS65_LS_D42COX9_I1_F_S_F_0010 0.1
`define HS65_LS_D42COX9_I1_R_S_R_0100 0.1
`define HS65_LS_D42COX9_I1_F_S_F_0100 0.1
`define HS65_LS_D42COX9_I1_R_S_R_0111 0.1
`define HS65_LS_D42COX9_I1_F_S_F_0111 0.1
`define HS65_LS_D42COX9_I2_R_C_F_1000 0.1
`define HS65_LS_D42COX9_I2_F_C_R_1000 0.1
`define HS65_LS_D42COX9_I2_R_C_F_0100 0.1
`define HS65_LS_D42COX9_I2_F_C_R_0100 0.1
`define HS65_LS_D42COX9_I2_R_C_F_0111 0.1
`define HS65_LS_D42COX9_I2_F_C_R_0111 0.1
`define HS65_LS_D42COX9_I2_R_C_R_1100 0.1
`define HS65_LS_D42COX9_I2_F_C_F_1100 0.1
`define HS65_LS_D42COX9_I2_R_C_F_1011 0.1
`define HS65_LS_D42COX9_I2_F_C_R_1011 0.1
`define HS65_LS_D42COX9_I2_R_C_R_0000 0.1
`define HS65_LS_D42COX9_I2_F_C_F_0000 0.1
`define HS65_LS_D42COX9_I2_R_C_R_0011 0.1
`define HS65_LS_D42COX9_I2_F_C_F_0011 0.1
`define HS65_LS_D42COX9_I2_R_C_R_1111 0.1
`define HS65_LS_D42COX9_I2_F_C_F_1111 0.1
`define HS65_LS_D42COX9_I2_R_CO_F_10 0.1
`define HS65_LS_D42COX9_I2_F_CO_R_10 0.1
`define HS65_LS_D42COX9_I2_R_CO_F_01 0.1
`define HS65_LS_D42COX9_I2_F_CO_R_01 0.1
`define HS65_LS_D42COX9_I2_R_S_F_0000 0.1
`define HS65_LS_D42COX9_I2_F_S_R_0000 0.1
`define HS65_LS_D42COX9_I2_R_S_F_1010 0.1
`define HS65_LS_D42COX9_I2_F_S_R_1010 0.1
`define HS65_LS_D42COX9_I2_R_S_F_1100 0.1
`define HS65_LS_D42COX9_I2_F_S_R_1100 0.1
`define HS65_LS_D42COX9_I2_R_S_F_1111 0.1
`define HS65_LS_D42COX9_I2_F_S_R_1111 0.1
`define HS65_LS_D42COX9_I2_R_S_F_1001 0.1
`define HS65_LS_D42COX9_I2_F_S_R_1001 0.1
`define HS65_LS_D42COX9_I2_R_S_F_0011 0.1
`define HS65_LS_D42COX9_I2_F_S_R_0011 0.1
`define HS65_LS_D42COX9_I2_R_S_F_0101 0.1
`define HS65_LS_D42COX9_I2_F_S_R_0101 0.1
`define HS65_LS_D42COX9_I2_R_S_F_0110 0.1
`define HS65_LS_D42COX9_I2_F_S_R_0110 0.1
`define HS65_LS_D42COX9_I2_R_S_R_0001 0.1
`define HS65_LS_D42COX9_I2_F_S_F_0001 0.1
`define HS65_LS_D42COX9_I2_R_S_R_1011 0.1
`define HS65_LS_D42COX9_I2_F_S_F_1011 0.1
`define HS65_LS_D42COX9_I2_R_S_R_1101 0.1
`define HS65_LS_D42COX9_I2_F_S_F_1101 0.1
`define HS65_LS_D42COX9_I2_R_S_R_1110 0.1
`define HS65_LS_D42COX9_I2_F_S_F_1110 0.1
`define HS65_LS_D42COX9_I2_R_S_R_1000 0.1
`define HS65_LS_D42COX9_I2_F_S_F_1000 0.1
`define HS65_LS_D42COX9_I2_R_S_R_0010 0.1
`define HS65_LS_D42COX9_I2_F_S_F_0010 0.1
`define HS65_LS_D42COX9_I2_R_S_R_0100 0.1
`define HS65_LS_D42COX9_I2_F_S_F_0100 0.1
`define HS65_LS_D42COX9_I2_R_S_R_0111 0.1
`define HS65_LS_D42COX9_I2_F_S_F_0111 0.1
`define HS65_LS_D42COX9_I3_R_C_F_1000 0.1
`define HS65_LS_D42COX9_I3_F_C_R_1000 0.1
`define HS65_LS_D42COX9_I3_R_C_F_0100 0.1
`define HS65_LS_D42COX9_I3_F_C_R_0100 0.1
`define HS65_LS_D42COX9_I3_R_C_F_0111 0.1
`define HS65_LS_D42COX9_I3_F_C_R_0111 0.1
`define HS65_LS_D42COX9_I3_R_C_R_1100 0.1
`define HS65_LS_D42COX9_I3_F_C_F_1100 0.1
`define HS65_LS_D42COX9_I3_R_C_F_1011 0.1
`define HS65_LS_D42COX9_I3_F_C_R_1011 0.1
`define HS65_LS_D42COX9_I3_R_C_R_0000 0.1
`define HS65_LS_D42COX9_I3_F_C_F_0000 0.1
`define HS65_LS_D42COX9_I3_R_C_R_0011 0.1
`define HS65_LS_D42COX9_I3_F_C_F_0011 0.1
`define HS65_LS_D42COX9_I3_R_C_R_1111 0.1
`define HS65_LS_D42COX9_I3_F_C_F_1111 0.1
`define HS65_LS_D42COX9_I3_R_CO_F_10 0.1
`define HS65_LS_D42COX9_I3_F_CO_R_10 0.1
`define HS65_LS_D42COX9_I3_R_CO_F_01 0.1
`define HS65_LS_D42COX9_I3_F_CO_R_01 0.1
`define HS65_LS_D42COX9_I3_R_S_F_0000 0.1
`define HS65_LS_D42COX9_I3_F_S_R_0000 0.1
`define HS65_LS_D42COX9_I3_R_S_F_1010 0.1
`define HS65_LS_D42COX9_I3_F_S_R_1010 0.1
`define HS65_LS_D42COX9_I3_R_S_F_1100 0.1
`define HS65_LS_D42COX9_I3_F_S_R_1100 0.1
`define HS65_LS_D42COX9_I3_R_S_F_1111 0.1
`define HS65_LS_D42COX9_I3_F_S_R_1111 0.1
`define HS65_LS_D42COX9_I3_R_S_F_1001 0.1
`define HS65_LS_D42COX9_I3_F_S_R_1001 0.1
`define HS65_LS_D42COX9_I3_R_S_F_0011 0.1
`define HS65_LS_D42COX9_I3_F_S_R_0011 0.1
`define HS65_LS_D42COX9_I3_R_S_F_0101 0.1
`define HS65_LS_D42COX9_I3_F_S_R_0101 0.1
`define HS65_LS_D42COX9_I3_R_S_F_0110 0.1
`define HS65_LS_D42COX9_I3_F_S_R_0110 0.1
`define HS65_LS_D42COX9_I3_R_S_R_0001 0.1
`define HS65_LS_D42COX9_I3_F_S_F_0001 0.1
`define HS65_LS_D42COX9_I3_R_S_R_1011 0.1
`define HS65_LS_D42COX9_I3_F_S_F_1011 0.1
`define HS65_LS_D42COX9_I3_R_S_R_1101 0.1
`define HS65_LS_D42COX9_I3_F_S_F_1101 0.1
`define HS65_LS_D42COX9_I3_R_S_R_1110 0.1
`define HS65_LS_D42COX9_I3_F_S_F_1110 0.1
`define HS65_LS_D42COX9_I3_R_S_R_1000 0.1
`define HS65_LS_D42COX9_I3_F_S_F_1000 0.1
`define HS65_LS_D42COX9_I3_R_S_R_0010 0.1
`define HS65_LS_D42COX9_I3_F_S_F_0010 0.1
`define HS65_LS_D42COX9_I3_R_S_R_0100 0.1
`define HS65_LS_D42COX9_I3_F_S_F_0100 0.1
`define HS65_LS_D42COX9_I3_R_S_R_0111 0.1
`define HS65_LS_D42COX9_I3_F_S_F_0111 0.1
`define HS65_LS_D42COX9_I4_R_C_R_0000 0.1
`define HS65_LS_D42COX9_I4_F_C_F_0000 0.1
`define HS65_LS_D42COX9_I4_R_C_R_1010 0.1
`define HS65_LS_D42COX9_I4_F_C_F_1010 0.1
`define HS65_LS_D42COX9_I4_R_C_R_1100 0.1
`define HS65_LS_D42COX9_I4_F_C_F_1100 0.1
`define HS65_LS_D42COX9_I4_R_C_R_1111 0.1
`define HS65_LS_D42COX9_I4_F_C_F_1111 0.1
`define HS65_LS_D42COX9_I4_R_C_R_1001 0.1
`define HS65_LS_D42COX9_I4_F_C_F_1001 0.1
`define HS65_LS_D42COX9_I4_R_C_R_0011 0.1
`define HS65_LS_D42COX9_I4_F_C_F_0011 0.1
`define HS65_LS_D42COX9_I4_R_C_R_0101 0.1
`define HS65_LS_D42COX9_I4_F_C_F_0101 0.1
`define HS65_LS_D42COX9_I4_R_C_R_0110 0.1
`define HS65_LS_D42COX9_I4_F_C_F_0110 0.1
`define HS65_LS_D42COX9_I4_R_S_F_0000 0.1
`define HS65_LS_D42COX9_I4_F_S_R_0000 0.1
`define HS65_LS_D42COX9_I4_R_S_F_1010 0.1
`define HS65_LS_D42COX9_I4_F_S_R_1010 0.1
`define HS65_LS_D42COX9_I4_R_S_F_1100 0.1
`define HS65_LS_D42COX9_I4_F_S_R_1100 0.1
`define HS65_LS_D42COX9_I4_R_S_F_1111 0.1
`define HS65_LS_D42COX9_I4_F_S_R_1111 0.1
`define HS65_LS_D42COX9_I4_R_S_F_1001 0.1
`define HS65_LS_D42COX9_I4_F_S_R_1001 0.1
`define HS65_LS_D42COX9_I4_R_S_F_0011 0.1
`define HS65_LS_D42COX9_I4_F_S_R_0011 0.1
`define HS65_LS_D42COX9_I4_R_S_F_0101 0.1
`define HS65_LS_D42COX9_I4_F_S_R_0101 0.1
`define HS65_LS_D42COX9_I4_R_S_F_0110 0.1
`define HS65_LS_D42COX9_I4_F_S_R_0110 0.1
`define HS65_LS_D42COX9_I4_R_S_R_0001 0.1
`define HS65_LS_D42COX9_I4_F_S_F_0001 0.1
`define HS65_LS_D42COX9_I4_R_S_R_1011 0.1
`define HS65_LS_D42COX9_I4_F_S_F_1011 0.1
`define HS65_LS_D42COX9_I4_R_S_R_1101 0.1
`define HS65_LS_D42COX9_I4_F_S_F_1101 0.1
`define HS65_LS_D42COX9_I4_R_S_R_1110 0.1
`define HS65_LS_D42COX9_I4_F_S_F_1110 0.1
`define HS65_LS_D42COX9_I4_R_S_R_1000 0.1
`define HS65_LS_D42COX9_I4_F_S_F_1000 0.1
`define HS65_LS_D42COX9_I4_R_S_R_0010 0.1
`define HS65_LS_D42COX9_I4_F_S_F_0010 0.1
`define HS65_LS_D42COX9_I4_R_S_R_0100 0.1
`define HS65_LS_D42COX9_I4_F_S_F_0100 0.1
`define HS65_LS_D42COX9_I4_R_S_R_0111 0.1
`define HS65_LS_D42COX9_I4_F_S_F_0111 0.1

module HS65_LS_D42COX9 (CO, S, C, I4, I3, I2, I1, CI);

	output CO;
	output S;
	output C;
	input I4;
	input I3;
	input I2;
	input I1;
	input CI;

	not    U1 (INTERNAL2, I2) ;
	not    U2 (INTERNAL3, I3) ;
	not    U3 (INTERNAL4, CI) ;
	and    U4 (INTERNAL1, I1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (INTERNAL6, I1) ;
	not    U6 (INTERNAL7, I3) ;
	not    U7 (INTERNAL8, CI) ;
	and    U8 (INTERNAL5, INTERNAL6, I2, INTERNAL7, INTERNAL8) ;
	not    U9 (INTERNAL10, I1) ;
	not    U10 (INTERNAL11, I2) ;
	not    U11 (INTERNAL12, CI) ;
	and    U12 (INTERNAL9, INTERNAL10, INTERNAL11, I3, INTERNAL12) ;
	not    U13 (INTERNAL14, CI) ;
	and    U14 (INTERNAL13, I1, I2, I3, INTERNAL14) ;
	not    U15 (INTERNAL16, I3) ;
	not    U16 (INTERNAL17, CI) ;
	and    U17 (INTERNAL15, INTERNAL16, I4, INTERNAL17) ;
	not    U18 (INTERNAL19, I2) ;
	not    U19 (INTERNAL20, CI) ;
	and    U20 (INTERNAL18, INTERNAL19, I4, INTERNAL20) ;
	not    U21 (INTERNAL22, I1) ;
	not    U22 (INTERNAL23, CI) ;
	and    U23 (INTERNAL21, INTERNAL22, I4, INTERNAL23) ;
	not    U24 (INTERNAL25, I2) ;
	not    U25 (INTERNAL26, I3) ;
	and    U26 (INTERNAL24, I1, INTERNAL25, INTERNAL26, I4) ;
	not    U27 (INTERNAL28, I1) ;
	not    U28 (INTERNAL29, I3) ;
	and    U29 (INTERNAL27, INTERNAL28, I2, INTERNAL29, I4) ;
	not    U30 (INTERNAL31, I1) ;
	not    U31 (INTERNAL32, I2) ;
	and    U32 (INTERNAL30, INTERNAL31, INTERNAL32, I3, I4) ;
	and    U33 (INTERNAL33, I1, I2, I3, I4) ;
	or   #1 U34 (C, INTERNAL1, INTERNAL5, INTERNAL9, INTERNAL13, INTERNAL15, INTERNAL18, INTERNAL21, INTERNAL24, INTERNAL27, INTERNAL30, INTERNAL33) ;
	not    U35 (INTERNAL35, I1) ;
	not    U36 (INTERNAL36, I2) ;
	not    U37 (INTERNAL37, I3) ;
	not    U38 (INTERNAL38, I4) ;
	not    U39 (INTERNAL39, CI) ;
	and    U40 (INTERNAL34, INTERNAL35, INTERNAL36, INTERNAL37, INTERNAL38, INTERNAL39) ;
	not    U41 (INTERNAL41, I3) ;
	not    U42 (INTERNAL42, I4) ;
	not    U43 (INTERNAL43, CI) ;
	and    U44 (INTERNAL40, I1, I2, INTERNAL41, INTERNAL42, INTERNAL43) ;
	not    U45 (INTERNAL45, I2) ;
	not    U46 (INTERNAL46, I4) ;
	not    U47 (INTERNAL47, CI) ;
	and    U48 (INTERNAL44, I1, INTERNAL45, I3, INTERNAL46, INTERNAL47) ;
	not    U49 (INTERNAL49, I1) ;
	not    U50 (INTERNAL50, I4) ;
	not    U51 (INTERNAL51, CI) ;
	and    U52 (INTERNAL48, INTERNAL49, I2, I3, INTERNAL50, INTERNAL51) ;
	not    U53 (INTERNAL53, I2) ;
	not    U54 (INTERNAL54, I3) ;
	not    U55 (INTERNAL55, CI) ;
	and    U56 (INTERNAL52, I1, INTERNAL53, INTERNAL54, I4, INTERNAL55) ;
	not    U57 (INTERNAL57, I1) ;
	not    U58 (INTERNAL58, I3) ;
	not    U59 (INTERNAL59, CI) ;
	and    U60 (INTERNAL56, INTERNAL57, I2, INTERNAL58, I4, INTERNAL59) ;
	not    U61 (INTERNAL61, I1) ;
	not    U62 (INTERNAL62, I2) ;
	not    U63 (INTERNAL63, CI) ;
	and    U64 (INTERNAL60, INTERNAL61, INTERNAL62, I3, I4, INTERNAL63) ;
	not    U65 (INTERNAL65, CI) ;
	and    U66 (INTERNAL64, I1, I2, I3, I4, INTERNAL65) ;
	not    U67 (INTERNAL67, I2) ;
	not    U68 (INTERNAL68, I3) ;
	not    U69 (INTERNAL69, I4) ;
	and    U70 (INTERNAL66, I1, INTERNAL67, INTERNAL68, INTERNAL69, CI) ;
	not    U71 (INTERNAL71, I1) ;
	not    U72 (INTERNAL72, I3) ;
	not    U73 (INTERNAL73, I4) ;
	and    U74 (INTERNAL70, INTERNAL71, I2, INTERNAL72, INTERNAL73, CI) ;
	not    U75 (INTERNAL75, I1) ;
	not    U76 (INTERNAL76, I2) ;
	not    U77 (INTERNAL77, I4) ;
	and    U78 (INTERNAL74, INTERNAL75, INTERNAL76, I3, INTERNAL77, CI) ;
	not    U79 (INTERNAL79, I4) ;
	and    U80 (INTERNAL78, I1, I2, I3, INTERNAL79, CI) ;
	not    U81 (INTERNAL81, I1) ;
	not    U82 (INTERNAL82, I2) ;
	not    U83 (INTERNAL83, I3) ;
	and    U84 (INTERNAL80, INTERNAL81, INTERNAL82, INTERNAL83, I4, CI) ;
	not    U85 (INTERNAL85, I3) ;
	and    U86 (INTERNAL84, I1, I2, INTERNAL85, I4, CI) ;
	not    U87 (INTERNAL87, I2) ;
	and    U88 (INTERNAL86, I1, INTERNAL87, I3, I4, CI) ;
	not    U89 (INTERNAL89, I1) ;
	and    U90 (INTERNAL88, INTERNAL89, I2, I3, I4, CI) ;
	or   #1 U91 (S, INTERNAL34, INTERNAL40, INTERNAL44, INTERNAL48, INTERNAL52, INTERNAL56, INTERNAL60, INTERNAL64, INTERNAL66, INTERNAL70, INTERNAL74, INTERNAL78, INTERNAL80, INTERNAL84, INTERNAL86, INTERNAL88) ;
	not    U92 (INTERNAL91, I1) ;
	not    U93 (INTERNAL92, I3) ;
	and    U94 (INTERNAL90, INTERNAL91, INTERNAL92) ;
	not    U95 (INTERNAL94, I1) ;
	not    U96 (INTERNAL95, I2) ;
	and    U97 (INTERNAL93, INTERNAL94, INTERNAL95) ;
	not    U98 (INTERNAL97, I2) ;
	not    U99 (INTERNAL98, I3) ;
	and    U100 (INTERNAL96, INTERNAL97, INTERNAL98) ;
	or   #1 U101 (CO, INTERNAL90, INTERNAL93, INTERNAL96) ;



	specify

		if (!I1 && !I2 && !I3 && I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_0001,`HS65_LS_D42COX9_CI_R_C_F_0001);
		if (I1 && !I2 && I3 && I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_1011,`HS65_LS_D42COX9_CI_R_C_F_1011);
		if (I1 && I2 && !I3 && I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_1101,`HS65_LS_D42COX9_CI_R_C_F_1101);
		if (I1 && I2 && I3 && !I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_1110,`HS65_LS_D42COX9_CI_R_C_F_1110);
		if (I1 && !I2 && !I3 && !I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_1000,`HS65_LS_D42COX9_CI_R_C_F_1000);
		if (!I1 && !I2 && I3 && !I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_0010,`HS65_LS_D42COX9_CI_R_C_F_0010);
		if (!I1 && I2 && !I3 && !I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_0100,`HS65_LS_D42COX9_CI_R_C_F_0100);
		if (!I1 && I2 && I3 && I4) (CI -=> C) = (`HS65_LS_D42COX9_CI_F_C_R_0111,`HS65_LS_D42COX9_CI_R_C_F_0111);
		if (!I1 && !I2 && !I3 && !I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_0000,`HS65_LS_D42COX9_CI_R_S_F_0000);
		if (I1 && !I2 && I3 && !I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_1010,`HS65_LS_D42COX9_CI_R_S_F_1010);
		if (I1 && I2 && !I3 && !I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_1100,`HS65_LS_D42COX9_CI_R_S_F_1100);
		if (I1 && I2 && I3 && I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_1111,`HS65_LS_D42COX9_CI_R_S_F_1111);
		if (I1 && !I2 && !I3 && I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_1001,`HS65_LS_D42COX9_CI_R_S_F_1001);
		if (!I1 && !I2 && I3 && I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_0011,`HS65_LS_D42COX9_CI_R_S_F_0011);
		if (!I1 && I2 && !I3 && I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_0101,`HS65_LS_D42COX9_CI_R_S_F_0101);
		if (!I1 && I2 && I3 && !I4) (CI -=> S) = (`HS65_LS_D42COX9_CI_F_S_R_0110,`HS65_LS_D42COX9_CI_R_S_F_0110);
		if (!I1 && !I2 && !I3 && I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_0001,`HS65_LS_D42COX9_CI_F_S_F_0001);
		if (I1 && !I2 && I3 && I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_1011,`HS65_LS_D42COX9_CI_F_S_F_1011);
		if (I1 && I2 && !I3 && I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_1101,`HS65_LS_D42COX9_CI_F_S_F_1101);
		if (I1 && I2 && I3 && !I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_1110,`HS65_LS_D42COX9_CI_F_S_F_1110);
		if (I1 && !I2 && !I3 && !I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_1000,`HS65_LS_D42COX9_CI_F_S_F_1000);
		if (!I1 && !I2 && I3 && !I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_0010,`HS65_LS_D42COX9_CI_F_S_F_0010);
		if (!I1 && I2 && !I3 && !I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_0100,`HS65_LS_D42COX9_CI_F_S_F_0100);
		if (!I1 && I2 && I3 && I4) (CI +=> S) = (`HS65_LS_D42COX9_CI_R_S_R_0111,`HS65_LS_D42COX9_CI_F_S_F_0111);
		if (!CI && I2 && !I3 && !I4) (I1 -=> C) = (`HS65_LS_D42COX9_I1_F_C_R_1000,`HS65_LS_D42COX9_I1_R_C_F_1000);
		if (!CI && !I2 && I3 && !I4) (I1 -=> C) = (`HS65_LS_D42COX9_I1_F_C_R_0100,`HS65_LS_D42COX9_I1_R_C_F_0100);
		if (CI && !I2 && I3 && I4) (I1 -=> C) = (`HS65_LS_D42COX9_I1_F_C_R_0111,`HS65_LS_D42COX9_I1_R_C_F_0111);
		if (!CI && I2 && I3 && !I4) (I1 +=> C) = (`HS65_LS_D42COX9_I1_R_C_R_1100,`HS65_LS_D42COX9_I1_F_C_F_1100);
		if (CI && I2 && !I3 && I4) (I1 -=> C) = (`HS65_LS_D42COX9_I1_F_C_R_1011,`HS65_LS_D42COX9_I1_R_C_F_1011);
		if (!CI && !I2 && !I3 && !I4) (I1 +=> C) = (`HS65_LS_D42COX9_I1_R_C_R_0000,`HS65_LS_D42COX9_I1_F_C_F_0000);
		if (CI && !I2 && !I3 && I4) (I1 +=> C) = (`HS65_LS_D42COX9_I1_R_C_R_0011,`HS65_LS_D42COX9_I1_F_C_F_0011);
		if (CI && I2 && I3 && I4) (I1 +=> C) = (`HS65_LS_D42COX9_I1_R_C_R_1111,`HS65_LS_D42COX9_I1_F_C_F_1111);
		if (I2 && !I3) (I1 -=> CO) = (`HS65_LS_D42COX9_I1_F_CO_R_10,`HS65_LS_D42COX9_I1_R_CO_F_10);
		if (!I2 && I3) (I1 -=> CO) = (`HS65_LS_D42COX9_I1_F_CO_R_01,`HS65_LS_D42COX9_I1_R_CO_F_01);
		if (!CI && !I2 && !I3 && !I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_0000,`HS65_LS_D42COX9_I1_R_S_F_0000);
		if (!CI && I2 && !I3 && I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_1010,`HS65_LS_D42COX9_I1_R_S_F_1010);
		if (!CI && I2 && I3 && !I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_1100,`HS65_LS_D42COX9_I1_R_S_F_1100);
		if (CI && I2 && I3 && I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_1111,`HS65_LS_D42COX9_I1_R_S_F_1111);
		if (CI && I2 && !I3 && !I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_1001,`HS65_LS_D42COX9_I1_R_S_F_1001);
		if (CI && !I2 && !I3 && I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_0011,`HS65_LS_D42COX9_I1_R_S_F_0011);
		if (CI && !I2 && I3 && !I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_0101,`HS65_LS_D42COX9_I1_R_S_F_0101);
		if (!CI && !I2 && I3 && I4) (I1 -=> S) = (`HS65_LS_D42COX9_I1_F_S_R_0110,`HS65_LS_D42COX9_I1_R_S_F_0110);
		if (CI && !I2 && !I3 && !I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_0001,`HS65_LS_D42COX9_I1_F_S_F_0001);
		if (CI && I2 && !I3 && I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_1011,`HS65_LS_D42COX9_I1_F_S_F_1011);
		if (CI && I2 && I3 && !I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_1101,`HS65_LS_D42COX9_I1_F_S_F_1101);
		if (!CI && I2 && I3 && I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_1110,`HS65_LS_D42COX9_I1_F_S_F_1110);
		if (!CI && I2 && !I3 && !I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_1000,`HS65_LS_D42COX9_I1_F_S_F_1000);
		if (!CI && !I2 && !I3 && I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_0010,`HS65_LS_D42COX9_I1_F_S_F_0010);
		if (!CI && !I2 && I3 && !I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_0100,`HS65_LS_D42COX9_I1_F_S_F_0100);
		if (CI && !I2 && I3 && I4) (I1 +=> S) = (`HS65_LS_D42COX9_I1_R_S_R_0111,`HS65_LS_D42COX9_I1_F_S_F_0111);
		if (!CI && I1 && !I3 && !I4) (I2 -=> C) = (`HS65_LS_D42COX9_I2_F_C_R_1000,`HS65_LS_D42COX9_I2_R_C_F_1000);
		if (!CI && !I1 && I3 && !I4) (I2 -=> C) = (`HS65_LS_D42COX9_I2_F_C_R_0100,`HS65_LS_D42COX9_I2_R_C_F_0100);
		if (CI && !I1 && I3 && I4) (I2 -=> C) = (`HS65_LS_D42COX9_I2_F_C_R_0111,`HS65_LS_D42COX9_I2_R_C_F_0111);
		if (!CI && I1 && I3 && !I4) (I2 +=> C) = (`HS65_LS_D42COX9_I2_R_C_R_1100,`HS65_LS_D42COX9_I2_F_C_F_1100);
		if (CI && I1 && !I3 && I4) (I2 -=> C) = (`HS65_LS_D42COX9_I2_F_C_R_1011,`HS65_LS_D42COX9_I2_R_C_F_1011);
		if (!CI && !I1 && !I3 && !I4) (I2 +=> C) = (`HS65_LS_D42COX9_I2_R_C_R_0000,`HS65_LS_D42COX9_I2_F_C_F_0000);
		if (CI && !I1 && !I3 && I4) (I2 +=> C) = (`HS65_LS_D42COX9_I2_R_C_R_0011,`HS65_LS_D42COX9_I2_F_C_F_0011);
		if (CI && I1 && I3 && I4) (I2 +=> C) = (`HS65_LS_D42COX9_I2_R_C_R_1111,`HS65_LS_D42COX9_I2_F_C_F_1111);
		if (I1 && !I3) (I2 -=> CO) = (`HS65_LS_D42COX9_I2_F_CO_R_10,`HS65_LS_D42COX9_I2_R_CO_F_10);
		if (!I1 && I3) (I2 -=> CO) = (`HS65_LS_D42COX9_I2_F_CO_R_01,`HS65_LS_D42COX9_I2_R_CO_F_01);
		if (!CI && !I1 && !I3 && !I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_0000,`HS65_LS_D42COX9_I2_R_S_F_0000);
		if (!CI && I1 && !I3 && I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_1010,`HS65_LS_D42COX9_I2_R_S_F_1010);
		if (!CI && I1 && I3 && !I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_1100,`HS65_LS_D42COX9_I2_R_S_F_1100);
		if (CI && I1 && I3 && I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_1111,`HS65_LS_D42COX9_I2_R_S_F_1111);
		if (CI && I1 && !I3 && !I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_1001,`HS65_LS_D42COX9_I2_R_S_F_1001);
		if (CI && !I1 && !I3 && I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_0011,`HS65_LS_D42COX9_I2_R_S_F_0011);
		if (CI && !I1 && I3 && !I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_0101,`HS65_LS_D42COX9_I2_R_S_F_0101);
		if (!CI && !I1 && I3 && I4) (I2 -=> S) = (`HS65_LS_D42COX9_I2_F_S_R_0110,`HS65_LS_D42COX9_I2_R_S_F_0110);
		if (CI && !I1 && !I3 && !I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_0001,`HS65_LS_D42COX9_I2_F_S_F_0001);
		if (CI && I1 && !I3 && I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_1011,`HS65_LS_D42COX9_I2_F_S_F_1011);
		if (CI && I1 && I3 && !I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_1101,`HS65_LS_D42COX9_I2_F_S_F_1101);
		if (!CI && I1 && I3 && I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_1110,`HS65_LS_D42COX9_I2_F_S_F_1110);
		if (!CI && I1 && !I3 && !I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_1000,`HS65_LS_D42COX9_I2_F_S_F_1000);
		if (!CI && !I1 && !I3 && I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_0010,`HS65_LS_D42COX9_I2_F_S_F_0010);
		if (!CI && !I1 && I3 && !I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_0100,`HS65_LS_D42COX9_I2_F_S_F_0100);
		if (CI && !I1 && I3 && I4) (I2 +=> S) = (`HS65_LS_D42COX9_I2_R_S_R_0111,`HS65_LS_D42COX9_I2_F_S_F_0111);
		if (!CI && I1 && !I2 && !I4) (I3 -=> C) = (`HS65_LS_D42COX9_I3_F_C_R_1000,`HS65_LS_D42COX9_I3_R_C_F_1000);
		if (!CI && !I1 && I2 && !I4) (I3 -=> C) = (`HS65_LS_D42COX9_I3_F_C_R_0100,`HS65_LS_D42COX9_I3_R_C_F_0100);
		if (CI && !I1 && I2 && I4) (I3 -=> C) = (`HS65_LS_D42COX9_I3_F_C_R_0111,`HS65_LS_D42COX9_I3_R_C_F_0111);
		if (!CI && I1 && I2 && !I4) (I3 +=> C) = (`HS65_LS_D42COX9_I3_R_C_R_1100,`HS65_LS_D42COX9_I3_F_C_F_1100);
		if (CI && I1 && !I2 && I4) (I3 -=> C) = (`HS65_LS_D42COX9_I3_F_C_R_1011,`HS65_LS_D42COX9_I3_R_C_F_1011);
		if (!CI && !I1 && !I2 && !I4) (I3 +=> C) = (`HS65_LS_D42COX9_I3_R_C_R_0000,`HS65_LS_D42COX9_I3_F_C_F_0000);
		if (CI && !I1 && !I2 && I4) (I3 +=> C) = (`HS65_LS_D42COX9_I3_R_C_R_0011,`HS65_LS_D42COX9_I3_F_C_F_0011);
		if (CI && I1 && I2 && I4) (I3 +=> C) = (`HS65_LS_D42COX9_I3_R_C_R_1111,`HS65_LS_D42COX9_I3_F_C_F_1111);
		if (I1 && !I2) (I3 -=> CO) = (`HS65_LS_D42COX9_I3_F_CO_R_10,`HS65_LS_D42COX9_I3_R_CO_F_10);
		if (!I1 && I2) (I3 -=> CO) = (`HS65_LS_D42COX9_I3_F_CO_R_01,`HS65_LS_D42COX9_I3_R_CO_F_01);
		if (!CI && !I1 && !I2 && !I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_0000,`HS65_LS_D42COX9_I3_R_S_F_0000);
		if (!CI && I1 && !I2 && I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_1010,`HS65_LS_D42COX9_I3_R_S_F_1010);
		if (!CI && I1 && I2 && !I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_1100,`HS65_LS_D42COX9_I3_R_S_F_1100);
		if (CI && I1 && I2 && I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_1111,`HS65_LS_D42COX9_I3_R_S_F_1111);
		if (CI && I1 && !I2 && !I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_1001,`HS65_LS_D42COX9_I3_R_S_F_1001);
		if (CI && !I1 && !I2 && I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_0011,`HS65_LS_D42COX9_I3_R_S_F_0011);
		if (CI && !I1 && I2 && !I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_0101,`HS65_LS_D42COX9_I3_R_S_F_0101);
		if (!CI && !I1 && I2 && I4) (I3 -=> S) = (`HS65_LS_D42COX9_I3_F_S_R_0110,`HS65_LS_D42COX9_I3_R_S_F_0110);
		if (CI && !I1 && !I2 && !I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_0001,`HS65_LS_D42COX9_I3_F_S_F_0001);
		if (CI && I1 && !I2 && I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_1011,`HS65_LS_D42COX9_I3_F_S_F_1011);
		if (CI && I1 && I2 && !I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_1101,`HS65_LS_D42COX9_I3_F_S_F_1101);
		if (!CI && I1 && I2 && I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_1110,`HS65_LS_D42COX9_I3_F_S_F_1110);
		if (!CI && I1 && !I2 && !I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_1000,`HS65_LS_D42COX9_I3_F_S_F_1000);
		if (!CI && !I1 && !I2 && I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_0010,`HS65_LS_D42COX9_I3_F_S_F_0010);
		if (!CI && !I1 && I2 && !I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_0100,`HS65_LS_D42COX9_I3_F_S_F_0100);
		if (CI && !I1 && I2 && I4) (I3 +=> S) = (`HS65_LS_D42COX9_I3_R_S_R_0111,`HS65_LS_D42COX9_I3_F_S_F_0111);
		if (!CI && !I1 && !I2 && !I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_0000,`HS65_LS_D42COX9_I4_F_C_F_0000);
		if (!CI && I1 && !I2 && I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_1010,`HS65_LS_D42COX9_I4_F_C_F_1010);
		if (!CI && I1 && I2 && !I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_1100,`HS65_LS_D42COX9_I4_F_C_F_1100);
		if (CI && I1 && I2 && I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_1111,`HS65_LS_D42COX9_I4_F_C_F_1111);
		if (CI && I1 && !I2 && !I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_1001,`HS65_LS_D42COX9_I4_F_C_F_1001);
		if (CI && !I1 && !I2 && I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_0011,`HS65_LS_D42COX9_I4_F_C_F_0011);
		if (CI && !I1 && I2 && !I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_0101,`HS65_LS_D42COX9_I4_F_C_F_0101);
		if (!CI && !I1 && I2 && I3) (I4 +=> C) = (`HS65_LS_D42COX9_I4_R_C_R_0110,`HS65_LS_D42COX9_I4_F_C_F_0110);
		if (!CI && !I1 && !I2 && !I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_0000,`HS65_LS_D42COX9_I4_R_S_F_0000);
		if (!CI && I1 && !I2 && I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_1010,`HS65_LS_D42COX9_I4_R_S_F_1010);
		if (!CI && I1 && I2 && !I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_1100,`HS65_LS_D42COX9_I4_R_S_F_1100);
		if (CI && I1 && I2 && I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_1111,`HS65_LS_D42COX9_I4_R_S_F_1111);
		if (CI && I1 && !I2 && !I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_1001,`HS65_LS_D42COX9_I4_R_S_F_1001);
		if (CI && !I1 && !I2 && I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_0011,`HS65_LS_D42COX9_I4_R_S_F_0011);
		if (CI && !I1 && I2 && !I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_0101,`HS65_LS_D42COX9_I4_R_S_F_0101);
		if (!CI && !I1 && I2 && I3) (I4 -=> S) = (`HS65_LS_D42COX9_I4_F_S_R_0110,`HS65_LS_D42COX9_I4_R_S_F_0110);
		if (CI && !I1 && !I2 && !I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_0001,`HS65_LS_D42COX9_I4_F_S_F_0001);
		if (CI && I1 && !I2 && I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_1011,`HS65_LS_D42COX9_I4_F_S_F_1011);
		if (CI && I1 && I2 && !I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_1101,`HS65_LS_D42COX9_I4_F_S_F_1101);
		if (!CI && I1 && I2 && I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_1110,`HS65_LS_D42COX9_I4_F_S_F_1110);
		if (!CI && I1 && !I2 && !I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_1000,`HS65_LS_D42COX9_I4_F_S_F_1000);
		if (!CI && !I1 && !I2 && I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_0010,`HS65_LS_D42COX9_I4_F_S_F_0010);
		if (!CI && !I1 && I2 && !I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_0100,`HS65_LS_D42COX9_I4_F_S_F_0100);
		if (CI && !I1 && I2 && I3) (I4 +=> S) = (`HS65_LS_D42COX9_I4_R_S_R_0111,`HS65_LS_D42COX9_I4_F_S_F_0111);


	endspecify

endmodule // HS65_LS_D42COX9


`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQNX18_CP_R_QN_R 0.1
`define HS65_LS_DFPHQNX18_CP_R_QN_F 0.1
`define HS65_LS_DFPHQNX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX18_CP_PWL 0.01
`define HS65_LS_DFPHQNX18_CP_PWH 0.01

module HS65_LS_DFPHQNX18 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPHQNX18_CP_R_QN_R,`HS65_LS_DFPHQNX18_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LS_DFPHQNX18_CP_R_QN_R,`HS65_LS_DFPHQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQNX18_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQNX18_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQNX27_CP_R_QN_R 0.1
`define HS65_LS_DFPHQNX27_CP_R_QN_F 0.1
`define HS65_LS_DFPHQNX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX27_CP_PWL 0.01
`define HS65_LS_DFPHQNX27_CP_PWH 0.01

module HS65_LS_DFPHQNX27 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPHQNX27_CP_R_QN_R,`HS65_LS_DFPHQNX27_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LS_DFPHQNX27_CP_R_QN_R,`HS65_LS_DFPHQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQNX27_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQNX27_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQNX35_CP_R_QN_R 0.1
`define HS65_LS_DFPHQNX35_CP_R_QN_F 0.1
`define HS65_LS_DFPHQNX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX35_CP_PWL 0.01
`define HS65_LS_DFPHQNX35_CP_PWH 0.01

module HS65_LS_DFPHQNX35 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPHQNX35_CP_R_QN_R,`HS65_LS_DFPHQNX35_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LS_DFPHQNX35_CP_R_QN_R,`HS65_LS_DFPHQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQNX35_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQNX35_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQNX4_CP_R_QN_R 0.1
`define HS65_LS_DFPHQNX4_CP_R_QN_F 0.1
`define HS65_LS_DFPHQNX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX4_CP_PWL 0.01
`define HS65_LS_DFPHQNX4_CP_PWH 0.01

module HS65_LS_DFPHQNX4 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPHQNX4_CP_R_QN_R,`HS65_LS_DFPHQNX4_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LS_DFPHQNX4_CP_R_QN_R,`HS65_LS_DFPHQNX4_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQNX4_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQNX4_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQNX9_CP_R_QN_R 0.1
`define HS65_LS_DFPHQNX9_CP_R_QN_F 0.1
`define HS65_LS_DFPHQNX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQNX9_CP_PWL 0.01
`define HS65_LS_DFPHQNX9_CP_PWH 0.01

module HS65_LS_DFPHQNX9 (QN, D, E, CP);

	output QN;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (E)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPHQNX9_CP_R_QN_R,`HS65_LS_DFPHQNX9_CP_R_QN_F);
		if (!E)  (posedge CP => (QN -: IQ)) = (`HS65_LS_DFPHQNX9_CP_R_QN_R,`HS65_LS_DFPHQNX9_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQNX9_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQNX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQNX9_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQNX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQX18_CP_R_Q_R 0.1
`define HS65_LS_DFPHQX18_CP_R_Q_F 0.1
`define HS65_LS_DFPHQX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX18_CP_PWL 0.01
`define HS65_LS_DFPHQX18_CP_PWH 0.01

module HS65_LS_DFPHQX18 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPHQX18_CP_R_Q_R,`HS65_LS_DFPHQX18_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LS_DFPHQX18_CP_R_Q_R,`HS65_LS_DFPHQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQX18_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQX18_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQX27_CP_R_Q_R 0.1
`define HS65_LS_DFPHQX27_CP_R_Q_F 0.1
`define HS65_LS_DFPHQX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX27_CP_PWL 0.01
`define HS65_LS_DFPHQX27_CP_PWH 0.01

module HS65_LS_DFPHQX27 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPHQX27_CP_R_Q_R,`HS65_LS_DFPHQX27_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LS_DFPHQX27_CP_R_Q_R,`HS65_LS_DFPHQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQX27_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQX27_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQX35_CP_R_Q_R 0.1
`define HS65_LS_DFPHQX35_CP_R_Q_F 0.1
`define HS65_LS_DFPHQX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX35_CP_PWL 0.01
`define HS65_LS_DFPHQX35_CP_PWH 0.01

module HS65_LS_DFPHQX35 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPHQX35_CP_R_Q_R,`HS65_LS_DFPHQX35_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LS_DFPHQX35_CP_R_Q_R,`HS65_LS_DFPHQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQX35_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQX35_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQX4_CP_R_Q_R 0.1
`define HS65_LS_DFPHQX4_CP_R_Q_F 0.1
`define HS65_LS_DFPHQX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX4_CP_PWL 0.01
`define HS65_LS_DFPHQX4_CP_PWH 0.01

module HS65_LS_DFPHQX4 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPHQX4_CP_R_Q_R,`HS65_LS_DFPHQX4_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LS_DFPHQX4_CP_R_Q_R,`HS65_LS_DFPHQX4_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQX4_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQX4_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPHQX9_CP_R_Q_R 0.1
`define HS65_LS_DFPHQX9_CP_R_Q_F 0.1
`define HS65_LS_DFPHQX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPHQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPHQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPHQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPHQX9_CP_PWL 0.01
`define HS65_LS_DFPHQX9_CP_PWH 0.01

module HS65_LS_DFPHQX9 (Q, D, E, CP);

	output Q;
	input CP;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, D1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (E)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPHQX9_CP_R_Q_R,`HS65_LS_DFPHQX9_CP_R_Q_F);
		if (!E)  (posedge CP => (Q +: IQ)) = (`HS65_LS_DFPHQX9_CP_R_Q_R,`HS65_LS_DFPHQX9_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPHQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPHQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dE, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_DFPHQX9_E_CP_SETUP_posedge_posedge, `HS65_LS_DFPHQX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_DFPHQX9_E_CP_SETUP_negedge_posedge, `HS65_LS_DFPHQX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dE);
		$width(negedge CP &&& E, `HS65_LS_DFPHQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& E, `HS65_LS_DFPHQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPHQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQNX18_CP_R_QN_R 0.1
`define HS65_LS_DFPQNX18_CP_R_QN_F 0.1
`define HS65_LS_DFPQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQNX18_CP_PWL 0.01
`define HS65_LS_DFPQNX18_CP_PWH 0.01

module HS65_LS_DFPQNX18 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LS_DFPQNX18_CP_R_QN_R,`HS65_LS_DFPQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQNX27_CP_R_QN_R 0.1
`define HS65_LS_DFPQNX27_CP_R_QN_F 0.1
`define HS65_LS_DFPQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQNX27_CP_PWL 0.01
`define HS65_LS_DFPQNX27_CP_PWH 0.01

module HS65_LS_DFPQNX27 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LS_DFPQNX27_CP_R_QN_R,`HS65_LS_DFPQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQNX35_CP_R_QN_R 0.1
`define HS65_LS_DFPQNX35_CP_R_QN_F 0.1
`define HS65_LS_DFPQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQNX35_CP_PWL 0.01
`define HS65_LS_DFPQNX35_CP_PWH 0.01

module HS65_LS_DFPQNX35 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LS_DFPQNX35_CP_R_QN_R,`HS65_LS_DFPQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQNX4_CP_R_QN_R 0.1
`define HS65_LS_DFPQNX4_CP_R_QN_F 0.1
`define HS65_LS_DFPQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQNX4_CP_PWL 0.01
`define HS65_LS_DFPQNX4_CP_PWH 0.01

module HS65_LS_DFPQNX4 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LS_DFPQNX4_CP_R_QN_R,`HS65_LS_DFPQNX4_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQNX9_CP_R_QN_R 0.1
`define HS65_LS_DFPQNX9_CP_R_QN_F 0.1
`define HS65_LS_DFPQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQNX9_CP_PWL 0.01
`define HS65_LS_DFPQNX9_CP_PWH 0.01

module HS65_LS_DFPQNX9 (QN, D, CP);

	output QN;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		 (posedge CP => (QN -: D)) = (`HS65_LS_DFPQNX9_CP_R_QN_R,`HS65_LS_DFPQNX9_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQX18_CP_R_Q_R 0.1
`define HS65_LS_DFPQX18_CP_R_Q_F 0.1
`define HS65_LS_DFPQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQX18_CP_PWL 0.01
`define HS65_LS_DFPQX18_CP_PWH 0.01

module HS65_LS_DFPQX18 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LS_DFPQX18_CP_R_Q_R,`HS65_LS_DFPQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQX27_CP_R_Q_R 0.1
`define HS65_LS_DFPQX27_CP_R_Q_F 0.1
`define HS65_LS_DFPQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQX27_CP_PWL 0.01
`define HS65_LS_DFPQX27_CP_PWH 0.01

module HS65_LS_DFPQX27 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LS_DFPQX27_CP_R_Q_R,`HS65_LS_DFPQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQX35_CP_R_Q_R 0.1
`define HS65_LS_DFPQX35_CP_R_Q_F 0.1
`define HS65_LS_DFPQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQX35_CP_PWL 0.01
`define HS65_LS_DFPQX35_CP_PWH 0.01

module HS65_LS_DFPQX35 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LS_DFPQX35_CP_R_Q_R,`HS65_LS_DFPQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQX4_CP_R_Q_R 0.1
`define HS65_LS_DFPQX4_CP_R_Q_F 0.1
`define HS65_LS_DFPQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQX4_CP_PWL 0.01
`define HS65_LS_DFPQX4_CP_PWH 0.01

module HS65_LS_DFPQX4 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LS_DFPQX4_CP_R_Q_R,`HS65_LS_DFPQX4_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPQX9_CP_R_Q_R 0.1
`define HS65_LS_DFPQX9_CP_R_Q_F 0.1
`define HS65_LS_DFPQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPQX9_CP_PWL 0.01
`define HS65_LS_DFPQX9_CP_PWH 0.01

module HS65_LS_DFPQX9 (Q, D, CP);

	output Q;
	input D;
	input CP;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, D, CP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_NOTI   U1 (IQ, dD, dCP , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		 (posedge CP => (Q +: D)) = (`HS65_LS_DFPQX9_CP_R_Q_R,`HS65_LS_DFPQX9_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, , dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, , dCP, dD);
		$width(negedge CP, `HS65_LS_DFPQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_DFPQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQNX18_CP_R_QN_R 0.1
`define HS65_LS_DFPRQNX18_CP_R_QN_F 0.1
`define HS65_LS_DFPRQNX18_RN_F_QN_R 0.1
`define HS65_LS_DFPRQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQNX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQNX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQNX18_RN_PWL 0.01
`define HS65_LS_DFPRQNX18_CP_PWL 0.01
`define HS65_LS_DFPRQNX18_CP_PWH 0.01

module HS65_LS_DFPRQNX18 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPRQNX18_CP_R_QN_R,`HS65_LS_DFPRQNX18_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_DFPRQNX18_RN_F_QN_R,`HS65_LS_DFPRQNX18_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQNX18_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQNX18_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQNX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQNX27_CP_R_QN_R 0.1
`define HS65_LS_DFPRQNX27_CP_R_QN_F 0.1
`define HS65_LS_DFPRQNX27_RN_F_QN_R 0.1
`define HS65_LS_DFPRQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQNX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQNX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQNX27_RN_PWL 0.01
`define HS65_LS_DFPRQNX27_CP_PWL 0.01
`define HS65_LS_DFPRQNX27_CP_PWH 0.01

module HS65_LS_DFPRQNX27 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPRQNX27_CP_R_QN_R,`HS65_LS_DFPRQNX27_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_DFPRQNX27_RN_F_QN_R,`HS65_LS_DFPRQNX27_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQNX27_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQNX27_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQNX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQNX35_CP_R_QN_R 0.1
`define HS65_LS_DFPRQNX35_CP_R_QN_F 0.1
`define HS65_LS_DFPRQNX35_RN_F_QN_R 0.1
`define HS65_LS_DFPRQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQNX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQNX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQNX35_RN_PWL 0.01
`define HS65_LS_DFPRQNX35_CP_PWL 0.01
`define HS65_LS_DFPRQNX35_CP_PWH 0.01

module HS65_LS_DFPRQNX35 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPRQNX35_CP_R_QN_R,`HS65_LS_DFPRQNX35_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_DFPRQNX35_RN_F_QN_R,`HS65_LS_DFPRQNX35_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQNX35_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQNX35_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQNX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQNX4_CP_R_QN_R 0.1
`define HS65_LS_DFPRQNX4_CP_R_QN_F 0.1
`define HS65_LS_DFPRQNX4_RN_F_QN_R 0.1
`define HS65_LS_DFPRQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQNX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQNX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQNX4_RN_PWL 0.01
`define HS65_LS_DFPRQNX4_CP_PWL 0.01
`define HS65_LS_DFPRQNX4_CP_PWH 0.01

module HS65_LS_DFPRQNX4 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPRQNX4_CP_R_QN_R,`HS65_LS_DFPRQNX4_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_DFPRQNX4_RN_F_QN_R,`HS65_LS_DFPRQNX4_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQNX4_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQNX4_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQNX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQNX9_CP_R_QN_R 0.1
`define HS65_LS_DFPRQNX9_CP_R_QN_F 0.1
`define HS65_LS_DFPRQNX9_RN_F_QN_R 0.1
`define HS65_LS_DFPRQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQNX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQNX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQNX9_RN_PWL 0.01
`define HS65_LS_DFPRQNX9_CP_PWL 0.01
`define HS65_LS_DFPRQNX9_CP_PWH 0.01

module HS65_LS_DFPRQNX9 (QN, D, CP, RN);

	output QN;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (RN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPRQNX9_CP_R_QN_R,`HS65_LS_DFPRQNX9_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_DFPRQNX9_RN_F_QN_R,`HS65_LS_DFPRQNX9_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQNX9_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQNX9_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQNX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQX18_CP_R_Q_R 0.1
`define HS65_LS_DFPRQX18_CP_R_Q_F 0.1
`define HS65_LS_DFPRQX18_RN_F_Q_F 0.1
`define HS65_LS_DFPRQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQX18_RN_PWL 0.01
`define HS65_LS_DFPRQX18_CP_PWL 0.01
`define HS65_LS_DFPRQX18_CP_PWH 0.01

module HS65_LS_DFPRQX18 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPRQX18_CP_R_Q_R,`HS65_LS_DFPRQX18_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_DFPRQX18_RN_F_Q_F,`HS65_LS_DFPRQX18_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQX18_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQX18_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQX27_CP_R_Q_R 0.1
`define HS65_LS_DFPRQX27_CP_R_Q_F 0.1
`define HS65_LS_DFPRQX27_RN_F_Q_F 0.1
`define HS65_LS_DFPRQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQX27_RN_PWL 0.01
`define HS65_LS_DFPRQX27_CP_PWL 0.01
`define HS65_LS_DFPRQX27_CP_PWH 0.01

module HS65_LS_DFPRQX27 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPRQX27_CP_R_Q_R,`HS65_LS_DFPRQX27_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_DFPRQX27_RN_F_Q_F,`HS65_LS_DFPRQX27_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQX27_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQX27_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQX35_CP_R_Q_R 0.1
`define HS65_LS_DFPRQX35_CP_R_Q_F 0.1
`define HS65_LS_DFPRQX35_RN_F_Q_F 0.1
`define HS65_LS_DFPRQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQX35_RN_PWL 0.01
`define HS65_LS_DFPRQX35_CP_PWL 0.01
`define HS65_LS_DFPRQX35_CP_PWH 0.01

module HS65_LS_DFPRQX35 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPRQX35_CP_R_Q_R,`HS65_LS_DFPRQX35_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_DFPRQX35_RN_F_Q_F,`HS65_LS_DFPRQX35_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQX35_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQX35_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQX4_CP_R_Q_R 0.1
`define HS65_LS_DFPRQX4_CP_R_Q_F 0.1
`define HS65_LS_DFPRQX4_RN_F_Q_F 0.1
`define HS65_LS_DFPRQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQX4_RN_PWL 0.01
`define HS65_LS_DFPRQX4_CP_PWL 0.01
`define HS65_LS_DFPRQX4_CP_PWH 0.01

module HS65_LS_DFPRQX4 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPRQX4_CP_R_Q_R,`HS65_LS_DFPRQX4_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_DFPRQX4_RN_F_Q_F,`HS65_LS_DFPRQX4_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQX4_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQX4_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPRQX9_CP_R_Q_R 0.1
`define HS65_LS_DFPRQX9_CP_R_Q_F 0.1
`define HS65_LS_DFPRQX9_RN_F_Q_F 0.1
`define HS65_LS_DFPRQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPRQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPRQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPRQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPRQX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPRQX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPRQX9_RN_PWL 0.01
`define HS65_LS_DFPRQX9_CP_PWL 0.01
`define HS65_LS_DFPRQX9_CP_PWH 0.01

module HS65_LS_DFPRQX9 (Q, D, CP, RN);

	output Q;
	input D;
	input CP;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, D, CP, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_RN_NOTI   U1 (IQ, dD, dCP, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (RN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPRQX9_CP_R_Q_R,`HS65_LS_DFPRQX9_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_DFPRQX9_RN_F_Q_F,`HS65_LS_DFPRQX9_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPRQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPRQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPRQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPRQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dRN, dCP, dD);
		$recrem(posedge RN, posedge CP, `HS65_LS_DFPRQX9_RN_CP_REC_posedge_posedge, `HS65_LS_DFPRQX9_RN_CP_REM_posedge_posedge , NOTIFIER,, D, dRN, dCP);
		$width(negedge RN, `HS65_LS_DFPRQX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_DFPRQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_DFPRQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPRQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQNX18_CP_R_QN_R 0.1
`define HS65_LS_DFPSQNX18_CP_R_QN_F 0.1
`define HS65_LS_DFPSQNX18_SN_F_QN_F 0.1
`define HS65_LS_DFPSQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQNX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQNX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQNX18_SN_PWL 0.01
`define HS65_LS_DFPSQNX18_CP_PWL 0.01
`define HS65_LS_DFPSQNX18_CP_PWH 0.01

module HS65_LS_DFPSQNX18 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPSQNX18_CP_R_QN_R,`HS65_LS_DFPSQNX18_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_DFPSQNX18_SN_F_QN_F,`HS65_LS_DFPSQNX18_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQNX18_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQNX18_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQNX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQNX27_CP_R_QN_R 0.1
`define HS65_LS_DFPSQNX27_CP_R_QN_F 0.1
`define HS65_LS_DFPSQNX27_SN_F_QN_F 0.1
`define HS65_LS_DFPSQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQNX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQNX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQNX27_SN_PWL 0.01
`define HS65_LS_DFPSQNX27_CP_PWL 0.01
`define HS65_LS_DFPSQNX27_CP_PWH 0.01

module HS65_LS_DFPSQNX27 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPSQNX27_CP_R_QN_R,`HS65_LS_DFPSQNX27_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_DFPSQNX27_SN_F_QN_F,`HS65_LS_DFPSQNX27_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQNX27_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQNX27_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQNX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQNX35_CP_R_QN_R 0.1
`define HS65_LS_DFPSQNX35_CP_R_QN_F 0.1
`define HS65_LS_DFPSQNX35_SN_F_QN_F 0.1
`define HS65_LS_DFPSQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQNX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQNX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQNX35_SN_PWL 0.01
`define HS65_LS_DFPSQNX35_CP_PWL 0.01
`define HS65_LS_DFPSQNX35_CP_PWH 0.01

module HS65_LS_DFPSQNX35 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPSQNX35_CP_R_QN_R,`HS65_LS_DFPSQNX35_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_DFPSQNX35_SN_F_QN_F,`HS65_LS_DFPSQNX35_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQNX35_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQNX35_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQNX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQNX4_CP_R_QN_R 0.1
`define HS65_LS_DFPSQNX4_CP_R_QN_F 0.1
`define HS65_LS_DFPSQNX4_SN_F_QN_F 0.1
`define HS65_LS_DFPSQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQNX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQNX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQNX4_SN_PWL 0.01
`define HS65_LS_DFPSQNX4_CP_PWL 0.01
`define HS65_LS_DFPSQNX4_CP_PWH 0.01

module HS65_LS_DFPSQNX4 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPSQNX4_CP_R_QN_R,`HS65_LS_DFPSQNX4_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_DFPSQNX4_SN_F_QN_F,`HS65_LS_DFPSQNX4_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQNX4_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQNX4_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQNX4_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQNX9_CP_R_QN_R 0.1
`define HS65_LS_DFPSQNX9_CP_R_QN_F 0.1
`define HS65_LS_DFPSQNX9_SN_F_QN_F 0.1
`define HS65_LS_DFPSQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQNX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQNX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQNX9_SN_PWL 0.01
`define HS65_LS_DFPSQNX9_CP_PWL 0.01
`define HS65_LS_DFPSQNX9_CP_PWH 0.01

module HS65_LS_DFPSQNX9 (QN, D, CP, SN);

	output QN;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (QN -: D)) = (`HS65_LS_DFPSQNX9_CP_R_QN_R,`HS65_LS_DFPSQNX9_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_DFPSQNX9_SN_F_QN_F,`HS65_LS_DFPSQNX9_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQNX9_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQNX9_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQNX9_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQX18_CP_R_Q_R 0.1
`define HS65_LS_DFPSQX18_CP_R_Q_F 0.1
`define HS65_LS_DFPSQX18_SN_F_Q_R 0.1
`define HS65_LS_DFPSQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQX18_SN_PWL 0.01
`define HS65_LS_DFPSQX18_CP_PWL 0.01
`define HS65_LS_DFPSQX18_CP_PWH 0.01

module HS65_LS_DFPSQX18 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPSQX18_CP_R_Q_R,`HS65_LS_DFPSQX18_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_DFPSQX18_SN_F_Q_R,`HS65_LS_DFPSQX18_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQX18_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQX18_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQX27_CP_R_Q_R 0.1
`define HS65_LS_DFPSQX27_CP_R_Q_F 0.1
`define HS65_LS_DFPSQX27_SN_F_Q_R 0.1
`define HS65_LS_DFPSQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQX27_SN_PWL 0.01
`define HS65_LS_DFPSQX27_CP_PWL 0.01
`define HS65_LS_DFPSQX27_CP_PWH 0.01

module HS65_LS_DFPSQX27 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPSQX27_CP_R_Q_R,`HS65_LS_DFPSQX27_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_DFPSQX27_SN_F_Q_R,`HS65_LS_DFPSQX27_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQX27_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQX27_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQX35_CP_R_Q_R 0.1
`define HS65_LS_DFPSQX35_CP_R_Q_F 0.1
`define HS65_LS_DFPSQX35_SN_F_Q_R 0.1
`define HS65_LS_DFPSQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQX35_SN_PWL 0.01
`define HS65_LS_DFPSQX35_CP_PWL 0.01
`define HS65_LS_DFPSQX35_CP_PWH 0.01

module HS65_LS_DFPSQX35 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPSQX35_CP_R_Q_R,`HS65_LS_DFPSQX35_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_DFPSQX35_SN_F_Q_R,`HS65_LS_DFPSQX35_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQX35_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQX35_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQX4_CP_R_Q_R 0.1
`define HS65_LS_DFPSQX4_CP_R_Q_F 0.1
`define HS65_LS_DFPSQX4_SN_F_Q_R 0.1
`define HS65_LS_DFPSQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQX4_SN_PWL 0.01
`define HS65_LS_DFPSQX4_CP_PWL 0.01
`define HS65_LS_DFPSQX4_CP_PWH 0.01

module HS65_LS_DFPSQX4 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPSQX4_CP_R_Q_R,`HS65_LS_DFPSQX4_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_DFPSQX4_SN_F_Q_R,`HS65_LS_DFPSQX4_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQX4_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQX4_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQX4_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_DFPSQX9_CP_R_Q_R 0.1
`define HS65_LS_DFPSQX9_CP_R_Q_F 0.1
`define HS65_LS_DFPSQX9_SN_F_Q_R 0.1
`define HS65_LS_DFPSQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_DFPSQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_DFPSQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_DFPSQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_DFPSQX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_DFPSQX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_DFPSQX9_SN_PWL 0.01
`define HS65_LS_DFPSQX9_CP_PWL 0.01
`define HS65_LS_DFPSQX9_CP_PWH 0.01

module HS65_LS_DFPSQX9 (Q, D, CP, SN);

	output Q;
	input D;
	input CP;
	input SN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, D, CP, SN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_FD_P_SN_NOTI   U1 (IQ, dD, dCP, dSN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (DX, dD) ;

	specify

		if (SN)  (posedge CP => (Q +: D)) = (`HS65_LS_DFPSQX9_CP_R_Q_R,`HS65_LS_DFPSQX9_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_DFPSQX9_SN_F_Q_R,`HS65_LS_DFPSQX9_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_DFPSQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_DFPSQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_DFPSQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_DFPSQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, dSN, dCP, dD);
		$recrem(posedge SN, posedge CP, `HS65_LS_DFPSQX9_SN_CP_REC_posedge_posedge, `HS65_LS_DFPSQX9_SN_CP_REM_posedge_posedge , NOTIFIER,, DX, dSN, dCP);
		$width(negedge SN, `HS65_LS_DFPSQX9_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_DFPSQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_DFPSQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_DFPSQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_FA1X18_A0_R_CO_R_10 0.1
`define HS65_LS_FA1X18_A0_F_CO_F_10 0.1
`define HS65_LS_FA1X18_A0_R_CO_R_01 0.1
`define HS65_LS_FA1X18_A0_F_CO_F_01 0.1
`define HS65_LS_FA1X18_A0_R_S0_F_10 0.1
`define HS65_LS_FA1X18_A0_F_S0_R_10 0.1
`define HS65_LS_FA1X18_A0_R_S0_F_01 0.1
`define HS65_LS_FA1X18_A0_F_S0_R_01 0.1
`define HS65_LS_FA1X18_A0_R_S0_R_00 0.1
`define HS65_LS_FA1X18_A0_F_S0_F_00 0.1
`define HS65_LS_FA1X18_A0_R_S0_R_11 0.1
`define HS65_LS_FA1X18_A0_F_S0_F_11 0.1
`define HS65_LS_FA1X18_B0_R_CO_R_10 0.1
`define HS65_LS_FA1X18_B0_F_CO_F_10 0.1
`define HS65_LS_FA1X18_B0_R_CO_R_01 0.1
`define HS65_LS_FA1X18_B0_F_CO_F_01 0.1
`define HS65_LS_FA1X18_B0_R_S0_F_10 0.1
`define HS65_LS_FA1X18_B0_F_S0_R_10 0.1
`define HS65_LS_FA1X18_B0_R_S0_F_01 0.1
`define HS65_LS_FA1X18_B0_F_S0_R_01 0.1
`define HS65_LS_FA1X18_B0_R_S0_R_00 0.1
`define HS65_LS_FA1X18_B0_F_S0_F_00 0.1
`define HS65_LS_FA1X18_B0_R_S0_R_11 0.1
`define HS65_LS_FA1X18_B0_F_S0_F_11 0.1
`define HS65_LS_FA1X18_CI_R_CO_R_10 0.1
`define HS65_LS_FA1X18_CI_F_CO_F_10 0.1
`define HS65_LS_FA1X18_CI_R_CO_R_01 0.1
`define HS65_LS_FA1X18_CI_F_CO_F_01 0.1
`define HS65_LS_FA1X18_CI_R_S0_F_10 0.1
`define HS65_LS_FA1X18_CI_F_S0_R_10 0.1
`define HS65_LS_FA1X18_CI_R_S0_F_01 0.1
`define HS65_LS_FA1X18_CI_F_S0_R_01 0.1
`define HS65_LS_FA1X18_CI_R_S0_R_00 0.1
`define HS65_LS_FA1X18_CI_F_S0_F_00 0.1
`define HS65_LS_FA1X18_CI_R_S0_R_11 0.1
`define HS65_LS_FA1X18_CI_F_S0_F_11 0.1

module HS65_LS_FA1X18 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LS_FA1X18_A0_R_CO_R_10,`HS65_LS_FA1X18_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LS_FA1X18_A0_R_CO_R_01,`HS65_LS_FA1X18_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LS_FA1X18_A0_F_S0_R_10,`HS65_LS_FA1X18_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LS_FA1X18_A0_F_S0_R_01,`HS65_LS_FA1X18_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LS_FA1X18_A0_R_S0_R_00,`HS65_LS_FA1X18_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LS_FA1X18_A0_R_S0_R_11,`HS65_LS_FA1X18_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LS_FA1X18_B0_R_CO_R_10,`HS65_LS_FA1X18_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LS_FA1X18_B0_R_CO_R_01,`HS65_LS_FA1X18_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LS_FA1X18_B0_F_S0_R_10,`HS65_LS_FA1X18_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LS_FA1X18_B0_F_S0_R_01,`HS65_LS_FA1X18_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LS_FA1X18_B0_R_S0_R_00,`HS65_LS_FA1X18_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LS_FA1X18_B0_R_S0_R_11,`HS65_LS_FA1X18_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LS_FA1X18_CI_R_CO_R_10,`HS65_LS_FA1X18_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LS_FA1X18_CI_R_CO_R_01,`HS65_LS_FA1X18_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LS_FA1X18_CI_F_S0_R_10,`HS65_LS_FA1X18_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LS_FA1X18_CI_F_S0_R_01,`HS65_LS_FA1X18_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LS_FA1X18_CI_R_S0_R_00,`HS65_LS_FA1X18_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LS_FA1X18_CI_R_S0_R_11,`HS65_LS_FA1X18_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LS_FA1X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_FA1X27_A0_R_CO_R_10 0.1
`define HS65_LS_FA1X27_A0_F_CO_F_10 0.1
`define HS65_LS_FA1X27_A0_R_CO_R_01 0.1
`define HS65_LS_FA1X27_A0_F_CO_F_01 0.1
`define HS65_LS_FA1X27_A0_R_S0_F_10 0.1
`define HS65_LS_FA1X27_A0_F_S0_R_10 0.1
`define HS65_LS_FA1X27_A0_R_S0_F_01 0.1
`define HS65_LS_FA1X27_A0_F_S0_R_01 0.1
`define HS65_LS_FA1X27_A0_R_S0_R_00 0.1
`define HS65_LS_FA1X27_A0_F_S0_F_00 0.1
`define HS65_LS_FA1X27_A0_R_S0_R_11 0.1
`define HS65_LS_FA1X27_A0_F_S0_F_11 0.1
`define HS65_LS_FA1X27_B0_R_CO_R_10 0.1
`define HS65_LS_FA1X27_B0_F_CO_F_10 0.1
`define HS65_LS_FA1X27_B0_R_CO_R_01 0.1
`define HS65_LS_FA1X27_B0_F_CO_F_01 0.1
`define HS65_LS_FA1X27_B0_R_S0_F_10 0.1
`define HS65_LS_FA1X27_B0_F_S0_R_10 0.1
`define HS65_LS_FA1X27_B0_R_S0_F_01 0.1
`define HS65_LS_FA1X27_B0_F_S0_R_01 0.1
`define HS65_LS_FA1X27_B0_R_S0_R_00 0.1
`define HS65_LS_FA1X27_B0_F_S0_F_00 0.1
`define HS65_LS_FA1X27_B0_R_S0_R_11 0.1
`define HS65_LS_FA1X27_B0_F_S0_F_11 0.1
`define HS65_LS_FA1X27_CI_R_CO_R_10 0.1
`define HS65_LS_FA1X27_CI_F_CO_F_10 0.1
`define HS65_LS_FA1X27_CI_R_CO_R_01 0.1
`define HS65_LS_FA1X27_CI_F_CO_F_01 0.1
`define HS65_LS_FA1X27_CI_R_S0_F_10 0.1
`define HS65_LS_FA1X27_CI_F_S0_R_10 0.1
`define HS65_LS_FA1X27_CI_R_S0_F_01 0.1
`define HS65_LS_FA1X27_CI_F_S0_R_01 0.1
`define HS65_LS_FA1X27_CI_R_S0_R_00 0.1
`define HS65_LS_FA1X27_CI_F_S0_F_00 0.1
`define HS65_LS_FA1X27_CI_R_S0_R_11 0.1
`define HS65_LS_FA1X27_CI_F_S0_F_11 0.1

module HS65_LS_FA1X27 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LS_FA1X27_A0_R_CO_R_10,`HS65_LS_FA1X27_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LS_FA1X27_A0_R_CO_R_01,`HS65_LS_FA1X27_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LS_FA1X27_A0_F_S0_R_10,`HS65_LS_FA1X27_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LS_FA1X27_A0_F_S0_R_01,`HS65_LS_FA1X27_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LS_FA1X27_A0_R_S0_R_00,`HS65_LS_FA1X27_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LS_FA1X27_A0_R_S0_R_11,`HS65_LS_FA1X27_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LS_FA1X27_B0_R_CO_R_10,`HS65_LS_FA1X27_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LS_FA1X27_B0_R_CO_R_01,`HS65_LS_FA1X27_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LS_FA1X27_B0_F_S0_R_10,`HS65_LS_FA1X27_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LS_FA1X27_B0_F_S0_R_01,`HS65_LS_FA1X27_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LS_FA1X27_B0_R_S0_R_00,`HS65_LS_FA1X27_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LS_FA1X27_B0_R_S0_R_11,`HS65_LS_FA1X27_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LS_FA1X27_CI_R_CO_R_10,`HS65_LS_FA1X27_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LS_FA1X27_CI_R_CO_R_01,`HS65_LS_FA1X27_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LS_FA1X27_CI_F_S0_R_10,`HS65_LS_FA1X27_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LS_FA1X27_CI_F_S0_R_01,`HS65_LS_FA1X27_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LS_FA1X27_CI_R_S0_R_00,`HS65_LS_FA1X27_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LS_FA1X27_CI_R_S0_R_11,`HS65_LS_FA1X27_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LS_FA1X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_FA1X35_A0_R_CO_R_10 0.1
`define HS65_LS_FA1X35_A0_F_CO_F_10 0.1
`define HS65_LS_FA1X35_A0_R_CO_R_01 0.1
`define HS65_LS_FA1X35_A0_F_CO_F_01 0.1
`define HS65_LS_FA1X35_A0_R_S0_F_10 0.1
`define HS65_LS_FA1X35_A0_F_S0_R_10 0.1
`define HS65_LS_FA1X35_A0_R_S0_F_01 0.1
`define HS65_LS_FA1X35_A0_F_S0_R_01 0.1
`define HS65_LS_FA1X35_A0_R_S0_R_00 0.1
`define HS65_LS_FA1X35_A0_F_S0_F_00 0.1
`define HS65_LS_FA1X35_A0_R_S0_R_11 0.1
`define HS65_LS_FA1X35_A0_F_S0_F_11 0.1
`define HS65_LS_FA1X35_B0_R_CO_R_10 0.1
`define HS65_LS_FA1X35_B0_F_CO_F_10 0.1
`define HS65_LS_FA1X35_B0_R_CO_R_01 0.1
`define HS65_LS_FA1X35_B0_F_CO_F_01 0.1
`define HS65_LS_FA1X35_B0_R_S0_F_10 0.1
`define HS65_LS_FA1X35_B0_F_S0_R_10 0.1
`define HS65_LS_FA1X35_B0_R_S0_F_01 0.1
`define HS65_LS_FA1X35_B0_F_S0_R_01 0.1
`define HS65_LS_FA1X35_B0_R_S0_R_00 0.1
`define HS65_LS_FA1X35_B0_F_S0_F_00 0.1
`define HS65_LS_FA1X35_B0_R_S0_R_11 0.1
`define HS65_LS_FA1X35_B0_F_S0_F_11 0.1
`define HS65_LS_FA1X35_CI_R_CO_R_10 0.1
`define HS65_LS_FA1X35_CI_F_CO_F_10 0.1
`define HS65_LS_FA1X35_CI_R_CO_R_01 0.1
`define HS65_LS_FA1X35_CI_F_CO_F_01 0.1
`define HS65_LS_FA1X35_CI_R_S0_F_10 0.1
`define HS65_LS_FA1X35_CI_F_S0_R_10 0.1
`define HS65_LS_FA1X35_CI_R_S0_F_01 0.1
`define HS65_LS_FA1X35_CI_F_S0_R_01 0.1
`define HS65_LS_FA1X35_CI_R_S0_R_00 0.1
`define HS65_LS_FA1X35_CI_F_S0_F_00 0.1
`define HS65_LS_FA1X35_CI_R_S0_R_11 0.1
`define HS65_LS_FA1X35_CI_F_S0_F_11 0.1

module HS65_LS_FA1X35 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LS_FA1X35_A0_R_CO_R_10,`HS65_LS_FA1X35_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LS_FA1X35_A0_R_CO_R_01,`HS65_LS_FA1X35_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LS_FA1X35_A0_F_S0_R_10,`HS65_LS_FA1X35_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LS_FA1X35_A0_F_S0_R_01,`HS65_LS_FA1X35_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LS_FA1X35_A0_R_S0_R_00,`HS65_LS_FA1X35_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LS_FA1X35_A0_R_S0_R_11,`HS65_LS_FA1X35_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LS_FA1X35_B0_R_CO_R_10,`HS65_LS_FA1X35_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LS_FA1X35_B0_R_CO_R_01,`HS65_LS_FA1X35_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LS_FA1X35_B0_F_S0_R_10,`HS65_LS_FA1X35_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LS_FA1X35_B0_F_S0_R_01,`HS65_LS_FA1X35_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LS_FA1X35_B0_R_S0_R_00,`HS65_LS_FA1X35_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LS_FA1X35_B0_R_S0_R_11,`HS65_LS_FA1X35_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LS_FA1X35_CI_R_CO_R_10,`HS65_LS_FA1X35_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LS_FA1X35_CI_R_CO_R_01,`HS65_LS_FA1X35_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LS_FA1X35_CI_F_S0_R_10,`HS65_LS_FA1X35_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LS_FA1X35_CI_F_S0_R_01,`HS65_LS_FA1X35_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LS_FA1X35_CI_R_S0_R_00,`HS65_LS_FA1X35_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LS_FA1X35_CI_R_S0_R_11,`HS65_LS_FA1X35_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LS_FA1X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_FA1X4_A0_R_CO_R_10 0.1
`define HS65_LS_FA1X4_A0_F_CO_F_10 0.1
`define HS65_LS_FA1X4_A0_R_CO_R_01 0.1
`define HS65_LS_FA1X4_A0_F_CO_F_01 0.1
`define HS65_LS_FA1X4_A0_R_S0_F_10 0.1
`define HS65_LS_FA1X4_A0_F_S0_R_10 0.1
`define HS65_LS_FA1X4_A0_R_S0_F_01 0.1
`define HS65_LS_FA1X4_A0_F_S0_R_01 0.1
`define HS65_LS_FA1X4_A0_R_S0_R_00 0.1
`define HS65_LS_FA1X4_A0_F_S0_F_00 0.1
`define HS65_LS_FA1X4_A0_R_S0_R_11 0.1
`define HS65_LS_FA1X4_A0_F_S0_F_11 0.1
`define HS65_LS_FA1X4_B0_R_CO_R_10 0.1
`define HS65_LS_FA1X4_B0_F_CO_F_10 0.1
`define HS65_LS_FA1X4_B0_R_CO_R_01 0.1
`define HS65_LS_FA1X4_B0_F_CO_F_01 0.1
`define HS65_LS_FA1X4_B0_R_S0_F_10 0.1
`define HS65_LS_FA1X4_B0_F_S0_R_10 0.1
`define HS65_LS_FA1X4_B0_R_S0_F_01 0.1
`define HS65_LS_FA1X4_B0_F_S0_R_01 0.1
`define HS65_LS_FA1X4_B0_R_S0_R_00 0.1
`define HS65_LS_FA1X4_B0_F_S0_F_00 0.1
`define HS65_LS_FA1X4_B0_R_S0_R_11 0.1
`define HS65_LS_FA1X4_B0_F_S0_F_11 0.1
`define HS65_LS_FA1X4_CI_R_CO_R_10 0.1
`define HS65_LS_FA1X4_CI_F_CO_F_10 0.1
`define HS65_LS_FA1X4_CI_R_CO_R_01 0.1
`define HS65_LS_FA1X4_CI_F_CO_F_01 0.1
`define HS65_LS_FA1X4_CI_R_S0_F_10 0.1
`define HS65_LS_FA1X4_CI_F_S0_R_10 0.1
`define HS65_LS_FA1X4_CI_R_S0_F_01 0.1
`define HS65_LS_FA1X4_CI_F_S0_R_01 0.1
`define HS65_LS_FA1X4_CI_R_S0_R_00 0.1
`define HS65_LS_FA1X4_CI_F_S0_F_00 0.1
`define HS65_LS_FA1X4_CI_R_S0_R_11 0.1
`define HS65_LS_FA1X4_CI_F_S0_F_11 0.1

module HS65_LS_FA1X4 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LS_FA1X4_A0_R_CO_R_10,`HS65_LS_FA1X4_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LS_FA1X4_A0_R_CO_R_01,`HS65_LS_FA1X4_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LS_FA1X4_A0_F_S0_R_10,`HS65_LS_FA1X4_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LS_FA1X4_A0_F_S0_R_01,`HS65_LS_FA1X4_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LS_FA1X4_A0_R_S0_R_00,`HS65_LS_FA1X4_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LS_FA1X4_A0_R_S0_R_11,`HS65_LS_FA1X4_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LS_FA1X4_B0_R_CO_R_10,`HS65_LS_FA1X4_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LS_FA1X4_B0_R_CO_R_01,`HS65_LS_FA1X4_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LS_FA1X4_B0_F_S0_R_10,`HS65_LS_FA1X4_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LS_FA1X4_B0_F_S0_R_01,`HS65_LS_FA1X4_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LS_FA1X4_B0_R_S0_R_00,`HS65_LS_FA1X4_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LS_FA1X4_B0_R_S0_R_11,`HS65_LS_FA1X4_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LS_FA1X4_CI_R_CO_R_10,`HS65_LS_FA1X4_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LS_FA1X4_CI_R_CO_R_01,`HS65_LS_FA1X4_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LS_FA1X4_CI_F_S0_R_10,`HS65_LS_FA1X4_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LS_FA1X4_CI_F_S0_R_01,`HS65_LS_FA1X4_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LS_FA1X4_CI_R_S0_R_00,`HS65_LS_FA1X4_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LS_FA1X4_CI_R_S0_R_11,`HS65_LS_FA1X4_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LS_FA1X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_FA1X9_A0_R_CO_R_10 0.1
`define HS65_LS_FA1X9_A0_F_CO_F_10 0.1
`define HS65_LS_FA1X9_A0_R_CO_R_01 0.1
`define HS65_LS_FA1X9_A0_F_CO_F_01 0.1
`define HS65_LS_FA1X9_A0_R_S0_F_10 0.1
`define HS65_LS_FA1X9_A0_F_S0_R_10 0.1
`define HS65_LS_FA1X9_A0_R_S0_F_01 0.1
`define HS65_LS_FA1X9_A0_F_S0_R_01 0.1
`define HS65_LS_FA1X9_A0_R_S0_R_00 0.1
`define HS65_LS_FA1X9_A0_F_S0_F_00 0.1
`define HS65_LS_FA1X9_A0_R_S0_R_11 0.1
`define HS65_LS_FA1X9_A0_F_S0_F_11 0.1
`define HS65_LS_FA1X9_B0_R_CO_R_10 0.1
`define HS65_LS_FA1X9_B0_F_CO_F_10 0.1
`define HS65_LS_FA1X9_B0_R_CO_R_01 0.1
`define HS65_LS_FA1X9_B0_F_CO_F_01 0.1
`define HS65_LS_FA1X9_B0_R_S0_F_10 0.1
`define HS65_LS_FA1X9_B0_F_S0_R_10 0.1
`define HS65_LS_FA1X9_B0_R_S0_F_01 0.1
`define HS65_LS_FA1X9_B0_F_S0_R_01 0.1
`define HS65_LS_FA1X9_B0_R_S0_R_00 0.1
`define HS65_LS_FA1X9_B0_F_S0_F_00 0.1
`define HS65_LS_FA1X9_B0_R_S0_R_11 0.1
`define HS65_LS_FA1X9_B0_F_S0_F_11 0.1
`define HS65_LS_FA1X9_CI_R_CO_R_10 0.1
`define HS65_LS_FA1X9_CI_F_CO_F_10 0.1
`define HS65_LS_FA1X9_CI_R_CO_R_01 0.1
`define HS65_LS_FA1X9_CI_F_CO_F_01 0.1
`define HS65_LS_FA1X9_CI_R_S0_F_10 0.1
`define HS65_LS_FA1X9_CI_F_S0_R_10 0.1
`define HS65_LS_FA1X9_CI_R_S0_F_01 0.1
`define HS65_LS_FA1X9_CI_F_S0_R_01 0.1
`define HS65_LS_FA1X9_CI_R_S0_R_00 0.1
`define HS65_LS_FA1X9_CI_F_S0_F_00 0.1
`define HS65_LS_FA1X9_CI_R_S0_R_11 0.1
`define HS65_LS_FA1X9_CI_F_S0_F_11 0.1

module HS65_LS_FA1X9 (S0, CO, A0, B0, CI);

	output S0;
	output CO;
	input A0;
	input B0;
	input CI;

	xor   #1 U1 (S0, A0, B0, CI) ;
	or    U2 (INTERNAL2, A0, B0) ;
	and    U3 (INTERNAL1, INTERNAL2, CI) ;
	and    U4 (INTERNAL3, A0, B0) ;
	or   #1 U5 (CO, INTERNAL1, INTERNAL3) ;



	specify

		if (B0 && !CI) (A0 +=> CO) = (`HS65_LS_FA1X9_A0_R_CO_R_10,`HS65_LS_FA1X9_A0_F_CO_F_10);
		if (!B0 && CI) (A0 +=> CO) = (`HS65_LS_FA1X9_A0_R_CO_R_01,`HS65_LS_FA1X9_A0_F_CO_F_01);
		if (B0 && !CI) (A0 -=> S0) = (`HS65_LS_FA1X9_A0_F_S0_R_10,`HS65_LS_FA1X9_A0_R_S0_F_10);
		if (!B0 && CI) (A0 -=> S0) = (`HS65_LS_FA1X9_A0_F_S0_R_01,`HS65_LS_FA1X9_A0_R_S0_F_01);
		if (!B0 && !CI) (A0 +=> S0) = (`HS65_LS_FA1X9_A0_R_S0_R_00,`HS65_LS_FA1X9_A0_F_S0_F_00);
		if (B0 && CI) (A0 +=> S0) = (`HS65_LS_FA1X9_A0_R_S0_R_11,`HS65_LS_FA1X9_A0_F_S0_F_11);
		if (A0 && !CI) (B0 +=> CO) = (`HS65_LS_FA1X9_B0_R_CO_R_10,`HS65_LS_FA1X9_B0_F_CO_F_10);
		if (!A0 && CI) (B0 +=> CO) = (`HS65_LS_FA1X9_B0_R_CO_R_01,`HS65_LS_FA1X9_B0_F_CO_F_01);
		if (A0 && !CI) (B0 -=> S0) = (`HS65_LS_FA1X9_B0_F_S0_R_10,`HS65_LS_FA1X9_B0_R_S0_F_10);
		if (!A0 && CI) (B0 -=> S0) = (`HS65_LS_FA1X9_B0_F_S0_R_01,`HS65_LS_FA1X9_B0_R_S0_F_01);
		if (!A0 && !CI) (B0 +=> S0) = (`HS65_LS_FA1X9_B0_R_S0_R_00,`HS65_LS_FA1X9_B0_F_S0_F_00);
		if (A0 && CI) (B0 +=> S0) = (`HS65_LS_FA1X9_B0_R_S0_R_11,`HS65_LS_FA1X9_B0_F_S0_F_11);
		if (A0 && !B0) (CI +=> CO) = (`HS65_LS_FA1X9_CI_R_CO_R_10,`HS65_LS_FA1X9_CI_F_CO_F_10);
		if (!A0 && B0) (CI +=> CO) = (`HS65_LS_FA1X9_CI_R_CO_R_01,`HS65_LS_FA1X9_CI_F_CO_F_01);
		if (A0 && !B0) (CI -=> S0) = (`HS65_LS_FA1X9_CI_F_S0_R_10,`HS65_LS_FA1X9_CI_R_S0_F_10);
		if (!A0 && B0) (CI -=> S0) = (`HS65_LS_FA1X9_CI_F_S0_R_01,`HS65_LS_FA1X9_CI_R_S0_F_01);
		if (!A0 && !B0) (CI +=> S0) = (`HS65_LS_FA1X9_CI_R_S0_R_00,`HS65_LS_FA1X9_CI_F_S0_F_00);
		if (A0 && B0) (CI +=> S0) = (`HS65_LS_FA1X9_CI_R_S0_R_11,`HS65_LS_FA1X9_CI_F_S0_F_11);


	endspecify

endmodule // HS65_LS_FA1X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_HA1X18_A0_R_CO_R_1 0.1
`define HS65_LS_HA1X18_A0_F_CO_F_1 0.1
`define HS65_LS_HA1X18_A0_R_S0_F_1 0.1
`define HS65_LS_HA1X18_A0_F_S0_R_1 0.1
`define HS65_LS_HA1X18_A0_R_S0_R_0 0.1
`define HS65_LS_HA1X18_A0_F_S0_F_0 0.1
`define HS65_LS_HA1X18_B0_R_CO_R_1 0.1
`define HS65_LS_HA1X18_B0_F_CO_F_1 0.1
`define HS65_LS_HA1X18_B0_R_S0_F_1 0.1
`define HS65_LS_HA1X18_B0_F_S0_R_1 0.1
`define HS65_LS_HA1X18_B0_R_S0_R_0 0.1
`define HS65_LS_HA1X18_B0_F_S0_F_0 0.1

module HS65_LS_HA1X18 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LS_HA1X18_A0_R_CO_R_1,`HS65_LS_HA1X18_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LS_HA1X18_A0_F_S0_R_1,`HS65_LS_HA1X18_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LS_HA1X18_A0_R_S0_R_0,`HS65_LS_HA1X18_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LS_HA1X18_B0_R_CO_R_1,`HS65_LS_HA1X18_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LS_HA1X18_B0_F_S0_R_1,`HS65_LS_HA1X18_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LS_HA1X18_B0_R_S0_R_0,`HS65_LS_HA1X18_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LS_HA1X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_HA1X27_A0_R_CO_R_1 0.1
`define HS65_LS_HA1X27_A0_F_CO_F_1 0.1
`define HS65_LS_HA1X27_A0_R_S0_F_1 0.1
`define HS65_LS_HA1X27_A0_F_S0_R_1 0.1
`define HS65_LS_HA1X27_A0_R_S0_R_0 0.1
`define HS65_LS_HA1X27_A0_F_S0_F_0 0.1
`define HS65_LS_HA1X27_B0_R_CO_R_1 0.1
`define HS65_LS_HA1X27_B0_F_CO_F_1 0.1
`define HS65_LS_HA1X27_B0_R_S0_F_1 0.1
`define HS65_LS_HA1X27_B0_F_S0_R_1 0.1
`define HS65_LS_HA1X27_B0_R_S0_R_0 0.1
`define HS65_LS_HA1X27_B0_F_S0_F_0 0.1

module HS65_LS_HA1X27 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LS_HA1X27_A0_R_CO_R_1,`HS65_LS_HA1X27_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LS_HA1X27_A0_F_S0_R_1,`HS65_LS_HA1X27_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LS_HA1X27_A0_R_S0_R_0,`HS65_LS_HA1X27_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LS_HA1X27_B0_R_CO_R_1,`HS65_LS_HA1X27_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LS_HA1X27_B0_F_S0_R_1,`HS65_LS_HA1X27_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LS_HA1X27_B0_R_S0_R_0,`HS65_LS_HA1X27_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LS_HA1X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_HA1X35_A0_R_CO_R_1 0.1
`define HS65_LS_HA1X35_A0_F_CO_F_1 0.1
`define HS65_LS_HA1X35_A0_R_S0_F_1 0.1
`define HS65_LS_HA1X35_A0_F_S0_R_1 0.1
`define HS65_LS_HA1X35_A0_R_S0_R_0 0.1
`define HS65_LS_HA1X35_A0_F_S0_F_0 0.1
`define HS65_LS_HA1X35_B0_R_CO_R_1 0.1
`define HS65_LS_HA1X35_B0_F_CO_F_1 0.1
`define HS65_LS_HA1X35_B0_R_S0_F_1 0.1
`define HS65_LS_HA1X35_B0_F_S0_R_1 0.1
`define HS65_LS_HA1X35_B0_R_S0_R_0 0.1
`define HS65_LS_HA1X35_B0_F_S0_F_0 0.1

module HS65_LS_HA1X35 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LS_HA1X35_A0_R_CO_R_1,`HS65_LS_HA1X35_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LS_HA1X35_A0_F_S0_R_1,`HS65_LS_HA1X35_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LS_HA1X35_A0_R_S0_R_0,`HS65_LS_HA1X35_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LS_HA1X35_B0_R_CO_R_1,`HS65_LS_HA1X35_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LS_HA1X35_B0_F_S0_R_1,`HS65_LS_HA1X35_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LS_HA1X35_B0_R_S0_R_0,`HS65_LS_HA1X35_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LS_HA1X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_HA1X4_A0_R_CO_R_1 0.1
`define HS65_LS_HA1X4_A0_F_CO_F_1 0.1
`define HS65_LS_HA1X4_A0_R_S0_F_1 0.1
`define HS65_LS_HA1X4_A0_F_S0_R_1 0.1
`define HS65_LS_HA1X4_A0_R_S0_R_0 0.1
`define HS65_LS_HA1X4_A0_F_S0_F_0 0.1
`define HS65_LS_HA1X4_B0_R_CO_R_1 0.1
`define HS65_LS_HA1X4_B0_F_CO_F_1 0.1
`define HS65_LS_HA1X4_B0_R_S0_F_1 0.1
`define HS65_LS_HA1X4_B0_F_S0_R_1 0.1
`define HS65_LS_HA1X4_B0_R_S0_R_0 0.1
`define HS65_LS_HA1X4_B0_F_S0_F_0 0.1

module HS65_LS_HA1X4 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LS_HA1X4_A0_R_CO_R_1,`HS65_LS_HA1X4_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LS_HA1X4_A0_F_S0_R_1,`HS65_LS_HA1X4_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LS_HA1X4_A0_R_S0_R_0,`HS65_LS_HA1X4_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LS_HA1X4_B0_R_CO_R_1,`HS65_LS_HA1X4_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LS_HA1X4_B0_F_S0_R_1,`HS65_LS_HA1X4_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LS_HA1X4_B0_R_S0_R_0,`HS65_LS_HA1X4_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LS_HA1X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_HA1X9_A0_R_CO_R_1 0.1
`define HS65_LS_HA1X9_A0_F_CO_F_1 0.1
`define HS65_LS_HA1X9_A0_R_S0_F_1 0.1
`define HS65_LS_HA1X9_A0_F_S0_R_1 0.1
`define HS65_LS_HA1X9_A0_R_S0_R_0 0.1
`define HS65_LS_HA1X9_A0_F_S0_F_0 0.1
`define HS65_LS_HA1X9_B0_R_CO_R_1 0.1
`define HS65_LS_HA1X9_B0_F_CO_F_1 0.1
`define HS65_LS_HA1X9_B0_R_S0_F_1 0.1
`define HS65_LS_HA1X9_B0_F_S0_R_1 0.1
`define HS65_LS_HA1X9_B0_R_S0_R_0 0.1
`define HS65_LS_HA1X9_B0_F_S0_F_0 0.1

module HS65_LS_HA1X9 (S0, CO, A0, B0);

	output S0;
	output CO;
	input A0;
	input B0;

	xor   #1 U1 (S0, A0, B0) ;
	and   #1 U2 (CO, A0, B0) ;



	specify

		(A0 +=> CO) = (`HS65_LS_HA1X9_A0_R_CO_R_1,`HS65_LS_HA1X9_A0_F_CO_F_1);
		if (B0) (A0 -=> S0) = (`HS65_LS_HA1X9_A0_F_S0_R_1,`HS65_LS_HA1X9_A0_R_S0_F_1);
		if (!B0) (A0 +=> S0) = (`HS65_LS_HA1X9_A0_R_S0_R_0,`HS65_LS_HA1X9_A0_F_S0_F_0);
		(B0 +=> CO) = (`HS65_LS_HA1X9_B0_R_CO_R_1,`HS65_LS_HA1X9_B0_F_CO_F_1);
		if (A0) (B0 -=> S0) = (`HS65_LS_HA1X9_B0_F_S0_R_1,`HS65_LS_HA1X9_B0_R_S0_F_1);
		if (!A0) (B0 +=> S0) = (`HS65_LS_HA1X9_B0_R_S0_R_0,`HS65_LS_HA1X9_B0_F_S0_F_0);


	endspecify

endmodule // HS65_LS_HA1X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_ITHX10_A_R_Z_F_1 0.1
`define HS65_LS_ITHX10_A_F_Z_R_1 0.1
`define HS65_LS_ITHX10_E_R_Z_ZL_1 0.1
`define HS65_LS_ITHX10_E_R_Z_ZH_0 0.1
`define HS65_LS_ITHX10_E_F_Z_LZ_1 0.1
`define HS65_LS_ITHX10_E_F_Z_HZ_0 0.1

module HS65_LS_ITHX10 (Z, A, E);

	output Z;
	input A;
	input E;

	notif1   #1 U1 (Z, A, E) ;



	specify

		(A -=> Z) = (`HS65_LS_ITHX10_A_F_Z_R_1,`HS65_LS_ITHX10_A_R_Z_F_1);
		(E => Z) = (`HS65_LS_ITHX10_E_F_Z_LZ_1,`HS65_LS_ITHX10_E_F_Z_HZ_0,`HS65_LS_ITHX10_E_F_Z_LZ_1,`HS65_LS_ITHX10_E_R_Z_ZH_0,`HS65_LS_ITHX10_E_F_Z_HZ_0,`HS65_LS_ITHX10_E_R_Z_ZL_1);


	endspecify

endmodule // HS65_LS_ITHX10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_ITHX15_A_R_Z_F_1 0.1
`define HS65_LS_ITHX15_A_F_Z_R_1 0.1
`define HS65_LS_ITHX15_E_R_Z_ZL_1 0.1
`define HS65_LS_ITHX15_E_R_Z_ZH_0 0.1
`define HS65_LS_ITHX15_E_F_Z_LZ_1 0.1
`define HS65_LS_ITHX15_E_F_Z_HZ_0 0.1

module HS65_LS_ITHX15 (Z, A, E);

	output Z;
	input A;
	input E;

	notif1   #1 U1 (Z, A, E) ;



	specify

		(A -=> Z) = (`HS65_LS_ITHX15_A_F_Z_R_1,`HS65_LS_ITHX15_A_R_Z_F_1);
		(E => Z) = (`HS65_LS_ITHX15_E_F_Z_LZ_1,`HS65_LS_ITHX15_E_F_Z_HZ_0,`HS65_LS_ITHX15_E_F_Z_LZ_1,`HS65_LS_ITHX15_E_R_Z_ZH_0,`HS65_LS_ITHX15_E_F_Z_HZ_0,`HS65_LS_ITHX15_E_R_Z_ZL_1);


	endspecify

endmodule // HS65_LS_ITHX15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_ITHX20_A_R_Z_F_1 0.1
`define HS65_LS_ITHX20_A_F_Z_R_1 0.1
`define HS65_LS_ITHX20_E_R_Z_ZL_1 0.1
`define HS65_LS_ITHX20_E_R_Z_ZH_0 0.1
`define HS65_LS_ITHX20_E_F_Z_LZ_1 0.1
`define HS65_LS_ITHX20_E_F_Z_HZ_0 0.1

module HS65_LS_ITHX20 (Z, A, E);

	output Z;
	input A;
	input E;

	notif1   #1 U1 (Z, A, E) ;



	specify

		(A -=> Z) = (`HS65_LS_ITHX20_A_F_Z_R_1,`HS65_LS_ITHX20_A_R_Z_F_1);
		(E => Z) = (`HS65_LS_ITHX20_E_F_Z_LZ_1,`HS65_LS_ITHX20_E_F_Z_HZ_0,`HS65_LS_ITHX20_E_F_Z_LZ_1,`HS65_LS_ITHX20_E_R_Z_ZH_0,`HS65_LS_ITHX20_E_F_Z_HZ_0,`HS65_LS_ITHX20_E_R_Z_ZL_1);


	endspecify

endmodule // HS65_LS_ITHX20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_ITHX25_A_R_Z_F_1 0.1
`define HS65_LS_ITHX25_A_F_Z_R_1 0.1
`define HS65_LS_ITHX25_E_R_Z_ZL_1 0.1
`define HS65_LS_ITHX25_E_R_Z_ZH_0 0.1
`define HS65_LS_ITHX25_E_F_Z_LZ_1 0.1
`define HS65_LS_ITHX25_E_F_Z_HZ_0 0.1

module HS65_LS_ITHX25 (Z, A, E);

	output Z;
	input A;
	input E;

	notif1   #1 U1 (Z, A, E) ;



	specify

		(A -=> Z) = (`HS65_LS_ITHX25_A_F_Z_R_1,`HS65_LS_ITHX25_A_R_Z_F_1);
		(E => Z) = (`HS65_LS_ITHX25_E_F_Z_LZ_1,`HS65_LS_ITHX25_E_F_Z_HZ_0,`HS65_LS_ITHX25_E_F_Z_LZ_1,`HS65_LS_ITHX25_E_R_Z_ZH_0,`HS65_LS_ITHX25_E_F_Z_HZ_0,`HS65_LS_ITHX25_E_R_Z_ZL_1);


	endspecify

endmodule // HS65_LS_ITHX25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_ITHX30_A_R_Z_F_1 0.1
`define HS65_LS_ITHX30_A_F_Z_R_1 0.1
`define HS65_LS_ITHX30_E_R_Z_ZL_1 0.1
`define HS65_LS_ITHX30_E_R_Z_ZH_0 0.1
`define HS65_LS_ITHX30_E_F_Z_LZ_1 0.1
`define HS65_LS_ITHX30_E_F_Z_HZ_0 0.1

module HS65_LS_ITHX30 (Z, A, E);

	output Z;
	input A;
	input E;

	notif1   #1 U1 (Z, A, E) ;



	specify

		(A -=> Z) = (`HS65_LS_ITHX30_A_F_Z_R_1,`HS65_LS_ITHX30_A_R_Z_F_1);
		(E => Z) = (`HS65_LS_ITHX30_E_F_Z_LZ_1,`HS65_LS_ITHX30_E_F_Z_HZ_0,`HS65_LS_ITHX30_E_F_Z_LZ_1,`HS65_LS_ITHX30_E_R_Z_ZH_0,`HS65_LS_ITHX30_E_F_Z_HZ_0,`HS65_LS_ITHX30_E_R_Z_ZL_1);


	endspecify

endmodule // HS65_LS_ITHX30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX106_A_R_Z_F 0.1
`define HS65_LS_IVX106_A_F_Z_R 0.1

module HS65_LS_IVX106 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX106_A_F_Z_R,`HS65_LS_IVX106_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX106

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX13_A_R_Z_F 0.1
`define HS65_LS_IVX13_A_F_Z_R 0.1

module HS65_LS_IVX13 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX13_A_F_Z_R,`HS65_LS_IVX13_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX142_A_R_Z_F 0.1
`define HS65_LS_IVX142_A_F_Z_R 0.1

module HS65_LS_IVX142 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX142_A_F_Z_R,`HS65_LS_IVX142_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX142

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX18_A_R_Z_F 0.1
`define HS65_LS_IVX18_A_F_Z_R 0.1

module HS65_LS_IVX18 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX18_A_F_Z_R,`HS65_LS_IVX18_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX2_A_R_Z_F 0.1
`define HS65_LS_IVX2_A_F_Z_R 0.1

module HS65_LS_IVX2 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX2_A_F_Z_R,`HS65_LS_IVX2_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX213_A_R_Z_F 0.1
`define HS65_LS_IVX213_A_F_Z_R 0.1

module HS65_LS_IVX213 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX213_A_F_Z_R,`HS65_LS_IVX213_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX213

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX22_A_R_Z_F 0.1
`define HS65_LS_IVX22_A_F_Z_R 0.1

module HS65_LS_IVX22 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX22_A_F_Z_R,`HS65_LS_IVX22_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX27_A_R_Z_F 0.1
`define HS65_LS_IVX27_A_F_Z_R 0.1

module HS65_LS_IVX27 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX27_A_F_Z_R,`HS65_LS_IVX27_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX284_A_R_Z_F 0.1
`define HS65_LS_IVX284_A_F_Z_R 0.1

module HS65_LS_IVX284 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX284_A_F_Z_R,`HS65_LS_IVX284_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX284

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX31_A_R_Z_F 0.1
`define HS65_LS_IVX31_A_F_Z_R 0.1

module HS65_LS_IVX31 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX31_A_F_Z_R,`HS65_LS_IVX31_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX31

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX35_A_R_Z_F 0.1
`define HS65_LS_IVX35_A_F_Z_R 0.1

module HS65_LS_IVX35 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX35_A_F_Z_R,`HS65_LS_IVX35_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX4_A_R_Z_F 0.1
`define HS65_LS_IVX4_A_F_Z_R 0.1

module HS65_LS_IVX4 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX4_A_F_Z_R,`HS65_LS_IVX4_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX40_A_R_Z_F 0.1
`define HS65_LS_IVX40_A_F_Z_R 0.1

module HS65_LS_IVX40 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX40_A_F_Z_R,`HS65_LS_IVX40_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX40

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX44_A_R_Z_F 0.1
`define HS65_LS_IVX44_A_F_Z_R 0.1

module HS65_LS_IVX44 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX44_A_F_Z_R,`HS65_LS_IVX44_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX49_A_R_Z_F 0.1
`define HS65_LS_IVX49_A_F_Z_R 0.1

module HS65_LS_IVX49 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX49_A_F_Z_R,`HS65_LS_IVX49_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX49

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX53_A_R_Z_F 0.1
`define HS65_LS_IVX53_A_F_Z_R 0.1

module HS65_LS_IVX53 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX53_A_F_Z_R,`HS65_LS_IVX53_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX53

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX62_A_R_Z_F 0.1
`define HS65_LS_IVX62_A_F_Z_R 0.1

module HS65_LS_IVX62 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX62_A_F_Z_R,`HS65_LS_IVX62_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX62

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX7_A_R_Z_F 0.1
`define HS65_LS_IVX7_A_F_Z_R 0.1

module HS65_LS_IVX7 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX7_A_F_Z_R,`HS65_LS_IVX7_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX71_A_R_Z_F 0.1
`define HS65_LS_IVX71_A_F_Z_R 0.1

module HS65_LS_IVX71 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX71_A_F_Z_R,`HS65_LS_IVX71_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX71

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_IVX9_A_R_Z_F 0.1
`define HS65_LS_IVX9_A_F_Z_R 0.1

module HS65_LS_IVX9 (Z, A);

	output Z;
	input A;

	not   #1 U1 (Z, A) ;



	specify

		(A -=> Z) = (`HS65_LS_IVX9_A_F_Z_R,`HS65_LS_IVX9_A_R_Z_F);


	endspecify

endmodule // HS65_LS_IVX9

`endcelldefine
// Verilog model view for HS65_LS_LDHQNX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQNX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQNX18_D_R_QN_F_1 0.1
`define HS65_LS_LDHQNX18_D_F_QN_R_1 0.1
`define HS65_LS_LDHQNX18_G_R_QN_R 0.1
`define HS65_LS_LDHQNX18_G_R_QN_F 0.1
`define HS65_LS_LDHQNX18_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQNX18_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQNX18_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQNX18_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQNX18_G_PWH 0.01

module HS65_LS_LDHQNX18 (QN, D, G);

	output QN;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (G) (D -=> QN) = (`HS65_LS_LDHQNX18_D_F_QN_R_1,`HS65_LS_LDHQNX18_D_R_QN_F_1);
		 (posedge G => (QN -: D)) = (`HS65_LS_LDHQNX18_G_R_QN_R,`HS65_LS_LDHQNX18_G_R_QN_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQNX18_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQNX18_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQNX18_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQNX18_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQNX18_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQNX18


`endcelldefine
// Verilog model view for HS65_LS_LDHQNX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQNX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQNX27_D_R_QN_F_1 0.1
`define HS65_LS_LDHQNX27_D_F_QN_R_1 0.1
`define HS65_LS_LDHQNX27_G_R_QN_R 0.1
`define HS65_LS_LDHQNX27_G_R_QN_F 0.1
`define HS65_LS_LDHQNX27_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQNX27_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQNX27_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQNX27_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQNX27_G_PWH 0.01

module HS65_LS_LDHQNX27 (QN, D, G);

	output QN;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (G) (D -=> QN) = (`HS65_LS_LDHQNX27_D_F_QN_R_1,`HS65_LS_LDHQNX27_D_R_QN_F_1);
		 (posedge G => (QN -: D)) = (`HS65_LS_LDHQNX27_G_R_QN_R,`HS65_LS_LDHQNX27_G_R_QN_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQNX27_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQNX27_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQNX27_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQNX27_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQNX27_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQNX27


`endcelldefine
// Verilog model view for HS65_LS_LDHQNX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQNX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQNX35_D_R_QN_F_1 0.1
`define HS65_LS_LDHQNX35_D_F_QN_R_1 0.1
`define HS65_LS_LDHQNX35_G_R_QN_R 0.1
`define HS65_LS_LDHQNX35_G_R_QN_F 0.1
`define HS65_LS_LDHQNX35_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQNX35_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQNX35_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQNX35_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQNX35_G_PWH 0.01

module HS65_LS_LDHQNX35 (QN, D, G);

	output QN;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (G) (D -=> QN) = (`HS65_LS_LDHQNX35_D_F_QN_R_1,`HS65_LS_LDHQNX35_D_R_QN_F_1);
		 (posedge G => (QN -: D)) = (`HS65_LS_LDHQNX35_G_R_QN_R,`HS65_LS_LDHQNX35_G_R_QN_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQNX35_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQNX35_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQNX35_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQNX35_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQNX35_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQNX35


`endcelldefine
// Verilog model view for HS65_LS_LDHQNX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQNX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQNX4_D_R_QN_F_1 0.1
`define HS65_LS_LDHQNX4_D_F_QN_R_1 0.1
`define HS65_LS_LDHQNX4_G_R_QN_R 0.1
`define HS65_LS_LDHQNX4_G_R_QN_F 0.1
`define HS65_LS_LDHQNX4_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQNX4_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQNX4_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQNX4_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQNX4_G_PWH 0.01

module HS65_LS_LDHQNX4 (QN, D, G);

	output QN;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (G) (D -=> QN) = (`HS65_LS_LDHQNX4_D_F_QN_R_1,`HS65_LS_LDHQNX4_D_R_QN_F_1);
		 (posedge G => (QN -: D)) = (`HS65_LS_LDHQNX4_G_R_QN_R,`HS65_LS_LDHQNX4_G_R_QN_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQNX4_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQNX4_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQNX4_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQNX4_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQNX4_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQNX4


`endcelldefine
// Verilog model view for HS65_LS_LDHQNX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQNX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQNX9_D_R_QN_F_1 0.1
`define HS65_LS_LDHQNX9_D_F_QN_R_1 0.1
`define HS65_LS_LDHQNX9_G_R_QN_R 0.1
`define HS65_LS_LDHQNX9_G_R_QN_F 0.1
`define HS65_LS_LDHQNX9_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQNX9_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQNX9_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQNX9_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQNX9_G_PWH 0.01

module HS65_LS_LDHQNX9 (QN, D, G);

	output QN;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	not   #1 U2 (QN, IQ) ;


	specify

		if (G) (D -=> QN) = (`HS65_LS_LDHQNX9_D_F_QN_R_1,`HS65_LS_LDHQNX9_D_R_QN_F_1);
		 (posedge G => (QN -: D)) = (`HS65_LS_LDHQNX9_G_R_QN_R,`HS65_LS_LDHQNX9_G_R_QN_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQNX9_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQNX9_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQNX9_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQNX9_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQNX9_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQNX9


`endcelldefine
// Verilog model view for HS65_LS_LDHQX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQX18_D_R_Q_R_1 0.1
`define HS65_LS_LDHQX18_D_F_Q_F_1 0.1
`define HS65_LS_LDHQX18_G_R_Q_R 0.1
`define HS65_LS_LDHQX18_G_R_Q_F 0.1
`define HS65_LS_LDHQX18_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQX18_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQX18_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQX18_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQX18_G_PWH 0.01

module HS65_LS_LDHQX18 (Q, D, G);

	output Q;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (G) (D +=> Q) = (`HS65_LS_LDHQX18_D_R_Q_R_1,`HS65_LS_LDHQX18_D_F_Q_F_1);
		 (posedge G => (Q +: D)) = (`HS65_LS_LDHQX18_G_R_Q_R,`HS65_LS_LDHQX18_G_R_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQX18_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQX18_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQX18_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQX18_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQX18_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQX18


`endcelldefine
// Verilog model view for HS65_LS_LDHQX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQX27_D_R_Q_R_1 0.1
`define HS65_LS_LDHQX27_D_F_Q_F_1 0.1
`define HS65_LS_LDHQX27_G_R_Q_R 0.1
`define HS65_LS_LDHQX27_G_R_Q_F 0.1
`define HS65_LS_LDHQX27_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQX27_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQX27_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQX27_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQX27_G_PWH 0.01

module HS65_LS_LDHQX27 (Q, D, G);

	output Q;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (G) (D +=> Q) = (`HS65_LS_LDHQX27_D_R_Q_R_1,`HS65_LS_LDHQX27_D_F_Q_F_1);
		 (posedge G => (Q +: D)) = (`HS65_LS_LDHQX27_G_R_Q_R,`HS65_LS_LDHQX27_G_R_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQX27_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQX27_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQX27_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQX27_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQX27_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQX27


`endcelldefine
// Verilog model view for HS65_LS_LDHQX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQX35_D_R_Q_R_1 0.1
`define HS65_LS_LDHQX35_D_F_Q_F_1 0.1
`define HS65_LS_LDHQX35_G_R_Q_R 0.1
`define HS65_LS_LDHQX35_G_R_Q_F 0.1
`define HS65_LS_LDHQX35_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQX35_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQX35_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQX35_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQX35_G_PWH 0.01

module HS65_LS_LDHQX35 (Q, D, G);

	output Q;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (G) (D +=> Q) = (`HS65_LS_LDHQX35_D_R_Q_R_1,`HS65_LS_LDHQX35_D_F_Q_F_1);
		 (posedge G => (Q +: D)) = (`HS65_LS_LDHQX35_G_R_Q_R,`HS65_LS_LDHQX35_G_R_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQX35_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQX35_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQX35_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQX35_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQX35_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQX35


`endcelldefine
// Verilog model view for HS65_LS_LDHQX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQX4_D_R_Q_R_1 0.1
`define HS65_LS_LDHQX4_D_F_Q_F_1 0.1
`define HS65_LS_LDHQX4_G_R_Q_R 0.1
`define HS65_LS_LDHQX4_G_R_Q_F 0.1
`define HS65_LS_LDHQX4_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQX4_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQX4_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQX4_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQX4_G_PWH 0.01

module HS65_LS_LDHQX4 (Q, D, G);

	output Q;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (G) (D +=> Q) = (`HS65_LS_LDHQX4_D_R_Q_R_1,`HS65_LS_LDHQX4_D_F_Q_F_1);
		 (posedge G => (Q +: D)) = (`HS65_LS_LDHQX4_G_R_Q_R,`HS65_LS_LDHQX4_G_R_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQX4_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQX4_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQX4_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQX4_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQX4_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQX4


`endcelldefine
// Verilog model view for HS65_LS_LDHQX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDHQX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHQX9_D_R_Q_R_1 0.1
`define HS65_LS_LDHQX9_D_F_Q_F_1 0.1
`define HS65_LS_LDHQX9_G_R_Q_R 0.1
`define HS65_LS_LDHQX9_G_R_Q_F 0.1
`define HS65_LS_LDHQX9_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHQX9_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHQX9_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHQX9_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHQX9_G_PWH 0.01

module HS65_LS_LDHQX9 (Q, D, G);

	output Q;
	input D;
	input G;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, D, G , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_NOTI   U1 (IQ, dD, dG , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;


	specify

		if (G) (D +=> Q) = (`HS65_LS_LDHQX9_D_R_Q_R_1,`HS65_LS_LDHQX9_D_F_Q_F_1);
		 (posedge G => (Q +: D)) = (`HS65_LS_LDHQX9_G_R_Q_R,`HS65_LS_LDHQX9_G_R_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHQX9_D_G_SETUP_posedge_negedge, `HS65_LS_LDHQX9_D_G_HOLD_posedge_negedge , NOTIFIER,, , dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHQX9_D_G_SETUP_negedge_negedge, `HS65_LS_LDHQX9_D_G_HOLD_negedge_negedge , NOTIFIER,, , dG, dD);
		$width(posedge G, `HS65_LS_LDHQX9_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHQX9


`endcelldefine
// Verilog model view for HS65_LS_LDHRQX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDHRQX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHRQX18_D_R_Q_R_11 0.1
`define HS65_LS_LDHRQX18_D_F_Q_F_11 0.1
`define HS65_LS_LDHRQX18_G_R_Q_R 0.1
`define HS65_LS_LDHRQX18_G_R_Q_F 0.1
`define HS65_LS_LDHRQX18_RN_R_Q_R 0.1
`define HS65_LS_LDHRQX18_RN_F_Q_F 0.1
`define HS65_LS_LDHRQX18_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHRQX18_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHRQX18_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHRQX18_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHRQX18_RN_G_REC_posedge_negedge 0.01
`define HS65_LS_LDHRQX18_RN_G_REM_posedge_negedge 0.01
`define HS65_LS_LDHRQX18_RN_PWL 0.01
`define HS65_LS_LDHRQX18_G_PWH 0.01

module HS65_LS_LDHRQX18 (Q, D, G, RN);

	output Q;
	input D;
	input G;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, D, G, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, dD, dG, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (GX, dG) ;

	specify

		if (G && RN) (D +=> Q) = (`HS65_LS_LDHRQX18_D_R_Q_R_11,`HS65_LS_LDHRQX18_D_F_Q_F_11);
		if (RN)  (posedge G => (Q +: D)) = (`HS65_LS_LDHRQX18_G_R_Q_R,`HS65_LS_LDHRQX18_G_R_Q_F);
		if (D && G)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDHRQX18_RN_R_Q_R,`HS65_LS_LDHRQX18_RN_F_Q_F);
		if (D || !G)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDHRQX18_RN_R_Q_R,`HS65_LS_LDHRQX18_RN_F_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHRQX18_D_G_SETUP_posedge_negedge, `HS65_LS_LDHRQX18_D_G_HOLD_posedge_negedge , NOTIFIER,, dRN, dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHRQX18_D_G_SETUP_negedge_negedge, `HS65_LS_LDHRQX18_D_G_HOLD_negedge_negedge , NOTIFIER,, dRN, dG, dD);
		$recrem(posedge RN, negedge G, `HS65_LS_LDHRQX18_RN_G_REC_posedge_negedge, `HS65_LS_LDHRQX18_RN_G_REM_posedge_negedge , NOTIFIER,, D, dRN, dG);
		$width(negedge RN &&& GX, `HS65_LS_LDHRQX18_RN_PWL ,0, NOTIFIER);
		$width(posedge G &&& RN, `HS65_LS_LDHRQX18_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHRQX18


`endcelldefine
// Verilog model view for HS65_LS_LDHRQX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDHRQX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHRQX27_D_R_Q_R_11 0.1
`define HS65_LS_LDHRQX27_D_F_Q_F_11 0.1
`define HS65_LS_LDHRQX27_G_R_Q_R 0.1
`define HS65_LS_LDHRQX27_G_R_Q_F 0.1
`define HS65_LS_LDHRQX27_RN_R_Q_R 0.1
`define HS65_LS_LDHRQX27_RN_F_Q_F 0.1
`define HS65_LS_LDHRQX27_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHRQX27_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHRQX27_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHRQX27_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHRQX27_RN_G_REC_posedge_negedge 0.01
`define HS65_LS_LDHRQX27_RN_G_REM_posedge_negedge 0.01
`define HS65_LS_LDHRQX27_RN_PWL 0.01
`define HS65_LS_LDHRQX27_G_PWH 0.01

module HS65_LS_LDHRQX27 (Q, D, G, RN);

	output Q;
	input D;
	input G;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, D, G, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, dD, dG, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (GX, dG) ;

	specify

		if (G && RN) (D +=> Q) = (`HS65_LS_LDHRQX27_D_R_Q_R_11,`HS65_LS_LDHRQX27_D_F_Q_F_11);
		if (RN)  (posedge G => (Q +: D)) = (`HS65_LS_LDHRQX27_G_R_Q_R,`HS65_LS_LDHRQX27_G_R_Q_F);
		if (D && G)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDHRQX27_RN_R_Q_R,`HS65_LS_LDHRQX27_RN_F_Q_F);
		if (D || !G)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDHRQX27_RN_R_Q_R,`HS65_LS_LDHRQX27_RN_F_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHRQX27_D_G_SETUP_posedge_negedge, `HS65_LS_LDHRQX27_D_G_HOLD_posedge_negedge , NOTIFIER,, dRN, dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHRQX27_D_G_SETUP_negedge_negedge, `HS65_LS_LDHRQX27_D_G_HOLD_negedge_negedge , NOTIFIER,, dRN, dG, dD);
		$recrem(posedge RN, negedge G, `HS65_LS_LDHRQX27_RN_G_REC_posedge_negedge, `HS65_LS_LDHRQX27_RN_G_REM_posedge_negedge , NOTIFIER,, D, dRN, dG);
		$width(negedge RN &&& GX, `HS65_LS_LDHRQX27_RN_PWL ,0, NOTIFIER);
		$width(posedge G &&& RN, `HS65_LS_LDHRQX27_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHRQX27


`endcelldefine
// Verilog model view for HS65_LS_LDHRQX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDHRQX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHRQX35_D_R_Q_R_11 0.1
`define HS65_LS_LDHRQX35_D_F_Q_F_11 0.1
`define HS65_LS_LDHRQX35_G_R_Q_R 0.1
`define HS65_LS_LDHRQX35_G_R_Q_F 0.1
`define HS65_LS_LDHRQX35_RN_R_Q_R 0.1
`define HS65_LS_LDHRQX35_RN_F_Q_F 0.1
`define HS65_LS_LDHRQX35_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHRQX35_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHRQX35_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHRQX35_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHRQX35_RN_G_REC_posedge_negedge 0.01
`define HS65_LS_LDHRQX35_RN_G_REM_posedge_negedge 0.01
`define HS65_LS_LDHRQX35_RN_PWL 0.01
`define HS65_LS_LDHRQX35_G_PWH 0.01

module HS65_LS_LDHRQX35 (Q, D, G, RN);

	output Q;
	input D;
	input G;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, D, G, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, dD, dG, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (GX, dG) ;

	specify

		if (G && RN) (D +=> Q) = (`HS65_LS_LDHRQX35_D_R_Q_R_11,`HS65_LS_LDHRQX35_D_F_Q_F_11);
		if (RN)  (posedge G => (Q +: D)) = (`HS65_LS_LDHRQX35_G_R_Q_R,`HS65_LS_LDHRQX35_G_R_Q_F);
		if (D && G)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDHRQX35_RN_R_Q_R,`HS65_LS_LDHRQX35_RN_F_Q_F);
		if (D || !G)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDHRQX35_RN_R_Q_R,`HS65_LS_LDHRQX35_RN_F_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHRQX35_D_G_SETUP_posedge_negedge, `HS65_LS_LDHRQX35_D_G_HOLD_posedge_negedge , NOTIFIER,, dRN, dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHRQX35_D_G_SETUP_negedge_negedge, `HS65_LS_LDHRQX35_D_G_HOLD_negedge_negedge , NOTIFIER,, dRN, dG, dD);
		$recrem(posedge RN, negedge G, `HS65_LS_LDHRQX35_RN_G_REC_posedge_negedge, `HS65_LS_LDHRQX35_RN_G_REM_posedge_negedge , NOTIFIER,, D, dRN, dG);
		$width(negedge RN &&& GX, `HS65_LS_LDHRQX35_RN_PWL ,0, NOTIFIER);
		$width(posedge G &&& RN, `HS65_LS_LDHRQX35_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHRQX35


`endcelldefine
// Verilog model view for HS65_LS_LDHRQX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDHRQX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHRQX4_D_R_Q_R_11 0.1
`define HS65_LS_LDHRQX4_D_F_Q_F_11 0.1
`define HS65_LS_LDHRQX4_G_R_Q_R 0.1
`define HS65_LS_LDHRQX4_G_R_Q_F 0.1
`define HS65_LS_LDHRQX4_RN_R_Q_R 0.1
`define HS65_LS_LDHRQX4_RN_F_Q_F 0.1
`define HS65_LS_LDHRQX4_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHRQX4_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHRQX4_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHRQX4_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHRQX4_RN_G_REC_posedge_negedge 0.01
`define HS65_LS_LDHRQX4_RN_G_REM_posedge_negedge 0.01
`define HS65_LS_LDHRQX4_RN_PWL 0.01
`define HS65_LS_LDHRQX4_G_PWH 0.01

module HS65_LS_LDHRQX4 (Q, D, G, RN);

	output Q;
	input D;
	input G;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, D, G, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, dD, dG, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (GX, dG) ;

	specify

		if (G && RN) (D +=> Q) = (`HS65_LS_LDHRQX4_D_R_Q_R_11,`HS65_LS_LDHRQX4_D_F_Q_F_11);
		if (RN)  (posedge G => (Q +: D)) = (`HS65_LS_LDHRQX4_G_R_Q_R,`HS65_LS_LDHRQX4_G_R_Q_F);
		if (D && G)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDHRQX4_RN_R_Q_R,`HS65_LS_LDHRQX4_RN_F_Q_F);
		if (D || !G)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDHRQX4_RN_R_Q_R,`HS65_LS_LDHRQX4_RN_F_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHRQX4_D_G_SETUP_posedge_negedge, `HS65_LS_LDHRQX4_D_G_HOLD_posedge_negedge , NOTIFIER,, dRN, dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHRQX4_D_G_SETUP_negedge_negedge, `HS65_LS_LDHRQX4_D_G_HOLD_negedge_negedge , NOTIFIER,, dRN, dG, dD);
		$recrem(posedge RN, negedge G, `HS65_LS_LDHRQX4_RN_G_REC_posedge_negedge, `HS65_LS_LDHRQX4_RN_G_REM_posedge_negedge , NOTIFIER,, D, dRN, dG);
		$width(negedge RN &&& GX, `HS65_LS_LDHRQX4_RN_PWL ,0, NOTIFIER);
		$width(posedge G &&& RN, `HS65_LS_LDHRQX4_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHRQX4


`endcelldefine
// Verilog model view for HS65_LS_LDHRQX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDHRQX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDHRQX9_D_R_Q_R_11 0.1
`define HS65_LS_LDHRQX9_D_F_Q_F_11 0.1
`define HS65_LS_LDHRQX9_G_R_Q_R 0.1
`define HS65_LS_LDHRQX9_G_R_Q_F 0.1
`define HS65_LS_LDHRQX9_RN_R_Q_R 0.1
`define HS65_LS_LDHRQX9_RN_F_Q_F 0.1
`define HS65_LS_LDHRQX9_D_G_HOLD_posedge_negedge 0.01
`define HS65_LS_LDHRQX9_D_G_HOLD_negedge_negedge 0.01
`define HS65_LS_LDHRQX9_D_G_SETUP_posedge_negedge 0.01
`define HS65_LS_LDHRQX9_D_G_SETUP_negedge_negedge 0.01
`define HS65_LS_LDHRQX9_RN_G_REC_posedge_negedge 0.01
`define HS65_LS_LDHRQX9_RN_G_REM_posedge_negedge 0.01
`define HS65_LS_LDHRQX9_RN_PWL 0.01
`define HS65_LS_LDHRQX9_G_PWH 0.01

module HS65_LS_LDHRQX9 (Q, D, G, RN);

	output Q;
	input D;
	input G;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, D, G, RN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_LD_P_RN_NOTI   U1 (IQ, dD, dG, dRN , NOTIFIER) ;
	buf   #1 U2 (Q, IQ) ;

	not    X1 (GX, dG) ;

	specify

		if (G && RN) (D +=> Q) = (`HS65_LS_LDHRQX9_D_R_Q_R_11,`HS65_LS_LDHRQX9_D_F_Q_F_11);
		if (RN)  (posedge G => (Q +: D)) = (`HS65_LS_LDHRQX9_G_R_Q_R,`HS65_LS_LDHRQX9_G_R_Q_F);
		if (D && G)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDHRQX9_RN_R_Q_R,`HS65_LS_LDHRQX9_RN_F_Q_F);
		if (D || !G)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDHRQX9_RN_R_Q_R,`HS65_LS_LDHRQX9_RN_F_Q_F);

		$setuphold(negedge G, posedge D, `HS65_LS_LDHRQX9_D_G_SETUP_posedge_negedge, `HS65_LS_LDHRQX9_D_G_HOLD_posedge_negedge , NOTIFIER,, dRN, dG, dD);
		$setuphold(negedge G, negedge D, `HS65_LS_LDHRQX9_D_G_SETUP_negedge_negedge, `HS65_LS_LDHRQX9_D_G_HOLD_negedge_negedge , NOTIFIER,, dRN, dG, dD);
		$recrem(posedge RN, negedge G, `HS65_LS_LDHRQX9_RN_G_REC_posedge_negedge, `HS65_LS_LDHRQX9_RN_G_REM_posedge_negedge , NOTIFIER,, D, dRN, dG);
		$width(negedge RN &&& GX, `HS65_LS_LDHRQX9_RN_PWL ,0, NOTIFIER);
		$width(posedge G &&& RN, `HS65_LS_LDHRQX9_G_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDHRQX9


`endcelldefine
// Verilog model view for HS65_LS_LDLQNX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQNX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQNX18_D_R_QN_F_0 0.1
`define HS65_LS_LDLQNX18_D_F_QN_R_0 0.1
`define HS65_LS_LDLQNX18_GN_F_QN_R 0.1
`define HS65_LS_LDLQNX18_GN_F_QN_F 0.1
`define HS65_LS_LDLQNX18_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQNX18_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQNX18_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQNX18_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQNX18_GN_PWL 0.01

module HS65_LS_LDLQNX18 (QN, D, GN);

	output QN;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (!GN) (D -=> QN) = (`HS65_LS_LDLQNX18_D_F_QN_R_0,`HS65_LS_LDLQNX18_D_R_QN_F_0);
		 (negedge GN => (QN -: D)) = (`HS65_LS_LDLQNX18_GN_F_QN_R,`HS65_LS_LDLQNX18_GN_F_QN_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQNX18_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQNX18_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQNX18_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQNX18_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQNX18_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQNX18


`endcelldefine
// Verilog model view for HS65_LS_LDLQNX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQNX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQNX27_D_R_QN_F_0 0.1
`define HS65_LS_LDLQNX27_D_F_QN_R_0 0.1
`define HS65_LS_LDLQNX27_GN_F_QN_R 0.1
`define HS65_LS_LDLQNX27_GN_F_QN_F 0.1
`define HS65_LS_LDLQNX27_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQNX27_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQNX27_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQNX27_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQNX27_GN_PWL 0.01

module HS65_LS_LDLQNX27 (QN, D, GN);

	output QN;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (!GN) (D -=> QN) = (`HS65_LS_LDLQNX27_D_F_QN_R_0,`HS65_LS_LDLQNX27_D_R_QN_F_0);
		 (negedge GN => (QN -: D)) = (`HS65_LS_LDLQNX27_GN_F_QN_R,`HS65_LS_LDLQNX27_GN_F_QN_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQNX27_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQNX27_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQNX27_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQNX27_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQNX27_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQNX27


`endcelldefine
// Verilog model view for HS65_LS_LDLQNX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQNX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQNX35_D_R_QN_F_0 0.1
`define HS65_LS_LDLQNX35_D_F_QN_R_0 0.1
`define HS65_LS_LDLQNX35_GN_F_QN_R 0.1
`define HS65_LS_LDLQNX35_GN_F_QN_F 0.1
`define HS65_LS_LDLQNX35_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQNX35_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQNX35_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQNX35_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQNX35_GN_PWL 0.01

module HS65_LS_LDLQNX35 (QN, D, GN);

	output QN;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (!GN) (D -=> QN) = (`HS65_LS_LDLQNX35_D_F_QN_R_0,`HS65_LS_LDLQNX35_D_R_QN_F_0);
		 (negedge GN => (QN -: D)) = (`HS65_LS_LDLQNX35_GN_F_QN_R,`HS65_LS_LDLQNX35_GN_F_QN_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQNX35_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQNX35_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQNX35_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQNX35_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQNX35_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQNX35


`endcelldefine
// Verilog model view for HS65_LS_LDLQNX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQNX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQNX4_D_R_QN_F_0 0.1
`define HS65_LS_LDLQNX4_D_F_QN_R_0 0.1
`define HS65_LS_LDLQNX4_GN_F_QN_R 0.1
`define HS65_LS_LDLQNX4_GN_F_QN_F 0.1
`define HS65_LS_LDLQNX4_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQNX4_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQNX4_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQNX4_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQNX4_GN_PWL 0.01

module HS65_LS_LDLQNX4 (QN, D, GN);

	output QN;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (!GN) (D -=> QN) = (`HS65_LS_LDLQNX4_D_F_QN_R_0,`HS65_LS_LDLQNX4_D_R_QN_F_0);
		 (negedge GN => (QN -: D)) = (`HS65_LS_LDLQNX4_GN_F_QN_R,`HS65_LS_LDLQNX4_GN_F_QN_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQNX4_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQNX4_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQNX4_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQNX4_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQNX4_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQNX4


`endcelldefine
// Verilog model view for HS65_LS_LDLQNX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQNX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQNX9_D_R_QN_F_0 0.1
`define HS65_LS_LDLQNX9_D_F_QN_R_0 0.1
`define HS65_LS_LDLQNX9_GN_F_QN_R 0.1
`define HS65_LS_LDLQNX9_GN_F_QN_F 0.1
`define HS65_LS_LDLQNX9_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQNX9_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQNX9_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQNX9_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQNX9_GN_PWL 0.01

module HS65_LS_LDLQNX9 (QN, D, GN);

	output QN;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;


	specify

		if (!GN) (D -=> QN) = (`HS65_LS_LDLQNX9_D_F_QN_R_0,`HS65_LS_LDLQNX9_D_R_QN_F_0);
		 (negedge GN => (QN -: D)) = (`HS65_LS_LDLQNX9_GN_F_QN_R,`HS65_LS_LDLQNX9_GN_F_QN_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQNX9_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQNX9_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQNX9_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQNX9_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQNX9_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQNX9


`endcelldefine
// Verilog model view for HS65_LS_LDLQX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQX18_D_R_Q_R_0 0.1
`define HS65_LS_LDLQX18_D_F_Q_F_0 0.1
`define HS65_LS_LDLQX18_GN_F_Q_R 0.1
`define HS65_LS_LDLQX18_GN_F_Q_F 0.1
`define HS65_LS_LDLQX18_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQX18_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQX18_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQX18_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQX18_GN_PWL 0.01

module HS65_LS_LDLQX18 (Q, D, GN);

	output Q;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN) (D +=> Q) = (`HS65_LS_LDLQX18_D_R_Q_R_0,`HS65_LS_LDLQX18_D_F_Q_F_0);
		 (negedge GN => (Q +: D)) = (`HS65_LS_LDLQX18_GN_F_Q_R,`HS65_LS_LDLQX18_GN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQX18_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQX18_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQX18_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQX18_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQX18_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQX18


`endcelldefine
// Verilog model view for HS65_LS_LDLQX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQX27_D_R_Q_R_0 0.1
`define HS65_LS_LDLQX27_D_F_Q_F_0 0.1
`define HS65_LS_LDLQX27_GN_F_Q_R 0.1
`define HS65_LS_LDLQX27_GN_F_Q_F 0.1
`define HS65_LS_LDLQX27_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQX27_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQX27_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQX27_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQX27_GN_PWL 0.01

module HS65_LS_LDLQX27 (Q, D, GN);

	output Q;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN) (D +=> Q) = (`HS65_LS_LDLQX27_D_R_Q_R_0,`HS65_LS_LDLQX27_D_F_Q_F_0);
		 (negedge GN => (Q +: D)) = (`HS65_LS_LDLQX27_GN_F_Q_R,`HS65_LS_LDLQX27_GN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQX27_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQX27_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQX27_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQX27_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQX27_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQX27


`endcelldefine
// Verilog model view for HS65_LS_LDLQX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQX35_D_R_Q_R_0 0.1
`define HS65_LS_LDLQX35_D_F_Q_F_0 0.1
`define HS65_LS_LDLQX35_GN_F_Q_R 0.1
`define HS65_LS_LDLQX35_GN_F_Q_F 0.1
`define HS65_LS_LDLQX35_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQX35_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQX35_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQX35_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQX35_GN_PWL 0.01

module HS65_LS_LDLQX35 (Q, D, GN);

	output Q;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN) (D +=> Q) = (`HS65_LS_LDLQX35_D_R_Q_R_0,`HS65_LS_LDLQX35_D_F_Q_F_0);
		 (negedge GN => (Q +: D)) = (`HS65_LS_LDLQX35_GN_F_Q_R,`HS65_LS_LDLQX35_GN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQX35_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQX35_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQX35_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQX35_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQX35_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQX35


`endcelldefine
// Verilog model view for HS65_LS_LDLQX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQX4_D_R_Q_R_0 0.1
`define HS65_LS_LDLQX4_D_F_Q_F_0 0.1
`define HS65_LS_LDLQX4_GN_F_Q_R 0.1
`define HS65_LS_LDLQX4_GN_F_Q_F 0.1
`define HS65_LS_LDLQX4_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQX4_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQX4_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQX4_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQX4_GN_PWL 0.01

module HS65_LS_LDLQX4 (Q, D, GN);

	output Q;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN) (D +=> Q) = (`HS65_LS_LDLQX4_D_R_Q_R_0,`HS65_LS_LDLQX4_D_F_Q_F_0);
		 (negedge GN => (Q +: D)) = (`HS65_LS_LDLQX4_GN_F_Q_R,`HS65_LS_LDLQX4_GN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQX4_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQX4_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQX4_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQX4_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQX4_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQX4


`endcelldefine
// Verilog model view for HS65_LS_LDLQX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5.epsilon (May 17 2005 17:23:58) 22-May-2005
// Cell HS65_LS_LDLQX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLQX9_D_R_Q_R_0 0.1
`define HS65_LS_LDLQX9_D_F_Q_F_0 0.1
`define HS65_LS_LDLQX9_GN_F_Q_R 0.1
`define HS65_LS_LDLQX9_GN_F_Q_F 0.1
`define HS65_LS_LDLQX9_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLQX9_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLQX9_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLQX9_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLQX9_GN_PWL 0.01

module HS65_LS_LDLQX9 (Q, D, GN);

	output Q;
	input D;
	input GN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, D, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_NOTI   U2 (IQ, dD, INTERNAL1 , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN) (D +=> Q) = (`HS65_LS_LDLQX9_D_R_Q_R_0,`HS65_LS_LDLQX9_D_F_Q_F_0);
		 (negedge GN => (Q +: D)) = (`HS65_LS_LDLQX9_GN_F_Q_R,`HS65_LS_LDLQX9_GN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLQX9_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLQX9_D_GN_HOLD_posedge_posedge , NOTIFIER,, , dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLQX9_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLQX9_D_GN_HOLD_negedge_posedge , NOTIFIER,, , dGN, dD);
		$width(negedge GN, `HS65_LS_LDLQX9_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLQX9


`endcelldefine
// Verilog model view for HS65_LS_LDLRQX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDLRQX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLRQX18_D_R_Q_R_01 0.1
`define HS65_LS_LDLRQX18_D_F_Q_F_01 0.1
`define HS65_LS_LDLRQX18_GN_F_Q_R 0.1
`define HS65_LS_LDLRQX18_GN_F_Q_F 0.1
`define HS65_LS_LDLRQX18_RN_R_Q_R 0.1
`define HS65_LS_LDLRQX18_RN_F_Q_F 0.1
`define HS65_LS_LDLRQX18_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLRQX18_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLRQX18_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLRQX18_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLRQX18_RN_GN_REC_posedge_posedge 0.01
`define HS65_LS_LDLRQX18_RN_GN_REM_posedge_posedge 0.01
`define HS65_LS_LDLRQX18_RN_PWL 0.01
`define HS65_LS_LDLRQX18_GN_PWL 0.01

module HS65_LS_LDLRQX18 (Q, D, GN, RN);

	output Q;
	input D;
	input GN;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, D, INTERNAL1, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, dD, INTERNAL1, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN && RN) (D +=> Q) = (`HS65_LS_LDLRQX18_D_R_Q_R_01,`HS65_LS_LDLRQX18_D_F_Q_F_01);
		if (RN)  (negedge GN => (Q +: D)) = (`HS65_LS_LDLRQX18_GN_F_Q_R,`HS65_LS_LDLRQX18_GN_F_Q_F);
		if (D && !GN)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDLRQX18_RN_R_Q_R,`HS65_LS_LDLRQX18_RN_F_Q_F);
		if (D || GN)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDLRQX18_RN_R_Q_R,`HS65_LS_LDLRQX18_RN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLRQX18_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLRQX18_D_GN_HOLD_posedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLRQX18_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLRQX18_D_GN_HOLD_negedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$recrem(posedge RN, posedge GN, `HS65_LS_LDLRQX18_RN_GN_REC_posedge_posedge, `HS65_LS_LDLRQX18_RN_GN_REM_posedge_posedge , NOTIFIER,, D, dRN, dGN);
		$width(negedge RN &&& GN, `HS65_LS_LDLRQX18_RN_PWL ,0, NOTIFIER);
		$width(negedge GN &&& RN, `HS65_LS_LDLRQX18_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLRQX18


`endcelldefine
// Verilog model view for HS65_LS_LDLRQX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDLRQX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLRQX27_D_R_Q_R_01 0.1
`define HS65_LS_LDLRQX27_D_F_Q_F_01 0.1
`define HS65_LS_LDLRQX27_GN_F_Q_R 0.1
`define HS65_LS_LDLRQX27_GN_F_Q_F 0.1
`define HS65_LS_LDLRQX27_RN_R_Q_R 0.1
`define HS65_LS_LDLRQX27_RN_F_Q_F 0.1
`define HS65_LS_LDLRQX27_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLRQX27_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLRQX27_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLRQX27_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLRQX27_RN_GN_REC_posedge_posedge 0.01
`define HS65_LS_LDLRQX27_RN_GN_REM_posedge_posedge 0.01
`define HS65_LS_LDLRQX27_RN_PWL 0.01
`define HS65_LS_LDLRQX27_GN_PWL 0.01

module HS65_LS_LDLRQX27 (Q, D, GN, RN);

	output Q;
	input D;
	input GN;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, D, INTERNAL1, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, dD, INTERNAL1, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN && RN) (D +=> Q) = (`HS65_LS_LDLRQX27_D_R_Q_R_01,`HS65_LS_LDLRQX27_D_F_Q_F_01);
		if (RN)  (negedge GN => (Q +: D)) = (`HS65_LS_LDLRQX27_GN_F_Q_R,`HS65_LS_LDLRQX27_GN_F_Q_F);
		if (D && !GN)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDLRQX27_RN_R_Q_R,`HS65_LS_LDLRQX27_RN_F_Q_F);
		if (D || GN)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDLRQX27_RN_R_Q_R,`HS65_LS_LDLRQX27_RN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLRQX27_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLRQX27_D_GN_HOLD_posedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLRQX27_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLRQX27_D_GN_HOLD_negedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$recrem(posedge RN, posedge GN, `HS65_LS_LDLRQX27_RN_GN_REC_posedge_posedge, `HS65_LS_LDLRQX27_RN_GN_REM_posedge_posedge , NOTIFIER,, D, dRN, dGN);
		$width(negedge RN &&& GN, `HS65_LS_LDLRQX27_RN_PWL ,0, NOTIFIER);
		$width(negedge GN &&& RN, `HS65_LS_LDLRQX27_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLRQX27


`endcelldefine
// Verilog model view for HS65_LS_LDLRQX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDLRQX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLRQX35_D_R_Q_R_01 0.1
`define HS65_LS_LDLRQX35_D_F_Q_F_01 0.1
`define HS65_LS_LDLRQX35_GN_F_Q_R 0.1
`define HS65_LS_LDLRQX35_GN_F_Q_F 0.1
`define HS65_LS_LDLRQX35_RN_R_Q_R 0.1
`define HS65_LS_LDLRQX35_RN_F_Q_F 0.1
`define HS65_LS_LDLRQX35_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLRQX35_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLRQX35_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLRQX35_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLRQX35_RN_GN_REC_posedge_posedge 0.01
`define HS65_LS_LDLRQX35_RN_GN_REM_posedge_posedge 0.01
`define HS65_LS_LDLRQX35_RN_PWL 0.01
`define HS65_LS_LDLRQX35_GN_PWL 0.01

module HS65_LS_LDLRQX35 (Q, D, GN, RN);

	output Q;
	input D;
	input GN;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, D, INTERNAL1, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, dD, INTERNAL1, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN && RN) (D +=> Q) = (`HS65_LS_LDLRQX35_D_R_Q_R_01,`HS65_LS_LDLRQX35_D_F_Q_F_01);
		if (RN)  (negedge GN => (Q +: D)) = (`HS65_LS_LDLRQX35_GN_F_Q_R,`HS65_LS_LDLRQX35_GN_F_Q_F);
		if (D && !GN)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDLRQX35_RN_R_Q_R,`HS65_LS_LDLRQX35_RN_F_Q_F);
		if (D || GN)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDLRQX35_RN_R_Q_R,`HS65_LS_LDLRQX35_RN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLRQX35_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLRQX35_D_GN_HOLD_posedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLRQX35_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLRQX35_D_GN_HOLD_negedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$recrem(posedge RN, posedge GN, `HS65_LS_LDLRQX35_RN_GN_REC_posedge_posedge, `HS65_LS_LDLRQX35_RN_GN_REM_posedge_posedge , NOTIFIER,, D, dRN, dGN);
		$width(negedge RN &&& GN, `HS65_LS_LDLRQX35_RN_PWL ,0, NOTIFIER);
		$width(negedge GN &&& RN, `HS65_LS_LDLRQX35_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLRQX35


`endcelldefine
// Verilog model view for HS65_LS_LDLRQX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDLRQX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLRQX4_D_R_Q_R_01 0.1
`define HS65_LS_LDLRQX4_D_F_Q_F_01 0.1
`define HS65_LS_LDLRQX4_GN_F_Q_R 0.1
`define HS65_LS_LDLRQX4_GN_F_Q_F 0.1
`define HS65_LS_LDLRQX4_RN_R_Q_R 0.1
`define HS65_LS_LDLRQX4_RN_F_Q_F 0.1
`define HS65_LS_LDLRQX4_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLRQX4_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLRQX4_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLRQX4_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLRQX4_RN_GN_REC_posedge_posedge 0.01
`define HS65_LS_LDLRQX4_RN_GN_REM_posedge_posedge 0.01
`define HS65_LS_LDLRQX4_RN_PWL 0.01
`define HS65_LS_LDLRQX4_GN_PWL 0.01

module HS65_LS_LDLRQX4 (Q, D, GN, RN);

	output Q;
	input D;
	input GN;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, D, INTERNAL1, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, dD, INTERNAL1, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN && RN) (D +=> Q) = (`HS65_LS_LDLRQX4_D_R_Q_R_01,`HS65_LS_LDLRQX4_D_F_Q_F_01);
		if (RN)  (negedge GN => (Q +: D)) = (`HS65_LS_LDLRQX4_GN_F_Q_R,`HS65_LS_LDLRQX4_GN_F_Q_F);
		if (D && !GN)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDLRQX4_RN_R_Q_R,`HS65_LS_LDLRQX4_RN_F_Q_F);
		if (D || GN)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDLRQX4_RN_R_Q_R,`HS65_LS_LDLRQX4_RN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLRQX4_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLRQX4_D_GN_HOLD_posedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLRQX4_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLRQX4_D_GN_HOLD_negedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$recrem(posedge RN, posedge GN, `HS65_LS_LDLRQX4_RN_GN_REC_posedge_posedge, `HS65_LS_LDLRQX4_RN_GN_REM_posedge_posedge , NOTIFIER,, D, dRN, dGN);
		$width(negedge RN &&& GN, `HS65_LS_LDLRQX4_RN_PWL ,0, NOTIFIER);
		$width(negedge GN &&& RN, `HS65_LS_LDLRQX4_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLRQX4


`endcelldefine
// Verilog model view for HS65_LS_LDLRQX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.5 (May 25 2005 09:41:09) 27-May-2005
// Cell HS65_LS_LDLRQX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_LDLRQX9_D_R_Q_R_01 0.1
`define HS65_LS_LDLRQX9_D_F_Q_F_01 0.1
`define HS65_LS_LDLRQX9_GN_F_Q_R 0.1
`define HS65_LS_LDLRQX9_GN_F_Q_F 0.1
`define HS65_LS_LDLRQX9_RN_R_Q_R 0.1
`define HS65_LS_LDLRQX9_RN_F_Q_F 0.1
`define HS65_LS_LDLRQX9_D_GN_HOLD_posedge_posedge 0.01
`define HS65_LS_LDLRQX9_D_GN_HOLD_negedge_posedge 0.01
`define HS65_LS_LDLRQX9_D_GN_SETUP_posedge_posedge 0.01
`define HS65_LS_LDLRQX9_D_GN_SETUP_negedge_posedge 0.01
`define HS65_LS_LDLRQX9_RN_GN_REC_posedge_posedge 0.01
`define HS65_LS_LDLRQX9_RN_GN_REM_posedge_posedge 0.01
`define HS65_LS_LDLRQX9_RN_PWL 0.01
`define HS65_LS_LDLRQX9_GN_PWL 0.01

module HS65_LS_LDLRQX9 (Q, D, GN, RN);

	output Q;
	input D;
	input GN;
	input RN;

`ifdef functional
	reg  NOTIFIER;
	not    U1 (INTERNAL1, GN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, D, INTERNAL1, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	not    U1 (INTERNAL1, dGN) ;
	CORE65LPSVT_U_LD_P_RN_NOTI   U2 (IQ, dD, INTERNAL1, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;


	specify

		if (!GN && RN) (D +=> Q) = (`HS65_LS_LDLRQX9_D_R_Q_R_01,`HS65_LS_LDLRQX9_D_F_Q_F_01);
		if (RN)  (negedge GN => (Q +: D)) = (`HS65_LS_LDLRQX9_GN_F_Q_R,`HS65_LS_LDLRQX9_GN_F_Q_F);
		if (D && !GN)  (posedge RN => (Q +: 1'b1)) = (`HS65_LS_LDLRQX9_RN_R_Q_R,`HS65_LS_LDLRQX9_RN_F_Q_F);
		if (D || GN)  (negedge RN => (Q +: 1'b0)) = (`HS65_LS_LDLRQX9_RN_R_Q_R,`HS65_LS_LDLRQX9_RN_F_Q_F);

		$setuphold(posedge GN, posedge D, `HS65_LS_LDLRQX9_D_GN_SETUP_posedge_posedge, `HS65_LS_LDLRQX9_D_GN_HOLD_posedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$setuphold(posedge GN, negedge D, `HS65_LS_LDLRQX9_D_GN_SETUP_negedge_posedge, `HS65_LS_LDLRQX9_D_GN_HOLD_negedge_posedge , NOTIFIER,, dRN, dGN, dD);
		$recrem(posedge RN, posedge GN, `HS65_LS_LDLRQX9_RN_GN_REC_posedge_posedge, `HS65_LS_LDLRQX9_RN_GN_REM_posedge_posedge , NOTIFIER,, D, dRN, dGN);
		$width(negedge RN &&& GN, `HS65_LS_LDLRQX9_RN_PWL ,0, NOTIFIER);
		$width(negedge GN &&& RN, `HS65_LS_LDLRQX9_GN_PWL ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_LDLRQX9


`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X12_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X12_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X12_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X12_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X12_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X12_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X12_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X12_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X12_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X12_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X12_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X12_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X12 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X12_D0_F_Z_R_00,`HS65_LS_MUX21I1X12_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X12_D0_F_Z_R_10,`HS65_LS_MUX21I1X12_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X12_D1_R_Z_R_01,`HS65_LS_MUX21I1X12_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X12_D1_R_Z_R_11,`HS65_LS_MUX21I1X12_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X12_S0_F_Z_R_00,`HS65_LS_MUX21I1X12_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X12_S0_R_Z_R_11,`HS65_LS_MUX21I1X12_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X18_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X18_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X18_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X18_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X18_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X18_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X18_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X18_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X18_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X18_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X18_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X18_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X18 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X18_D0_F_Z_R_00,`HS65_LS_MUX21I1X18_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X18_D0_F_Z_R_10,`HS65_LS_MUX21I1X18_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X18_D1_R_Z_R_01,`HS65_LS_MUX21I1X18_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X18_D1_R_Z_R_11,`HS65_LS_MUX21I1X18_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X18_S0_F_Z_R_00,`HS65_LS_MUX21I1X18_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X18_S0_R_Z_R_11,`HS65_LS_MUX21I1X18_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X24_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X24_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X24_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X24_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X24_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X24_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X24_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X24_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X24_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X24_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X24_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X24_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X24 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X24_D0_F_Z_R_00,`HS65_LS_MUX21I1X24_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X24_D0_F_Z_R_10,`HS65_LS_MUX21I1X24_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X24_D1_R_Z_R_01,`HS65_LS_MUX21I1X24_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X24_D1_R_Z_R_11,`HS65_LS_MUX21I1X24_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X24_S0_F_Z_R_00,`HS65_LS_MUX21I1X24_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X24_S0_R_Z_R_11,`HS65_LS_MUX21I1X24_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X24

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X3_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X3_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X3_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X3_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X3_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X3_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X3_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X3_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X3_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X3_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X3_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X3_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X3 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X3_D0_F_Z_R_00,`HS65_LS_MUX21I1X3_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X3_D0_F_Z_R_10,`HS65_LS_MUX21I1X3_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X3_D1_R_Z_R_01,`HS65_LS_MUX21I1X3_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X3_D1_R_Z_R_11,`HS65_LS_MUX21I1X3_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X3_S0_F_Z_R_00,`HS65_LS_MUX21I1X3_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X3_S0_R_Z_R_11,`HS65_LS_MUX21I1X3_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X30_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X30_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X30_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X30_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X30_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X30_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X30_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X30_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X30_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X30_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X30_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X30_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X30 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X30_D0_F_Z_R_00,`HS65_LS_MUX21I1X30_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X30_D0_F_Z_R_10,`HS65_LS_MUX21I1X30_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X30_D1_R_Z_R_01,`HS65_LS_MUX21I1X30_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X30_D1_R_Z_R_11,`HS65_LS_MUX21I1X30_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X30_S0_F_Z_R_00,`HS65_LS_MUX21I1X30_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X30_S0_R_Z_R_11,`HS65_LS_MUX21I1X30_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X36_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X36_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X36_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X36_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X36_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X36_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X36_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X36_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X36_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X36_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X36_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X36_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X36 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X36_D0_F_Z_R_00,`HS65_LS_MUX21I1X36_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X36_D0_F_Z_R_10,`HS65_LS_MUX21I1X36_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X36_D1_R_Z_R_01,`HS65_LS_MUX21I1X36_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X36_D1_R_Z_R_11,`HS65_LS_MUX21I1X36_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X36_S0_F_Z_R_00,`HS65_LS_MUX21I1X36_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X36_S0_R_Z_R_11,`HS65_LS_MUX21I1X36_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X36

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X42_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X42_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X42_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X42_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X42_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X42_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X42_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X42_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X42_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X42_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X42_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X42_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X42 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X42_D0_F_Z_R_00,`HS65_LS_MUX21I1X42_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X42_D0_F_Z_R_10,`HS65_LS_MUX21I1X42_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X42_D1_R_Z_R_01,`HS65_LS_MUX21I1X42_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X42_D1_R_Z_R_11,`HS65_LS_MUX21I1X42_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X42_S0_F_Z_R_00,`HS65_LS_MUX21I1X42_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X42_S0_R_Z_R_11,`HS65_LS_MUX21I1X42_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X42

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X48_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X48_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X48_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X48_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X48_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X48_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X48_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X48_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X48_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X48_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X48_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X48_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X48 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X48_D0_F_Z_R_00,`HS65_LS_MUX21I1X48_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X48_D0_F_Z_R_10,`HS65_LS_MUX21I1X48_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X48_D1_R_Z_R_01,`HS65_LS_MUX21I1X48_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X48_D1_R_Z_R_11,`HS65_LS_MUX21I1X48_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X48_S0_F_Z_R_00,`HS65_LS_MUX21I1X48_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X48_S0_R_Z_R_11,`HS65_LS_MUX21I1X48_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X48

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21I1X6_D0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X6_D0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X6_D0_R_Z_F_10 0.1
`define HS65_LS_MUX21I1X6_D0_F_Z_R_10 0.1
`define HS65_LS_MUX21I1X6_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21I1X6_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21I1X6_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X6_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21I1X6_S0_R_Z_F_00 0.1
`define HS65_LS_MUX21I1X6_S0_F_Z_R_00 0.1
`define HS65_LS_MUX21I1X6_S0_R_Z_R_11 0.1
`define HS65_LS_MUX21I1X6_S0_F_Z_F_11 0.1

module HS65_LS_MUX21I1X6 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	not    U1 (INTERNAL1, D0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X6_D0_F_Z_R_00,`HS65_LS_MUX21I1X6_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUX21I1X6_D0_F_Z_R_10,`HS65_LS_MUX21I1X6_D0_R_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X6_D1_R_Z_R_01,`HS65_LS_MUX21I1X6_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21I1X6_D1_R_Z_R_11,`HS65_LS_MUX21I1X6_D1_F_Z_F_11);
		if (!D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21I1X6_S0_F_Z_R_00,`HS65_LS_MUX21I1X6_S0_R_Z_F_00);
		if (D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21I1X6_S0_R_Z_R_11,`HS65_LS_MUX21I1X6_S0_F_Z_F_11);


	endspecify

endmodule // HS65_LS_MUX21I1X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X18_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X18_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X18_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X18_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X18_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X18_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X18_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X18_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X18_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X18_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X18_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X18_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X18 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X18_D0_R_Z_R_00,`HS65_LS_MUX21X18_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X18_D0_R_Z_R_10,`HS65_LS_MUX21X18_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X18_D1_R_Z_R_01,`HS65_LS_MUX21X18_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X18_D1_R_Z_R_11,`HS65_LS_MUX21X18_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X18_S0_F_Z_R_10,`HS65_LS_MUX21X18_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X18_S0_R_Z_R_01,`HS65_LS_MUX21X18_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X27_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X27_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X27_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X27_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X27_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X27_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X27_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X27_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X27_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X27_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X27_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X27_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X27 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X27_D0_R_Z_R_00,`HS65_LS_MUX21X27_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X27_D0_R_Z_R_10,`HS65_LS_MUX21X27_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X27_D1_R_Z_R_01,`HS65_LS_MUX21X27_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X27_D1_R_Z_R_11,`HS65_LS_MUX21X27_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X27_S0_F_Z_R_10,`HS65_LS_MUX21X27_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X27_S0_R_Z_R_01,`HS65_LS_MUX21X27_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X35_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X35_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X35_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X35_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X35_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X35_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X35_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X35_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X35_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X35_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X35_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X35_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X35 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X35_D0_R_Z_R_00,`HS65_LS_MUX21X35_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X35_D0_R_Z_R_10,`HS65_LS_MUX21X35_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X35_D1_R_Z_R_01,`HS65_LS_MUX21X35_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X35_D1_R_Z_R_11,`HS65_LS_MUX21X35_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X35_S0_F_Z_R_10,`HS65_LS_MUX21X35_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X35_S0_R_Z_R_01,`HS65_LS_MUX21X35_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X4_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X4_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X4_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X4_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X4_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X4_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X4_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X4_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X4_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X4_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X4_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X4_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X4 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X4_D0_R_Z_R_00,`HS65_LS_MUX21X4_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X4_D0_R_Z_R_10,`HS65_LS_MUX21X4_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X4_D1_R_Z_R_01,`HS65_LS_MUX21X4_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X4_D1_R_Z_R_11,`HS65_LS_MUX21X4_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X4_S0_F_Z_R_10,`HS65_LS_MUX21X4_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X4_S0_R_Z_R_01,`HS65_LS_MUX21X4_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X44_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X44_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X44_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X44_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X44_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X44_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X44_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X44_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X44_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X44_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X44_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X44_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X44 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X44_D0_R_Z_R_00,`HS65_LS_MUX21X44_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X44_D0_R_Z_R_10,`HS65_LS_MUX21X44_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X44_D1_R_Z_R_01,`HS65_LS_MUX21X44_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X44_D1_R_Z_R_11,`HS65_LS_MUX21X44_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X44_S0_F_Z_R_10,`HS65_LS_MUX21X44_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X44_S0_R_Z_R_01,`HS65_LS_MUX21X44_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X53_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X53_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X53_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X53_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X53_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X53_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X53_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X53_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X53_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X53_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X53_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X53_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X53 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X53_D0_R_Z_R_00,`HS65_LS_MUX21X53_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X53_D0_R_Z_R_10,`HS65_LS_MUX21X53_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X53_D1_R_Z_R_01,`HS65_LS_MUX21X53_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X53_D1_R_Z_R_11,`HS65_LS_MUX21X53_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X53_S0_F_Z_R_10,`HS65_LS_MUX21X53_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X53_S0_R_Z_R_01,`HS65_LS_MUX21X53_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X53

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X62_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X62_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X62_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X62_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X62_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X62_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X62_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X62_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X62_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X62_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X62_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X62_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X62 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X62_D0_R_Z_R_00,`HS65_LS_MUX21X62_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X62_D0_R_Z_R_10,`HS65_LS_MUX21X62_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X62_D1_R_Z_R_01,`HS65_LS_MUX21X62_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X62_D1_R_Z_R_11,`HS65_LS_MUX21X62_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X62_S0_F_Z_R_10,`HS65_LS_MUX21X62_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X62_S0_R_Z_R_01,`HS65_LS_MUX21X62_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X62

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X71_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X71_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X71_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X71_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X71_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X71_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X71_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X71_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X71_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X71_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X71_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X71_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X71 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X71_D0_R_Z_R_00,`HS65_LS_MUX21X71_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X71_D0_R_Z_R_10,`HS65_LS_MUX21X71_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X71_D1_R_Z_R_01,`HS65_LS_MUX21X71_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X71_D1_R_Z_R_11,`HS65_LS_MUX21X71_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X71_S0_F_Z_R_10,`HS65_LS_MUX21X71_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X71_S0_R_Z_R_01,`HS65_LS_MUX21X71_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X71

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX21X9_D0_R_Z_R_00 0.1
`define HS65_LS_MUX21X9_D0_F_Z_F_00 0.1
`define HS65_LS_MUX21X9_D0_R_Z_R_10 0.1
`define HS65_LS_MUX21X9_D0_F_Z_F_10 0.1
`define HS65_LS_MUX21X9_D1_R_Z_R_01 0.1
`define HS65_LS_MUX21X9_D1_F_Z_F_01 0.1
`define HS65_LS_MUX21X9_D1_R_Z_R_11 0.1
`define HS65_LS_MUX21X9_D1_F_Z_F_11 0.1
`define HS65_LS_MUX21X9_S0_R_Z_F_10 0.1
`define HS65_LS_MUX21X9_S0_F_Z_R_10 0.1
`define HS65_LS_MUX21X9_S0_R_Z_R_01 0.1
`define HS65_LS_MUX21X9_S0_F_Z_F_01 0.1

module HS65_LS_MUX21X9 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2  #1 U1 (Z, D0, D1, S0) ;



	specify

		if (!D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X9_D0_R_Z_R_00,`HS65_LS_MUX21X9_D0_F_Z_F_00);
		if (D1 && !S0) (D0 +=> Z) = (`HS65_LS_MUX21X9_D0_R_Z_R_10,`HS65_LS_MUX21X9_D0_F_Z_F_10);
		if (!D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X9_D1_R_Z_R_01,`HS65_LS_MUX21X9_D1_F_Z_F_01);
		if (D0 && S0) (D1 +=> Z) = (`HS65_LS_MUX21X9_D1_R_Z_R_11,`HS65_LS_MUX21X9_D1_F_Z_F_11);
		if (D0 && !D1) (S0 -=> Z) = (`HS65_LS_MUX21X9_S0_F_Z_R_10,`HS65_LS_MUX21X9_S0_R_Z_F_10);
		if (!D0 && D1) (S0 +=> Z) = (`HS65_LS_MUX21X9_S0_R_Z_R_01,`HS65_LS_MUX21X9_S0_F_Z_F_01);


	endspecify

endmodule // HS65_LS_MUX21X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX31X18_D0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X18_D0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X18_D0_R_Z_R_1000 0.1
`define HS65_LS_MUX31X18_D0_F_Z_F_1000 0.1
`define HS65_LS_MUX31X18_D0_R_Z_R_1100 0.1
`define HS65_LS_MUX31X18_D0_F_Z_F_1100 0.1
`define HS65_LS_MUX31X18_D0_R_Z_R_0000 0.1
`define HS65_LS_MUX31X18_D0_F_Z_F_0000 0.1
`define HS65_LS_MUX31X18_D1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X18_D1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X18_D1_R_Z_R_1010 0.1
`define HS65_LS_MUX31X18_D1_F_Z_F_1010 0.1
`define HS65_LS_MUX31X18_D1_R_Z_R_1110 0.1
`define HS65_LS_MUX31X18_D1_F_Z_F_1110 0.1
`define HS65_LS_MUX31X18_D1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X18_D1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_0001 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_0001 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_1011 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_1011 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_1101 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_1101 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_1111 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_1111 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_1001 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_1001 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_0011 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_0011 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_0101 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_0101 0.1
`define HS65_LS_MUX31X18_D2_R_Z_R_0111 0.1
`define HS65_LS_MUX31X18_D2_F_Z_F_0111 0.1
`define HS65_LS_MUX31X18_S0_R_Z_F_1010 0.1
`define HS65_LS_MUX31X18_S0_F_Z_R_1010 0.1
`define HS65_LS_MUX31X18_S0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X18_S0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X18_S0_R_Z_R_0110 0.1
`define HS65_LS_MUX31X18_S0_F_Z_F_0110 0.1
`define HS65_LS_MUX31X18_S0_R_Z_F_1000 0.1
`define HS65_LS_MUX31X18_S0_F_Z_R_1000 0.1
`define HS65_LS_MUX31X18_S1_R_Z_F_0101 0.1
`define HS65_LS_MUX31X18_S1_F_Z_R_0101 0.1
`define HS65_LS_MUX31X18_S1_R_Z_R_0011 0.1
`define HS65_LS_MUX31X18_S1_F_Z_F_0011 0.1
`define HS65_LS_MUX31X18_S1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X18_S1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X18_S1_R_Z_R_1011 0.1
`define HS65_LS_MUX31X18_S1_F_Z_F_1011 0.1
`define HS65_LS_MUX31X18_S1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X18_S1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X18_S1_R_Z_F_1000 0.1
`define HS65_LS_MUX31X18_S1_F_Z_R_1000 0.1
`define HS65_LS_MUX31X18_S1_R_Z_F_1100 0.1
`define HS65_LS_MUX31X18_S1_F_Z_R_1100 0.1
`define HS65_LS_MUX31X18_S1_R_Z_F_1101 0.1
`define HS65_LS_MUX31X18_S1_F_Z_R_1101 0.1

module HS65_LS_MUX31X18 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D2, S1) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X18_D0_R_Z_R_0100,`HS65_LS_MUX31X18_D0_F_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X18_D0_R_Z_R_1000,`HS65_LS_MUX31X18_D0_F_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X18_D0_R_Z_R_1100,`HS65_LS_MUX31X18_D0_F_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X18_D0_R_Z_R_0000,`HS65_LS_MUX31X18_D0_F_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X18_D1_R_Z_R_0110,`HS65_LS_MUX31X18_D1_F_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X18_D1_R_Z_R_1010,`HS65_LS_MUX31X18_D1_F_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X18_D1_R_Z_R_1110,`HS65_LS_MUX31X18_D1_F_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X18_D1_R_Z_R_0010,`HS65_LS_MUX31X18_D1_F_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_0001,`HS65_LS_MUX31X18_D2_F_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_1011,`HS65_LS_MUX31X18_D2_F_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_1101,`HS65_LS_MUX31X18_D2_F_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_1111,`HS65_LS_MUX31X18_D2_F_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_1001,`HS65_LS_MUX31X18_D2_F_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_0011,`HS65_LS_MUX31X18_D2_F_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_0101,`HS65_LS_MUX31X18_D2_F_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X18_D2_R_Z_R_0111,`HS65_LS_MUX31X18_D2_F_Z_F_0111);
		if (D0 && !D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X18_S0_F_Z_R_1010,`HS65_LS_MUX31X18_S0_R_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X18_S0_R_Z_R_0100,`HS65_LS_MUX31X18_S0_F_Z_F_0100);
		if (!D0 && D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X18_S0_R_Z_R_0110,`HS65_LS_MUX31X18_S0_F_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X18_S0_F_Z_R_1000,`HS65_LS_MUX31X18_S0_R_Z_F_1000);
		if (!D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X18_S1_F_Z_R_0101,`HS65_LS_MUX31X18_S1_R_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X18_S1_R_Z_R_0011,`HS65_LS_MUX31X18_S1_F_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X18_S1_R_Z_R_0110,`HS65_LS_MUX31X18_S1_F_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X18_S1_R_Z_R_1011,`HS65_LS_MUX31X18_S1_F_Z_F_1011);
		if (!D0 && !D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X18_S1_R_Z_R_0010,`HS65_LS_MUX31X18_S1_F_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X18_S1_F_Z_R_1000,`HS65_LS_MUX31X18_S1_R_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X18_S1_F_Z_R_1100,`HS65_LS_MUX31X18_S1_R_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X18_S1_F_Z_R_1101,`HS65_LS_MUX31X18_S1_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_MUX31X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX31X27_D0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X27_D0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X27_D0_R_Z_R_1000 0.1
`define HS65_LS_MUX31X27_D0_F_Z_F_1000 0.1
`define HS65_LS_MUX31X27_D0_R_Z_R_1100 0.1
`define HS65_LS_MUX31X27_D0_F_Z_F_1100 0.1
`define HS65_LS_MUX31X27_D0_R_Z_R_0000 0.1
`define HS65_LS_MUX31X27_D0_F_Z_F_0000 0.1
`define HS65_LS_MUX31X27_D1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X27_D1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X27_D1_R_Z_R_1010 0.1
`define HS65_LS_MUX31X27_D1_F_Z_F_1010 0.1
`define HS65_LS_MUX31X27_D1_R_Z_R_1110 0.1
`define HS65_LS_MUX31X27_D1_F_Z_F_1110 0.1
`define HS65_LS_MUX31X27_D1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X27_D1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_0001 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_0001 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_1011 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_1011 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_1101 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_1101 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_1111 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_1111 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_1001 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_1001 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_0011 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_0011 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_0101 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_0101 0.1
`define HS65_LS_MUX31X27_D2_R_Z_R_0111 0.1
`define HS65_LS_MUX31X27_D2_F_Z_F_0111 0.1
`define HS65_LS_MUX31X27_S0_R_Z_F_1010 0.1
`define HS65_LS_MUX31X27_S0_F_Z_R_1010 0.1
`define HS65_LS_MUX31X27_S0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X27_S0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X27_S0_R_Z_R_0110 0.1
`define HS65_LS_MUX31X27_S0_F_Z_F_0110 0.1
`define HS65_LS_MUX31X27_S0_R_Z_F_1000 0.1
`define HS65_LS_MUX31X27_S0_F_Z_R_1000 0.1
`define HS65_LS_MUX31X27_S1_R_Z_F_0101 0.1
`define HS65_LS_MUX31X27_S1_F_Z_R_0101 0.1
`define HS65_LS_MUX31X27_S1_R_Z_R_0011 0.1
`define HS65_LS_MUX31X27_S1_F_Z_F_0011 0.1
`define HS65_LS_MUX31X27_S1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X27_S1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X27_S1_R_Z_R_1011 0.1
`define HS65_LS_MUX31X27_S1_F_Z_F_1011 0.1
`define HS65_LS_MUX31X27_S1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X27_S1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X27_S1_R_Z_F_1000 0.1
`define HS65_LS_MUX31X27_S1_F_Z_R_1000 0.1
`define HS65_LS_MUX31X27_S1_R_Z_F_1100 0.1
`define HS65_LS_MUX31X27_S1_F_Z_R_1100 0.1
`define HS65_LS_MUX31X27_S1_R_Z_F_1101 0.1
`define HS65_LS_MUX31X27_S1_F_Z_R_1101 0.1

module HS65_LS_MUX31X27 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D2, S1) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X27_D0_R_Z_R_0100,`HS65_LS_MUX31X27_D0_F_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X27_D0_R_Z_R_1000,`HS65_LS_MUX31X27_D0_F_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X27_D0_R_Z_R_1100,`HS65_LS_MUX31X27_D0_F_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X27_D0_R_Z_R_0000,`HS65_LS_MUX31X27_D0_F_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X27_D1_R_Z_R_0110,`HS65_LS_MUX31X27_D1_F_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X27_D1_R_Z_R_1010,`HS65_LS_MUX31X27_D1_F_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X27_D1_R_Z_R_1110,`HS65_LS_MUX31X27_D1_F_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X27_D1_R_Z_R_0010,`HS65_LS_MUX31X27_D1_F_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_0001,`HS65_LS_MUX31X27_D2_F_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_1011,`HS65_LS_MUX31X27_D2_F_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_1101,`HS65_LS_MUX31X27_D2_F_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_1111,`HS65_LS_MUX31X27_D2_F_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_1001,`HS65_LS_MUX31X27_D2_F_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_0011,`HS65_LS_MUX31X27_D2_F_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_0101,`HS65_LS_MUX31X27_D2_F_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X27_D2_R_Z_R_0111,`HS65_LS_MUX31X27_D2_F_Z_F_0111);
		if (D0 && !D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X27_S0_F_Z_R_1010,`HS65_LS_MUX31X27_S0_R_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X27_S0_R_Z_R_0100,`HS65_LS_MUX31X27_S0_F_Z_F_0100);
		if (!D0 && D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X27_S0_R_Z_R_0110,`HS65_LS_MUX31X27_S0_F_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X27_S0_F_Z_R_1000,`HS65_LS_MUX31X27_S0_R_Z_F_1000);
		if (!D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X27_S1_F_Z_R_0101,`HS65_LS_MUX31X27_S1_R_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X27_S1_R_Z_R_0011,`HS65_LS_MUX31X27_S1_F_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X27_S1_R_Z_R_0110,`HS65_LS_MUX31X27_S1_F_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X27_S1_R_Z_R_1011,`HS65_LS_MUX31X27_S1_F_Z_F_1011);
		if (!D0 && !D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X27_S1_R_Z_R_0010,`HS65_LS_MUX31X27_S1_F_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X27_S1_F_Z_R_1000,`HS65_LS_MUX31X27_S1_R_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X27_S1_F_Z_R_1100,`HS65_LS_MUX31X27_S1_R_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X27_S1_F_Z_R_1101,`HS65_LS_MUX31X27_S1_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_MUX31X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX31X35_D0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X35_D0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X35_D0_R_Z_R_1000 0.1
`define HS65_LS_MUX31X35_D0_F_Z_F_1000 0.1
`define HS65_LS_MUX31X35_D0_R_Z_R_1100 0.1
`define HS65_LS_MUX31X35_D0_F_Z_F_1100 0.1
`define HS65_LS_MUX31X35_D0_R_Z_R_0000 0.1
`define HS65_LS_MUX31X35_D0_F_Z_F_0000 0.1
`define HS65_LS_MUX31X35_D1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X35_D1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X35_D1_R_Z_R_1010 0.1
`define HS65_LS_MUX31X35_D1_F_Z_F_1010 0.1
`define HS65_LS_MUX31X35_D1_R_Z_R_1110 0.1
`define HS65_LS_MUX31X35_D1_F_Z_F_1110 0.1
`define HS65_LS_MUX31X35_D1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X35_D1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_0001 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_0001 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_1011 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_1011 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_1101 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_1101 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_1111 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_1111 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_1001 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_1001 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_0011 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_0011 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_0101 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_0101 0.1
`define HS65_LS_MUX31X35_D2_R_Z_R_0111 0.1
`define HS65_LS_MUX31X35_D2_F_Z_F_0111 0.1
`define HS65_LS_MUX31X35_S0_R_Z_F_1010 0.1
`define HS65_LS_MUX31X35_S0_F_Z_R_1010 0.1
`define HS65_LS_MUX31X35_S0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X35_S0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X35_S0_R_Z_R_0110 0.1
`define HS65_LS_MUX31X35_S0_F_Z_F_0110 0.1
`define HS65_LS_MUX31X35_S0_R_Z_F_1000 0.1
`define HS65_LS_MUX31X35_S0_F_Z_R_1000 0.1
`define HS65_LS_MUX31X35_S1_R_Z_F_0101 0.1
`define HS65_LS_MUX31X35_S1_F_Z_R_0101 0.1
`define HS65_LS_MUX31X35_S1_R_Z_R_0011 0.1
`define HS65_LS_MUX31X35_S1_F_Z_F_0011 0.1
`define HS65_LS_MUX31X35_S1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X35_S1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X35_S1_R_Z_R_1011 0.1
`define HS65_LS_MUX31X35_S1_F_Z_F_1011 0.1
`define HS65_LS_MUX31X35_S1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X35_S1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X35_S1_R_Z_F_1000 0.1
`define HS65_LS_MUX31X35_S1_F_Z_R_1000 0.1
`define HS65_LS_MUX31X35_S1_R_Z_F_1100 0.1
`define HS65_LS_MUX31X35_S1_F_Z_R_1100 0.1
`define HS65_LS_MUX31X35_S1_R_Z_F_1101 0.1
`define HS65_LS_MUX31X35_S1_F_Z_R_1101 0.1

module HS65_LS_MUX31X35 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D2, S1) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X35_D0_R_Z_R_0100,`HS65_LS_MUX31X35_D0_F_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X35_D0_R_Z_R_1000,`HS65_LS_MUX31X35_D0_F_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X35_D0_R_Z_R_1100,`HS65_LS_MUX31X35_D0_F_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X35_D0_R_Z_R_0000,`HS65_LS_MUX31X35_D0_F_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X35_D1_R_Z_R_0110,`HS65_LS_MUX31X35_D1_F_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X35_D1_R_Z_R_1010,`HS65_LS_MUX31X35_D1_F_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X35_D1_R_Z_R_1110,`HS65_LS_MUX31X35_D1_F_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X35_D1_R_Z_R_0010,`HS65_LS_MUX31X35_D1_F_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_0001,`HS65_LS_MUX31X35_D2_F_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_1011,`HS65_LS_MUX31X35_D2_F_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_1101,`HS65_LS_MUX31X35_D2_F_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_1111,`HS65_LS_MUX31X35_D2_F_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_1001,`HS65_LS_MUX31X35_D2_F_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_0011,`HS65_LS_MUX31X35_D2_F_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_0101,`HS65_LS_MUX31X35_D2_F_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X35_D2_R_Z_R_0111,`HS65_LS_MUX31X35_D2_F_Z_F_0111);
		if (D0 && !D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X35_S0_F_Z_R_1010,`HS65_LS_MUX31X35_S0_R_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X35_S0_R_Z_R_0100,`HS65_LS_MUX31X35_S0_F_Z_F_0100);
		if (!D0 && D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X35_S0_R_Z_R_0110,`HS65_LS_MUX31X35_S0_F_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X35_S0_F_Z_R_1000,`HS65_LS_MUX31X35_S0_R_Z_F_1000);
		if (!D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X35_S1_F_Z_R_0101,`HS65_LS_MUX31X35_S1_R_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X35_S1_R_Z_R_0011,`HS65_LS_MUX31X35_S1_F_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X35_S1_R_Z_R_0110,`HS65_LS_MUX31X35_S1_F_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X35_S1_R_Z_R_1011,`HS65_LS_MUX31X35_S1_F_Z_F_1011);
		if (!D0 && !D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X35_S1_R_Z_R_0010,`HS65_LS_MUX31X35_S1_F_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X35_S1_F_Z_R_1000,`HS65_LS_MUX31X35_S1_R_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X35_S1_F_Z_R_1100,`HS65_LS_MUX31X35_S1_R_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X35_S1_F_Z_R_1101,`HS65_LS_MUX31X35_S1_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_MUX31X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX31X4_D0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X4_D0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X4_D0_R_Z_R_1000 0.1
`define HS65_LS_MUX31X4_D0_F_Z_F_1000 0.1
`define HS65_LS_MUX31X4_D0_R_Z_R_1100 0.1
`define HS65_LS_MUX31X4_D0_F_Z_F_1100 0.1
`define HS65_LS_MUX31X4_D0_R_Z_R_0000 0.1
`define HS65_LS_MUX31X4_D0_F_Z_F_0000 0.1
`define HS65_LS_MUX31X4_D1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X4_D1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X4_D1_R_Z_R_1010 0.1
`define HS65_LS_MUX31X4_D1_F_Z_F_1010 0.1
`define HS65_LS_MUX31X4_D1_R_Z_R_1110 0.1
`define HS65_LS_MUX31X4_D1_F_Z_F_1110 0.1
`define HS65_LS_MUX31X4_D1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X4_D1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_0001 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_0001 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_1011 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_1011 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_1101 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_1101 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_1111 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_1111 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_1001 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_1001 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_0011 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_0011 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_0101 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_0101 0.1
`define HS65_LS_MUX31X4_D2_R_Z_R_0111 0.1
`define HS65_LS_MUX31X4_D2_F_Z_F_0111 0.1
`define HS65_LS_MUX31X4_S0_R_Z_F_1010 0.1
`define HS65_LS_MUX31X4_S0_F_Z_R_1010 0.1
`define HS65_LS_MUX31X4_S0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X4_S0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X4_S0_R_Z_R_0110 0.1
`define HS65_LS_MUX31X4_S0_F_Z_F_0110 0.1
`define HS65_LS_MUX31X4_S0_R_Z_F_1000 0.1
`define HS65_LS_MUX31X4_S0_F_Z_R_1000 0.1
`define HS65_LS_MUX31X4_S1_R_Z_F_0101 0.1
`define HS65_LS_MUX31X4_S1_F_Z_R_0101 0.1
`define HS65_LS_MUX31X4_S1_R_Z_R_0011 0.1
`define HS65_LS_MUX31X4_S1_F_Z_F_0011 0.1
`define HS65_LS_MUX31X4_S1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X4_S1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X4_S1_R_Z_R_1011 0.1
`define HS65_LS_MUX31X4_S1_F_Z_F_1011 0.1
`define HS65_LS_MUX31X4_S1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X4_S1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X4_S1_R_Z_F_1000 0.1
`define HS65_LS_MUX31X4_S1_F_Z_R_1000 0.1
`define HS65_LS_MUX31X4_S1_R_Z_F_1100 0.1
`define HS65_LS_MUX31X4_S1_F_Z_R_1100 0.1
`define HS65_LS_MUX31X4_S1_R_Z_F_1101 0.1
`define HS65_LS_MUX31X4_S1_F_Z_R_1101 0.1

module HS65_LS_MUX31X4 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D2, S1) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X4_D0_R_Z_R_0100,`HS65_LS_MUX31X4_D0_F_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X4_D0_R_Z_R_1000,`HS65_LS_MUX31X4_D0_F_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X4_D0_R_Z_R_1100,`HS65_LS_MUX31X4_D0_F_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X4_D0_R_Z_R_0000,`HS65_LS_MUX31X4_D0_F_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X4_D1_R_Z_R_0110,`HS65_LS_MUX31X4_D1_F_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X4_D1_R_Z_R_1010,`HS65_LS_MUX31X4_D1_F_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X4_D1_R_Z_R_1110,`HS65_LS_MUX31X4_D1_F_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X4_D1_R_Z_R_0010,`HS65_LS_MUX31X4_D1_F_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_0001,`HS65_LS_MUX31X4_D2_F_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_1011,`HS65_LS_MUX31X4_D2_F_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_1101,`HS65_LS_MUX31X4_D2_F_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_1111,`HS65_LS_MUX31X4_D2_F_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_1001,`HS65_LS_MUX31X4_D2_F_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_0011,`HS65_LS_MUX31X4_D2_F_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_0101,`HS65_LS_MUX31X4_D2_F_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X4_D2_R_Z_R_0111,`HS65_LS_MUX31X4_D2_F_Z_F_0111);
		if (D0 && !D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X4_S0_F_Z_R_1010,`HS65_LS_MUX31X4_S0_R_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X4_S0_R_Z_R_0100,`HS65_LS_MUX31X4_S0_F_Z_F_0100);
		if (!D0 && D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X4_S0_R_Z_R_0110,`HS65_LS_MUX31X4_S0_F_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X4_S0_F_Z_R_1000,`HS65_LS_MUX31X4_S0_R_Z_F_1000);
		if (!D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X4_S1_F_Z_R_0101,`HS65_LS_MUX31X4_S1_R_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X4_S1_R_Z_R_0011,`HS65_LS_MUX31X4_S1_F_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X4_S1_R_Z_R_0110,`HS65_LS_MUX31X4_S1_F_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X4_S1_R_Z_R_1011,`HS65_LS_MUX31X4_S1_F_Z_F_1011);
		if (!D0 && !D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X4_S1_R_Z_R_0010,`HS65_LS_MUX31X4_S1_F_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X4_S1_F_Z_R_1000,`HS65_LS_MUX31X4_S1_R_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X4_S1_F_Z_R_1100,`HS65_LS_MUX31X4_S1_R_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X4_S1_F_Z_R_1101,`HS65_LS_MUX31X4_S1_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_MUX31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX31X9_D0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X9_D0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X9_D0_R_Z_R_1000 0.1
`define HS65_LS_MUX31X9_D0_F_Z_F_1000 0.1
`define HS65_LS_MUX31X9_D0_R_Z_R_1100 0.1
`define HS65_LS_MUX31X9_D0_F_Z_F_1100 0.1
`define HS65_LS_MUX31X9_D0_R_Z_R_0000 0.1
`define HS65_LS_MUX31X9_D0_F_Z_F_0000 0.1
`define HS65_LS_MUX31X9_D1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X9_D1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X9_D1_R_Z_R_1010 0.1
`define HS65_LS_MUX31X9_D1_F_Z_F_1010 0.1
`define HS65_LS_MUX31X9_D1_R_Z_R_1110 0.1
`define HS65_LS_MUX31X9_D1_F_Z_F_1110 0.1
`define HS65_LS_MUX31X9_D1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X9_D1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_0001 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_0001 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_1011 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_1011 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_1101 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_1101 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_1111 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_1111 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_1001 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_1001 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_0011 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_0011 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_0101 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_0101 0.1
`define HS65_LS_MUX31X9_D2_R_Z_R_0111 0.1
`define HS65_LS_MUX31X9_D2_F_Z_F_0111 0.1
`define HS65_LS_MUX31X9_S0_R_Z_F_1010 0.1
`define HS65_LS_MUX31X9_S0_F_Z_R_1010 0.1
`define HS65_LS_MUX31X9_S0_R_Z_R_0100 0.1
`define HS65_LS_MUX31X9_S0_F_Z_F_0100 0.1
`define HS65_LS_MUX31X9_S0_R_Z_R_0110 0.1
`define HS65_LS_MUX31X9_S0_F_Z_F_0110 0.1
`define HS65_LS_MUX31X9_S0_R_Z_F_1000 0.1
`define HS65_LS_MUX31X9_S0_F_Z_R_1000 0.1
`define HS65_LS_MUX31X9_S1_R_Z_F_0101 0.1
`define HS65_LS_MUX31X9_S1_F_Z_R_0101 0.1
`define HS65_LS_MUX31X9_S1_R_Z_R_0011 0.1
`define HS65_LS_MUX31X9_S1_F_Z_F_0011 0.1
`define HS65_LS_MUX31X9_S1_R_Z_R_0110 0.1
`define HS65_LS_MUX31X9_S1_F_Z_F_0110 0.1
`define HS65_LS_MUX31X9_S1_R_Z_R_1011 0.1
`define HS65_LS_MUX31X9_S1_F_Z_F_1011 0.1
`define HS65_LS_MUX31X9_S1_R_Z_R_0010 0.1
`define HS65_LS_MUX31X9_S1_F_Z_F_0010 0.1
`define HS65_LS_MUX31X9_S1_R_Z_F_1000 0.1
`define HS65_LS_MUX31X9_S1_F_Z_R_1000 0.1
`define HS65_LS_MUX31X9_S1_R_Z_F_1100 0.1
`define HS65_LS_MUX31X9_S1_F_Z_R_1100 0.1
`define HS65_LS_MUX31X9_S1_R_Z_F_1101 0.1
`define HS65_LS_MUX31X9_S1_F_Z_R_1101 0.1

module HS65_LS_MUX31X9 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2  #1 U2 (Z, INTERNAL1, D2, S1) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X9_D0_R_Z_R_0100,`HS65_LS_MUX31X9_D0_F_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X9_D0_R_Z_R_1000,`HS65_LS_MUX31X9_D0_F_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X9_D0_R_Z_R_1100,`HS65_LS_MUX31X9_D0_F_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX31X9_D0_R_Z_R_0000,`HS65_LS_MUX31X9_D0_F_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X9_D1_R_Z_R_0110,`HS65_LS_MUX31X9_D1_F_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X9_D1_R_Z_R_1010,`HS65_LS_MUX31X9_D1_F_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X9_D1_R_Z_R_1110,`HS65_LS_MUX31X9_D1_F_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX31X9_D1_R_Z_R_0010,`HS65_LS_MUX31X9_D1_F_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_0001,`HS65_LS_MUX31X9_D2_F_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_1011,`HS65_LS_MUX31X9_D2_F_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_1101,`HS65_LS_MUX31X9_D2_F_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_1111,`HS65_LS_MUX31X9_D2_F_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_1001,`HS65_LS_MUX31X9_D2_F_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_0011,`HS65_LS_MUX31X9_D2_F_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_0101,`HS65_LS_MUX31X9_D2_F_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX31X9_D2_R_Z_R_0111,`HS65_LS_MUX31X9_D2_F_Z_F_0111);
		if (D0 && !D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X9_S0_F_Z_R_1010,`HS65_LS_MUX31X9_S0_R_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X9_S0_R_Z_R_0100,`HS65_LS_MUX31X9_S0_F_Z_F_0100);
		if (!D0 && D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUX31X9_S0_R_Z_R_0110,`HS65_LS_MUX31X9_S0_F_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUX31X9_S0_F_Z_R_1000,`HS65_LS_MUX31X9_S0_R_Z_F_1000);
		if (!D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X9_S1_F_Z_R_0101,`HS65_LS_MUX31X9_S1_R_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X9_S1_R_Z_R_0011,`HS65_LS_MUX31X9_S1_F_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X9_S1_R_Z_R_0110,`HS65_LS_MUX31X9_S1_F_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 +=> Z) = (`HS65_LS_MUX31X9_S1_R_Z_R_1011,`HS65_LS_MUX31X9_S1_F_Z_F_1011);
		if (!D0 && !D1 && D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUX31X9_S1_R_Z_R_0010,`HS65_LS_MUX31X9_S1_F_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X9_S1_F_Z_R_1000,`HS65_LS_MUX31X9_S1_R_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUX31X9_S1_F_Z_R_1100,`HS65_LS_MUX31X9_S1_R_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 -=> Z) = (`HS65_LS_MUX31X9_S1_F_Z_R_1101,`HS65_LS_MUX31X9_S1_R_Z_F_1101);


	endspecify

endmodule // HS65_LS_MUX31X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX41X18_D0_R_Z_R_00000 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_00000 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_10100 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_10100 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_11000 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_11000 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_11100 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_11100 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_10000 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_10000 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_00100 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_00100 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X18_D0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X18_D0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_00010 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_00010 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_10110 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_10110 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_11010 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_11010 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_11110 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_11110 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_10010 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_10010 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_01010 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_01010 0.1
`define HS65_LS_MUX41X18_D1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X18_D1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_00001 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_00001 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_10101 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_10101 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_11001 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_11001 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_11101 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_11101 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_10001 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_10001 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_00101 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_00101 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_01001 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_01001 0.1
`define HS65_LS_MUX41X18_D2_R_Z_R_01101 0.1
`define HS65_LS_MUX41X18_D2_F_Z_F_01101 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_00011 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_00011 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_10111 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_10111 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_11011 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_11011 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_11111 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_11111 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_10011 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_10011 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_00111 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_00111 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_01011 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_01011 0.1
`define HS65_LS_MUX41X18_D3_R_Z_R_01111 0.1
`define HS65_LS_MUX41X18_D3_F_Z_F_01111 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_00101 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_00101 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_10101 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_10101 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_10110 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_10110 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_11101 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_11101 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_10100 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_10100 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_01101 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_01101 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_10000 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_10000 0.1
`define HS65_LS_MUX41X18_S0_R_Z_F_10010 0.1
`define HS65_LS_MUX41X18_S0_F_Z_R_10010 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_00011 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_00011 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_01110 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_01110 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_10011 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_10011 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_11011 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_11011 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_01010 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_01010 0.1
`define HS65_LS_MUX41X18_S0_R_Z_R_01011 0.1
`define HS65_LS_MUX41X18_S0_F_Z_F_01011 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_01001 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_01001 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_11001 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_11001 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_11010 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_11010 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_11101 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_11101 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_11000 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_11000 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_01101 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_01101 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_10000 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_10000 0.1
`define HS65_LS_MUX41X18_S1_R_Z_F_10010 0.1
`define HS65_LS_MUX41X18_S1_F_Z_R_10010 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_00011 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_00011 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_10011 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_10011 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_10111 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_10111 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_01100 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_01100 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_00100 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_00100 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X18_S1_R_Z_R_00111 0.1
`define HS65_LS_MUX41X18_S1_F_Z_F_00111 0.1

module HS65_LS_MUX41X18 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Z, INTERNAL1, INTERNAL2, S1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_00000,`HS65_LS_MUX41X18_D0_F_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_10100,`HS65_LS_MUX41X18_D0_F_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_11000,`HS65_LS_MUX41X18_D0_F_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_11100,`HS65_LS_MUX41X18_D0_F_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_10000,`HS65_LS_MUX41X18_D0_F_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_00100,`HS65_LS_MUX41X18_D0_F_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_01000,`HS65_LS_MUX41X18_D0_F_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X18_D0_R_Z_R_01100,`HS65_LS_MUX41X18_D0_F_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_00010,`HS65_LS_MUX41X18_D1_F_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_10110,`HS65_LS_MUX41X18_D1_F_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_11010,`HS65_LS_MUX41X18_D1_F_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_11110,`HS65_LS_MUX41X18_D1_F_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_10010,`HS65_LS_MUX41X18_D1_F_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_00110,`HS65_LS_MUX41X18_D1_F_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_01010,`HS65_LS_MUX41X18_D1_F_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X18_D1_R_Z_R_01110,`HS65_LS_MUX41X18_D1_F_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_00001,`HS65_LS_MUX41X18_D2_F_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_10101,`HS65_LS_MUX41X18_D2_F_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_11001,`HS65_LS_MUX41X18_D2_F_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_11101,`HS65_LS_MUX41X18_D2_F_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_10001,`HS65_LS_MUX41X18_D2_F_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_00101,`HS65_LS_MUX41X18_D2_F_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_01001,`HS65_LS_MUX41X18_D2_F_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X18_D2_R_Z_R_01101,`HS65_LS_MUX41X18_D2_F_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_00011,`HS65_LS_MUX41X18_D3_F_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_10111,`HS65_LS_MUX41X18_D3_F_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_11011,`HS65_LS_MUX41X18_D3_F_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_11111,`HS65_LS_MUX41X18_D3_F_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_10011,`HS65_LS_MUX41X18_D3_F_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_00111,`HS65_LS_MUX41X18_D3_F_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_01011,`HS65_LS_MUX41X18_D3_F_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X18_D3_R_Z_R_01111,`HS65_LS_MUX41X18_D3_F_Z_F_01111);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_00101,`HS65_LS_MUX41X18_S0_R_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_10101,`HS65_LS_MUX41X18_S0_R_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_10110,`HS65_LS_MUX41X18_S0_R_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_11101,`HS65_LS_MUX41X18_S0_R_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_10100,`HS65_LS_MUX41X18_S0_R_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_01101,`HS65_LS_MUX41X18_S0_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_10000,`HS65_LS_MUX41X18_S0_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X18_S0_F_Z_R_10010,`HS65_LS_MUX41X18_S0_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_00011,`HS65_LS_MUX41X18_S0_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_01110,`HS65_LS_MUX41X18_S0_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_10011,`HS65_LS_MUX41X18_S0_F_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_11011,`HS65_LS_MUX41X18_S0_F_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_01100,`HS65_LS_MUX41X18_S0_F_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_01000,`HS65_LS_MUX41X18_S0_F_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_01010,`HS65_LS_MUX41X18_S0_F_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X18_S0_R_Z_R_01011,`HS65_LS_MUX41X18_S0_F_Z_F_01011);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_01001,`HS65_LS_MUX41X18_S1_R_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_11001,`HS65_LS_MUX41X18_S1_R_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_11010,`HS65_LS_MUX41X18_S1_R_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_11101,`HS65_LS_MUX41X18_S1_R_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_11000,`HS65_LS_MUX41X18_S1_R_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_01101,`HS65_LS_MUX41X18_S1_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_10000,`HS65_LS_MUX41X18_S1_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X18_S1_F_Z_R_10010,`HS65_LS_MUX41X18_S1_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_00011,`HS65_LS_MUX41X18_S1_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_01110,`HS65_LS_MUX41X18_S1_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_10011,`HS65_LS_MUX41X18_S1_F_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_10111,`HS65_LS_MUX41X18_S1_F_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_01100,`HS65_LS_MUX41X18_S1_F_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_00100,`HS65_LS_MUX41X18_S1_F_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_00110,`HS65_LS_MUX41X18_S1_F_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X18_S1_R_Z_R_00111,`HS65_LS_MUX41X18_S1_F_Z_F_00111);


	endspecify

endmodule // HS65_LS_MUX41X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX41X27_D0_R_Z_R_00000 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_00000 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_10100 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_10100 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_11000 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_11000 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_11100 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_11100 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_10000 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_10000 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_00100 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_00100 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X27_D0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X27_D0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_00010 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_00010 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_10110 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_10110 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_11010 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_11010 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_11110 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_11110 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_10010 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_10010 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_01010 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_01010 0.1
`define HS65_LS_MUX41X27_D1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X27_D1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_00001 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_00001 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_10101 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_10101 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_11001 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_11001 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_11101 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_11101 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_10001 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_10001 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_00101 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_00101 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_01001 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_01001 0.1
`define HS65_LS_MUX41X27_D2_R_Z_R_01101 0.1
`define HS65_LS_MUX41X27_D2_F_Z_F_01101 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_00011 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_00011 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_10111 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_10111 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_11011 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_11011 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_11111 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_11111 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_10011 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_10011 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_00111 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_00111 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_01011 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_01011 0.1
`define HS65_LS_MUX41X27_D3_R_Z_R_01111 0.1
`define HS65_LS_MUX41X27_D3_F_Z_F_01111 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_00101 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_00101 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_10101 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_10101 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_10110 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_10110 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_11101 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_11101 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_10100 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_10100 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_01101 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_01101 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_10000 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_10000 0.1
`define HS65_LS_MUX41X27_S0_R_Z_F_10010 0.1
`define HS65_LS_MUX41X27_S0_F_Z_R_10010 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_00011 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_00011 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_01110 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_01110 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_10011 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_10011 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_11011 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_11011 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_01010 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_01010 0.1
`define HS65_LS_MUX41X27_S0_R_Z_R_01011 0.1
`define HS65_LS_MUX41X27_S0_F_Z_F_01011 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_01001 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_01001 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_11001 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_11001 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_11010 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_11010 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_11101 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_11101 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_11000 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_11000 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_01101 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_01101 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_10000 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_10000 0.1
`define HS65_LS_MUX41X27_S1_R_Z_F_10010 0.1
`define HS65_LS_MUX41X27_S1_F_Z_R_10010 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_00011 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_00011 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_10011 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_10011 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_10111 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_10111 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_01100 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_01100 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_00100 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_00100 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X27_S1_R_Z_R_00111 0.1
`define HS65_LS_MUX41X27_S1_F_Z_F_00111 0.1

module HS65_LS_MUX41X27 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Z, INTERNAL1, INTERNAL2, S1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_00000,`HS65_LS_MUX41X27_D0_F_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_10100,`HS65_LS_MUX41X27_D0_F_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_11000,`HS65_LS_MUX41X27_D0_F_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_11100,`HS65_LS_MUX41X27_D0_F_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_10000,`HS65_LS_MUX41X27_D0_F_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_00100,`HS65_LS_MUX41X27_D0_F_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_01000,`HS65_LS_MUX41X27_D0_F_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X27_D0_R_Z_R_01100,`HS65_LS_MUX41X27_D0_F_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_00010,`HS65_LS_MUX41X27_D1_F_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_10110,`HS65_LS_MUX41X27_D1_F_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_11010,`HS65_LS_MUX41X27_D1_F_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_11110,`HS65_LS_MUX41X27_D1_F_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_10010,`HS65_LS_MUX41X27_D1_F_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_00110,`HS65_LS_MUX41X27_D1_F_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_01010,`HS65_LS_MUX41X27_D1_F_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X27_D1_R_Z_R_01110,`HS65_LS_MUX41X27_D1_F_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_00001,`HS65_LS_MUX41X27_D2_F_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_10101,`HS65_LS_MUX41X27_D2_F_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_11001,`HS65_LS_MUX41X27_D2_F_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_11101,`HS65_LS_MUX41X27_D2_F_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_10001,`HS65_LS_MUX41X27_D2_F_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_00101,`HS65_LS_MUX41X27_D2_F_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_01001,`HS65_LS_MUX41X27_D2_F_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X27_D2_R_Z_R_01101,`HS65_LS_MUX41X27_D2_F_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_00011,`HS65_LS_MUX41X27_D3_F_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_10111,`HS65_LS_MUX41X27_D3_F_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_11011,`HS65_LS_MUX41X27_D3_F_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_11111,`HS65_LS_MUX41X27_D3_F_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_10011,`HS65_LS_MUX41X27_D3_F_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_00111,`HS65_LS_MUX41X27_D3_F_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_01011,`HS65_LS_MUX41X27_D3_F_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X27_D3_R_Z_R_01111,`HS65_LS_MUX41X27_D3_F_Z_F_01111);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_00101,`HS65_LS_MUX41X27_S0_R_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_10101,`HS65_LS_MUX41X27_S0_R_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_10110,`HS65_LS_MUX41X27_S0_R_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_11101,`HS65_LS_MUX41X27_S0_R_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_10100,`HS65_LS_MUX41X27_S0_R_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_01101,`HS65_LS_MUX41X27_S0_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_10000,`HS65_LS_MUX41X27_S0_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X27_S0_F_Z_R_10010,`HS65_LS_MUX41X27_S0_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_00011,`HS65_LS_MUX41X27_S0_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_01110,`HS65_LS_MUX41X27_S0_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_10011,`HS65_LS_MUX41X27_S0_F_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_11011,`HS65_LS_MUX41X27_S0_F_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_01100,`HS65_LS_MUX41X27_S0_F_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_01000,`HS65_LS_MUX41X27_S0_F_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_01010,`HS65_LS_MUX41X27_S0_F_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X27_S0_R_Z_R_01011,`HS65_LS_MUX41X27_S0_F_Z_F_01011);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_01001,`HS65_LS_MUX41X27_S1_R_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_11001,`HS65_LS_MUX41X27_S1_R_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_11010,`HS65_LS_MUX41X27_S1_R_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_11101,`HS65_LS_MUX41X27_S1_R_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_11000,`HS65_LS_MUX41X27_S1_R_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_01101,`HS65_LS_MUX41X27_S1_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_10000,`HS65_LS_MUX41X27_S1_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X27_S1_F_Z_R_10010,`HS65_LS_MUX41X27_S1_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_00011,`HS65_LS_MUX41X27_S1_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_01110,`HS65_LS_MUX41X27_S1_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_10011,`HS65_LS_MUX41X27_S1_F_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_10111,`HS65_LS_MUX41X27_S1_F_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_01100,`HS65_LS_MUX41X27_S1_F_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_00100,`HS65_LS_MUX41X27_S1_F_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_00110,`HS65_LS_MUX41X27_S1_F_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X27_S1_R_Z_R_00111,`HS65_LS_MUX41X27_S1_F_Z_F_00111);


	endspecify

endmodule // HS65_LS_MUX41X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX41X35_D0_R_Z_R_00000 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_00000 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_10100 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_10100 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_11000 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_11000 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_11100 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_11100 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_10000 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_10000 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_00100 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_00100 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X35_D0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X35_D0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_00010 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_00010 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_10110 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_10110 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_11010 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_11010 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_11110 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_11110 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_10010 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_10010 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_01010 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_01010 0.1
`define HS65_LS_MUX41X35_D1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X35_D1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_00001 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_00001 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_10101 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_10101 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_11001 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_11001 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_11101 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_11101 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_10001 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_10001 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_00101 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_00101 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_01001 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_01001 0.1
`define HS65_LS_MUX41X35_D2_R_Z_R_01101 0.1
`define HS65_LS_MUX41X35_D2_F_Z_F_01101 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_00011 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_00011 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_10111 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_10111 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_11011 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_11011 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_11111 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_11111 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_10011 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_10011 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_00111 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_00111 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_01011 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_01011 0.1
`define HS65_LS_MUX41X35_D3_R_Z_R_01111 0.1
`define HS65_LS_MUX41X35_D3_F_Z_F_01111 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_00101 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_00101 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_10101 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_10101 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_10110 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_10110 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_11101 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_11101 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_10100 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_10100 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_01101 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_01101 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_10000 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_10000 0.1
`define HS65_LS_MUX41X35_S0_R_Z_F_10010 0.1
`define HS65_LS_MUX41X35_S0_F_Z_R_10010 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_00011 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_00011 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_01110 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_01110 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_10011 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_10011 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_11011 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_11011 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_01010 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_01010 0.1
`define HS65_LS_MUX41X35_S0_R_Z_R_01011 0.1
`define HS65_LS_MUX41X35_S0_F_Z_F_01011 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_01001 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_01001 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_11001 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_11001 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_11010 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_11010 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_11101 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_11101 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_11000 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_11000 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_01101 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_01101 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_10000 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_10000 0.1
`define HS65_LS_MUX41X35_S1_R_Z_F_10010 0.1
`define HS65_LS_MUX41X35_S1_F_Z_R_10010 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_00011 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_00011 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_10011 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_10011 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_10111 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_10111 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_01100 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_01100 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_00100 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_00100 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X35_S1_R_Z_R_00111 0.1
`define HS65_LS_MUX41X35_S1_F_Z_F_00111 0.1

module HS65_LS_MUX41X35 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Z, INTERNAL1, INTERNAL2, S1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_00000,`HS65_LS_MUX41X35_D0_F_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_10100,`HS65_LS_MUX41X35_D0_F_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_11000,`HS65_LS_MUX41X35_D0_F_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_11100,`HS65_LS_MUX41X35_D0_F_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_10000,`HS65_LS_MUX41X35_D0_F_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_00100,`HS65_LS_MUX41X35_D0_F_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_01000,`HS65_LS_MUX41X35_D0_F_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X35_D0_R_Z_R_01100,`HS65_LS_MUX41X35_D0_F_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_00010,`HS65_LS_MUX41X35_D1_F_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_10110,`HS65_LS_MUX41X35_D1_F_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_11010,`HS65_LS_MUX41X35_D1_F_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_11110,`HS65_LS_MUX41X35_D1_F_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_10010,`HS65_LS_MUX41X35_D1_F_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_00110,`HS65_LS_MUX41X35_D1_F_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_01010,`HS65_LS_MUX41X35_D1_F_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X35_D1_R_Z_R_01110,`HS65_LS_MUX41X35_D1_F_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_00001,`HS65_LS_MUX41X35_D2_F_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_10101,`HS65_LS_MUX41X35_D2_F_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_11001,`HS65_LS_MUX41X35_D2_F_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_11101,`HS65_LS_MUX41X35_D2_F_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_10001,`HS65_LS_MUX41X35_D2_F_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_00101,`HS65_LS_MUX41X35_D2_F_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_01001,`HS65_LS_MUX41X35_D2_F_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X35_D2_R_Z_R_01101,`HS65_LS_MUX41X35_D2_F_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_00011,`HS65_LS_MUX41X35_D3_F_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_10111,`HS65_LS_MUX41X35_D3_F_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_11011,`HS65_LS_MUX41X35_D3_F_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_11111,`HS65_LS_MUX41X35_D3_F_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_10011,`HS65_LS_MUX41X35_D3_F_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_00111,`HS65_LS_MUX41X35_D3_F_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_01011,`HS65_LS_MUX41X35_D3_F_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X35_D3_R_Z_R_01111,`HS65_LS_MUX41X35_D3_F_Z_F_01111);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_00101,`HS65_LS_MUX41X35_S0_R_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_10101,`HS65_LS_MUX41X35_S0_R_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_10110,`HS65_LS_MUX41X35_S0_R_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_11101,`HS65_LS_MUX41X35_S0_R_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_10100,`HS65_LS_MUX41X35_S0_R_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_01101,`HS65_LS_MUX41X35_S0_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_10000,`HS65_LS_MUX41X35_S0_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X35_S0_F_Z_R_10010,`HS65_LS_MUX41X35_S0_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_00011,`HS65_LS_MUX41X35_S0_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_01110,`HS65_LS_MUX41X35_S0_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_10011,`HS65_LS_MUX41X35_S0_F_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_11011,`HS65_LS_MUX41X35_S0_F_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_01100,`HS65_LS_MUX41X35_S0_F_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_01000,`HS65_LS_MUX41X35_S0_F_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_01010,`HS65_LS_MUX41X35_S0_F_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X35_S0_R_Z_R_01011,`HS65_LS_MUX41X35_S0_F_Z_F_01011);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_01001,`HS65_LS_MUX41X35_S1_R_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_11001,`HS65_LS_MUX41X35_S1_R_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_11010,`HS65_LS_MUX41X35_S1_R_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_11101,`HS65_LS_MUX41X35_S1_R_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_11000,`HS65_LS_MUX41X35_S1_R_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_01101,`HS65_LS_MUX41X35_S1_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_10000,`HS65_LS_MUX41X35_S1_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X35_S1_F_Z_R_10010,`HS65_LS_MUX41X35_S1_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_00011,`HS65_LS_MUX41X35_S1_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_01110,`HS65_LS_MUX41X35_S1_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_10011,`HS65_LS_MUX41X35_S1_F_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_10111,`HS65_LS_MUX41X35_S1_F_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_01100,`HS65_LS_MUX41X35_S1_F_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_00100,`HS65_LS_MUX41X35_S1_F_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_00110,`HS65_LS_MUX41X35_S1_F_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X35_S1_R_Z_R_00111,`HS65_LS_MUX41X35_S1_F_Z_F_00111);


	endspecify

endmodule // HS65_LS_MUX41X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX41X4_D0_R_Z_R_00000 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_00000 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_10100 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_10100 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_11000 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_11000 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_11100 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_11100 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_10000 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_10000 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_00100 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_00100 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X4_D0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X4_D0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_00010 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_00010 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_10110 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_10110 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_11010 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_11010 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_11110 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_11110 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_10010 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_10010 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_01010 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_01010 0.1
`define HS65_LS_MUX41X4_D1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X4_D1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_00001 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_00001 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_10101 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_10101 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_11001 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_11001 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_11101 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_11101 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_10001 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_10001 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_00101 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_00101 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_01001 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_01001 0.1
`define HS65_LS_MUX41X4_D2_R_Z_R_01101 0.1
`define HS65_LS_MUX41X4_D2_F_Z_F_01101 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_00011 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_00011 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_10111 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_10111 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_11011 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_11011 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_11111 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_11111 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_10011 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_10011 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_00111 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_00111 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_01011 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_01011 0.1
`define HS65_LS_MUX41X4_D3_R_Z_R_01111 0.1
`define HS65_LS_MUX41X4_D3_F_Z_F_01111 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_00101 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_00101 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_10101 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_10101 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_10110 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_10110 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_11101 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_11101 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_10100 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_10100 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_01101 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_01101 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_10000 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_10000 0.1
`define HS65_LS_MUX41X4_S0_R_Z_F_10010 0.1
`define HS65_LS_MUX41X4_S0_F_Z_R_10010 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_00011 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_00011 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_01110 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_01110 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_10011 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_10011 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_11011 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_11011 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_01010 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_01010 0.1
`define HS65_LS_MUX41X4_S0_R_Z_R_01011 0.1
`define HS65_LS_MUX41X4_S0_F_Z_F_01011 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_01001 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_01001 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_11001 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_11001 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_11010 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_11010 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_11101 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_11101 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_11000 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_11000 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_01101 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_01101 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_10000 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_10000 0.1
`define HS65_LS_MUX41X4_S1_R_Z_F_10010 0.1
`define HS65_LS_MUX41X4_S1_F_Z_R_10010 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_00011 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_00011 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_10011 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_10011 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_10111 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_10111 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_01100 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_01100 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_00100 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_00100 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X4_S1_R_Z_R_00111 0.1
`define HS65_LS_MUX41X4_S1_F_Z_F_00111 0.1

module HS65_LS_MUX41X4 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Z, INTERNAL1, INTERNAL2, S1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_00000,`HS65_LS_MUX41X4_D0_F_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_10100,`HS65_LS_MUX41X4_D0_F_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_11000,`HS65_LS_MUX41X4_D0_F_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_11100,`HS65_LS_MUX41X4_D0_F_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_10000,`HS65_LS_MUX41X4_D0_F_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_00100,`HS65_LS_MUX41X4_D0_F_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_01000,`HS65_LS_MUX41X4_D0_F_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X4_D0_R_Z_R_01100,`HS65_LS_MUX41X4_D0_F_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_00010,`HS65_LS_MUX41X4_D1_F_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_10110,`HS65_LS_MUX41X4_D1_F_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_11010,`HS65_LS_MUX41X4_D1_F_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_11110,`HS65_LS_MUX41X4_D1_F_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_10010,`HS65_LS_MUX41X4_D1_F_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_00110,`HS65_LS_MUX41X4_D1_F_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_01010,`HS65_LS_MUX41X4_D1_F_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X4_D1_R_Z_R_01110,`HS65_LS_MUX41X4_D1_F_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_00001,`HS65_LS_MUX41X4_D2_F_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_10101,`HS65_LS_MUX41X4_D2_F_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_11001,`HS65_LS_MUX41X4_D2_F_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_11101,`HS65_LS_MUX41X4_D2_F_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_10001,`HS65_LS_MUX41X4_D2_F_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_00101,`HS65_LS_MUX41X4_D2_F_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_01001,`HS65_LS_MUX41X4_D2_F_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X4_D2_R_Z_R_01101,`HS65_LS_MUX41X4_D2_F_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_00011,`HS65_LS_MUX41X4_D3_F_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_10111,`HS65_LS_MUX41X4_D3_F_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_11011,`HS65_LS_MUX41X4_D3_F_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_11111,`HS65_LS_MUX41X4_D3_F_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_10011,`HS65_LS_MUX41X4_D3_F_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_00111,`HS65_LS_MUX41X4_D3_F_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_01011,`HS65_LS_MUX41X4_D3_F_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X4_D3_R_Z_R_01111,`HS65_LS_MUX41X4_D3_F_Z_F_01111);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_00101,`HS65_LS_MUX41X4_S0_R_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_10101,`HS65_LS_MUX41X4_S0_R_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_10110,`HS65_LS_MUX41X4_S0_R_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_11101,`HS65_LS_MUX41X4_S0_R_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_10100,`HS65_LS_MUX41X4_S0_R_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_01101,`HS65_LS_MUX41X4_S0_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_10000,`HS65_LS_MUX41X4_S0_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X4_S0_F_Z_R_10010,`HS65_LS_MUX41X4_S0_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_00011,`HS65_LS_MUX41X4_S0_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_01110,`HS65_LS_MUX41X4_S0_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_10011,`HS65_LS_MUX41X4_S0_F_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_11011,`HS65_LS_MUX41X4_S0_F_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_01100,`HS65_LS_MUX41X4_S0_F_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_01000,`HS65_LS_MUX41X4_S0_F_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_01010,`HS65_LS_MUX41X4_S0_F_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X4_S0_R_Z_R_01011,`HS65_LS_MUX41X4_S0_F_Z_F_01011);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_01001,`HS65_LS_MUX41X4_S1_R_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_11001,`HS65_LS_MUX41X4_S1_R_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_11010,`HS65_LS_MUX41X4_S1_R_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_11101,`HS65_LS_MUX41X4_S1_R_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_11000,`HS65_LS_MUX41X4_S1_R_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_01101,`HS65_LS_MUX41X4_S1_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_10000,`HS65_LS_MUX41X4_S1_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X4_S1_F_Z_R_10010,`HS65_LS_MUX41X4_S1_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_00011,`HS65_LS_MUX41X4_S1_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_01110,`HS65_LS_MUX41X4_S1_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_10011,`HS65_LS_MUX41X4_S1_F_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_10111,`HS65_LS_MUX41X4_S1_F_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_01100,`HS65_LS_MUX41X4_S1_F_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_00100,`HS65_LS_MUX41X4_S1_F_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_00110,`HS65_LS_MUX41X4_S1_F_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X4_S1_R_Z_R_00111,`HS65_LS_MUX41X4_S1_F_Z_F_00111);


	endspecify

endmodule // HS65_LS_MUX41X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUX41X9_D0_R_Z_R_00000 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_00000 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_10100 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_10100 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_11000 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_11000 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_11100 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_11100 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_10000 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_10000 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_00100 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_00100 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X9_D0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X9_D0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_00010 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_00010 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_10110 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_10110 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_11010 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_11010 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_11110 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_11110 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_10010 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_10010 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_01010 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_01010 0.1
`define HS65_LS_MUX41X9_D1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X9_D1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_00001 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_00001 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_10101 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_10101 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_11001 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_11001 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_11101 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_11101 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_10001 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_10001 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_00101 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_00101 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_01001 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_01001 0.1
`define HS65_LS_MUX41X9_D2_R_Z_R_01101 0.1
`define HS65_LS_MUX41X9_D2_F_Z_F_01101 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_00011 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_00011 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_10111 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_10111 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_11011 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_11011 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_11111 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_11111 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_10011 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_10011 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_00111 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_00111 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_01011 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_01011 0.1
`define HS65_LS_MUX41X9_D3_R_Z_R_01111 0.1
`define HS65_LS_MUX41X9_D3_F_Z_F_01111 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_00101 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_00101 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_10101 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_10101 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_10110 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_10110 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_11101 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_11101 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_10100 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_10100 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_01101 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_01101 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_10000 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_10000 0.1
`define HS65_LS_MUX41X9_S0_R_Z_F_10010 0.1
`define HS65_LS_MUX41X9_S0_F_Z_R_10010 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_00011 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_00011 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_01110 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_01110 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_10011 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_10011 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_11011 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_11011 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_01100 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_01100 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_01000 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_01000 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_01010 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_01010 0.1
`define HS65_LS_MUX41X9_S0_R_Z_R_01011 0.1
`define HS65_LS_MUX41X9_S0_F_Z_F_01011 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_01001 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_01001 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_11001 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_11001 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_11010 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_11010 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_11101 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_11101 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_11000 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_11000 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_01101 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_01101 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_10000 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_10000 0.1
`define HS65_LS_MUX41X9_S1_R_Z_F_10010 0.1
`define HS65_LS_MUX41X9_S1_F_Z_R_10010 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_00011 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_00011 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_01110 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_01110 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_10011 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_10011 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_10111 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_10111 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_01100 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_01100 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_00100 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_00100 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_00110 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_00110 0.1
`define HS65_LS_MUX41X9_S1_R_Z_R_00111 0.1
`define HS65_LS_MUX41X9_S1_F_Z_F_00111 0.1

module HS65_LS_MUX41X9 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Z, INTERNAL1, INTERNAL2, S1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_00000,`HS65_LS_MUX41X9_D0_F_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_10100,`HS65_LS_MUX41X9_D0_F_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_11000,`HS65_LS_MUX41X9_D0_F_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_11100,`HS65_LS_MUX41X9_D0_F_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_10000,`HS65_LS_MUX41X9_D0_F_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_00100,`HS65_LS_MUX41X9_D0_F_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_01000,`HS65_LS_MUX41X9_D0_F_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 +=> Z) = (`HS65_LS_MUX41X9_D0_R_Z_R_01100,`HS65_LS_MUX41X9_D0_F_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_00010,`HS65_LS_MUX41X9_D1_F_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_10110,`HS65_LS_MUX41X9_D1_F_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_11010,`HS65_LS_MUX41X9_D1_F_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_11110,`HS65_LS_MUX41X9_D1_F_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_10010,`HS65_LS_MUX41X9_D1_F_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_00110,`HS65_LS_MUX41X9_D1_F_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_01010,`HS65_LS_MUX41X9_D1_F_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 +=> Z) = (`HS65_LS_MUX41X9_D1_R_Z_R_01110,`HS65_LS_MUX41X9_D1_F_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_00001,`HS65_LS_MUX41X9_D2_F_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_10101,`HS65_LS_MUX41X9_D2_F_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_11001,`HS65_LS_MUX41X9_D2_F_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_11101,`HS65_LS_MUX41X9_D2_F_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_10001,`HS65_LS_MUX41X9_D2_F_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_00101,`HS65_LS_MUX41X9_D2_F_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_01001,`HS65_LS_MUX41X9_D2_F_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 +=> Z) = (`HS65_LS_MUX41X9_D2_R_Z_R_01101,`HS65_LS_MUX41X9_D2_F_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_00011,`HS65_LS_MUX41X9_D3_F_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_10111,`HS65_LS_MUX41X9_D3_F_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_11011,`HS65_LS_MUX41X9_D3_F_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_11111,`HS65_LS_MUX41X9_D3_F_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_10011,`HS65_LS_MUX41X9_D3_F_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_00111,`HS65_LS_MUX41X9_D3_F_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_01011,`HS65_LS_MUX41X9_D3_F_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 +=> Z) = (`HS65_LS_MUX41X9_D3_R_Z_R_01111,`HS65_LS_MUX41X9_D3_F_Z_F_01111);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_00101,`HS65_LS_MUX41X9_S0_R_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_10101,`HS65_LS_MUX41X9_S0_R_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_10110,`HS65_LS_MUX41X9_S0_R_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_11101,`HS65_LS_MUX41X9_S0_R_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_10100,`HS65_LS_MUX41X9_S0_R_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_01101,`HS65_LS_MUX41X9_S0_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_10000,`HS65_LS_MUX41X9_S0_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUX41X9_S0_F_Z_R_10010,`HS65_LS_MUX41X9_S0_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_00011,`HS65_LS_MUX41X9_S0_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_01110,`HS65_LS_MUX41X9_S0_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_10011,`HS65_LS_MUX41X9_S0_F_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_11011,`HS65_LS_MUX41X9_S0_F_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_01100,`HS65_LS_MUX41X9_S0_F_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_01000,`HS65_LS_MUX41X9_S0_F_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_01010,`HS65_LS_MUX41X9_S0_F_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 +=> Z) = (`HS65_LS_MUX41X9_S0_R_Z_R_01011,`HS65_LS_MUX41X9_S0_F_Z_F_01011);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_01001,`HS65_LS_MUX41X9_S1_R_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_11001,`HS65_LS_MUX41X9_S1_R_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_11010,`HS65_LS_MUX41X9_S1_R_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_11101,`HS65_LS_MUX41X9_S1_R_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_11000,`HS65_LS_MUX41X9_S1_R_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_01101,`HS65_LS_MUX41X9_S1_R_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_10000,`HS65_LS_MUX41X9_S1_R_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUX41X9_S1_F_Z_R_10010,`HS65_LS_MUX41X9_S1_R_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_00011,`HS65_LS_MUX41X9_S1_F_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_01110,`HS65_LS_MUX41X9_S1_F_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_10011,`HS65_LS_MUX41X9_S1_F_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_10111,`HS65_LS_MUX41X9_S1_F_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_01100,`HS65_LS_MUX41X9_S1_F_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_00100,`HS65_LS_MUX41X9_S1_F_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_00110,`HS65_LS_MUX41X9_S1_F_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 +=> Z) = (`HS65_LS_MUX41X9_S1_R_Z_R_00111,`HS65_LS_MUX41X9_S1_F_Z_F_00111);


	endspecify

endmodule // HS65_LS_MUX41X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X10_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X10_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X10_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X10_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X10_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X10_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X10_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X10_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X10_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X10_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X10_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X10_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X10 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X10_D0_F_Z_R_00,`HS65_LS_MUXI21X10_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X10_D0_F_Z_R_10,`HS65_LS_MUXI21X10_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X10_D1_F_Z_R_01,`HS65_LS_MUXI21X10_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X10_D1_F_Z_R_11,`HS65_LS_MUXI21X10_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X10_S0_F_Z_R_01,`HS65_LS_MUXI21X10_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X10_S0_R_Z_R_10,`HS65_LS_MUXI21X10_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X15_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X15_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X15_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X15_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X15_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X15_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X15_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X15_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X15_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X15_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X15_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X15_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X15 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X15_D0_F_Z_R_00,`HS65_LS_MUXI21X15_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X15_D0_F_Z_R_10,`HS65_LS_MUXI21X15_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X15_D1_F_Z_R_01,`HS65_LS_MUXI21X15_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X15_D1_F_Z_R_11,`HS65_LS_MUXI21X15_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X15_S0_F_Z_R_01,`HS65_LS_MUXI21X15_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X15_S0_R_Z_R_10,`HS65_LS_MUXI21X15_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X2_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X2_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X2_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X2_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X2_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X2_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X2_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X2_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X2_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X2_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X2_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X2_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X2 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X2_D0_F_Z_R_00,`HS65_LS_MUXI21X2_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X2_D0_F_Z_R_10,`HS65_LS_MUXI21X2_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X2_D1_F_Z_R_01,`HS65_LS_MUXI21X2_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X2_D1_F_Z_R_11,`HS65_LS_MUXI21X2_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X2_S0_F_Z_R_01,`HS65_LS_MUXI21X2_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X2_S0_R_Z_R_10,`HS65_LS_MUXI21X2_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X20_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X20_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X20_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X20_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X20_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X20_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X20_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X20_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X20_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X20_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X20_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X20_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X20 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X20_D0_F_Z_R_00,`HS65_LS_MUXI21X20_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X20_D0_F_Z_R_10,`HS65_LS_MUXI21X20_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X20_D1_F_Z_R_01,`HS65_LS_MUXI21X20_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X20_D1_F_Z_R_11,`HS65_LS_MUXI21X20_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X20_S0_F_Z_R_01,`HS65_LS_MUXI21X20_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X20_S0_R_Z_R_10,`HS65_LS_MUXI21X20_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X30_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X30_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X30_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X30_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X30_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X30_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X30_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X30_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X30_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X30_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X30_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X30_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X30 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X30_D0_F_Z_R_00,`HS65_LS_MUXI21X30_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X30_D0_F_Z_R_10,`HS65_LS_MUXI21X30_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X30_D1_F_Z_R_01,`HS65_LS_MUXI21X30_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X30_D1_F_Z_R_11,`HS65_LS_MUXI21X30_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X30_S0_F_Z_R_01,`HS65_LS_MUXI21X30_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X30_S0_R_Z_R_10,`HS65_LS_MUXI21X30_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X40_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X40_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X40_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X40_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X40_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X40_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X40_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X40_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X40_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X40_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X40_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X40_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X40 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X40_D0_F_Z_R_00,`HS65_LS_MUXI21X40_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X40_D0_F_Z_R_10,`HS65_LS_MUXI21X40_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X40_D1_F_Z_R_01,`HS65_LS_MUXI21X40_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X40_D1_F_Z_R_11,`HS65_LS_MUXI21X40_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X40_S0_F_Z_R_01,`HS65_LS_MUXI21X40_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X40_S0_R_Z_R_10,`HS65_LS_MUXI21X40_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X40

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X5_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X5_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X5_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X5_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X5_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X5_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X5_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X5_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X5_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X5_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X5_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X5_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X5 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X5_D0_F_Z_R_00,`HS65_LS_MUXI21X5_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X5_D0_F_Z_R_10,`HS65_LS_MUXI21X5_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X5_D1_F_Z_R_01,`HS65_LS_MUXI21X5_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X5_D1_F_Z_R_11,`HS65_LS_MUXI21X5_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X5_S0_F_Z_R_01,`HS65_LS_MUXI21X5_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X5_S0_R_Z_R_10,`HS65_LS_MUXI21X5_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X50_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X50_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X50_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X50_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X50_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X50_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X50_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X50_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X50_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X50_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X50_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X50_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X50 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X50_D0_F_Z_R_00,`HS65_LS_MUXI21X50_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X50_D0_F_Z_R_10,`HS65_LS_MUXI21X50_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X50_D1_F_Z_R_01,`HS65_LS_MUXI21X50_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X50_D1_F_Z_R_11,`HS65_LS_MUXI21X50_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X50_S0_F_Z_R_01,`HS65_LS_MUXI21X50_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X50_S0_R_Z_R_10,`HS65_LS_MUXI21X50_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X50

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI21X60_D0_R_Z_F_00 0.1
`define HS65_LS_MUXI21X60_D0_F_Z_R_00 0.1
`define HS65_LS_MUXI21X60_D0_R_Z_F_10 0.1
`define HS65_LS_MUXI21X60_D0_F_Z_R_10 0.1
`define HS65_LS_MUXI21X60_D1_R_Z_F_01 0.1
`define HS65_LS_MUXI21X60_D1_F_Z_R_01 0.1
`define HS65_LS_MUXI21X60_D1_R_Z_F_11 0.1
`define HS65_LS_MUXI21X60_D1_F_Z_R_11 0.1
`define HS65_LS_MUXI21X60_S0_R_Z_F_01 0.1
`define HS65_LS_MUXI21X60_S0_F_Z_R_01 0.1
`define HS65_LS_MUXI21X60_S0_R_Z_R_10 0.1
`define HS65_LS_MUXI21X60_S0_F_Z_F_10 0.1

module HS65_LS_MUXI21X60 (Z, D0, D1, S0);

	output Z;
	input D0;
	input D1;
	input S0;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (!D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X60_D0_F_Z_R_00,`HS65_LS_MUXI21X60_D0_R_Z_F_00);
		if (D1 && !S0) (D0 -=> Z) = (`HS65_LS_MUXI21X60_D0_F_Z_R_10,`HS65_LS_MUXI21X60_D0_R_Z_F_10);
		if (!D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X60_D1_F_Z_R_01,`HS65_LS_MUXI21X60_D1_R_Z_F_01);
		if (D0 && S0) (D1 -=> Z) = (`HS65_LS_MUXI21X60_D1_F_Z_R_11,`HS65_LS_MUXI21X60_D1_R_Z_F_11);
		if (!D0 && D1) (S0 -=> Z) = (`HS65_LS_MUXI21X60_S0_F_Z_R_01,`HS65_LS_MUXI21X60_S0_R_Z_F_01);
		if (D0 && !D1) (S0 +=> Z) = (`HS65_LS_MUXI21X60_S0_R_Z_R_10,`HS65_LS_MUXI21X60_S0_F_Z_F_10);


	endspecify

endmodule // HS65_LS_MUXI21X60

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI31X11_D0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X11_D0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X11_D0_R_Z_F_1000 0.1
`define HS65_LS_MUXI31X11_D0_F_Z_R_1000 0.1
`define HS65_LS_MUXI31X11_D0_R_Z_F_1100 0.1
`define HS65_LS_MUXI31X11_D0_F_Z_R_1100 0.1
`define HS65_LS_MUXI31X11_D0_R_Z_F_0000 0.1
`define HS65_LS_MUXI31X11_D0_F_Z_R_0000 0.1
`define HS65_LS_MUXI31X11_D1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X11_D1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X11_D1_R_Z_F_1010 0.1
`define HS65_LS_MUXI31X11_D1_F_Z_R_1010 0.1
`define HS65_LS_MUXI31X11_D1_R_Z_F_1110 0.1
`define HS65_LS_MUXI31X11_D1_F_Z_R_1110 0.1
`define HS65_LS_MUXI31X11_D1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X11_D1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_0001 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_0001 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_1011 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_1101 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_1101 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_1111 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_1111 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_1001 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_1001 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_0101 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_0101 0.1
`define HS65_LS_MUXI31X11_D2_R_Z_F_0111 0.1
`define HS65_LS_MUXI31X11_D2_F_Z_R_0111 0.1
`define HS65_LS_MUXI31X11_S0_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X11_S0_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X11_S0_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X11_S0_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X11_S0_R_Z_R_1010 0.1
`define HS65_LS_MUXI31X11_S0_F_Z_F_1010 0.1
`define HS65_LS_MUXI31X11_S0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X11_S0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_R_1100 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_F_1100 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_R_1101 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_F_1101 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_R_0101 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_F_0101 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X11_S1_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X11_S1_F_Z_R_1011 0.1

module HS65_LS_MUXI31X11 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (D6, INTERNAL1, D2, S1) ;
	not   #1 U3 (Z, D6) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X11_D0_F_Z_R_0100,`HS65_LS_MUXI31X11_D0_R_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X11_D0_F_Z_R_1000,`HS65_LS_MUXI31X11_D0_R_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X11_D0_F_Z_R_1100,`HS65_LS_MUXI31X11_D0_R_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X11_D0_F_Z_R_0000,`HS65_LS_MUXI31X11_D0_R_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X11_D1_F_Z_R_0110,`HS65_LS_MUXI31X11_D1_R_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X11_D1_F_Z_R_1010,`HS65_LS_MUXI31X11_D1_R_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X11_D1_F_Z_R_1110,`HS65_LS_MUXI31X11_D1_R_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X11_D1_F_Z_R_0010,`HS65_LS_MUXI31X11_D1_R_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_0001,`HS65_LS_MUXI31X11_D2_R_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_1011,`HS65_LS_MUXI31X11_D2_R_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_1101,`HS65_LS_MUXI31X11_D2_R_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_1111,`HS65_LS_MUXI31X11_D2_R_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_1001,`HS65_LS_MUXI31X11_D2_R_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_0011,`HS65_LS_MUXI31X11_D2_R_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_0101,`HS65_LS_MUXI31X11_D2_R_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X11_D2_F_Z_R_0111,`HS65_LS_MUXI31X11_D2_R_Z_F_0111);
		if (!D0 && D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X11_S0_F_Z_R_0110,`HS65_LS_MUXI31X11_S0_R_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X11_S0_R_Z_R_1000,`HS65_LS_MUXI31X11_S0_F_Z_F_1000);
		if (D0 && !D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X11_S0_R_Z_R_1010,`HS65_LS_MUXI31X11_S0_F_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X11_S0_F_Z_R_0100,`HS65_LS_MUXI31X11_S0_R_Z_F_0100);
		if (!D0 && !D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X11_S1_F_Z_R_0010,`HS65_LS_MUXI31X11_S1_R_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X11_S1_R_Z_R_1000,`HS65_LS_MUXI31X11_S1_F_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X11_S1_R_Z_R_1100,`HS65_LS_MUXI31X11_S1_F_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X11_S1_R_Z_R_1101,`HS65_LS_MUXI31X11_S1_F_Z_F_1101);
		if (!D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X11_S1_R_Z_R_0101,`HS65_LS_MUXI31X11_S1_F_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X11_S1_F_Z_R_0011,`HS65_LS_MUXI31X11_S1_R_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X11_S1_F_Z_R_0110,`HS65_LS_MUXI31X11_S1_R_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X11_S1_F_Z_R_1011,`HS65_LS_MUXI31X11_S1_R_Z_F_1011);


	endspecify

endmodule // HS65_LS_MUXI31X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI31X15_D0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X15_D0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X15_D0_R_Z_F_1000 0.1
`define HS65_LS_MUXI31X15_D0_F_Z_R_1000 0.1
`define HS65_LS_MUXI31X15_D0_R_Z_F_1100 0.1
`define HS65_LS_MUXI31X15_D0_F_Z_R_1100 0.1
`define HS65_LS_MUXI31X15_D0_R_Z_F_0000 0.1
`define HS65_LS_MUXI31X15_D0_F_Z_R_0000 0.1
`define HS65_LS_MUXI31X15_D1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X15_D1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X15_D1_R_Z_F_1010 0.1
`define HS65_LS_MUXI31X15_D1_F_Z_R_1010 0.1
`define HS65_LS_MUXI31X15_D1_R_Z_F_1110 0.1
`define HS65_LS_MUXI31X15_D1_F_Z_R_1110 0.1
`define HS65_LS_MUXI31X15_D1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X15_D1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_0001 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_0001 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_1011 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_1101 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_1101 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_1111 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_1111 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_1001 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_1001 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_0101 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_0101 0.1
`define HS65_LS_MUXI31X15_D2_R_Z_F_0111 0.1
`define HS65_LS_MUXI31X15_D2_F_Z_R_0111 0.1
`define HS65_LS_MUXI31X15_S0_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X15_S0_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X15_S0_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X15_S0_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X15_S0_R_Z_R_1010 0.1
`define HS65_LS_MUXI31X15_S0_F_Z_F_1010 0.1
`define HS65_LS_MUXI31X15_S0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X15_S0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_R_1100 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_F_1100 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_R_1101 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_F_1101 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_R_0101 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_F_0101 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X15_S1_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X15_S1_F_Z_R_1011 0.1

module HS65_LS_MUXI31X15 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (D6, INTERNAL1, D2, S1) ;
	not   #1 U3 (Z, D6) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X15_D0_F_Z_R_0100,`HS65_LS_MUXI31X15_D0_R_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X15_D0_F_Z_R_1000,`HS65_LS_MUXI31X15_D0_R_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X15_D0_F_Z_R_1100,`HS65_LS_MUXI31X15_D0_R_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X15_D0_F_Z_R_0000,`HS65_LS_MUXI31X15_D0_R_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X15_D1_F_Z_R_0110,`HS65_LS_MUXI31X15_D1_R_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X15_D1_F_Z_R_1010,`HS65_LS_MUXI31X15_D1_R_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X15_D1_F_Z_R_1110,`HS65_LS_MUXI31X15_D1_R_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X15_D1_F_Z_R_0010,`HS65_LS_MUXI31X15_D1_R_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_0001,`HS65_LS_MUXI31X15_D2_R_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_1011,`HS65_LS_MUXI31X15_D2_R_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_1101,`HS65_LS_MUXI31X15_D2_R_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_1111,`HS65_LS_MUXI31X15_D2_R_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_1001,`HS65_LS_MUXI31X15_D2_R_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_0011,`HS65_LS_MUXI31X15_D2_R_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_0101,`HS65_LS_MUXI31X15_D2_R_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X15_D2_F_Z_R_0111,`HS65_LS_MUXI31X15_D2_R_Z_F_0111);
		if (!D0 && D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X15_S0_F_Z_R_0110,`HS65_LS_MUXI31X15_S0_R_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X15_S0_R_Z_R_1000,`HS65_LS_MUXI31X15_S0_F_Z_F_1000);
		if (D0 && !D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X15_S0_R_Z_R_1010,`HS65_LS_MUXI31X15_S0_F_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X15_S0_F_Z_R_0100,`HS65_LS_MUXI31X15_S0_R_Z_F_0100);
		if (!D0 && !D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X15_S1_F_Z_R_0010,`HS65_LS_MUXI31X15_S1_R_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X15_S1_R_Z_R_1000,`HS65_LS_MUXI31X15_S1_F_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X15_S1_R_Z_R_1100,`HS65_LS_MUXI31X15_S1_F_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X15_S1_R_Z_R_1101,`HS65_LS_MUXI31X15_S1_F_Z_F_1101);
		if (!D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X15_S1_R_Z_R_0101,`HS65_LS_MUXI31X15_S1_F_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X15_S1_F_Z_R_0011,`HS65_LS_MUXI31X15_S1_R_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X15_S1_F_Z_R_0110,`HS65_LS_MUXI31X15_S1_R_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X15_S1_F_Z_R_1011,`HS65_LS_MUXI31X15_S1_R_Z_F_1011);


	endspecify

endmodule // HS65_LS_MUXI31X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI31X2_D0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X2_D0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X2_D0_R_Z_F_1000 0.1
`define HS65_LS_MUXI31X2_D0_F_Z_R_1000 0.1
`define HS65_LS_MUXI31X2_D0_R_Z_F_1100 0.1
`define HS65_LS_MUXI31X2_D0_F_Z_R_1100 0.1
`define HS65_LS_MUXI31X2_D0_R_Z_F_0000 0.1
`define HS65_LS_MUXI31X2_D0_F_Z_R_0000 0.1
`define HS65_LS_MUXI31X2_D1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X2_D1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X2_D1_R_Z_F_1010 0.1
`define HS65_LS_MUXI31X2_D1_F_Z_R_1010 0.1
`define HS65_LS_MUXI31X2_D1_R_Z_F_1110 0.1
`define HS65_LS_MUXI31X2_D1_F_Z_R_1110 0.1
`define HS65_LS_MUXI31X2_D1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X2_D1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_0001 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_0001 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_1011 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_1101 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_1101 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_1111 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_1111 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_1001 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_1001 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_0101 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_0101 0.1
`define HS65_LS_MUXI31X2_D2_R_Z_F_0111 0.1
`define HS65_LS_MUXI31X2_D2_F_Z_R_0111 0.1
`define HS65_LS_MUXI31X2_S0_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X2_S0_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X2_S0_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X2_S0_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X2_S0_R_Z_R_1010 0.1
`define HS65_LS_MUXI31X2_S0_F_Z_F_1010 0.1
`define HS65_LS_MUXI31X2_S0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X2_S0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_R_1100 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_F_1100 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_R_1101 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_F_1101 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_R_0101 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_F_0101 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X2_S1_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X2_S1_F_Z_R_1011 0.1

module HS65_LS_MUXI31X2 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (D6, INTERNAL1, D2, S1) ;
	not   #1 U3 (Z, D6) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X2_D0_F_Z_R_0100,`HS65_LS_MUXI31X2_D0_R_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X2_D0_F_Z_R_1000,`HS65_LS_MUXI31X2_D0_R_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X2_D0_F_Z_R_1100,`HS65_LS_MUXI31X2_D0_R_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X2_D0_F_Z_R_0000,`HS65_LS_MUXI31X2_D0_R_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X2_D1_F_Z_R_0110,`HS65_LS_MUXI31X2_D1_R_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X2_D1_F_Z_R_1010,`HS65_LS_MUXI31X2_D1_R_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X2_D1_F_Z_R_1110,`HS65_LS_MUXI31X2_D1_R_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X2_D1_F_Z_R_0010,`HS65_LS_MUXI31X2_D1_R_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_0001,`HS65_LS_MUXI31X2_D2_R_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_1011,`HS65_LS_MUXI31X2_D2_R_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_1101,`HS65_LS_MUXI31X2_D2_R_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_1111,`HS65_LS_MUXI31X2_D2_R_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_1001,`HS65_LS_MUXI31X2_D2_R_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_0011,`HS65_LS_MUXI31X2_D2_R_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_0101,`HS65_LS_MUXI31X2_D2_R_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X2_D2_F_Z_R_0111,`HS65_LS_MUXI31X2_D2_R_Z_F_0111);
		if (!D0 && D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X2_S0_F_Z_R_0110,`HS65_LS_MUXI31X2_S0_R_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X2_S0_R_Z_R_1000,`HS65_LS_MUXI31X2_S0_F_Z_F_1000);
		if (D0 && !D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X2_S0_R_Z_R_1010,`HS65_LS_MUXI31X2_S0_F_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X2_S0_F_Z_R_0100,`HS65_LS_MUXI31X2_S0_R_Z_F_0100);
		if (!D0 && !D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X2_S1_F_Z_R_0010,`HS65_LS_MUXI31X2_S1_R_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X2_S1_R_Z_R_1000,`HS65_LS_MUXI31X2_S1_F_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X2_S1_R_Z_R_1100,`HS65_LS_MUXI31X2_S1_F_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X2_S1_R_Z_R_1101,`HS65_LS_MUXI31X2_S1_F_Z_F_1101);
		if (!D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X2_S1_R_Z_R_0101,`HS65_LS_MUXI31X2_S1_F_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X2_S1_F_Z_R_0011,`HS65_LS_MUXI31X2_S1_R_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X2_S1_F_Z_R_0110,`HS65_LS_MUXI31X2_S1_R_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X2_S1_F_Z_R_1011,`HS65_LS_MUXI31X2_S1_R_Z_F_1011);


	endspecify

endmodule // HS65_LS_MUXI31X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI31X4_D0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X4_D0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X4_D0_R_Z_F_1000 0.1
`define HS65_LS_MUXI31X4_D0_F_Z_R_1000 0.1
`define HS65_LS_MUXI31X4_D0_R_Z_F_1100 0.1
`define HS65_LS_MUXI31X4_D0_F_Z_R_1100 0.1
`define HS65_LS_MUXI31X4_D0_R_Z_F_0000 0.1
`define HS65_LS_MUXI31X4_D0_F_Z_R_0000 0.1
`define HS65_LS_MUXI31X4_D1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X4_D1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X4_D1_R_Z_F_1010 0.1
`define HS65_LS_MUXI31X4_D1_F_Z_R_1010 0.1
`define HS65_LS_MUXI31X4_D1_R_Z_F_1110 0.1
`define HS65_LS_MUXI31X4_D1_F_Z_R_1110 0.1
`define HS65_LS_MUXI31X4_D1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X4_D1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_0001 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_0001 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_1011 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_1101 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_1101 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_1111 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_1111 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_1001 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_1001 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_0101 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_0101 0.1
`define HS65_LS_MUXI31X4_D2_R_Z_F_0111 0.1
`define HS65_LS_MUXI31X4_D2_F_Z_R_0111 0.1
`define HS65_LS_MUXI31X4_S0_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X4_S0_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X4_S0_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X4_S0_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X4_S0_R_Z_R_1010 0.1
`define HS65_LS_MUXI31X4_S0_F_Z_F_1010 0.1
`define HS65_LS_MUXI31X4_S0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X4_S0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_R_1100 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_F_1100 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_R_1101 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_F_1101 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_R_0101 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_F_0101 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X4_S1_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X4_S1_F_Z_R_1011 0.1

module HS65_LS_MUXI31X4 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (D6, INTERNAL1, D2, S1) ;
	not   #1 U3 (Z, D6) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X4_D0_F_Z_R_0100,`HS65_LS_MUXI31X4_D0_R_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X4_D0_F_Z_R_1000,`HS65_LS_MUXI31X4_D0_R_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X4_D0_F_Z_R_1100,`HS65_LS_MUXI31X4_D0_R_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X4_D0_F_Z_R_0000,`HS65_LS_MUXI31X4_D0_R_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X4_D1_F_Z_R_0110,`HS65_LS_MUXI31X4_D1_R_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X4_D1_F_Z_R_1010,`HS65_LS_MUXI31X4_D1_R_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X4_D1_F_Z_R_1110,`HS65_LS_MUXI31X4_D1_R_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X4_D1_F_Z_R_0010,`HS65_LS_MUXI31X4_D1_R_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_0001,`HS65_LS_MUXI31X4_D2_R_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_1011,`HS65_LS_MUXI31X4_D2_R_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_1101,`HS65_LS_MUXI31X4_D2_R_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_1111,`HS65_LS_MUXI31X4_D2_R_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_1001,`HS65_LS_MUXI31X4_D2_R_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_0011,`HS65_LS_MUXI31X4_D2_R_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_0101,`HS65_LS_MUXI31X4_D2_R_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X4_D2_F_Z_R_0111,`HS65_LS_MUXI31X4_D2_R_Z_F_0111);
		if (!D0 && D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X4_S0_F_Z_R_0110,`HS65_LS_MUXI31X4_S0_R_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X4_S0_R_Z_R_1000,`HS65_LS_MUXI31X4_S0_F_Z_F_1000);
		if (D0 && !D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X4_S0_R_Z_R_1010,`HS65_LS_MUXI31X4_S0_F_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X4_S0_F_Z_R_0100,`HS65_LS_MUXI31X4_S0_R_Z_F_0100);
		if (!D0 && !D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X4_S1_F_Z_R_0010,`HS65_LS_MUXI31X4_S1_R_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X4_S1_R_Z_R_1000,`HS65_LS_MUXI31X4_S1_F_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X4_S1_R_Z_R_1100,`HS65_LS_MUXI31X4_S1_F_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X4_S1_R_Z_R_1101,`HS65_LS_MUXI31X4_S1_F_Z_F_1101);
		if (!D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X4_S1_R_Z_R_0101,`HS65_LS_MUXI31X4_S1_F_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X4_S1_F_Z_R_0011,`HS65_LS_MUXI31X4_S1_R_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X4_S1_F_Z_R_0110,`HS65_LS_MUXI31X4_S1_R_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X4_S1_F_Z_R_1011,`HS65_LS_MUXI31X4_S1_R_Z_F_1011);


	endspecify

endmodule // HS65_LS_MUXI31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI31X7_D0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X7_D0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X7_D0_R_Z_F_1000 0.1
`define HS65_LS_MUXI31X7_D0_F_Z_R_1000 0.1
`define HS65_LS_MUXI31X7_D0_R_Z_F_1100 0.1
`define HS65_LS_MUXI31X7_D0_F_Z_R_1100 0.1
`define HS65_LS_MUXI31X7_D0_R_Z_F_0000 0.1
`define HS65_LS_MUXI31X7_D0_F_Z_R_0000 0.1
`define HS65_LS_MUXI31X7_D1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X7_D1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X7_D1_R_Z_F_1010 0.1
`define HS65_LS_MUXI31X7_D1_F_Z_R_1010 0.1
`define HS65_LS_MUXI31X7_D1_R_Z_F_1110 0.1
`define HS65_LS_MUXI31X7_D1_F_Z_R_1110 0.1
`define HS65_LS_MUXI31X7_D1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X7_D1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_0001 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_0001 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_1011 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_1101 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_1101 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_1111 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_1111 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_1001 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_1001 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_0101 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_0101 0.1
`define HS65_LS_MUXI31X7_D2_R_Z_F_0111 0.1
`define HS65_LS_MUXI31X7_D2_F_Z_R_0111 0.1
`define HS65_LS_MUXI31X7_S0_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X7_S0_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X7_S0_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X7_S0_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X7_S0_R_Z_R_1010 0.1
`define HS65_LS_MUXI31X7_S0_F_Z_F_1010 0.1
`define HS65_LS_MUXI31X7_S0_R_Z_F_0100 0.1
`define HS65_LS_MUXI31X7_S0_F_Z_R_0100 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_F_0010 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_R_0010 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_R_1000 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_F_1000 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_R_1100 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_F_1100 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_R_1101 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_F_1101 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_R_0101 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_F_0101 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_F_0011 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_R_0011 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_F_0110 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_R_0110 0.1
`define HS65_LS_MUXI31X7_S1_R_Z_F_1011 0.1
`define HS65_LS_MUXI31X7_S1_F_Z_R_1011 0.1

module HS65_LS_MUXI31X7 (Z, D0, D1, D2, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (D6, INTERNAL1, D2, S1) ;
	not   #1 U3 (Z, D6) ;



	specify

		if (!D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X7_D0_F_Z_R_0100,`HS65_LS_MUXI31X7_D0_R_Z_F_0100);
		if (D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X7_D0_F_Z_R_1000,`HS65_LS_MUXI31X7_D0_R_Z_F_1000);
		if (D1 && D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X7_D0_F_Z_R_1100,`HS65_LS_MUXI31X7_D0_R_Z_F_1100);
		if (!D1 && !D2 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI31X7_D0_F_Z_R_0000,`HS65_LS_MUXI31X7_D0_R_Z_F_0000);
		if (!D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X7_D1_F_Z_R_0110,`HS65_LS_MUXI31X7_D1_R_Z_F_0110);
		if (D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X7_D1_F_Z_R_1010,`HS65_LS_MUXI31X7_D1_R_Z_F_1010);
		if (D0 && D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X7_D1_F_Z_R_1110,`HS65_LS_MUXI31X7_D1_R_Z_F_1110);
		if (!D0 && !D2 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI31X7_D1_F_Z_R_0010,`HS65_LS_MUXI31X7_D1_R_Z_F_0010);
		if (!D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_0001,`HS65_LS_MUXI31X7_D2_R_Z_F_0001);
		if (D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_1011,`HS65_LS_MUXI31X7_D2_R_Z_F_1011);
		if (D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_1101,`HS65_LS_MUXI31X7_D2_R_Z_F_1101);
		if (D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_1111,`HS65_LS_MUXI31X7_D2_R_Z_F_1111);
		if (D0 && !D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_1001,`HS65_LS_MUXI31X7_D2_R_Z_F_1001);
		if (!D0 && !D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_0011,`HS65_LS_MUXI31X7_D2_R_Z_F_0011);
		if (!D0 && D1 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_0101,`HS65_LS_MUXI31X7_D2_R_Z_F_0101);
		if (!D0 && D1 && S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI31X7_D2_F_Z_R_0111,`HS65_LS_MUXI31X7_D2_R_Z_F_0111);
		if (!D0 && D1 && D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X7_S0_F_Z_R_0110,`HS65_LS_MUXI31X7_S0_R_Z_F_0110);
		if (D0 && !D1 && !D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X7_S0_R_Z_R_1000,`HS65_LS_MUXI31X7_S0_F_Z_F_1000);
		if (D0 && !D1 && D2 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI31X7_S0_R_Z_R_1010,`HS65_LS_MUXI31X7_S0_F_Z_F_1010);
		if (!D0 && D1 && !D2 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI31X7_S0_F_Z_R_0100,`HS65_LS_MUXI31X7_S0_R_Z_F_0100);
		if (!D0 && !D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X7_S1_F_Z_R_0010,`HS65_LS_MUXI31X7_S1_R_Z_F_0010);
		if (D0 && !D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X7_S1_R_Z_R_1000,`HS65_LS_MUXI31X7_S1_F_Z_F_1000);
		if (D0 && D1 && !D2 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI31X7_S1_R_Z_R_1100,`HS65_LS_MUXI31X7_S1_F_Z_F_1100);
		if (D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X7_S1_R_Z_R_1101,`HS65_LS_MUXI31X7_S1_F_Z_F_1101);
		if (!D0 && D1 && !D2 && S0) (S1 +=> Z) = (`HS65_LS_MUXI31X7_S1_R_Z_R_0101,`HS65_LS_MUXI31X7_S1_F_Z_F_0101);
		if (!D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X7_S1_F_Z_R_0011,`HS65_LS_MUXI31X7_S1_R_Z_F_0011);
		if (!D0 && D1 && D2 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI31X7_S1_F_Z_R_0110,`HS65_LS_MUXI31X7_S1_R_Z_F_0110);
		if (D0 && !D1 && D2 && S0) (S1 -=> Z) = (`HS65_LS_MUXI31X7_S1_F_Z_R_1011,`HS65_LS_MUXI31X7_S1_R_Z_F_1011);


	endspecify

endmodule // HS65_LS_MUXI31X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI41X11_D0_R_Z_F_00000 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_00000 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_10100 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_10100 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_11000 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_11000 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_11100 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_11100 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_10000 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_10000 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X11_D0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X11_D0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_00010 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_00010 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_10110 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_10110 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_11010 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_11010 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_11110 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_11110 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_10010 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_10010 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X11_D1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X11_D1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_00001 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_00001 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_10101 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_10101 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_11001 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_11001 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_11101 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_11101 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_10001 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_10001 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_00101 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_00101 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_01001 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_01001 0.1
`define HS65_LS_MUXI41X11_D2_R_Z_F_01101 0.1
`define HS65_LS_MUXI41X11_D2_F_Z_R_01101 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_11111 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_11111 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X11_D3_R_Z_F_01111 0.1
`define HS65_LS_MUXI41X11_D3_F_Z_R_01111 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_00101 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_00101 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_10101 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_10101 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_10110 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_10110 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_10100 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_10100 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X11_S0_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X11_S0_F_Z_F_10010 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_01001 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_01001 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_11001 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_11001 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_11010 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_11010 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_11000 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_11000 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X11_S1_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X11_S1_F_Z_F_10010 0.1

module HS65_LS_MUXI41X11 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2   U3 (NET1, INTERNAL1, INTERNAL2, S1) ;
	not   #1 U4 (Z, NET1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_00000,`HS65_LS_MUXI41X11_D0_R_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_10100,`HS65_LS_MUXI41X11_D0_R_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_11000,`HS65_LS_MUXI41X11_D0_R_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_11100,`HS65_LS_MUXI41X11_D0_R_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_10000,`HS65_LS_MUXI41X11_D0_R_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_00100,`HS65_LS_MUXI41X11_D0_R_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_01000,`HS65_LS_MUXI41X11_D0_R_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X11_D0_F_Z_R_01100,`HS65_LS_MUXI41X11_D0_R_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_00010,`HS65_LS_MUXI41X11_D1_R_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_10110,`HS65_LS_MUXI41X11_D1_R_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_11010,`HS65_LS_MUXI41X11_D1_R_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_11110,`HS65_LS_MUXI41X11_D1_R_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_10010,`HS65_LS_MUXI41X11_D1_R_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_00110,`HS65_LS_MUXI41X11_D1_R_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_01010,`HS65_LS_MUXI41X11_D1_R_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X11_D1_F_Z_R_01110,`HS65_LS_MUXI41X11_D1_R_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_00001,`HS65_LS_MUXI41X11_D2_R_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_10101,`HS65_LS_MUXI41X11_D2_R_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_11001,`HS65_LS_MUXI41X11_D2_R_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_11101,`HS65_LS_MUXI41X11_D2_R_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_10001,`HS65_LS_MUXI41X11_D2_R_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_00101,`HS65_LS_MUXI41X11_D2_R_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_01001,`HS65_LS_MUXI41X11_D2_R_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X11_D2_F_Z_R_01101,`HS65_LS_MUXI41X11_D2_R_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_00011,`HS65_LS_MUXI41X11_D3_R_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_10111,`HS65_LS_MUXI41X11_D3_R_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_11011,`HS65_LS_MUXI41X11_D3_R_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_11111,`HS65_LS_MUXI41X11_D3_R_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_10011,`HS65_LS_MUXI41X11_D3_R_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_00111,`HS65_LS_MUXI41X11_D3_R_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_01011,`HS65_LS_MUXI41X11_D3_R_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X11_D3_F_Z_R_01111,`HS65_LS_MUXI41X11_D3_R_Z_F_01111);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_00011,`HS65_LS_MUXI41X11_S0_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_01110,`HS65_LS_MUXI41X11_S0_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_10011,`HS65_LS_MUXI41X11_S0_R_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_11011,`HS65_LS_MUXI41X11_S0_R_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_01100,`HS65_LS_MUXI41X11_S0_R_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_01000,`HS65_LS_MUXI41X11_S0_R_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_01010,`HS65_LS_MUXI41X11_S0_R_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X11_S0_F_Z_R_01011,`HS65_LS_MUXI41X11_S0_R_Z_F_01011);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_00101,`HS65_LS_MUXI41X11_S0_F_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_10101,`HS65_LS_MUXI41X11_S0_F_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_10110,`HS65_LS_MUXI41X11_S0_F_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_11101,`HS65_LS_MUXI41X11_S0_F_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_10100,`HS65_LS_MUXI41X11_S0_F_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_01101,`HS65_LS_MUXI41X11_S0_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_10000,`HS65_LS_MUXI41X11_S0_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X11_S0_R_Z_R_10010,`HS65_LS_MUXI41X11_S0_F_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_00011,`HS65_LS_MUXI41X11_S1_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_01110,`HS65_LS_MUXI41X11_S1_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_10011,`HS65_LS_MUXI41X11_S1_R_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_10111,`HS65_LS_MUXI41X11_S1_R_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_01100,`HS65_LS_MUXI41X11_S1_R_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_00100,`HS65_LS_MUXI41X11_S1_R_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_00110,`HS65_LS_MUXI41X11_S1_R_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X11_S1_F_Z_R_00111,`HS65_LS_MUXI41X11_S1_R_Z_F_00111);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_01001,`HS65_LS_MUXI41X11_S1_F_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_11001,`HS65_LS_MUXI41X11_S1_F_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_11010,`HS65_LS_MUXI41X11_S1_F_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_11101,`HS65_LS_MUXI41X11_S1_F_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_11000,`HS65_LS_MUXI41X11_S1_F_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_01101,`HS65_LS_MUXI41X11_S1_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_10000,`HS65_LS_MUXI41X11_S1_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X11_S1_R_Z_R_10010,`HS65_LS_MUXI41X11_S1_F_Z_F_10010);


	endspecify

endmodule // HS65_LS_MUXI41X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI41X15_D0_R_Z_F_00000 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_00000 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_10100 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_10100 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_11000 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_11000 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_11100 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_11100 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_10000 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_10000 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X15_D0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X15_D0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_00010 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_00010 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_10110 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_10110 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_11010 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_11010 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_11110 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_11110 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_10010 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_10010 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X15_D1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X15_D1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_00001 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_00001 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_10101 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_10101 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_11001 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_11001 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_11101 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_11101 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_10001 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_10001 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_00101 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_00101 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_01001 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_01001 0.1
`define HS65_LS_MUXI41X15_D2_R_Z_F_01101 0.1
`define HS65_LS_MUXI41X15_D2_F_Z_R_01101 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_11111 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_11111 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X15_D3_R_Z_F_01111 0.1
`define HS65_LS_MUXI41X15_D3_F_Z_R_01111 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_00101 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_00101 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_10101 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_10101 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_10110 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_10110 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_10100 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_10100 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X15_S0_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X15_S0_F_Z_F_10010 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_01001 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_01001 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_11001 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_11001 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_11010 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_11010 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_11000 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_11000 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X15_S1_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X15_S1_F_Z_F_10010 0.1

module HS65_LS_MUXI41X15 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2   U3 (NET1, INTERNAL1, INTERNAL2, S1) ;
	not   #1 U4 (Z, NET1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_00000,`HS65_LS_MUXI41X15_D0_R_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_10100,`HS65_LS_MUXI41X15_D0_R_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_11000,`HS65_LS_MUXI41X15_D0_R_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_11100,`HS65_LS_MUXI41X15_D0_R_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_10000,`HS65_LS_MUXI41X15_D0_R_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_00100,`HS65_LS_MUXI41X15_D0_R_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_01000,`HS65_LS_MUXI41X15_D0_R_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X15_D0_F_Z_R_01100,`HS65_LS_MUXI41X15_D0_R_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_00010,`HS65_LS_MUXI41X15_D1_R_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_10110,`HS65_LS_MUXI41X15_D1_R_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_11010,`HS65_LS_MUXI41X15_D1_R_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_11110,`HS65_LS_MUXI41X15_D1_R_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_10010,`HS65_LS_MUXI41X15_D1_R_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_00110,`HS65_LS_MUXI41X15_D1_R_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_01010,`HS65_LS_MUXI41X15_D1_R_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X15_D1_F_Z_R_01110,`HS65_LS_MUXI41X15_D1_R_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_00001,`HS65_LS_MUXI41X15_D2_R_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_10101,`HS65_LS_MUXI41X15_D2_R_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_11001,`HS65_LS_MUXI41X15_D2_R_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_11101,`HS65_LS_MUXI41X15_D2_R_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_10001,`HS65_LS_MUXI41X15_D2_R_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_00101,`HS65_LS_MUXI41X15_D2_R_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_01001,`HS65_LS_MUXI41X15_D2_R_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X15_D2_F_Z_R_01101,`HS65_LS_MUXI41X15_D2_R_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_00011,`HS65_LS_MUXI41X15_D3_R_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_10111,`HS65_LS_MUXI41X15_D3_R_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_11011,`HS65_LS_MUXI41X15_D3_R_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_11111,`HS65_LS_MUXI41X15_D3_R_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_10011,`HS65_LS_MUXI41X15_D3_R_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_00111,`HS65_LS_MUXI41X15_D3_R_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_01011,`HS65_LS_MUXI41X15_D3_R_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X15_D3_F_Z_R_01111,`HS65_LS_MUXI41X15_D3_R_Z_F_01111);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_00011,`HS65_LS_MUXI41X15_S0_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_01110,`HS65_LS_MUXI41X15_S0_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_10011,`HS65_LS_MUXI41X15_S0_R_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_11011,`HS65_LS_MUXI41X15_S0_R_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_01100,`HS65_LS_MUXI41X15_S0_R_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_01000,`HS65_LS_MUXI41X15_S0_R_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_01010,`HS65_LS_MUXI41X15_S0_R_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X15_S0_F_Z_R_01011,`HS65_LS_MUXI41X15_S0_R_Z_F_01011);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_00101,`HS65_LS_MUXI41X15_S0_F_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_10101,`HS65_LS_MUXI41X15_S0_F_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_10110,`HS65_LS_MUXI41X15_S0_F_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_11101,`HS65_LS_MUXI41X15_S0_F_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_10100,`HS65_LS_MUXI41X15_S0_F_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_01101,`HS65_LS_MUXI41X15_S0_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_10000,`HS65_LS_MUXI41X15_S0_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X15_S0_R_Z_R_10010,`HS65_LS_MUXI41X15_S0_F_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_00011,`HS65_LS_MUXI41X15_S1_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_01110,`HS65_LS_MUXI41X15_S1_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_10011,`HS65_LS_MUXI41X15_S1_R_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_10111,`HS65_LS_MUXI41X15_S1_R_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_01100,`HS65_LS_MUXI41X15_S1_R_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_00100,`HS65_LS_MUXI41X15_S1_R_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_00110,`HS65_LS_MUXI41X15_S1_R_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X15_S1_F_Z_R_00111,`HS65_LS_MUXI41X15_S1_R_Z_F_00111);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_01001,`HS65_LS_MUXI41X15_S1_F_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_11001,`HS65_LS_MUXI41X15_S1_F_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_11010,`HS65_LS_MUXI41X15_S1_F_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_11101,`HS65_LS_MUXI41X15_S1_F_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_11000,`HS65_LS_MUXI41X15_S1_F_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_01101,`HS65_LS_MUXI41X15_S1_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_10000,`HS65_LS_MUXI41X15_S1_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X15_S1_R_Z_R_10010,`HS65_LS_MUXI41X15_S1_F_Z_F_10010);


	endspecify

endmodule // HS65_LS_MUXI41X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI41X2_D0_R_Z_F_00000 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_00000 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_10100 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_10100 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_11000 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_11000 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_11100 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_11100 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_10000 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_10000 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X2_D0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X2_D0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_00010 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_00010 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_10110 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_10110 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_11010 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_11010 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_11110 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_11110 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_10010 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_10010 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X2_D1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X2_D1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_00001 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_00001 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_10101 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_10101 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_11001 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_11001 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_11101 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_11101 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_10001 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_10001 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_00101 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_00101 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_01001 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_01001 0.1
`define HS65_LS_MUXI41X2_D2_R_Z_F_01101 0.1
`define HS65_LS_MUXI41X2_D2_F_Z_R_01101 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_11111 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_11111 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X2_D3_R_Z_F_01111 0.1
`define HS65_LS_MUXI41X2_D3_F_Z_R_01111 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_00101 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_00101 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_10101 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_10101 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_10110 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_10110 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_10100 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_10100 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X2_S0_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X2_S0_F_Z_F_10010 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_01001 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_01001 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_11001 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_11001 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_11010 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_11010 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_11000 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_11000 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X2_S1_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X2_S1_F_Z_F_10010 0.1

module HS65_LS_MUXI41X2 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2   U3 (NET1, INTERNAL1, INTERNAL2, S1) ;
	not   #1 U4 (Z, NET1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_00000,`HS65_LS_MUXI41X2_D0_R_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_10100,`HS65_LS_MUXI41X2_D0_R_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_11000,`HS65_LS_MUXI41X2_D0_R_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_11100,`HS65_LS_MUXI41X2_D0_R_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_10000,`HS65_LS_MUXI41X2_D0_R_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_00100,`HS65_LS_MUXI41X2_D0_R_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_01000,`HS65_LS_MUXI41X2_D0_R_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X2_D0_F_Z_R_01100,`HS65_LS_MUXI41X2_D0_R_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_00010,`HS65_LS_MUXI41X2_D1_R_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_10110,`HS65_LS_MUXI41X2_D1_R_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_11010,`HS65_LS_MUXI41X2_D1_R_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_11110,`HS65_LS_MUXI41X2_D1_R_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_10010,`HS65_LS_MUXI41X2_D1_R_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_00110,`HS65_LS_MUXI41X2_D1_R_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_01010,`HS65_LS_MUXI41X2_D1_R_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X2_D1_F_Z_R_01110,`HS65_LS_MUXI41X2_D1_R_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_00001,`HS65_LS_MUXI41X2_D2_R_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_10101,`HS65_LS_MUXI41X2_D2_R_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_11001,`HS65_LS_MUXI41X2_D2_R_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_11101,`HS65_LS_MUXI41X2_D2_R_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_10001,`HS65_LS_MUXI41X2_D2_R_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_00101,`HS65_LS_MUXI41X2_D2_R_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_01001,`HS65_LS_MUXI41X2_D2_R_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X2_D2_F_Z_R_01101,`HS65_LS_MUXI41X2_D2_R_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_00011,`HS65_LS_MUXI41X2_D3_R_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_10111,`HS65_LS_MUXI41X2_D3_R_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_11011,`HS65_LS_MUXI41X2_D3_R_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_11111,`HS65_LS_MUXI41X2_D3_R_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_10011,`HS65_LS_MUXI41X2_D3_R_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_00111,`HS65_LS_MUXI41X2_D3_R_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_01011,`HS65_LS_MUXI41X2_D3_R_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X2_D3_F_Z_R_01111,`HS65_LS_MUXI41X2_D3_R_Z_F_01111);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_00011,`HS65_LS_MUXI41X2_S0_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_01110,`HS65_LS_MUXI41X2_S0_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_10011,`HS65_LS_MUXI41X2_S0_R_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_11011,`HS65_LS_MUXI41X2_S0_R_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_01100,`HS65_LS_MUXI41X2_S0_R_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_01000,`HS65_LS_MUXI41X2_S0_R_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_01010,`HS65_LS_MUXI41X2_S0_R_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X2_S0_F_Z_R_01011,`HS65_LS_MUXI41X2_S0_R_Z_F_01011);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_00101,`HS65_LS_MUXI41X2_S0_F_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_10101,`HS65_LS_MUXI41X2_S0_F_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_10110,`HS65_LS_MUXI41X2_S0_F_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_11101,`HS65_LS_MUXI41X2_S0_F_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_10100,`HS65_LS_MUXI41X2_S0_F_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_01101,`HS65_LS_MUXI41X2_S0_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_10000,`HS65_LS_MUXI41X2_S0_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X2_S0_R_Z_R_10010,`HS65_LS_MUXI41X2_S0_F_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_00011,`HS65_LS_MUXI41X2_S1_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_01110,`HS65_LS_MUXI41X2_S1_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_10011,`HS65_LS_MUXI41X2_S1_R_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_10111,`HS65_LS_MUXI41X2_S1_R_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_01100,`HS65_LS_MUXI41X2_S1_R_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_00100,`HS65_LS_MUXI41X2_S1_R_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_00110,`HS65_LS_MUXI41X2_S1_R_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X2_S1_F_Z_R_00111,`HS65_LS_MUXI41X2_S1_R_Z_F_00111);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_01001,`HS65_LS_MUXI41X2_S1_F_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_11001,`HS65_LS_MUXI41X2_S1_F_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_11010,`HS65_LS_MUXI41X2_S1_F_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_11101,`HS65_LS_MUXI41X2_S1_F_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_11000,`HS65_LS_MUXI41X2_S1_F_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_01101,`HS65_LS_MUXI41X2_S1_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_10000,`HS65_LS_MUXI41X2_S1_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X2_S1_R_Z_R_10010,`HS65_LS_MUXI41X2_S1_F_Z_F_10010);


	endspecify

endmodule // HS65_LS_MUXI41X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI41X4_D0_R_Z_F_00000 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_00000 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_10100 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_10100 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_11000 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_11000 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_11100 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_11100 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_10000 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_10000 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X4_D0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X4_D0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_00010 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_00010 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_10110 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_10110 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_11010 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_11010 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_11110 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_11110 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_10010 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_10010 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X4_D1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X4_D1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_00001 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_00001 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_10101 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_10101 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_11001 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_11001 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_11101 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_11101 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_10001 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_10001 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_00101 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_00101 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_01001 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_01001 0.1
`define HS65_LS_MUXI41X4_D2_R_Z_F_01101 0.1
`define HS65_LS_MUXI41X4_D2_F_Z_R_01101 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_11111 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_11111 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X4_D3_R_Z_F_01111 0.1
`define HS65_LS_MUXI41X4_D3_F_Z_R_01111 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_00101 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_00101 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_10101 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_10101 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_10110 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_10110 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_10100 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_10100 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X4_S0_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X4_S0_F_Z_F_10010 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_01001 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_01001 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_11001 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_11001 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_11010 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_11010 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_11000 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_11000 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X4_S1_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X4_S1_F_Z_F_10010 0.1

module HS65_LS_MUXI41X4 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2   U3 (NET1, INTERNAL1, INTERNAL2, S1) ;
	not   #1 U4 (Z, NET1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_00000,`HS65_LS_MUXI41X4_D0_R_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_10100,`HS65_LS_MUXI41X4_D0_R_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_11000,`HS65_LS_MUXI41X4_D0_R_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_11100,`HS65_LS_MUXI41X4_D0_R_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_10000,`HS65_LS_MUXI41X4_D0_R_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_00100,`HS65_LS_MUXI41X4_D0_R_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_01000,`HS65_LS_MUXI41X4_D0_R_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X4_D0_F_Z_R_01100,`HS65_LS_MUXI41X4_D0_R_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_00010,`HS65_LS_MUXI41X4_D1_R_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_10110,`HS65_LS_MUXI41X4_D1_R_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_11010,`HS65_LS_MUXI41X4_D1_R_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_11110,`HS65_LS_MUXI41X4_D1_R_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_10010,`HS65_LS_MUXI41X4_D1_R_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_00110,`HS65_LS_MUXI41X4_D1_R_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_01010,`HS65_LS_MUXI41X4_D1_R_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X4_D1_F_Z_R_01110,`HS65_LS_MUXI41X4_D1_R_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_00001,`HS65_LS_MUXI41X4_D2_R_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_10101,`HS65_LS_MUXI41X4_D2_R_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_11001,`HS65_LS_MUXI41X4_D2_R_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_11101,`HS65_LS_MUXI41X4_D2_R_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_10001,`HS65_LS_MUXI41X4_D2_R_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_00101,`HS65_LS_MUXI41X4_D2_R_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_01001,`HS65_LS_MUXI41X4_D2_R_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X4_D2_F_Z_R_01101,`HS65_LS_MUXI41X4_D2_R_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_00011,`HS65_LS_MUXI41X4_D3_R_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_10111,`HS65_LS_MUXI41X4_D3_R_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_11011,`HS65_LS_MUXI41X4_D3_R_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_11111,`HS65_LS_MUXI41X4_D3_R_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_10011,`HS65_LS_MUXI41X4_D3_R_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_00111,`HS65_LS_MUXI41X4_D3_R_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_01011,`HS65_LS_MUXI41X4_D3_R_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X4_D3_F_Z_R_01111,`HS65_LS_MUXI41X4_D3_R_Z_F_01111);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_00011,`HS65_LS_MUXI41X4_S0_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_01110,`HS65_LS_MUXI41X4_S0_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_10011,`HS65_LS_MUXI41X4_S0_R_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_11011,`HS65_LS_MUXI41X4_S0_R_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_01100,`HS65_LS_MUXI41X4_S0_R_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_01000,`HS65_LS_MUXI41X4_S0_R_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_01010,`HS65_LS_MUXI41X4_S0_R_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X4_S0_F_Z_R_01011,`HS65_LS_MUXI41X4_S0_R_Z_F_01011);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_00101,`HS65_LS_MUXI41X4_S0_F_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_10101,`HS65_LS_MUXI41X4_S0_F_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_10110,`HS65_LS_MUXI41X4_S0_F_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_11101,`HS65_LS_MUXI41X4_S0_F_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_10100,`HS65_LS_MUXI41X4_S0_F_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_01101,`HS65_LS_MUXI41X4_S0_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_10000,`HS65_LS_MUXI41X4_S0_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X4_S0_R_Z_R_10010,`HS65_LS_MUXI41X4_S0_F_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_00011,`HS65_LS_MUXI41X4_S1_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_01110,`HS65_LS_MUXI41X4_S1_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_10011,`HS65_LS_MUXI41X4_S1_R_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_10111,`HS65_LS_MUXI41X4_S1_R_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_01100,`HS65_LS_MUXI41X4_S1_R_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_00100,`HS65_LS_MUXI41X4_S1_R_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_00110,`HS65_LS_MUXI41X4_S1_R_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X4_S1_F_Z_R_00111,`HS65_LS_MUXI41X4_S1_R_Z_F_00111);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_01001,`HS65_LS_MUXI41X4_S1_F_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_11001,`HS65_LS_MUXI41X4_S1_F_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_11010,`HS65_LS_MUXI41X4_S1_F_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_11101,`HS65_LS_MUXI41X4_S1_F_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_11000,`HS65_LS_MUXI41X4_S1_F_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_01101,`HS65_LS_MUXI41X4_S1_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_10000,`HS65_LS_MUXI41X4_S1_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X4_S1_R_Z_R_10010,`HS65_LS_MUXI41X4_S1_F_Z_F_10010);


	endspecify

endmodule // HS65_LS_MUXI41X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MUXI41X7_D0_R_Z_F_00000 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_00000 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_10100 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_10100 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_11000 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_11000 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_11100 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_11100 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_10000 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_10000 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X7_D0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X7_D0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_00010 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_00010 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_10110 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_10110 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_11010 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_11010 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_11110 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_11110 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_10010 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_10010 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X7_D1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X7_D1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_00001 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_00001 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_10101 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_10101 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_11001 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_11001 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_11101 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_11101 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_10001 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_10001 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_00101 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_00101 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_01001 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_01001 0.1
`define HS65_LS_MUXI41X7_D2_R_Z_F_01101 0.1
`define HS65_LS_MUXI41X7_D2_F_Z_R_01101 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_11111 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_11111 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X7_D3_R_Z_F_01111 0.1
`define HS65_LS_MUXI41X7_D3_F_Z_R_01111 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_11011 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_11011 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_01000 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_01000 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_01010 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_01010 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_F_01011 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_R_01011 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_00101 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_00101 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_10101 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_10101 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_10110 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_10110 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_10100 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_10100 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X7_S0_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X7_S0_F_Z_F_10010 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_00011 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_00011 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_01110 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_01110 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_10011 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_10011 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_10111 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_10111 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_01100 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_01100 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_00100 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_00100 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_00110 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_00110 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_F_00111 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_R_00111 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_01001 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_01001 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_11001 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_11001 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_11010 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_11010 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_11101 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_11101 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_11000 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_11000 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_01101 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_01101 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_10000 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_10000 0.1
`define HS65_LS_MUXI41X7_S1_R_Z_R_10010 0.1
`define HS65_LS_MUXI41X7_S1_F_Z_F_10010 0.1

module HS65_LS_MUXI41X7 (Z, D0, D1, D2, D3, S0, S1);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;

	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D0, D1, S0) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL2, D2, D3, S0) ;
	CORE65LPSVT_U_MUX2   U3 (NET1, INTERNAL1, INTERNAL2, S1) ;
	not   #1 U4 (Z, NET1) ;



	specify

		if (!D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_00000,`HS65_LS_MUXI41X7_D0_R_Z_F_00000);
		if (D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_10100,`HS65_LS_MUXI41X7_D0_R_Z_F_10100);
		if (D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_11000,`HS65_LS_MUXI41X7_D0_R_Z_F_11000);
		if (D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_11100,`HS65_LS_MUXI41X7_D0_R_Z_F_11100);
		if (D1 && !D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_10000,`HS65_LS_MUXI41X7_D0_R_Z_F_10000);
		if (!D1 && !D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_00100,`HS65_LS_MUXI41X7_D0_R_Z_F_00100);
		if (!D1 && D2 && !D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_01000,`HS65_LS_MUXI41X7_D0_R_Z_F_01000);
		if (!D1 && D2 && D3 && !S0 && !S1) (D0 -=> Z) = (`HS65_LS_MUXI41X7_D0_F_Z_R_01100,`HS65_LS_MUXI41X7_D0_R_Z_F_01100);
		if (!D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_00010,`HS65_LS_MUXI41X7_D1_R_Z_F_00010);
		if (D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_10110,`HS65_LS_MUXI41X7_D1_R_Z_F_10110);
		if (D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_11010,`HS65_LS_MUXI41X7_D1_R_Z_F_11010);
		if (D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_11110,`HS65_LS_MUXI41X7_D1_R_Z_F_11110);
		if (D0 && !D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_10010,`HS65_LS_MUXI41X7_D1_R_Z_F_10010);
		if (!D0 && !D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_00110,`HS65_LS_MUXI41X7_D1_R_Z_F_00110);
		if (!D0 && D2 && !D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_01010,`HS65_LS_MUXI41X7_D1_R_Z_F_01010);
		if (!D0 && D2 && D3 && S0 && !S1) (D1 -=> Z) = (`HS65_LS_MUXI41X7_D1_F_Z_R_01110,`HS65_LS_MUXI41X7_D1_R_Z_F_01110);
		if (!D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_00001,`HS65_LS_MUXI41X7_D2_R_Z_F_00001);
		if (D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_10101,`HS65_LS_MUXI41X7_D2_R_Z_F_10101);
		if (D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_11001,`HS65_LS_MUXI41X7_D2_R_Z_F_11001);
		if (D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_11101,`HS65_LS_MUXI41X7_D2_R_Z_F_11101);
		if (D0 && !D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_10001,`HS65_LS_MUXI41X7_D2_R_Z_F_10001);
		if (!D0 && !D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_00101,`HS65_LS_MUXI41X7_D2_R_Z_F_00101);
		if (!D0 && D1 && !D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_01001,`HS65_LS_MUXI41X7_D2_R_Z_F_01001);
		if (!D0 && D1 && D3 && !S0 && S1) (D2 -=> Z) = (`HS65_LS_MUXI41X7_D2_F_Z_R_01101,`HS65_LS_MUXI41X7_D2_R_Z_F_01101);
		if (!D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_00011,`HS65_LS_MUXI41X7_D3_R_Z_F_00011);
		if (D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_10111,`HS65_LS_MUXI41X7_D3_R_Z_F_10111);
		if (D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_11011,`HS65_LS_MUXI41X7_D3_R_Z_F_11011);
		if (D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_11111,`HS65_LS_MUXI41X7_D3_R_Z_F_11111);
		if (D0 && !D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_10011,`HS65_LS_MUXI41X7_D3_R_Z_F_10011);
		if (!D0 && !D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_00111,`HS65_LS_MUXI41X7_D3_R_Z_F_00111);
		if (!D0 && D1 && !D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_01011,`HS65_LS_MUXI41X7_D3_R_Z_F_01011);
		if (!D0 && D1 && D2 && S0 && S1) (D3 -=> Z) = (`HS65_LS_MUXI41X7_D3_F_Z_R_01111,`HS65_LS_MUXI41X7_D3_R_Z_F_01111);
		if (!D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_00011,`HS65_LS_MUXI41X7_S0_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_01110,`HS65_LS_MUXI41X7_S0_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_10011,`HS65_LS_MUXI41X7_S0_R_Z_F_10011);
		if (D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_11011,`HS65_LS_MUXI41X7_S0_R_Z_F_11011);
		if (!D0 && D1 && D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_01100,`HS65_LS_MUXI41X7_S0_R_Z_F_01100);
		if (!D0 && D1 && !D2 && !D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_01000,`HS65_LS_MUXI41X7_S0_R_Z_F_01000);
		if (!D0 && D1 && !D2 && D3 && !S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_01010,`HS65_LS_MUXI41X7_S0_R_Z_F_01010);
		if (!D0 && D1 && !D2 && D3 && S1) (S0 -=> Z) = (`HS65_LS_MUXI41X7_S0_F_Z_R_01011,`HS65_LS_MUXI41X7_S0_R_Z_F_01011);
		if (!D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_00101,`HS65_LS_MUXI41X7_S0_F_Z_F_00101);
		if (D0 && !D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_10101,`HS65_LS_MUXI41X7_S0_F_Z_F_10101);
		if (D0 && !D1 && D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_10110,`HS65_LS_MUXI41X7_S0_F_Z_F_10110);
		if (D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_11101,`HS65_LS_MUXI41X7_S0_F_Z_F_11101);
		if (D0 && !D1 && D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_10100,`HS65_LS_MUXI41X7_S0_F_Z_F_10100);
		if (!D0 && D1 && D2 && !D3 && S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_01101,`HS65_LS_MUXI41X7_S0_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_10000,`HS65_LS_MUXI41X7_S0_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S1) (S0 +=> Z) = (`HS65_LS_MUXI41X7_S0_R_Z_R_10010,`HS65_LS_MUXI41X7_S0_F_Z_F_10010);
		if (!D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_00011,`HS65_LS_MUXI41X7_S1_R_Z_F_00011);
		if (!D0 && D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_01110,`HS65_LS_MUXI41X7_S1_R_Z_F_01110);
		if (D0 && !D1 && !D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_10011,`HS65_LS_MUXI41X7_S1_R_Z_F_10011);
		if (D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_10111,`HS65_LS_MUXI41X7_S1_R_Z_F_10111);
		if (!D0 && D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_01100,`HS65_LS_MUXI41X7_S1_R_Z_F_01100);
		if (!D0 && !D1 && D2 && !D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_00100,`HS65_LS_MUXI41X7_S1_R_Z_F_00100);
		if (!D0 && !D1 && D2 && D3 && !S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_00110,`HS65_LS_MUXI41X7_S1_R_Z_F_00110);
		if (!D0 && !D1 && D2 && D3 && S0) (S1 -=> Z) = (`HS65_LS_MUXI41X7_S1_F_Z_R_00111,`HS65_LS_MUXI41X7_S1_R_Z_F_00111);
		if (!D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_01001,`HS65_LS_MUXI41X7_S1_F_Z_F_01001);
		if (D0 && D1 && !D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_11001,`HS65_LS_MUXI41X7_S1_F_Z_F_11001);
		if (D0 && D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_11010,`HS65_LS_MUXI41X7_S1_F_Z_F_11010);
		if (D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_11101,`HS65_LS_MUXI41X7_S1_F_Z_F_11101);
		if (D0 && D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_11000,`HS65_LS_MUXI41X7_S1_F_Z_F_11000);
		if (!D0 && D1 && D2 && !D3 && S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_01101,`HS65_LS_MUXI41X7_S1_F_Z_F_01101);
		if (D0 && !D1 && !D2 && !D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_10000,`HS65_LS_MUXI41X7_S1_F_Z_F_10000);
		if (D0 && !D1 && !D2 && D3 && !S0) (S1 +=> Z) = (`HS65_LS_MUXI41X7_S1_R_Z_R_10010,`HS65_LS_MUXI41X7_S1_F_Z_F_10010);


	endspecify

endmodule // HS65_LS_MUXI41X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MX41X14_D0_R_Z_R_0001111 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001111 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0011010 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0011010 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0011000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0011000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0011100 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0011100 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0101000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0101000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0011110 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0011110 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0101001 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0101001 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001001 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001001 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001010 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001010 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001100 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001100 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001011 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001011 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001101 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001101 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1001011 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1001011 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0001110 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0001110 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1011010 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1011010 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1101001 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1101001 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0101100 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0101100 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0111000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0111000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0101101 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0101101 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_0111100 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_0111100 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1001001 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1001001 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X14_D0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X14_D0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0001111 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0001111 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0010110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0010110 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0010100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0010100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0011100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0011100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0011110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0011110 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0000101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0000101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0000100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0000100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0000110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0000110 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0001100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0001100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0000111 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0000111 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0001101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0001101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1000111 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1000111 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0001110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0001110 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1010100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1010100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1100100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1100100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1010110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1010110 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1100101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1100101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1110100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1110100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0101101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0101101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1000101 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1000101 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1000100 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1000100 0.1
`define HS65_LS_MX41X14_D1_R_Z_R_1000110 0.1
`define HS65_LS_MX41X14_D1_F_Z_F_1000110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0001111 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0001111 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0100010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0100010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0100011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0100011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0000011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0000011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0000010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0000010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0000110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0000110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0001010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0001010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0000111 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0000111 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0001011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0001011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1000111 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1000111 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0001110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0001110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1100010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1100010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1010110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1010110 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1100011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1100011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1110010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1110010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0101010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0101010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0110010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0110010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0101011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0101011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_0111010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_0111010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1000011 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1000011 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1000010 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1000010 0.1
`define HS65_LS_MX41X14_D2_R_Z_R_1000110 0.1
`define HS65_LS_MX41X14_D2_F_Z_F_1000110 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0010101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0010101 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0010001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0010001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0011001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0011001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0100001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0100001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0011101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0011101 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0100011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0100011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0000011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0000011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0000001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0000001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0000101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0000101 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0000111 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0000111 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1000111 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1000111 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1010001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1010001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1100001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1100001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1010101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1010101 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1100011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1100011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1110001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1110001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0110001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0110001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0101011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0101011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_0111001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_0111001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1000011 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1000011 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1000001 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1000001 0.1
`define HS65_LS_MX41X14_D3_R_Z_R_1000101 0.1
`define HS65_LS_MX41X14_D3_F_Z_F_1000101 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000111 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000111 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1001100 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1001100 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1010000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1010000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1001110 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1001110 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1010001 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1010001 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000001 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000001 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000010 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000010 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000100 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000100 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000011 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000011 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000101 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000101 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1100011 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1100011 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1000110 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1000110 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1110000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1110000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1101010 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1101010 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1110001 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1110001 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1010100 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1010100 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1010101 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1010101 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1011100 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1011100 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1100001 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1100001 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1100000 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1100000 0.1
`define HS65_LS_MX41X14_S0_R_Z_R_1100010 0.1
`define HS65_LS_MX41X14_S0_F_Z_F_1100010 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100111 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100111 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0101010 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0101010 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0101000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0101000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0110000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0110000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0101110 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0101110 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0110001 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0110001 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100001 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100001 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100010 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100010 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100011 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100011 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1100011 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1100011 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0100110 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0100110 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1101000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1101000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1110000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1110000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1101010 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1101010 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1110001 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1110001 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1111000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1111000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0111000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0111000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0110101 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0110101 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1100001 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1100001 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1100000 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1100000 0.1
`define HS65_LS_MX41X14_S1_R_Z_R_1100010 0.1
`define HS65_LS_MX41X14_S1_F_Z_F_1100010 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010111 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010111 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0011000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0011000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0011100 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0011100 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0110000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0110000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0110001 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0110001 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010001 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010001 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010100 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010100 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010011 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010011 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010101 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010101 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1010011 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1010011 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1011000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1011000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1110000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1110000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1011010 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1011010 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1110001 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1110001 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1111000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1111000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0110100 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0110100 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0111000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0111000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0110101 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0110101 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_0111100 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_0111100 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1010001 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1010001 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1010000 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1010000 0.1
`define HS65_LS_MX41X14_S2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X14_S2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0011010 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0011010 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0011000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0011000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0011100 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0011100 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0101000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0101000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0011110 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0011110 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001010 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001010 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001100 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001100 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1001011 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1001011 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0001110 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0001110 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1011000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1011000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1101000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1101000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1011010 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1011010 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1101001 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1101001 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1111000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1111000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0101100 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0101100 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0111000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0111000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0101101 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0101101 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_0111100 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_0111100 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1001001 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1001001 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1001000 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1001000 0.1
`define HS65_LS_MX41X14_S3_R_Z_R_1001010 0.1
`define HS65_LS_MX41X14_S3_F_Z_F_1001010 0.1

module HS65_LS_MX41X14 (Z, D0, D1, D2, D3, S0, S1, S2, S3);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;
	input S2;
	input S3;

	and    U1 (INTERNAL1, D0, S0) ;
	and    U2 (INTERNAL2, D1, S1) ;
	and    U3 (INTERNAL3, D2, S2) ;
	and    U4 (INTERNAL4, D3, S3) ;
	or   #1 U5 (Z, INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;



	specify

		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001111,`HS65_LS_MX41X14_D0_F_Z_F_0001111);
		if (!D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0011010,`HS65_LS_MX41X14_D0_F_Z_F_0011010);
		if (!D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0011000,`HS65_LS_MX41X14_D0_F_Z_F_0011000);
		if (!D1 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0011100,`HS65_LS_MX41X14_D0_F_Z_F_0011100);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0101000,`HS65_LS_MX41X14_D0_F_Z_F_0101000);
		if (!D1 && !D2 && D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0011110,`HS65_LS_MX41X14_D0_F_Z_F_0011110);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0101001,`HS65_LS_MX41X14_D0_F_Z_F_0101001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001001,`HS65_LS_MX41X14_D0_F_Z_F_0001001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001000,`HS65_LS_MX41X14_D0_F_Z_F_0001000);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001010,`HS65_LS_MX41X14_D0_F_Z_F_0001010);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001100,`HS65_LS_MX41X14_D0_F_Z_F_0001100);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001011,`HS65_LS_MX41X14_D0_F_Z_F_0001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001101,`HS65_LS_MX41X14_D0_F_Z_F_0001101);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1001011,`HS65_LS_MX41X14_D0_F_Z_F_1001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0001110,`HS65_LS_MX41X14_D0_F_Z_F_0001110);
		if (D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1011000,`HS65_LS_MX41X14_D0_F_Z_F_1011000);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1101000,`HS65_LS_MX41X14_D0_F_Z_F_1101000);
		if (D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1011010,`HS65_LS_MX41X14_D0_F_Z_F_1011010);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1101001,`HS65_LS_MX41X14_D0_F_Z_F_1101001);
		if (D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1111000,`HS65_LS_MX41X14_D0_F_Z_F_1111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0101100,`HS65_LS_MX41X14_D0_F_Z_F_0101100);
		if (!D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0111000,`HS65_LS_MX41X14_D0_F_Z_F_0111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0101101,`HS65_LS_MX41X14_D0_F_Z_F_0101101);
		if (!D1 && D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_0111100,`HS65_LS_MX41X14_D0_F_Z_F_0111100);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1001001,`HS65_LS_MX41X14_D0_F_Z_F_1001001);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1001000,`HS65_LS_MX41X14_D0_F_Z_F_1001000);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X14_D0_R_Z_R_1001010,`HS65_LS_MX41X14_D0_F_Z_F_1001010);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0001111,`HS65_LS_MX41X14_D1_F_Z_F_0001111);
		if (!D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0010110,`HS65_LS_MX41X14_D1_F_Z_F_0010110);
		if (!D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0010100,`HS65_LS_MX41X14_D1_F_Z_F_0010100);
		if (!D0 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0011100,`HS65_LS_MX41X14_D1_F_Z_F_0011100);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0100100,`HS65_LS_MX41X14_D1_F_Z_F_0100100);
		if (!D0 && !D2 && D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0011110,`HS65_LS_MX41X14_D1_F_Z_F_0011110);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0100101,`HS65_LS_MX41X14_D1_F_Z_F_0100101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0000101,`HS65_LS_MX41X14_D1_F_Z_F_0000101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0000100,`HS65_LS_MX41X14_D1_F_Z_F_0000100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0000110,`HS65_LS_MX41X14_D1_F_Z_F_0000110);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0001100,`HS65_LS_MX41X14_D1_F_Z_F_0001100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0000111,`HS65_LS_MX41X14_D1_F_Z_F_0000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0001101,`HS65_LS_MX41X14_D1_F_Z_F_0001101);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1000111,`HS65_LS_MX41X14_D1_F_Z_F_1000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0001110,`HS65_LS_MX41X14_D1_F_Z_F_0001110);
		if (D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1010100,`HS65_LS_MX41X14_D1_F_Z_F_1010100);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1100100,`HS65_LS_MX41X14_D1_F_Z_F_1100100);
		if (D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1010110,`HS65_LS_MX41X14_D1_F_Z_F_1010110);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1100101,`HS65_LS_MX41X14_D1_F_Z_F_1100101);
		if (D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1110100,`HS65_LS_MX41X14_D1_F_Z_F_1110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0101100,`HS65_LS_MX41X14_D1_F_Z_F_0101100);
		if (!D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0110100,`HS65_LS_MX41X14_D1_F_Z_F_0110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0101101,`HS65_LS_MX41X14_D1_F_Z_F_0101101);
		if (!D0 && D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_0111100,`HS65_LS_MX41X14_D1_F_Z_F_0111100);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1000101,`HS65_LS_MX41X14_D1_F_Z_F_1000101);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1000100,`HS65_LS_MX41X14_D1_F_Z_F_1000100);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X14_D1_R_Z_R_1000110,`HS65_LS_MX41X14_D1_F_Z_F_1000110);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0001111,`HS65_LS_MX41X14_D2_F_Z_F_0001111);
		if (!D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0010110,`HS65_LS_MX41X14_D2_F_Z_F_0010110);
		if (!D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0010010,`HS65_LS_MX41X14_D2_F_Z_F_0010010);
		if (!D0 && !D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0011010,`HS65_LS_MX41X14_D2_F_Z_F_0011010);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0100010,`HS65_LS_MX41X14_D2_F_Z_F_0100010);
		if (!D0 && !D1 && D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0011110,`HS65_LS_MX41X14_D2_F_Z_F_0011110);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0100011,`HS65_LS_MX41X14_D2_F_Z_F_0100011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0000011,`HS65_LS_MX41X14_D2_F_Z_F_0000011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0000010,`HS65_LS_MX41X14_D2_F_Z_F_0000010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0000110,`HS65_LS_MX41X14_D2_F_Z_F_0000110);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0001010,`HS65_LS_MX41X14_D2_F_Z_F_0001010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0000111,`HS65_LS_MX41X14_D2_F_Z_F_0000111);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0001011,`HS65_LS_MX41X14_D2_F_Z_F_0001011);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1000111,`HS65_LS_MX41X14_D2_F_Z_F_1000111);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0001110,`HS65_LS_MX41X14_D2_F_Z_F_0001110);
		if (D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1010010,`HS65_LS_MX41X14_D2_F_Z_F_1010010);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1100010,`HS65_LS_MX41X14_D2_F_Z_F_1100010);
		if (D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1010110,`HS65_LS_MX41X14_D2_F_Z_F_1010110);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1100011,`HS65_LS_MX41X14_D2_F_Z_F_1100011);
		if (D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1110010,`HS65_LS_MX41X14_D2_F_Z_F_1110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0101010,`HS65_LS_MX41X14_D2_F_Z_F_0101010);
		if (!D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0110010,`HS65_LS_MX41X14_D2_F_Z_F_0110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0101011,`HS65_LS_MX41X14_D2_F_Z_F_0101011);
		if (!D0 && D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_0111010,`HS65_LS_MX41X14_D2_F_Z_F_0111010);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1000011,`HS65_LS_MX41X14_D2_F_Z_F_1000011);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1000010,`HS65_LS_MX41X14_D2_F_Z_F_1000010);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X14_D2_R_Z_R_1000110,`HS65_LS_MX41X14_D2_F_Z_F_1000110);
		if (!D0 && !D1 && !D2 && S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0001111,`HS65_LS_MX41X14_D3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0010101,`HS65_LS_MX41X14_D3_F_Z_F_0010101);
		if (!D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0010001,`HS65_LS_MX41X14_D3_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0011001,`HS65_LS_MX41X14_D3_F_Z_F_0011001);
		if (!D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0100001,`HS65_LS_MX41X14_D3_F_Z_F_0100001);
		if (!D0 && !D1 && D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0011101,`HS65_LS_MX41X14_D3_F_Z_F_0011101);
		if (!D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0100011,`HS65_LS_MX41X14_D3_F_Z_F_0100011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0000011,`HS65_LS_MX41X14_D3_F_Z_F_0000011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0000001,`HS65_LS_MX41X14_D3_F_Z_F_0000001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0000101,`HS65_LS_MX41X14_D3_F_Z_F_0000101);
		if (!D0 && !D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0001001,`HS65_LS_MX41X14_D3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0000111,`HS65_LS_MX41X14_D3_F_Z_F_0000111);
		if (!D0 && !D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0001011,`HS65_LS_MX41X14_D3_F_Z_F_0001011);
		if (D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1000111,`HS65_LS_MX41X14_D3_F_Z_F_1000111);
		if (!D0 && !D1 && !D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0001101,`HS65_LS_MX41X14_D3_F_Z_F_0001101);
		if (D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1010001,`HS65_LS_MX41X14_D3_F_Z_F_1010001);
		if (D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1100001,`HS65_LS_MX41X14_D3_F_Z_F_1100001);
		if (D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1010101,`HS65_LS_MX41X14_D3_F_Z_F_1010101);
		if (D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1100011,`HS65_LS_MX41X14_D3_F_Z_F_1100011);
		if (D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1110001,`HS65_LS_MX41X14_D3_F_Z_F_1110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0101001,`HS65_LS_MX41X14_D3_F_Z_F_0101001);
		if (!D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0110001,`HS65_LS_MX41X14_D3_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0101011,`HS65_LS_MX41X14_D3_F_Z_F_0101011);
		if (!D0 && D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_0111001,`HS65_LS_MX41X14_D3_F_Z_F_0111001);
		if (D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1000011,`HS65_LS_MX41X14_D3_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1000001,`HS65_LS_MX41X14_D3_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X14_D3_R_Z_R_1000101,`HS65_LS_MX41X14_D3_F_Z_F_1000101);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000111,`HS65_LS_MX41X14_S0_F_Z_F_1000111);
		if (D0 && !D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1001010,`HS65_LS_MX41X14_S0_F_Z_F_1001010);
		if (D0 && !D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1001000,`HS65_LS_MX41X14_S0_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1001100,`HS65_LS_MX41X14_S0_F_Z_F_1001100);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1010000,`HS65_LS_MX41X14_S0_F_Z_F_1010000);
		if (D0 && !D1 && !D2 && D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1001110,`HS65_LS_MX41X14_S0_F_Z_F_1001110);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1010001,`HS65_LS_MX41X14_S0_F_Z_F_1010001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000001,`HS65_LS_MX41X14_S0_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000000,`HS65_LS_MX41X14_S0_F_Z_F_1000000);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000010,`HS65_LS_MX41X14_S0_F_Z_F_1000010);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000100,`HS65_LS_MX41X14_S0_F_Z_F_1000100);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000011,`HS65_LS_MX41X14_S0_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000101,`HS65_LS_MX41X14_S0_F_Z_F_1000101);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1100011,`HS65_LS_MX41X14_S0_F_Z_F_1100011);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1000110,`HS65_LS_MX41X14_S0_F_Z_F_1000110);
		if (D0 && D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1101000,`HS65_LS_MX41X14_S0_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1110000,`HS65_LS_MX41X14_S0_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1101010,`HS65_LS_MX41X14_S0_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1110001,`HS65_LS_MX41X14_S0_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1111000,`HS65_LS_MX41X14_S0_F_Z_F_1111000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1010100,`HS65_LS_MX41X14_S0_F_Z_F_1010100);
		if (D0 && !D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1011000,`HS65_LS_MX41X14_S0_F_Z_F_1011000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1010101,`HS65_LS_MX41X14_S0_F_Z_F_1010101);
		if (D0 && !D1 && D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1011100,`HS65_LS_MX41X14_S0_F_Z_F_1011100);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1100001,`HS65_LS_MX41X14_S0_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1100000,`HS65_LS_MX41X14_S0_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X14_S0_R_Z_R_1100010,`HS65_LS_MX41X14_S0_F_Z_F_1100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100111,`HS65_LS_MX41X14_S1_F_Z_F_0100111);
		if (!D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0101010,`HS65_LS_MX41X14_S1_F_Z_F_0101010);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0101000,`HS65_LS_MX41X14_S1_F_Z_F_0101000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0101100,`HS65_LS_MX41X14_S1_F_Z_F_0101100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0110000,`HS65_LS_MX41X14_S1_F_Z_F_0110000);
		if (!D0 && D1 && !D2 && D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0101110,`HS65_LS_MX41X14_S1_F_Z_F_0101110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0110001,`HS65_LS_MX41X14_S1_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100001,`HS65_LS_MX41X14_S1_F_Z_F_0100001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100000,`HS65_LS_MX41X14_S1_F_Z_F_0100000);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100010,`HS65_LS_MX41X14_S1_F_Z_F_0100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100100,`HS65_LS_MX41X14_S1_F_Z_F_0100100);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100011,`HS65_LS_MX41X14_S1_F_Z_F_0100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100101,`HS65_LS_MX41X14_S1_F_Z_F_0100101);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1100011,`HS65_LS_MX41X14_S1_F_Z_F_1100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0100110,`HS65_LS_MX41X14_S1_F_Z_F_0100110);
		if (D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1101000,`HS65_LS_MX41X14_S1_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1110000,`HS65_LS_MX41X14_S1_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1101010,`HS65_LS_MX41X14_S1_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1110001,`HS65_LS_MX41X14_S1_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1111000,`HS65_LS_MX41X14_S1_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0110100,`HS65_LS_MX41X14_S1_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0111000,`HS65_LS_MX41X14_S1_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0110101,`HS65_LS_MX41X14_S1_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_0111100,`HS65_LS_MX41X14_S1_F_Z_F_0111100);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1100001,`HS65_LS_MX41X14_S1_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1100000,`HS65_LS_MX41X14_S1_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X14_S1_R_Z_R_1100010,`HS65_LS_MX41X14_S1_F_Z_F_1100010);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010111,`HS65_LS_MX41X14_S2_F_Z_F_0010111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0011010,`HS65_LS_MX41X14_S2_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0011000,`HS65_LS_MX41X14_S2_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0011100,`HS65_LS_MX41X14_S2_F_Z_F_0011100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0110000,`HS65_LS_MX41X14_S2_F_Z_F_0110000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0011110,`HS65_LS_MX41X14_S2_F_Z_F_0011110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0110001,`HS65_LS_MX41X14_S2_F_Z_F_0110001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010001,`HS65_LS_MX41X14_S2_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010000,`HS65_LS_MX41X14_S2_F_Z_F_0010000);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010010,`HS65_LS_MX41X14_S2_F_Z_F_0010010);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010100,`HS65_LS_MX41X14_S2_F_Z_F_0010100);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010011,`HS65_LS_MX41X14_S2_F_Z_F_0010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010101,`HS65_LS_MX41X14_S2_F_Z_F_0010101);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1010011,`HS65_LS_MX41X14_S2_F_Z_F_1010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0010110,`HS65_LS_MX41X14_S2_F_Z_F_0010110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1011000,`HS65_LS_MX41X14_S2_F_Z_F_1011000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1110000,`HS65_LS_MX41X14_S2_F_Z_F_1110000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1011010,`HS65_LS_MX41X14_S2_F_Z_F_1011010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1110001,`HS65_LS_MX41X14_S2_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1111000,`HS65_LS_MX41X14_S2_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0110100,`HS65_LS_MX41X14_S2_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0111000,`HS65_LS_MX41X14_S2_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0110101,`HS65_LS_MX41X14_S2_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_0111100,`HS65_LS_MX41X14_S2_F_Z_F_0111100);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1010001,`HS65_LS_MX41X14_S2_F_Z_F_1010001);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1010000,`HS65_LS_MX41X14_S2_F_Z_F_1010000);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X14_S2_R_Z_R_1010010,`HS65_LS_MX41X14_S2_F_Z_F_1010010);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001111,`HS65_LS_MX41X14_S3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0011010,`HS65_LS_MX41X14_S3_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0011000,`HS65_LS_MX41X14_S3_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0011100,`HS65_LS_MX41X14_S3_F_Z_F_0011100);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0101000,`HS65_LS_MX41X14_S3_F_Z_F_0101000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0011110,`HS65_LS_MX41X14_S3_F_Z_F_0011110);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0101001,`HS65_LS_MX41X14_S3_F_Z_F_0101001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001001,`HS65_LS_MX41X14_S3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001000,`HS65_LS_MX41X14_S3_F_Z_F_0001000);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001010,`HS65_LS_MX41X14_S3_F_Z_F_0001010);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001100,`HS65_LS_MX41X14_S3_F_Z_F_0001100);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001011,`HS65_LS_MX41X14_S3_F_Z_F_0001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001101,`HS65_LS_MX41X14_S3_F_Z_F_0001101);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1001011,`HS65_LS_MX41X14_S3_F_Z_F_1001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0001110,`HS65_LS_MX41X14_S3_F_Z_F_0001110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1011000,`HS65_LS_MX41X14_S3_F_Z_F_1011000);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1101000,`HS65_LS_MX41X14_S3_F_Z_F_1101000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1011010,`HS65_LS_MX41X14_S3_F_Z_F_1011010);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1101001,`HS65_LS_MX41X14_S3_F_Z_F_1101001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1111000,`HS65_LS_MX41X14_S3_F_Z_F_1111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0101100,`HS65_LS_MX41X14_S3_F_Z_F_0101100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0111000,`HS65_LS_MX41X14_S3_F_Z_F_0111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0101101,`HS65_LS_MX41X14_S3_F_Z_F_0101101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_0111100,`HS65_LS_MX41X14_S3_F_Z_F_0111100);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1001001,`HS65_LS_MX41X14_S3_F_Z_F_1001001);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1001000,`HS65_LS_MX41X14_S3_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X14_S3_R_Z_R_1001010,`HS65_LS_MX41X14_S3_F_Z_F_1001010);


	endspecify

endmodule // HS65_LS_MX41X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MX41X21_D0_R_Z_R_0001111 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001111 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0011010 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0011010 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0011000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0011000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0011100 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0011100 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0101000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0101000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0011110 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0011110 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0101001 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0101001 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001001 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001001 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001010 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001010 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001100 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001100 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001011 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001011 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001101 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001101 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1001011 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1001011 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0001110 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0001110 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1011010 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1011010 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1101001 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1101001 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0101100 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0101100 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0111000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0111000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0101101 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0101101 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_0111100 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_0111100 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1001001 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1001001 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X21_D0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X21_D0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0001111 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0001111 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0010110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0010110 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0010100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0010100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0011100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0011100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0011110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0011110 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0000101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0000101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0000100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0000100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0000110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0000110 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0001100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0001100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0000111 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0000111 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0001101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0001101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1000111 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1000111 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0001110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0001110 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1010100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1010100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1100100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1100100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1010110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1010110 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1100101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1100101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1110100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1110100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0101101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0101101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1000101 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1000101 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1000100 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1000100 0.1
`define HS65_LS_MX41X21_D1_R_Z_R_1000110 0.1
`define HS65_LS_MX41X21_D1_F_Z_F_1000110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0001111 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0001111 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0100010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0100010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0100011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0100011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0000011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0000011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0000010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0000010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0000110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0000110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0001010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0001010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0000111 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0000111 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0001011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0001011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1000111 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1000111 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0001110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0001110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1100010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1100010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1010110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1010110 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1100011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1100011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1110010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1110010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0101010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0101010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0110010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0110010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0101011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0101011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_0111010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_0111010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1000011 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1000011 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1000010 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1000010 0.1
`define HS65_LS_MX41X21_D2_R_Z_R_1000110 0.1
`define HS65_LS_MX41X21_D2_F_Z_F_1000110 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0010101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0010101 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0010001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0010001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0011001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0011001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0100001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0100001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0011101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0011101 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0100011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0100011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0000011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0000011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0000001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0000001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0000101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0000101 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0000111 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0000111 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1000111 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1000111 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1010001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1010001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1100001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1100001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1010101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1010101 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1100011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1100011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1110001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1110001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0110001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0110001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0101011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0101011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_0111001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_0111001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1000011 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1000011 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1000001 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1000001 0.1
`define HS65_LS_MX41X21_D3_R_Z_R_1000101 0.1
`define HS65_LS_MX41X21_D3_F_Z_F_1000101 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000111 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000111 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1001100 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1001100 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1010000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1010000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1001110 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1001110 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1010001 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1010001 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000001 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000001 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000010 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000010 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000100 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000100 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000011 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000011 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000101 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000101 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1100011 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1100011 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1000110 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1000110 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1110000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1110000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1101010 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1101010 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1110001 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1110001 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1010100 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1010100 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1010101 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1010101 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1011100 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1011100 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1100001 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1100001 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1100000 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1100000 0.1
`define HS65_LS_MX41X21_S0_R_Z_R_1100010 0.1
`define HS65_LS_MX41X21_S0_F_Z_F_1100010 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100111 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100111 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0101010 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0101010 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0101000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0101000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0110000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0110000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0101110 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0101110 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0110001 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0110001 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100001 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100001 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100010 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100010 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100011 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100011 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1100011 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1100011 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0100110 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0100110 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1101000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1101000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1110000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1110000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1101010 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1101010 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1110001 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1110001 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1111000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1111000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0111000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0111000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0110101 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0110101 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1100001 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1100001 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1100000 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1100000 0.1
`define HS65_LS_MX41X21_S1_R_Z_R_1100010 0.1
`define HS65_LS_MX41X21_S1_F_Z_F_1100010 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010111 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010111 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0011000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0011000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0011100 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0011100 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0110000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0110000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0110001 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0110001 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010001 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010001 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010100 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010100 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010011 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010011 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010101 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010101 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1010011 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1010011 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1011000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1011000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1110000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1110000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1011010 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1011010 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1110001 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1110001 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1111000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1111000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0110100 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0110100 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0111000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0111000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0110101 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0110101 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_0111100 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_0111100 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1010001 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1010001 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1010000 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1010000 0.1
`define HS65_LS_MX41X21_S2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X21_S2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0011010 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0011010 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0011000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0011000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0011100 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0011100 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0101000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0101000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0011110 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0011110 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001010 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001010 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001100 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001100 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1001011 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1001011 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0001110 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0001110 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1011000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1011000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1101000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1101000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1011010 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1011010 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1101001 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1101001 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1111000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1111000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0101100 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0101100 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0111000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0111000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0101101 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0101101 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_0111100 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_0111100 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1001001 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1001001 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1001000 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1001000 0.1
`define HS65_LS_MX41X21_S3_R_Z_R_1001010 0.1
`define HS65_LS_MX41X21_S3_F_Z_F_1001010 0.1

module HS65_LS_MX41X21 (Z, D0, D1, D2, D3, S0, S1, S2, S3);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;
	input S2;
	input S3;

	and    U1 (INTERNAL1, D0, S0) ;
	and    U2 (INTERNAL2, D1, S1) ;
	and    U3 (INTERNAL3, D2, S2) ;
	and    U4 (INTERNAL4, D3, S3) ;
	or   #1 U5 (Z, INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;



	specify

		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001111,`HS65_LS_MX41X21_D0_F_Z_F_0001111);
		if (!D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0011010,`HS65_LS_MX41X21_D0_F_Z_F_0011010);
		if (!D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0011000,`HS65_LS_MX41X21_D0_F_Z_F_0011000);
		if (!D1 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0011100,`HS65_LS_MX41X21_D0_F_Z_F_0011100);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0101000,`HS65_LS_MX41X21_D0_F_Z_F_0101000);
		if (!D1 && !D2 && D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0011110,`HS65_LS_MX41X21_D0_F_Z_F_0011110);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0101001,`HS65_LS_MX41X21_D0_F_Z_F_0101001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001001,`HS65_LS_MX41X21_D0_F_Z_F_0001001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001000,`HS65_LS_MX41X21_D0_F_Z_F_0001000);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001010,`HS65_LS_MX41X21_D0_F_Z_F_0001010);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001100,`HS65_LS_MX41X21_D0_F_Z_F_0001100);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001011,`HS65_LS_MX41X21_D0_F_Z_F_0001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001101,`HS65_LS_MX41X21_D0_F_Z_F_0001101);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1001011,`HS65_LS_MX41X21_D0_F_Z_F_1001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0001110,`HS65_LS_MX41X21_D0_F_Z_F_0001110);
		if (D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1011000,`HS65_LS_MX41X21_D0_F_Z_F_1011000);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1101000,`HS65_LS_MX41X21_D0_F_Z_F_1101000);
		if (D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1011010,`HS65_LS_MX41X21_D0_F_Z_F_1011010);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1101001,`HS65_LS_MX41X21_D0_F_Z_F_1101001);
		if (D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1111000,`HS65_LS_MX41X21_D0_F_Z_F_1111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0101100,`HS65_LS_MX41X21_D0_F_Z_F_0101100);
		if (!D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0111000,`HS65_LS_MX41X21_D0_F_Z_F_0111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0101101,`HS65_LS_MX41X21_D0_F_Z_F_0101101);
		if (!D1 && D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_0111100,`HS65_LS_MX41X21_D0_F_Z_F_0111100);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1001001,`HS65_LS_MX41X21_D0_F_Z_F_1001001);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1001000,`HS65_LS_MX41X21_D0_F_Z_F_1001000);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X21_D0_R_Z_R_1001010,`HS65_LS_MX41X21_D0_F_Z_F_1001010);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0001111,`HS65_LS_MX41X21_D1_F_Z_F_0001111);
		if (!D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0010110,`HS65_LS_MX41X21_D1_F_Z_F_0010110);
		if (!D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0010100,`HS65_LS_MX41X21_D1_F_Z_F_0010100);
		if (!D0 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0011100,`HS65_LS_MX41X21_D1_F_Z_F_0011100);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0100100,`HS65_LS_MX41X21_D1_F_Z_F_0100100);
		if (!D0 && !D2 && D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0011110,`HS65_LS_MX41X21_D1_F_Z_F_0011110);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0100101,`HS65_LS_MX41X21_D1_F_Z_F_0100101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0000101,`HS65_LS_MX41X21_D1_F_Z_F_0000101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0000100,`HS65_LS_MX41X21_D1_F_Z_F_0000100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0000110,`HS65_LS_MX41X21_D1_F_Z_F_0000110);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0001100,`HS65_LS_MX41X21_D1_F_Z_F_0001100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0000111,`HS65_LS_MX41X21_D1_F_Z_F_0000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0001101,`HS65_LS_MX41X21_D1_F_Z_F_0001101);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1000111,`HS65_LS_MX41X21_D1_F_Z_F_1000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0001110,`HS65_LS_MX41X21_D1_F_Z_F_0001110);
		if (D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1010100,`HS65_LS_MX41X21_D1_F_Z_F_1010100);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1100100,`HS65_LS_MX41X21_D1_F_Z_F_1100100);
		if (D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1010110,`HS65_LS_MX41X21_D1_F_Z_F_1010110);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1100101,`HS65_LS_MX41X21_D1_F_Z_F_1100101);
		if (D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1110100,`HS65_LS_MX41X21_D1_F_Z_F_1110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0101100,`HS65_LS_MX41X21_D1_F_Z_F_0101100);
		if (!D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0110100,`HS65_LS_MX41X21_D1_F_Z_F_0110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0101101,`HS65_LS_MX41X21_D1_F_Z_F_0101101);
		if (!D0 && D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_0111100,`HS65_LS_MX41X21_D1_F_Z_F_0111100);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1000101,`HS65_LS_MX41X21_D1_F_Z_F_1000101);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1000100,`HS65_LS_MX41X21_D1_F_Z_F_1000100);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X21_D1_R_Z_R_1000110,`HS65_LS_MX41X21_D1_F_Z_F_1000110);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0001111,`HS65_LS_MX41X21_D2_F_Z_F_0001111);
		if (!D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0010110,`HS65_LS_MX41X21_D2_F_Z_F_0010110);
		if (!D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0010010,`HS65_LS_MX41X21_D2_F_Z_F_0010010);
		if (!D0 && !D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0011010,`HS65_LS_MX41X21_D2_F_Z_F_0011010);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0100010,`HS65_LS_MX41X21_D2_F_Z_F_0100010);
		if (!D0 && !D1 && D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0011110,`HS65_LS_MX41X21_D2_F_Z_F_0011110);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0100011,`HS65_LS_MX41X21_D2_F_Z_F_0100011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0000011,`HS65_LS_MX41X21_D2_F_Z_F_0000011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0000010,`HS65_LS_MX41X21_D2_F_Z_F_0000010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0000110,`HS65_LS_MX41X21_D2_F_Z_F_0000110);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0001010,`HS65_LS_MX41X21_D2_F_Z_F_0001010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0000111,`HS65_LS_MX41X21_D2_F_Z_F_0000111);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0001011,`HS65_LS_MX41X21_D2_F_Z_F_0001011);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1000111,`HS65_LS_MX41X21_D2_F_Z_F_1000111);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0001110,`HS65_LS_MX41X21_D2_F_Z_F_0001110);
		if (D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1010010,`HS65_LS_MX41X21_D2_F_Z_F_1010010);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1100010,`HS65_LS_MX41X21_D2_F_Z_F_1100010);
		if (D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1010110,`HS65_LS_MX41X21_D2_F_Z_F_1010110);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1100011,`HS65_LS_MX41X21_D2_F_Z_F_1100011);
		if (D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1110010,`HS65_LS_MX41X21_D2_F_Z_F_1110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0101010,`HS65_LS_MX41X21_D2_F_Z_F_0101010);
		if (!D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0110010,`HS65_LS_MX41X21_D2_F_Z_F_0110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0101011,`HS65_LS_MX41X21_D2_F_Z_F_0101011);
		if (!D0 && D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_0111010,`HS65_LS_MX41X21_D2_F_Z_F_0111010);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1000011,`HS65_LS_MX41X21_D2_F_Z_F_1000011);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1000010,`HS65_LS_MX41X21_D2_F_Z_F_1000010);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X21_D2_R_Z_R_1000110,`HS65_LS_MX41X21_D2_F_Z_F_1000110);
		if (!D0 && !D1 && !D2 && S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0001111,`HS65_LS_MX41X21_D3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0010101,`HS65_LS_MX41X21_D3_F_Z_F_0010101);
		if (!D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0010001,`HS65_LS_MX41X21_D3_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0011001,`HS65_LS_MX41X21_D3_F_Z_F_0011001);
		if (!D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0100001,`HS65_LS_MX41X21_D3_F_Z_F_0100001);
		if (!D0 && !D1 && D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0011101,`HS65_LS_MX41X21_D3_F_Z_F_0011101);
		if (!D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0100011,`HS65_LS_MX41X21_D3_F_Z_F_0100011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0000011,`HS65_LS_MX41X21_D3_F_Z_F_0000011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0000001,`HS65_LS_MX41X21_D3_F_Z_F_0000001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0000101,`HS65_LS_MX41X21_D3_F_Z_F_0000101);
		if (!D0 && !D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0001001,`HS65_LS_MX41X21_D3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0000111,`HS65_LS_MX41X21_D3_F_Z_F_0000111);
		if (!D0 && !D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0001011,`HS65_LS_MX41X21_D3_F_Z_F_0001011);
		if (D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1000111,`HS65_LS_MX41X21_D3_F_Z_F_1000111);
		if (!D0 && !D1 && !D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0001101,`HS65_LS_MX41X21_D3_F_Z_F_0001101);
		if (D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1010001,`HS65_LS_MX41X21_D3_F_Z_F_1010001);
		if (D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1100001,`HS65_LS_MX41X21_D3_F_Z_F_1100001);
		if (D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1010101,`HS65_LS_MX41X21_D3_F_Z_F_1010101);
		if (D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1100011,`HS65_LS_MX41X21_D3_F_Z_F_1100011);
		if (D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1110001,`HS65_LS_MX41X21_D3_F_Z_F_1110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0101001,`HS65_LS_MX41X21_D3_F_Z_F_0101001);
		if (!D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0110001,`HS65_LS_MX41X21_D3_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0101011,`HS65_LS_MX41X21_D3_F_Z_F_0101011);
		if (!D0 && D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_0111001,`HS65_LS_MX41X21_D3_F_Z_F_0111001);
		if (D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1000011,`HS65_LS_MX41X21_D3_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1000001,`HS65_LS_MX41X21_D3_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X21_D3_R_Z_R_1000101,`HS65_LS_MX41X21_D3_F_Z_F_1000101);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000111,`HS65_LS_MX41X21_S0_F_Z_F_1000111);
		if (D0 && !D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1001010,`HS65_LS_MX41X21_S0_F_Z_F_1001010);
		if (D0 && !D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1001000,`HS65_LS_MX41X21_S0_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1001100,`HS65_LS_MX41X21_S0_F_Z_F_1001100);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1010000,`HS65_LS_MX41X21_S0_F_Z_F_1010000);
		if (D0 && !D1 && !D2 && D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1001110,`HS65_LS_MX41X21_S0_F_Z_F_1001110);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1010001,`HS65_LS_MX41X21_S0_F_Z_F_1010001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000001,`HS65_LS_MX41X21_S0_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000000,`HS65_LS_MX41X21_S0_F_Z_F_1000000);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000010,`HS65_LS_MX41X21_S0_F_Z_F_1000010);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000100,`HS65_LS_MX41X21_S0_F_Z_F_1000100);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000011,`HS65_LS_MX41X21_S0_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000101,`HS65_LS_MX41X21_S0_F_Z_F_1000101);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1100011,`HS65_LS_MX41X21_S0_F_Z_F_1100011);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1000110,`HS65_LS_MX41X21_S0_F_Z_F_1000110);
		if (D0 && D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1101000,`HS65_LS_MX41X21_S0_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1110000,`HS65_LS_MX41X21_S0_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1101010,`HS65_LS_MX41X21_S0_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1110001,`HS65_LS_MX41X21_S0_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1111000,`HS65_LS_MX41X21_S0_F_Z_F_1111000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1010100,`HS65_LS_MX41X21_S0_F_Z_F_1010100);
		if (D0 && !D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1011000,`HS65_LS_MX41X21_S0_F_Z_F_1011000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1010101,`HS65_LS_MX41X21_S0_F_Z_F_1010101);
		if (D0 && !D1 && D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1011100,`HS65_LS_MX41X21_S0_F_Z_F_1011100);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1100001,`HS65_LS_MX41X21_S0_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1100000,`HS65_LS_MX41X21_S0_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X21_S0_R_Z_R_1100010,`HS65_LS_MX41X21_S0_F_Z_F_1100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100111,`HS65_LS_MX41X21_S1_F_Z_F_0100111);
		if (!D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0101010,`HS65_LS_MX41X21_S1_F_Z_F_0101010);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0101000,`HS65_LS_MX41X21_S1_F_Z_F_0101000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0101100,`HS65_LS_MX41X21_S1_F_Z_F_0101100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0110000,`HS65_LS_MX41X21_S1_F_Z_F_0110000);
		if (!D0 && D1 && !D2 && D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0101110,`HS65_LS_MX41X21_S1_F_Z_F_0101110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0110001,`HS65_LS_MX41X21_S1_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100001,`HS65_LS_MX41X21_S1_F_Z_F_0100001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100000,`HS65_LS_MX41X21_S1_F_Z_F_0100000);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100010,`HS65_LS_MX41X21_S1_F_Z_F_0100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100100,`HS65_LS_MX41X21_S1_F_Z_F_0100100);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100011,`HS65_LS_MX41X21_S1_F_Z_F_0100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100101,`HS65_LS_MX41X21_S1_F_Z_F_0100101);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1100011,`HS65_LS_MX41X21_S1_F_Z_F_1100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0100110,`HS65_LS_MX41X21_S1_F_Z_F_0100110);
		if (D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1101000,`HS65_LS_MX41X21_S1_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1110000,`HS65_LS_MX41X21_S1_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1101010,`HS65_LS_MX41X21_S1_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1110001,`HS65_LS_MX41X21_S1_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1111000,`HS65_LS_MX41X21_S1_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0110100,`HS65_LS_MX41X21_S1_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0111000,`HS65_LS_MX41X21_S1_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0110101,`HS65_LS_MX41X21_S1_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_0111100,`HS65_LS_MX41X21_S1_F_Z_F_0111100);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1100001,`HS65_LS_MX41X21_S1_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1100000,`HS65_LS_MX41X21_S1_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X21_S1_R_Z_R_1100010,`HS65_LS_MX41X21_S1_F_Z_F_1100010);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010111,`HS65_LS_MX41X21_S2_F_Z_F_0010111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0011010,`HS65_LS_MX41X21_S2_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0011000,`HS65_LS_MX41X21_S2_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0011100,`HS65_LS_MX41X21_S2_F_Z_F_0011100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0110000,`HS65_LS_MX41X21_S2_F_Z_F_0110000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0011110,`HS65_LS_MX41X21_S2_F_Z_F_0011110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0110001,`HS65_LS_MX41X21_S2_F_Z_F_0110001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010001,`HS65_LS_MX41X21_S2_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010000,`HS65_LS_MX41X21_S2_F_Z_F_0010000);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010010,`HS65_LS_MX41X21_S2_F_Z_F_0010010);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010100,`HS65_LS_MX41X21_S2_F_Z_F_0010100);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010011,`HS65_LS_MX41X21_S2_F_Z_F_0010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010101,`HS65_LS_MX41X21_S2_F_Z_F_0010101);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1010011,`HS65_LS_MX41X21_S2_F_Z_F_1010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0010110,`HS65_LS_MX41X21_S2_F_Z_F_0010110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1011000,`HS65_LS_MX41X21_S2_F_Z_F_1011000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1110000,`HS65_LS_MX41X21_S2_F_Z_F_1110000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1011010,`HS65_LS_MX41X21_S2_F_Z_F_1011010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1110001,`HS65_LS_MX41X21_S2_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1111000,`HS65_LS_MX41X21_S2_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0110100,`HS65_LS_MX41X21_S2_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0111000,`HS65_LS_MX41X21_S2_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0110101,`HS65_LS_MX41X21_S2_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_0111100,`HS65_LS_MX41X21_S2_F_Z_F_0111100);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1010001,`HS65_LS_MX41X21_S2_F_Z_F_1010001);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1010000,`HS65_LS_MX41X21_S2_F_Z_F_1010000);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X21_S2_R_Z_R_1010010,`HS65_LS_MX41X21_S2_F_Z_F_1010010);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001111,`HS65_LS_MX41X21_S3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0011010,`HS65_LS_MX41X21_S3_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0011000,`HS65_LS_MX41X21_S3_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0011100,`HS65_LS_MX41X21_S3_F_Z_F_0011100);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0101000,`HS65_LS_MX41X21_S3_F_Z_F_0101000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0011110,`HS65_LS_MX41X21_S3_F_Z_F_0011110);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0101001,`HS65_LS_MX41X21_S3_F_Z_F_0101001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001001,`HS65_LS_MX41X21_S3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001000,`HS65_LS_MX41X21_S3_F_Z_F_0001000);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001010,`HS65_LS_MX41X21_S3_F_Z_F_0001010);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001100,`HS65_LS_MX41X21_S3_F_Z_F_0001100);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001011,`HS65_LS_MX41X21_S3_F_Z_F_0001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001101,`HS65_LS_MX41X21_S3_F_Z_F_0001101);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1001011,`HS65_LS_MX41X21_S3_F_Z_F_1001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0001110,`HS65_LS_MX41X21_S3_F_Z_F_0001110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1011000,`HS65_LS_MX41X21_S3_F_Z_F_1011000);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1101000,`HS65_LS_MX41X21_S3_F_Z_F_1101000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1011010,`HS65_LS_MX41X21_S3_F_Z_F_1011010);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1101001,`HS65_LS_MX41X21_S3_F_Z_F_1101001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1111000,`HS65_LS_MX41X21_S3_F_Z_F_1111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0101100,`HS65_LS_MX41X21_S3_F_Z_F_0101100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0111000,`HS65_LS_MX41X21_S3_F_Z_F_0111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0101101,`HS65_LS_MX41X21_S3_F_Z_F_0101101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_0111100,`HS65_LS_MX41X21_S3_F_Z_F_0111100);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1001001,`HS65_LS_MX41X21_S3_F_Z_F_1001001);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1001000,`HS65_LS_MX41X21_S3_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X21_S3_R_Z_R_1001010,`HS65_LS_MX41X21_S3_F_Z_F_1001010);


	endspecify

endmodule // HS65_LS_MX41X21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MX41X29_D0_R_Z_R_0001111 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001111 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0011010 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0011010 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0011000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0011000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0011100 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0011100 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0101000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0101000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0011110 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0011110 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0101001 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0101001 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001001 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001001 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001010 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001010 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001100 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001100 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001011 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001011 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001101 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001101 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1001011 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1001011 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0001110 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0001110 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1011010 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1011010 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1101001 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1101001 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0101100 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0101100 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0111000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0111000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0101101 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0101101 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_0111100 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_0111100 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1001001 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1001001 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X29_D0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X29_D0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0001111 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0001111 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0010110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0010110 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0010100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0010100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0011100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0011100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0011110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0011110 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0000101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0000101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0000100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0000100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0000110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0000110 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0001100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0001100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0000111 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0000111 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0001101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0001101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1000111 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1000111 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0001110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0001110 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1010100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1010100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1100100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1100100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1010110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1010110 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1100101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1100101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1110100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1110100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0101101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0101101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1000101 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1000101 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1000100 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1000100 0.1
`define HS65_LS_MX41X29_D1_R_Z_R_1000110 0.1
`define HS65_LS_MX41X29_D1_F_Z_F_1000110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0001111 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0001111 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0100010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0100010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0100011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0100011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0000011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0000011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0000010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0000010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0000110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0000110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0001010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0001010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0000111 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0000111 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0001011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0001011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1000111 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1000111 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0001110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0001110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1100010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1100010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1010110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1010110 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1100011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1100011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1110010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1110010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0101010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0101010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0110010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0110010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0101011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0101011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_0111010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_0111010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1000011 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1000011 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1000010 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1000010 0.1
`define HS65_LS_MX41X29_D2_R_Z_R_1000110 0.1
`define HS65_LS_MX41X29_D2_F_Z_F_1000110 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0010101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0010101 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0010001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0010001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0011001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0011001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0100001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0100001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0011101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0011101 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0100011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0100011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0000011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0000011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0000001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0000001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0000101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0000101 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0000111 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0000111 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1000111 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1000111 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1010001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1010001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1100001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1100001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1010101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1010101 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1100011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1100011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1110001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1110001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0110001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0110001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0101011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0101011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_0111001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_0111001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1000011 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1000011 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1000001 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1000001 0.1
`define HS65_LS_MX41X29_D3_R_Z_R_1000101 0.1
`define HS65_LS_MX41X29_D3_F_Z_F_1000101 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000111 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000111 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1001100 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1001100 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1010000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1010000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1001110 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1001110 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1010001 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1010001 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000001 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000001 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000010 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000010 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000100 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000100 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000011 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000011 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000101 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000101 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1100011 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1100011 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1000110 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1000110 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1110000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1110000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1101010 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1101010 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1110001 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1110001 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1010100 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1010100 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1010101 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1010101 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1011100 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1011100 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1100001 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1100001 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1100000 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1100000 0.1
`define HS65_LS_MX41X29_S0_R_Z_R_1100010 0.1
`define HS65_LS_MX41X29_S0_F_Z_F_1100010 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100111 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100111 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0101010 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0101010 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0101000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0101000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0110000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0110000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0101110 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0101110 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0110001 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0110001 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100001 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100001 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100010 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100010 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100011 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100011 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1100011 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1100011 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0100110 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0100110 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1101000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1101000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1110000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1110000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1101010 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1101010 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1110001 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1110001 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1111000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1111000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0111000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0111000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0110101 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0110101 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1100001 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1100001 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1100000 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1100000 0.1
`define HS65_LS_MX41X29_S1_R_Z_R_1100010 0.1
`define HS65_LS_MX41X29_S1_F_Z_F_1100010 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010111 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010111 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0011000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0011000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0011100 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0011100 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0110000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0110000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0110001 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0110001 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010001 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010001 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010100 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010100 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010011 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010011 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010101 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010101 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1010011 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1010011 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1011000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1011000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1110000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1110000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1011010 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1011010 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1110001 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1110001 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1111000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1111000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0110100 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0110100 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0111000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0111000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0110101 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0110101 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_0111100 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_0111100 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1010001 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1010001 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1010000 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1010000 0.1
`define HS65_LS_MX41X29_S2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X29_S2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0011010 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0011010 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0011000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0011000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0011100 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0011100 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0101000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0101000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0011110 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0011110 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001010 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001010 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001100 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001100 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1001011 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1001011 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0001110 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0001110 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1011000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1011000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1101000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1101000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1011010 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1011010 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1101001 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1101001 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1111000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1111000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0101100 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0101100 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0111000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0111000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0101101 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0101101 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_0111100 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_0111100 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1001001 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1001001 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1001000 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1001000 0.1
`define HS65_LS_MX41X29_S3_R_Z_R_1001010 0.1
`define HS65_LS_MX41X29_S3_F_Z_F_1001010 0.1

module HS65_LS_MX41X29 (Z, D0, D1, D2, D3, S0, S1, S2, S3);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;
	input S2;
	input S3;

	and    U1 (INTERNAL1, D0, S0) ;
	and    U2 (INTERNAL2, D1, S1) ;
	and    U3 (INTERNAL3, D2, S2) ;
	and    U4 (INTERNAL4, D3, S3) ;
	or   #1 U5 (Z, INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;



	specify

		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001111,`HS65_LS_MX41X29_D0_F_Z_F_0001111);
		if (!D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0011010,`HS65_LS_MX41X29_D0_F_Z_F_0011010);
		if (!D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0011000,`HS65_LS_MX41X29_D0_F_Z_F_0011000);
		if (!D1 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0011100,`HS65_LS_MX41X29_D0_F_Z_F_0011100);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0101000,`HS65_LS_MX41X29_D0_F_Z_F_0101000);
		if (!D1 && !D2 && D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0011110,`HS65_LS_MX41X29_D0_F_Z_F_0011110);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0101001,`HS65_LS_MX41X29_D0_F_Z_F_0101001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001001,`HS65_LS_MX41X29_D0_F_Z_F_0001001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001000,`HS65_LS_MX41X29_D0_F_Z_F_0001000);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001010,`HS65_LS_MX41X29_D0_F_Z_F_0001010);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001100,`HS65_LS_MX41X29_D0_F_Z_F_0001100);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001011,`HS65_LS_MX41X29_D0_F_Z_F_0001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001101,`HS65_LS_MX41X29_D0_F_Z_F_0001101);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1001011,`HS65_LS_MX41X29_D0_F_Z_F_1001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0001110,`HS65_LS_MX41X29_D0_F_Z_F_0001110);
		if (D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1011000,`HS65_LS_MX41X29_D0_F_Z_F_1011000);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1101000,`HS65_LS_MX41X29_D0_F_Z_F_1101000);
		if (D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1011010,`HS65_LS_MX41X29_D0_F_Z_F_1011010);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1101001,`HS65_LS_MX41X29_D0_F_Z_F_1101001);
		if (D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1111000,`HS65_LS_MX41X29_D0_F_Z_F_1111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0101100,`HS65_LS_MX41X29_D0_F_Z_F_0101100);
		if (!D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0111000,`HS65_LS_MX41X29_D0_F_Z_F_0111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0101101,`HS65_LS_MX41X29_D0_F_Z_F_0101101);
		if (!D1 && D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_0111100,`HS65_LS_MX41X29_D0_F_Z_F_0111100);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1001001,`HS65_LS_MX41X29_D0_F_Z_F_1001001);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1001000,`HS65_LS_MX41X29_D0_F_Z_F_1001000);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X29_D0_R_Z_R_1001010,`HS65_LS_MX41X29_D0_F_Z_F_1001010);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0001111,`HS65_LS_MX41X29_D1_F_Z_F_0001111);
		if (!D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0010110,`HS65_LS_MX41X29_D1_F_Z_F_0010110);
		if (!D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0010100,`HS65_LS_MX41X29_D1_F_Z_F_0010100);
		if (!D0 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0011100,`HS65_LS_MX41X29_D1_F_Z_F_0011100);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0100100,`HS65_LS_MX41X29_D1_F_Z_F_0100100);
		if (!D0 && !D2 && D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0011110,`HS65_LS_MX41X29_D1_F_Z_F_0011110);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0100101,`HS65_LS_MX41X29_D1_F_Z_F_0100101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0000101,`HS65_LS_MX41X29_D1_F_Z_F_0000101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0000100,`HS65_LS_MX41X29_D1_F_Z_F_0000100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0000110,`HS65_LS_MX41X29_D1_F_Z_F_0000110);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0001100,`HS65_LS_MX41X29_D1_F_Z_F_0001100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0000111,`HS65_LS_MX41X29_D1_F_Z_F_0000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0001101,`HS65_LS_MX41X29_D1_F_Z_F_0001101);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1000111,`HS65_LS_MX41X29_D1_F_Z_F_1000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0001110,`HS65_LS_MX41X29_D1_F_Z_F_0001110);
		if (D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1010100,`HS65_LS_MX41X29_D1_F_Z_F_1010100);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1100100,`HS65_LS_MX41X29_D1_F_Z_F_1100100);
		if (D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1010110,`HS65_LS_MX41X29_D1_F_Z_F_1010110);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1100101,`HS65_LS_MX41X29_D1_F_Z_F_1100101);
		if (D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1110100,`HS65_LS_MX41X29_D1_F_Z_F_1110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0101100,`HS65_LS_MX41X29_D1_F_Z_F_0101100);
		if (!D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0110100,`HS65_LS_MX41X29_D1_F_Z_F_0110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0101101,`HS65_LS_MX41X29_D1_F_Z_F_0101101);
		if (!D0 && D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_0111100,`HS65_LS_MX41X29_D1_F_Z_F_0111100);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1000101,`HS65_LS_MX41X29_D1_F_Z_F_1000101);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1000100,`HS65_LS_MX41X29_D1_F_Z_F_1000100);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X29_D1_R_Z_R_1000110,`HS65_LS_MX41X29_D1_F_Z_F_1000110);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0001111,`HS65_LS_MX41X29_D2_F_Z_F_0001111);
		if (!D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0010110,`HS65_LS_MX41X29_D2_F_Z_F_0010110);
		if (!D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0010010,`HS65_LS_MX41X29_D2_F_Z_F_0010010);
		if (!D0 && !D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0011010,`HS65_LS_MX41X29_D2_F_Z_F_0011010);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0100010,`HS65_LS_MX41X29_D2_F_Z_F_0100010);
		if (!D0 && !D1 && D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0011110,`HS65_LS_MX41X29_D2_F_Z_F_0011110);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0100011,`HS65_LS_MX41X29_D2_F_Z_F_0100011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0000011,`HS65_LS_MX41X29_D2_F_Z_F_0000011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0000010,`HS65_LS_MX41X29_D2_F_Z_F_0000010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0000110,`HS65_LS_MX41X29_D2_F_Z_F_0000110);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0001010,`HS65_LS_MX41X29_D2_F_Z_F_0001010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0000111,`HS65_LS_MX41X29_D2_F_Z_F_0000111);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0001011,`HS65_LS_MX41X29_D2_F_Z_F_0001011);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1000111,`HS65_LS_MX41X29_D2_F_Z_F_1000111);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0001110,`HS65_LS_MX41X29_D2_F_Z_F_0001110);
		if (D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1010010,`HS65_LS_MX41X29_D2_F_Z_F_1010010);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1100010,`HS65_LS_MX41X29_D2_F_Z_F_1100010);
		if (D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1010110,`HS65_LS_MX41X29_D2_F_Z_F_1010110);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1100011,`HS65_LS_MX41X29_D2_F_Z_F_1100011);
		if (D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1110010,`HS65_LS_MX41X29_D2_F_Z_F_1110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0101010,`HS65_LS_MX41X29_D2_F_Z_F_0101010);
		if (!D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0110010,`HS65_LS_MX41X29_D2_F_Z_F_0110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0101011,`HS65_LS_MX41X29_D2_F_Z_F_0101011);
		if (!D0 && D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_0111010,`HS65_LS_MX41X29_D2_F_Z_F_0111010);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1000011,`HS65_LS_MX41X29_D2_F_Z_F_1000011);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1000010,`HS65_LS_MX41X29_D2_F_Z_F_1000010);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X29_D2_R_Z_R_1000110,`HS65_LS_MX41X29_D2_F_Z_F_1000110);
		if (!D0 && !D1 && !D2 && S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0001111,`HS65_LS_MX41X29_D3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0010101,`HS65_LS_MX41X29_D3_F_Z_F_0010101);
		if (!D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0010001,`HS65_LS_MX41X29_D3_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0011001,`HS65_LS_MX41X29_D3_F_Z_F_0011001);
		if (!D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0100001,`HS65_LS_MX41X29_D3_F_Z_F_0100001);
		if (!D0 && !D1 && D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0011101,`HS65_LS_MX41X29_D3_F_Z_F_0011101);
		if (!D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0100011,`HS65_LS_MX41X29_D3_F_Z_F_0100011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0000011,`HS65_LS_MX41X29_D3_F_Z_F_0000011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0000001,`HS65_LS_MX41X29_D3_F_Z_F_0000001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0000101,`HS65_LS_MX41X29_D3_F_Z_F_0000101);
		if (!D0 && !D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0001001,`HS65_LS_MX41X29_D3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0000111,`HS65_LS_MX41X29_D3_F_Z_F_0000111);
		if (!D0 && !D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0001011,`HS65_LS_MX41X29_D3_F_Z_F_0001011);
		if (D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1000111,`HS65_LS_MX41X29_D3_F_Z_F_1000111);
		if (!D0 && !D1 && !D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0001101,`HS65_LS_MX41X29_D3_F_Z_F_0001101);
		if (D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1010001,`HS65_LS_MX41X29_D3_F_Z_F_1010001);
		if (D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1100001,`HS65_LS_MX41X29_D3_F_Z_F_1100001);
		if (D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1010101,`HS65_LS_MX41X29_D3_F_Z_F_1010101);
		if (D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1100011,`HS65_LS_MX41X29_D3_F_Z_F_1100011);
		if (D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1110001,`HS65_LS_MX41X29_D3_F_Z_F_1110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0101001,`HS65_LS_MX41X29_D3_F_Z_F_0101001);
		if (!D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0110001,`HS65_LS_MX41X29_D3_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0101011,`HS65_LS_MX41X29_D3_F_Z_F_0101011);
		if (!D0 && D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_0111001,`HS65_LS_MX41X29_D3_F_Z_F_0111001);
		if (D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1000011,`HS65_LS_MX41X29_D3_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1000001,`HS65_LS_MX41X29_D3_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X29_D3_R_Z_R_1000101,`HS65_LS_MX41X29_D3_F_Z_F_1000101);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000111,`HS65_LS_MX41X29_S0_F_Z_F_1000111);
		if (D0 && !D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1001010,`HS65_LS_MX41X29_S0_F_Z_F_1001010);
		if (D0 && !D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1001000,`HS65_LS_MX41X29_S0_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1001100,`HS65_LS_MX41X29_S0_F_Z_F_1001100);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1010000,`HS65_LS_MX41X29_S0_F_Z_F_1010000);
		if (D0 && !D1 && !D2 && D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1001110,`HS65_LS_MX41X29_S0_F_Z_F_1001110);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1010001,`HS65_LS_MX41X29_S0_F_Z_F_1010001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000001,`HS65_LS_MX41X29_S0_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000000,`HS65_LS_MX41X29_S0_F_Z_F_1000000);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000010,`HS65_LS_MX41X29_S0_F_Z_F_1000010);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000100,`HS65_LS_MX41X29_S0_F_Z_F_1000100);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000011,`HS65_LS_MX41X29_S0_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000101,`HS65_LS_MX41X29_S0_F_Z_F_1000101);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1100011,`HS65_LS_MX41X29_S0_F_Z_F_1100011);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1000110,`HS65_LS_MX41X29_S0_F_Z_F_1000110);
		if (D0 && D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1101000,`HS65_LS_MX41X29_S0_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1110000,`HS65_LS_MX41X29_S0_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1101010,`HS65_LS_MX41X29_S0_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1110001,`HS65_LS_MX41X29_S0_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1111000,`HS65_LS_MX41X29_S0_F_Z_F_1111000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1010100,`HS65_LS_MX41X29_S0_F_Z_F_1010100);
		if (D0 && !D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1011000,`HS65_LS_MX41X29_S0_F_Z_F_1011000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1010101,`HS65_LS_MX41X29_S0_F_Z_F_1010101);
		if (D0 && !D1 && D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1011100,`HS65_LS_MX41X29_S0_F_Z_F_1011100);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1100001,`HS65_LS_MX41X29_S0_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1100000,`HS65_LS_MX41X29_S0_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X29_S0_R_Z_R_1100010,`HS65_LS_MX41X29_S0_F_Z_F_1100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100111,`HS65_LS_MX41X29_S1_F_Z_F_0100111);
		if (!D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0101010,`HS65_LS_MX41X29_S1_F_Z_F_0101010);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0101000,`HS65_LS_MX41X29_S1_F_Z_F_0101000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0101100,`HS65_LS_MX41X29_S1_F_Z_F_0101100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0110000,`HS65_LS_MX41X29_S1_F_Z_F_0110000);
		if (!D0 && D1 && !D2 && D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0101110,`HS65_LS_MX41X29_S1_F_Z_F_0101110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0110001,`HS65_LS_MX41X29_S1_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100001,`HS65_LS_MX41X29_S1_F_Z_F_0100001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100000,`HS65_LS_MX41X29_S1_F_Z_F_0100000);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100010,`HS65_LS_MX41X29_S1_F_Z_F_0100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100100,`HS65_LS_MX41X29_S1_F_Z_F_0100100);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100011,`HS65_LS_MX41X29_S1_F_Z_F_0100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100101,`HS65_LS_MX41X29_S1_F_Z_F_0100101);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1100011,`HS65_LS_MX41X29_S1_F_Z_F_1100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0100110,`HS65_LS_MX41X29_S1_F_Z_F_0100110);
		if (D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1101000,`HS65_LS_MX41X29_S1_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1110000,`HS65_LS_MX41X29_S1_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1101010,`HS65_LS_MX41X29_S1_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1110001,`HS65_LS_MX41X29_S1_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1111000,`HS65_LS_MX41X29_S1_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0110100,`HS65_LS_MX41X29_S1_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0111000,`HS65_LS_MX41X29_S1_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0110101,`HS65_LS_MX41X29_S1_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_0111100,`HS65_LS_MX41X29_S1_F_Z_F_0111100);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1100001,`HS65_LS_MX41X29_S1_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1100000,`HS65_LS_MX41X29_S1_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X29_S1_R_Z_R_1100010,`HS65_LS_MX41X29_S1_F_Z_F_1100010);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010111,`HS65_LS_MX41X29_S2_F_Z_F_0010111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0011010,`HS65_LS_MX41X29_S2_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0011000,`HS65_LS_MX41X29_S2_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0011100,`HS65_LS_MX41X29_S2_F_Z_F_0011100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0110000,`HS65_LS_MX41X29_S2_F_Z_F_0110000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0011110,`HS65_LS_MX41X29_S2_F_Z_F_0011110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0110001,`HS65_LS_MX41X29_S2_F_Z_F_0110001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010001,`HS65_LS_MX41X29_S2_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010000,`HS65_LS_MX41X29_S2_F_Z_F_0010000);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010010,`HS65_LS_MX41X29_S2_F_Z_F_0010010);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010100,`HS65_LS_MX41X29_S2_F_Z_F_0010100);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010011,`HS65_LS_MX41X29_S2_F_Z_F_0010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010101,`HS65_LS_MX41X29_S2_F_Z_F_0010101);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1010011,`HS65_LS_MX41X29_S2_F_Z_F_1010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0010110,`HS65_LS_MX41X29_S2_F_Z_F_0010110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1011000,`HS65_LS_MX41X29_S2_F_Z_F_1011000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1110000,`HS65_LS_MX41X29_S2_F_Z_F_1110000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1011010,`HS65_LS_MX41X29_S2_F_Z_F_1011010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1110001,`HS65_LS_MX41X29_S2_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1111000,`HS65_LS_MX41X29_S2_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0110100,`HS65_LS_MX41X29_S2_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0111000,`HS65_LS_MX41X29_S2_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0110101,`HS65_LS_MX41X29_S2_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_0111100,`HS65_LS_MX41X29_S2_F_Z_F_0111100);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1010001,`HS65_LS_MX41X29_S2_F_Z_F_1010001);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1010000,`HS65_LS_MX41X29_S2_F_Z_F_1010000);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X29_S2_R_Z_R_1010010,`HS65_LS_MX41X29_S2_F_Z_F_1010010);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001111,`HS65_LS_MX41X29_S3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0011010,`HS65_LS_MX41X29_S3_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0011000,`HS65_LS_MX41X29_S3_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0011100,`HS65_LS_MX41X29_S3_F_Z_F_0011100);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0101000,`HS65_LS_MX41X29_S3_F_Z_F_0101000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0011110,`HS65_LS_MX41X29_S3_F_Z_F_0011110);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0101001,`HS65_LS_MX41X29_S3_F_Z_F_0101001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001001,`HS65_LS_MX41X29_S3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001000,`HS65_LS_MX41X29_S3_F_Z_F_0001000);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001010,`HS65_LS_MX41X29_S3_F_Z_F_0001010);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001100,`HS65_LS_MX41X29_S3_F_Z_F_0001100);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001011,`HS65_LS_MX41X29_S3_F_Z_F_0001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001101,`HS65_LS_MX41X29_S3_F_Z_F_0001101);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1001011,`HS65_LS_MX41X29_S3_F_Z_F_1001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0001110,`HS65_LS_MX41X29_S3_F_Z_F_0001110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1011000,`HS65_LS_MX41X29_S3_F_Z_F_1011000);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1101000,`HS65_LS_MX41X29_S3_F_Z_F_1101000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1011010,`HS65_LS_MX41X29_S3_F_Z_F_1011010);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1101001,`HS65_LS_MX41X29_S3_F_Z_F_1101001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1111000,`HS65_LS_MX41X29_S3_F_Z_F_1111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0101100,`HS65_LS_MX41X29_S3_F_Z_F_0101100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0111000,`HS65_LS_MX41X29_S3_F_Z_F_0111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0101101,`HS65_LS_MX41X29_S3_F_Z_F_0101101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_0111100,`HS65_LS_MX41X29_S3_F_Z_F_0111100);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1001001,`HS65_LS_MX41X29_S3_F_Z_F_1001001);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1001000,`HS65_LS_MX41X29_S3_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X29_S3_R_Z_R_1001010,`HS65_LS_MX41X29_S3_F_Z_F_1001010);


	endspecify

endmodule // HS65_LS_MX41X29

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MX41X4_D0_R_Z_R_0001111 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001111 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0011010 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0011010 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0011000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0011000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0011100 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0011100 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0101000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0101000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0011110 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0011110 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0101001 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0101001 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001001 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001001 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001010 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001010 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001100 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001100 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001011 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001011 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001101 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001101 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1001011 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1001011 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0001110 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0001110 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1011010 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1011010 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1101001 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1101001 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0101100 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0101100 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0111000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0111000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0101101 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0101101 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_0111100 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_0111100 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1001001 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1001001 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X4_D0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X4_D0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0001111 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0001111 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0010110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0010110 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0010100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0010100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0011100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0011100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0011110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0011110 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0000101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0000101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0000100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0000100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0000110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0000110 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0001100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0001100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0000111 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0000111 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0001101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0001101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1000111 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1000111 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0001110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0001110 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1010100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1010100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1100100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1100100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1010110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1010110 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1100101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1100101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1110100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1110100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0101101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0101101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1000101 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1000101 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1000100 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1000100 0.1
`define HS65_LS_MX41X4_D1_R_Z_R_1000110 0.1
`define HS65_LS_MX41X4_D1_F_Z_F_1000110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0001111 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0001111 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0100010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0100010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0100011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0100011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0000011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0000011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0000010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0000010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0000110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0000110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0001010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0001010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0000111 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0000111 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0001011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0001011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1000111 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1000111 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0001110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0001110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1100010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1100010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1010110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1010110 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1100011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1100011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1110010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1110010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0101010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0101010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0110010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0110010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0101011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0101011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_0111010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_0111010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1000011 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1000011 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1000010 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1000010 0.1
`define HS65_LS_MX41X4_D2_R_Z_R_1000110 0.1
`define HS65_LS_MX41X4_D2_F_Z_F_1000110 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0010101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0010101 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0010001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0010001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0011001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0011001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0100001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0100001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0011101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0011101 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0100011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0100011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0000011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0000011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0000001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0000001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0000101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0000101 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0000111 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0000111 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1000111 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1000111 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1010001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1010001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1100001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1100001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1010101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1010101 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1100011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1100011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1110001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1110001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0110001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0110001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0101011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0101011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_0111001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_0111001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1000011 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1000011 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1000001 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1000001 0.1
`define HS65_LS_MX41X4_D3_R_Z_R_1000101 0.1
`define HS65_LS_MX41X4_D3_F_Z_F_1000101 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000111 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000111 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1001100 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1001100 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1010000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1010000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1001110 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1001110 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1010001 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1010001 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000001 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000001 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000010 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000010 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000100 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000100 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000011 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000011 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000101 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000101 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1100011 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1100011 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1000110 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1000110 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1110000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1110000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1101010 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1101010 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1110001 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1110001 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1010100 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1010100 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1010101 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1010101 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1011100 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1011100 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1100001 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1100001 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1100000 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1100000 0.1
`define HS65_LS_MX41X4_S0_R_Z_R_1100010 0.1
`define HS65_LS_MX41X4_S0_F_Z_F_1100010 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100111 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100111 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0101010 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0101010 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0101000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0101000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0110000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0110000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0101110 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0101110 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0110001 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0110001 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100001 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100001 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100010 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100010 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100011 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100011 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1100011 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1100011 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0100110 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0100110 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1101000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1101000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1110000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1110000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1101010 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1101010 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1110001 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1110001 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1111000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1111000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0111000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0111000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0110101 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0110101 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1100001 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1100001 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1100000 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1100000 0.1
`define HS65_LS_MX41X4_S1_R_Z_R_1100010 0.1
`define HS65_LS_MX41X4_S1_F_Z_F_1100010 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010111 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010111 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0011000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0011000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0011100 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0011100 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0110000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0110000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0110001 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0110001 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010001 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010001 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010100 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010100 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010011 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010011 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010101 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010101 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1010011 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1010011 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1011000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1011000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1110000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1110000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1011010 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1011010 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1110001 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1110001 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1111000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1111000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0110100 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0110100 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0111000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0111000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0110101 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0110101 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_0111100 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_0111100 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1010001 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1010001 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1010000 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1010000 0.1
`define HS65_LS_MX41X4_S2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X4_S2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0011010 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0011010 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0011000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0011000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0011100 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0011100 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0101000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0101000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0011110 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0011110 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001010 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001010 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001100 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001100 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1001011 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1001011 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0001110 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0001110 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1011000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1011000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1101000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1101000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1011010 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1011010 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1101001 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1101001 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1111000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1111000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0101100 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0101100 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0111000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0111000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0101101 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0101101 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_0111100 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_0111100 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1001001 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1001001 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1001000 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1001000 0.1
`define HS65_LS_MX41X4_S3_R_Z_R_1001010 0.1
`define HS65_LS_MX41X4_S3_F_Z_F_1001010 0.1

module HS65_LS_MX41X4 (Z, D0, D1, D2, D3, S0, S1, S2, S3);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;
	input S2;
	input S3;

	and    U1 (INTERNAL1, D0, S0) ;
	and    U2 (INTERNAL2, D1, S1) ;
	and    U3 (INTERNAL3, D2, S2) ;
	and    U4 (INTERNAL4, D3, S3) ;
	or   #1 U5 (Z, INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;



	specify

		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001111,`HS65_LS_MX41X4_D0_F_Z_F_0001111);
		if (!D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0011010,`HS65_LS_MX41X4_D0_F_Z_F_0011010);
		if (!D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0011000,`HS65_LS_MX41X4_D0_F_Z_F_0011000);
		if (!D1 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0011100,`HS65_LS_MX41X4_D0_F_Z_F_0011100);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0101000,`HS65_LS_MX41X4_D0_F_Z_F_0101000);
		if (!D1 && !D2 && D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0011110,`HS65_LS_MX41X4_D0_F_Z_F_0011110);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0101001,`HS65_LS_MX41X4_D0_F_Z_F_0101001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001001,`HS65_LS_MX41X4_D0_F_Z_F_0001001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001000,`HS65_LS_MX41X4_D0_F_Z_F_0001000);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001010,`HS65_LS_MX41X4_D0_F_Z_F_0001010);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001100,`HS65_LS_MX41X4_D0_F_Z_F_0001100);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001011,`HS65_LS_MX41X4_D0_F_Z_F_0001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001101,`HS65_LS_MX41X4_D0_F_Z_F_0001101);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1001011,`HS65_LS_MX41X4_D0_F_Z_F_1001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0001110,`HS65_LS_MX41X4_D0_F_Z_F_0001110);
		if (D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1011000,`HS65_LS_MX41X4_D0_F_Z_F_1011000);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1101000,`HS65_LS_MX41X4_D0_F_Z_F_1101000);
		if (D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1011010,`HS65_LS_MX41X4_D0_F_Z_F_1011010);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1101001,`HS65_LS_MX41X4_D0_F_Z_F_1101001);
		if (D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1111000,`HS65_LS_MX41X4_D0_F_Z_F_1111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0101100,`HS65_LS_MX41X4_D0_F_Z_F_0101100);
		if (!D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0111000,`HS65_LS_MX41X4_D0_F_Z_F_0111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0101101,`HS65_LS_MX41X4_D0_F_Z_F_0101101);
		if (!D1 && D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_0111100,`HS65_LS_MX41X4_D0_F_Z_F_0111100);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1001001,`HS65_LS_MX41X4_D0_F_Z_F_1001001);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1001000,`HS65_LS_MX41X4_D0_F_Z_F_1001000);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X4_D0_R_Z_R_1001010,`HS65_LS_MX41X4_D0_F_Z_F_1001010);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0001111,`HS65_LS_MX41X4_D1_F_Z_F_0001111);
		if (!D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0010110,`HS65_LS_MX41X4_D1_F_Z_F_0010110);
		if (!D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0010100,`HS65_LS_MX41X4_D1_F_Z_F_0010100);
		if (!D0 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0011100,`HS65_LS_MX41X4_D1_F_Z_F_0011100);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0100100,`HS65_LS_MX41X4_D1_F_Z_F_0100100);
		if (!D0 && !D2 && D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0011110,`HS65_LS_MX41X4_D1_F_Z_F_0011110);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0100101,`HS65_LS_MX41X4_D1_F_Z_F_0100101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0000101,`HS65_LS_MX41X4_D1_F_Z_F_0000101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0000100,`HS65_LS_MX41X4_D1_F_Z_F_0000100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0000110,`HS65_LS_MX41X4_D1_F_Z_F_0000110);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0001100,`HS65_LS_MX41X4_D1_F_Z_F_0001100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0000111,`HS65_LS_MX41X4_D1_F_Z_F_0000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0001101,`HS65_LS_MX41X4_D1_F_Z_F_0001101);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1000111,`HS65_LS_MX41X4_D1_F_Z_F_1000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0001110,`HS65_LS_MX41X4_D1_F_Z_F_0001110);
		if (D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1010100,`HS65_LS_MX41X4_D1_F_Z_F_1010100);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1100100,`HS65_LS_MX41X4_D1_F_Z_F_1100100);
		if (D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1010110,`HS65_LS_MX41X4_D1_F_Z_F_1010110);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1100101,`HS65_LS_MX41X4_D1_F_Z_F_1100101);
		if (D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1110100,`HS65_LS_MX41X4_D1_F_Z_F_1110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0101100,`HS65_LS_MX41X4_D1_F_Z_F_0101100);
		if (!D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0110100,`HS65_LS_MX41X4_D1_F_Z_F_0110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0101101,`HS65_LS_MX41X4_D1_F_Z_F_0101101);
		if (!D0 && D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_0111100,`HS65_LS_MX41X4_D1_F_Z_F_0111100);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1000101,`HS65_LS_MX41X4_D1_F_Z_F_1000101);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1000100,`HS65_LS_MX41X4_D1_F_Z_F_1000100);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X4_D1_R_Z_R_1000110,`HS65_LS_MX41X4_D1_F_Z_F_1000110);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0001111,`HS65_LS_MX41X4_D2_F_Z_F_0001111);
		if (!D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0010110,`HS65_LS_MX41X4_D2_F_Z_F_0010110);
		if (!D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0010010,`HS65_LS_MX41X4_D2_F_Z_F_0010010);
		if (!D0 && !D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0011010,`HS65_LS_MX41X4_D2_F_Z_F_0011010);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0100010,`HS65_LS_MX41X4_D2_F_Z_F_0100010);
		if (!D0 && !D1 && D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0011110,`HS65_LS_MX41X4_D2_F_Z_F_0011110);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0100011,`HS65_LS_MX41X4_D2_F_Z_F_0100011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0000011,`HS65_LS_MX41X4_D2_F_Z_F_0000011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0000010,`HS65_LS_MX41X4_D2_F_Z_F_0000010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0000110,`HS65_LS_MX41X4_D2_F_Z_F_0000110);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0001010,`HS65_LS_MX41X4_D2_F_Z_F_0001010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0000111,`HS65_LS_MX41X4_D2_F_Z_F_0000111);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0001011,`HS65_LS_MX41X4_D2_F_Z_F_0001011);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1000111,`HS65_LS_MX41X4_D2_F_Z_F_1000111);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0001110,`HS65_LS_MX41X4_D2_F_Z_F_0001110);
		if (D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1010010,`HS65_LS_MX41X4_D2_F_Z_F_1010010);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1100010,`HS65_LS_MX41X4_D2_F_Z_F_1100010);
		if (D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1010110,`HS65_LS_MX41X4_D2_F_Z_F_1010110);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1100011,`HS65_LS_MX41X4_D2_F_Z_F_1100011);
		if (D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1110010,`HS65_LS_MX41X4_D2_F_Z_F_1110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0101010,`HS65_LS_MX41X4_D2_F_Z_F_0101010);
		if (!D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0110010,`HS65_LS_MX41X4_D2_F_Z_F_0110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0101011,`HS65_LS_MX41X4_D2_F_Z_F_0101011);
		if (!D0 && D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_0111010,`HS65_LS_MX41X4_D2_F_Z_F_0111010);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1000011,`HS65_LS_MX41X4_D2_F_Z_F_1000011);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1000010,`HS65_LS_MX41X4_D2_F_Z_F_1000010);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X4_D2_R_Z_R_1000110,`HS65_LS_MX41X4_D2_F_Z_F_1000110);
		if (!D0 && !D1 && !D2 && S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0001111,`HS65_LS_MX41X4_D3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0010101,`HS65_LS_MX41X4_D3_F_Z_F_0010101);
		if (!D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0010001,`HS65_LS_MX41X4_D3_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0011001,`HS65_LS_MX41X4_D3_F_Z_F_0011001);
		if (!D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0100001,`HS65_LS_MX41X4_D3_F_Z_F_0100001);
		if (!D0 && !D1 && D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0011101,`HS65_LS_MX41X4_D3_F_Z_F_0011101);
		if (!D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0100011,`HS65_LS_MX41X4_D3_F_Z_F_0100011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0000011,`HS65_LS_MX41X4_D3_F_Z_F_0000011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0000001,`HS65_LS_MX41X4_D3_F_Z_F_0000001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0000101,`HS65_LS_MX41X4_D3_F_Z_F_0000101);
		if (!D0 && !D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0001001,`HS65_LS_MX41X4_D3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0000111,`HS65_LS_MX41X4_D3_F_Z_F_0000111);
		if (!D0 && !D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0001011,`HS65_LS_MX41X4_D3_F_Z_F_0001011);
		if (D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1000111,`HS65_LS_MX41X4_D3_F_Z_F_1000111);
		if (!D0 && !D1 && !D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0001101,`HS65_LS_MX41X4_D3_F_Z_F_0001101);
		if (D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1010001,`HS65_LS_MX41X4_D3_F_Z_F_1010001);
		if (D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1100001,`HS65_LS_MX41X4_D3_F_Z_F_1100001);
		if (D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1010101,`HS65_LS_MX41X4_D3_F_Z_F_1010101);
		if (D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1100011,`HS65_LS_MX41X4_D3_F_Z_F_1100011);
		if (D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1110001,`HS65_LS_MX41X4_D3_F_Z_F_1110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0101001,`HS65_LS_MX41X4_D3_F_Z_F_0101001);
		if (!D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0110001,`HS65_LS_MX41X4_D3_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0101011,`HS65_LS_MX41X4_D3_F_Z_F_0101011);
		if (!D0 && D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_0111001,`HS65_LS_MX41X4_D3_F_Z_F_0111001);
		if (D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1000011,`HS65_LS_MX41X4_D3_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1000001,`HS65_LS_MX41X4_D3_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X4_D3_R_Z_R_1000101,`HS65_LS_MX41X4_D3_F_Z_F_1000101);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000111,`HS65_LS_MX41X4_S0_F_Z_F_1000111);
		if (D0 && !D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1001010,`HS65_LS_MX41X4_S0_F_Z_F_1001010);
		if (D0 && !D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1001000,`HS65_LS_MX41X4_S0_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1001100,`HS65_LS_MX41X4_S0_F_Z_F_1001100);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1010000,`HS65_LS_MX41X4_S0_F_Z_F_1010000);
		if (D0 && !D1 && !D2 && D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1001110,`HS65_LS_MX41X4_S0_F_Z_F_1001110);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1010001,`HS65_LS_MX41X4_S0_F_Z_F_1010001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000001,`HS65_LS_MX41X4_S0_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000000,`HS65_LS_MX41X4_S0_F_Z_F_1000000);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000010,`HS65_LS_MX41X4_S0_F_Z_F_1000010);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000100,`HS65_LS_MX41X4_S0_F_Z_F_1000100);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000011,`HS65_LS_MX41X4_S0_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000101,`HS65_LS_MX41X4_S0_F_Z_F_1000101);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1100011,`HS65_LS_MX41X4_S0_F_Z_F_1100011);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1000110,`HS65_LS_MX41X4_S0_F_Z_F_1000110);
		if (D0 && D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1101000,`HS65_LS_MX41X4_S0_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1110000,`HS65_LS_MX41X4_S0_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1101010,`HS65_LS_MX41X4_S0_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1110001,`HS65_LS_MX41X4_S0_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1111000,`HS65_LS_MX41X4_S0_F_Z_F_1111000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1010100,`HS65_LS_MX41X4_S0_F_Z_F_1010100);
		if (D0 && !D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1011000,`HS65_LS_MX41X4_S0_F_Z_F_1011000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1010101,`HS65_LS_MX41X4_S0_F_Z_F_1010101);
		if (D0 && !D1 && D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1011100,`HS65_LS_MX41X4_S0_F_Z_F_1011100);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1100001,`HS65_LS_MX41X4_S0_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1100000,`HS65_LS_MX41X4_S0_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X4_S0_R_Z_R_1100010,`HS65_LS_MX41X4_S0_F_Z_F_1100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100111,`HS65_LS_MX41X4_S1_F_Z_F_0100111);
		if (!D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0101010,`HS65_LS_MX41X4_S1_F_Z_F_0101010);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0101000,`HS65_LS_MX41X4_S1_F_Z_F_0101000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0101100,`HS65_LS_MX41X4_S1_F_Z_F_0101100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0110000,`HS65_LS_MX41X4_S1_F_Z_F_0110000);
		if (!D0 && D1 && !D2 && D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0101110,`HS65_LS_MX41X4_S1_F_Z_F_0101110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0110001,`HS65_LS_MX41X4_S1_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100001,`HS65_LS_MX41X4_S1_F_Z_F_0100001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100000,`HS65_LS_MX41X4_S1_F_Z_F_0100000);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100010,`HS65_LS_MX41X4_S1_F_Z_F_0100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100100,`HS65_LS_MX41X4_S1_F_Z_F_0100100);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100011,`HS65_LS_MX41X4_S1_F_Z_F_0100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100101,`HS65_LS_MX41X4_S1_F_Z_F_0100101);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1100011,`HS65_LS_MX41X4_S1_F_Z_F_1100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0100110,`HS65_LS_MX41X4_S1_F_Z_F_0100110);
		if (D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1101000,`HS65_LS_MX41X4_S1_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1110000,`HS65_LS_MX41X4_S1_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1101010,`HS65_LS_MX41X4_S1_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1110001,`HS65_LS_MX41X4_S1_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1111000,`HS65_LS_MX41X4_S1_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0110100,`HS65_LS_MX41X4_S1_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0111000,`HS65_LS_MX41X4_S1_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0110101,`HS65_LS_MX41X4_S1_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_0111100,`HS65_LS_MX41X4_S1_F_Z_F_0111100);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1100001,`HS65_LS_MX41X4_S1_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1100000,`HS65_LS_MX41X4_S1_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X4_S1_R_Z_R_1100010,`HS65_LS_MX41X4_S1_F_Z_F_1100010);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010111,`HS65_LS_MX41X4_S2_F_Z_F_0010111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0011010,`HS65_LS_MX41X4_S2_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0011000,`HS65_LS_MX41X4_S2_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0011100,`HS65_LS_MX41X4_S2_F_Z_F_0011100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0110000,`HS65_LS_MX41X4_S2_F_Z_F_0110000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0011110,`HS65_LS_MX41X4_S2_F_Z_F_0011110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0110001,`HS65_LS_MX41X4_S2_F_Z_F_0110001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010001,`HS65_LS_MX41X4_S2_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010000,`HS65_LS_MX41X4_S2_F_Z_F_0010000);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010010,`HS65_LS_MX41X4_S2_F_Z_F_0010010);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010100,`HS65_LS_MX41X4_S2_F_Z_F_0010100);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010011,`HS65_LS_MX41X4_S2_F_Z_F_0010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010101,`HS65_LS_MX41X4_S2_F_Z_F_0010101);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1010011,`HS65_LS_MX41X4_S2_F_Z_F_1010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0010110,`HS65_LS_MX41X4_S2_F_Z_F_0010110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1011000,`HS65_LS_MX41X4_S2_F_Z_F_1011000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1110000,`HS65_LS_MX41X4_S2_F_Z_F_1110000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1011010,`HS65_LS_MX41X4_S2_F_Z_F_1011010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1110001,`HS65_LS_MX41X4_S2_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1111000,`HS65_LS_MX41X4_S2_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0110100,`HS65_LS_MX41X4_S2_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0111000,`HS65_LS_MX41X4_S2_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0110101,`HS65_LS_MX41X4_S2_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_0111100,`HS65_LS_MX41X4_S2_F_Z_F_0111100);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1010001,`HS65_LS_MX41X4_S2_F_Z_F_1010001);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1010000,`HS65_LS_MX41X4_S2_F_Z_F_1010000);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X4_S2_R_Z_R_1010010,`HS65_LS_MX41X4_S2_F_Z_F_1010010);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001111,`HS65_LS_MX41X4_S3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0011010,`HS65_LS_MX41X4_S3_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0011000,`HS65_LS_MX41X4_S3_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0011100,`HS65_LS_MX41X4_S3_F_Z_F_0011100);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0101000,`HS65_LS_MX41X4_S3_F_Z_F_0101000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0011110,`HS65_LS_MX41X4_S3_F_Z_F_0011110);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0101001,`HS65_LS_MX41X4_S3_F_Z_F_0101001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001001,`HS65_LS_MX41X4_S3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001000,`HS65_LS_MX41X4_S3_F_Z_F_0001000);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001010,`HS65_LS_MX41X4_S3_F_Z_F_0001010);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001100,`HS65_LS_MX41X4_S3_F_Z_F_0001100);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001011,`HS65_LS_MX41X4_S3_F_Z_F_0001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001101,`HS65_LS_MX41X4_S3_F_Z_F_0001101);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1001011,`HS65_LS_MX41X4_S3_F_Z_F_1001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0001110,`HS65_LS_MX41X4_S3_F_Z_F_0001110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1011000,`HS65_LS_MX41X4_S3_F_Z_F_1011000);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1101000,`HS65_LS_MX41X4_S3_F_Z_F_1101000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1011010,`HS65_LS_MX41X4_S3_F_Z_F_1011010);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1101001,`HS65_LS_MX41X4_S3_F_Z_F_1101001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1111000,`HS65_LS_MX41X4_S3_F_Z_F_1111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0101100,`HS65_LS_MX41X4_S3_F_Z_F_0101100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0111000,`HS65_LS_MX41X4_S3_F_Z_F_0111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0101101,`HS65_LS_MX41X4_S3_F_Z_F_0101101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_0111100,`HS65_LS_MX41X4_S3_F_Z_F_0111100);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1001001,`HS65_LS_MX41X4_S3_F_Z_F_1001001);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1001000,`HS65_LS_MX41X4_S3_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X4_S3_R_Z_R_1001010,`HS65_LS_MX41X4_S3_F_Z_F_1001010);


	endspecify

endmodule // HS65_LS_MX41X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_MX41X7_D0_R_Z_R_0001111 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001111 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0011010 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0011010 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0011000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0011000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0011100 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0011100 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0101000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0101000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0011110 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0011110 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0101001 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0101001 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001001 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001001 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001010 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001010 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001100 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001100 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001011 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001011 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001101 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001101 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1001011 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1001011 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0001110 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0001110 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1011010 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1011010 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1101001 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1101001 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0101100 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0101100 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0111000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0111000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0101101 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0101101 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_0111100 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_0111100 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1001001 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1001001 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X7_D0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X7_D0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0001111 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0001111 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0010110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0010110 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0010100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0010100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0011100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0011100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0011110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0011110 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0000101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0000101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0000100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0000100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0000110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0000110 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0001100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0001100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0000111 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0000111 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0001101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0001101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1000111 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1000111 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0001110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0001110 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1010100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1010100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1100100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1100100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1010110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1010110 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1100101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1100101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1110100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1110100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0101101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0101101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1000101 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1000101 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1000100 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1000100 0.1
`define HS65_LS_MX41X7_D1_R_Z_R_1000110 0.1
`define HS65_LS_MX41X7_D1_F_Z_F_1000110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0001111 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0001111 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0100010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0100010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0100011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0100011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0000011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0000011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0000010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0000010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0000110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0000110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0001010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0001010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0000111 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0000111 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0001011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0001011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1000111 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1000111 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0001110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0001110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1100010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1100010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1010110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1010110 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1100011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1100011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1110010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1110010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0101010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0101010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0110010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0110010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0101011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0101011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_0111010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_0111010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1000011 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1000011 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1000010 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1000010 0.1
`define HS65_LS_MX41X7_D2_R_Z_R_1000110 0.1
`define HS65_LS_MX41X7_D2_F_Z_F_1000110 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0010101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0010101 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0010001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0010001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0011001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0011001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0100001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0100001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0011101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0011101 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0100011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0100011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0000011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0000011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0000001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0000001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0000101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0000101 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0000111 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0000111 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1000111 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1000111 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1010001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1010001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1100001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1100001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1010101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1010101 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1100011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1100011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1110001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1110001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0110001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0110001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0101011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0101011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_0111001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_0111001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1000011 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1000011 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1000001 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1000001 0.1
`define HS65_LS_MX41X7_D3_R_Z_R_1000101 0.1
`define HS65_LS_MX41X7_D3_F_Z_F_1000101 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000111 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000111 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1001010 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1001010 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1001000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1001000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1001100 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1001100 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1010000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1010000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1001110 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1001110 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1010001 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1010001 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000001 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000001 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000010 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000010 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000100 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000100 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000011 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000011 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000101 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000101 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1100011 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1100011 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1000110 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1000110 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1101000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1101000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1110000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1110000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1101010 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1101010 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1110001 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1110001 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1111000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1111000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1010100 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1010100 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1011000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1011000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1010101 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1010101 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1011100 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1011100 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1100001 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1100001 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1100000 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1100000 0.1
`define HS65_LS_MX41X7_S0_R_Z_R_1100010 0.1
`define HS65_LS_MX41X7_S0_F_Z_F_1100010 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100111 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100111 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0101010 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0101010 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0101000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0101000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0101100 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0101100 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0110000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0110000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0101110 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0101110 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0110001 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0110001 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100001 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100001 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100010 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100010 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100100 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100100 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100011 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100011 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100101 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100101 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1100011 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1100011 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0100110 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0100110 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1101000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1101000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1110000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1110000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1101010 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1101010 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1110001 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1110001 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1111000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1111000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0110100 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0110100 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0111000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0111000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0110101 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0110101 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_0111100 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_0111100 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1100001 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1100001 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1100000 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1100000 0.1
`define HS65_LS_MX41X7_S1_R_Z_R_1100010 0.1
`define HS65_LS_MX41X7_S1_F_Z_F_1100010 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010111 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010111 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0011010 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0011010 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0011000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0011000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0011100 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0011100 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0110000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0110000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0011110 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0011110 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0110001 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0110001 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010001 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010001 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010010 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010010 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010100 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010100 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010011 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010011 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010101 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010101 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1010011 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1010011 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0010110 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0010110 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1011000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1011000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1110000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1110000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1011010 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1011010 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1110001 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1110001 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1111000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1111000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0110100 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0110100 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0111000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0111000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0110101 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0110101 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_0111100 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_0111100 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1010001 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1010001 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1010000 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1010000 0.1
`define HS65_LS_MX41X7_S2_R_Z_R_1010010 0.1
`define HS65_LS_MX41X7_S2_F_Z_F_1010010 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001111 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001111 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0011010 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0011010 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0011000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0011000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0011100 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0011100 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0101000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0101000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0011110 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0011110 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0101001 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0101001 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001001 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001001 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001010 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001010 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001100 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001100 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001011 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001011 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001101 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001101 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1001011 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1001011 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0001110 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0001110 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1011000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1011000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1101000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1101000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1011010 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1011010 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1101001 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1101001 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1111000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1111000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0101100 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0101100 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0111000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0111000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0101101 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0101101 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_0111100 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_0111100 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1001001 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1001001 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1001000 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1001000 0.1
`define HS65_LS_MX41X7_S3_R_Z_R_1001010 0.1
`define HS65_LS_MX41X7_S3_F_Z_F_1001010 0.1

module HS65_LS_MX41X7 (Z, D0, D1, D2, D3, S0, S1, S2, S3);

	output Z;
	input D0;
	input D1;
	input D2;
	input D3;
	input S0;
	input S1;
	input S2;
	input S3;

	and    U1 (INTERNAL1, D0, S0) ;
	and    U2 (INTERNAL2, D1, S1) ;
	and    U3 (INTERNAL3, D2, S2) ;
	and    U4 (INTERNAL4, D3, S3) ;
	or   #1 U5 (Z, INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;



	specify

		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001111,`HS65_LS_MX41X7_D0_F_Z_F_0001111);
		if (!D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0011010,`HS65_LS_MX41X7_D0_F_Z_F_0011010);
		if (!D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0011000,`HS65_LS_MX41X7_D0_F_Z_F_0011000);
		if (!D1 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0011100,`HS65_LS_MX41X7_D0_F_Z_F_0011100);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0101000,`HS65_LS_MX41X7_D0_F_Z_F_0101000);
		if (!D1 && !D2 && D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0011110,`HS65_LS_MX41X7_D0_F_Z_F_0011110);
		if (!D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0101001,`HS65_LS_MX41X7_D0_F_Z_F_0101001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001001,`HS65_LS_MX41X7_D0_F_Z_F_0001001);
		if (!D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001000,`HS65_LS_MX41X7_D0_F_Z_F_0001000);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001010,`HS65_LS_MX41X7_D0_F_Z_F_0001010);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001100,`HS65_LS_MX41X7_D0_F_Z_F_0001100);
		if (!D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001011,`HS65_LS_MX41X7_D0_F_Z_F_0001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001101,`HS65_LS_MX41X7_D0_F_Z_F_0001101);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1001011,`HS65_LS_MX41X7_D0_F_Z_F_1001011);
		if (!D1 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0001110,`HS65_LS_MX41X7_D0_F_Z_F_0001110);
		if (D1 && !D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1011000,`HS65_LS_MX41X7_D0_F_Z_F_1011000);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1101000,`HS65_LS_MX41X7_D0_F_Z_F_1101000);
		if (D1 && !D2 && D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1011010,`HS65_LS_MX41X7_D0_F_Z_F_1011010);
		if (D1 && D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1101001,`HS65_LS_MX41X7_D0_F_Z_F_1101001);
		if (D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1111000,`HS65_LS_MX41X7_D0_F_Z_F_1111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0101100,`HS65_LS_MX41X7_D0_F_Z_F_0101100);
		if (!D1 && D2 && D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0111000,`HS65_LS_MX41X7_D0_F_Z_F_0111000);
		if (!D1 && D2 && !D3 && S0 && S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0101101,`HS65_LS_MX41X7_D0_F_Z_F_0101101);
		if (!D1 && D2 && D3 && S0 && S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_0111100,`HS65_LS_MX41X7_D0_F_Z_F_0111100);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1001001,`HS65_LS_MX41X7_D0_F_Z_F_1001001);
		if (D1 && !D2 && !D3 && S0 && !S1 && !S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1001000,`HS65_LS_MX41X7_D0_F_Z_F_1001000);
		if (D1 && !D2 && !D3 && S0 && !S1 && S2 && !S3) (D0 +=> Z) = (`HS65_LS_MX41X7_D0_R_Z_R_1001010,`HS65_LS_MX41X7_D0_F_Z_F_1001010);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0001111,`HS65_LS_MX41X7_D1_F_Z_F_0001111);
		if (!D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0010110,`HS65_LS_MX41X7_D1_F_Z_F_0010110);
		if (!D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0010100,`HS65_LS_MX41X7_D1_F_Z_F_0010100);
		if (!D0 && !D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0011100,`HS65_LS_MX41X7_D1_F_Z_F_0011100);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0100100,`HS65_LS_MX41X7_D1_F_Z_F_0100100);
		if (!D0 && !D2 && D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0011110,`HS65_LS_MX41X7_D1_F_Z_F_0011110);
		if (!D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0100101,`HS65_LS_MX41X7_D1_F_Z_F_0100101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0000101,`HS65_LS_MX41X7_D1_F_Z_F_0000101);
		if (!D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0000100,`HS65_LS_MX41X7_D1_F_Z_F_0000100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0000110,`HS65_LS_MX41X7_D1_F_Z_F_0000110);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0001100,`HS65_LS_MX41X7_D1_F_Z_F_0001100);
		if (!D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0000111,`HS65_LS_MX41X7_D1_F_Z_F_0000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0001101,`HS65_LS_MX41X7_D1_F_Z_F_0001101);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1000111,`HS65_LS_MX41X7_D1_F_Z_F_1000111);
		if (!D0 && !D2 && !D3 && S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0001110,`HS65_LS_MX41X7_D1_F_Z_F_0001110);
		if (D0 && !D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1010100,`HS65_LS_MX41X7_D1_F_Z_F_1010100);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1100100,`HS65_LS_MX41X7_D1_F_Z_F_1100100);
		if (D0 && !D2 && D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1010110,`HS65_LS_MX41X7_D1_F_Z_F_1010110);
		if (D0 && D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1100101,`HS65_LS_MX41X7_D1_F_Z_F_1100101);
		if (D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1110100,`HS65_LS_MX41X7_D1_F_Z_F_1110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0101100,`HS65_LS_MX41X7_D1_F_Z_F_0101100);
		if (!D0 && D2 && D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0110100,`HS65_LS_MX41X7_D1_F_Z_F_0110100);
		if (!D0 && D2 && !D3 && S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0101101,`HS65_LS_MX41X7_D1_F_Z_F_0101101);
		if (!D0 && D2 && D3 && S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_0111100,`HS65_LS_MX41X7_D1_F_Z_F_0111100);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1000101,`HS65_LS_MX41X7_D1_F_Z_F_1000101);
		if (D0 && !D2 && !D3 && !S0 && S1 && !S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1000100,`HS65_LS_MX41X7_D1_F_Z_F_1000100);
		if (D0 && !D2 && !D3 && !S0 && S1 && S2 && !S3) (D1 +=> Z) = (`HS65_LS_MX41X7_D1_R_Z_R_1000110,`HS65_LS_MX41X7_D1_F_Z_F_1000110);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0001111,`HS65_LS_MX41X7_D2_F_Z_F_0001111);
		if (!D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0010110,`HS65_LS_MX41X7_D2_F_Z_F_0010110);
		if (!D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0010010,`HS65_LS_MX41X7_D2_F_Z_F_0010010);
		if (!D0 && !D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0011010,`HS65_LS_MX41X7_D2_F_Z_F_0011010);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0100010,`HS65_LS_MX41X7_D2_F_Z_F_0100010);
		if (!D0 && !D1 && D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0011110,`HS65_LS_MX41X7_D2_F_Z_F_0011110);
		if (!D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0100011,`HS65_LS_MX41X7_D2_F_Z_F_0100011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0000011,`HS65_LS_MX41X7_D2_F_Z_F_0000011);
		if (!D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0000010,`HS65_LS_MX41X7_D2_F_Z_F_0000010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0000110,`HS65_LS_MX41X7_D2_F_Z_F_0000110);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0001010,`HS65_LS_MX41X7_D2_F_Z_F_0001010);
		if (!D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0000111,`HS65_LS_MX41X7_D2_F_Z_F_0000111);
		if (!D0 && !D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0001011,`HS65_LS_MX41X7_D2_F_Z_F_0001011);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1000111,`HS65_LS_MX41X7_D2_F_Z_F_1000111);
		if (!D0 && !D1 && !D3 && S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0001110,`HS65_LS_MX41X7_D2_F_Z_F_0001110);
		if (D0 && !D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1010010,`HS65_LS_MX41X7_D2_F_Z_F_1010010);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1100010,`HS65_LS_MX41X7_D2_F_Z_F_1100010);
		if (D0 && !D1 && D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1010110,`HS65_LS_MX41X7_D2_F_Z_F_1010110);
		if (D0 && D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1100011,`HS65_LS_MX41X7_D2_F_Z_F_1100011);
		if (D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1110010,`HS65_LS_MX41X7_D2_F_Z_F_1110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0101010,`HS65_LS_MX41X7_D2_F_Z_F_0101010);
		if (!D0 && D1 && D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0110010,`HS65_LS_MX41X7_D2_F_Z_F_0110010);
		if (!D0 && D1 && !D3 && S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0101011,`HS65_LS_MX41X7_D2_F_Z_F_0101011);
		if (!D0 && D1 && D3 && S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_0111010,`HS65_LS_MX41X7_D2_F_Z_F_0111010);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1000011,`HS65_LS_MX41X7_D2_F_Z_F_1000011);
		if (D0 && !D1 && !D3 && !S0 && !S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1000010,`HS65_LS_MX41X7_D2_F_Z_F_1000010);
		if (D0 && !D1 && !D3 && !S0 && S1 && S2 && !S3) (D2 +=> Z) = (`HS65_LS_MX41X7_D2_R_Z_R_1000110,`HS65_LS_MX41X7_D2_F_Z_F_1000110);
		if (!D0 && !D1 && !D2 && S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0001111,`HS65_LS_MX41X7_D3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0010101,`HS65_LS_MX41X7_D3_F_Z_F_0010101);
		if (!D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0010001,`HS65_LS_MX41X7_D3_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0011001,`HS65_LS_MX41X7_D3_F_Z_F_0011001);
		if (!D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0100001,`HS65_LS_MX41X7_D3_F_Z_F_0100001);
		if (!D0 && !D1 && D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0011101,`HS65_LS_MX41X7_D3_F_Z_F_0011101);
		if (!D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0100011,`HS65_LS_MX41X7_D3_F_Z_F_0100011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0000011,`HS65_LS_MX41X7_D3_F_Z_F_0000011);
		if (!D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0000001,`HS65_LS_MX41X7_D3_F_Z_F_0000001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0000101,`HS65_LS_MX41X7_D3_F_Z_F_0000101);
		if (!D0 && !D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0001001,`HS65_LS_MX41X7_D3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0000111,`HS65_LS_MX41X7_D3_F_Z_F_0000111);
		if (!D0 && !D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0001011,`HS65_LS_MX41X7_D3_F_Z_F_0001011);
		if (D0 && !D1 && !D2 && !S0 && S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1000111,`HS65_LS_MX41X7_D3_F_Z_F_1000111);
		if (!D0 && !D1 && !D2 && S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0001101,`HS65_LS_MX41X7_D3_F_Z_F_0001101);
		if (D0 && !D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1010001,`HS65_LS_MX41X7_D3_F_Z_F_1010001);
		if (D0 && D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1100001,`HS65_LS_MX41X7_D3_F_Z_F_1100001);
		if (D0 && !D1 && D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1010101,`HS65_LS_MX41X7_D3_F_Z_F_1010101);
		if (D0 && D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1100011,`HS65_LS_MX41X7_D3_F_Z_F_1100011);
		if (D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1110001,`HS65_LS_MX41X7_D3_F_Z_F_1110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0101001,`HS65_LS_MX41X7_D3_F_Z_F_0101001);
		if (!D0 && D1 && D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0110001,`HS65_LS_MX41X7_D3_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0101011,`HS65_LS_MX41X7_D3_F_Z_F_0101011);
		if (!D0 && D1 && D2 && S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_0111001,`HS65_LS_MX41X7_D3_F_Z_F_0111001);
		if (D0 && !D1 && !D2 && !S0 && !S1 && S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1000011,`HS65_LS_MX41X7_D3_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !S0 && !S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1000001,`HS65_LS_MX41X7_D3_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !S0 && S1 && !S2 && S3) (D3 +=> Z) = (`HS65_LS_MX41X7_D3_R_Z_R_1000101,`HS65_LS_MX41X7_D3_F_Z_F_1000101);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000111,`HS65_LS_MX41X7_S0_F_Z_F_1000111);
		if (D0 && !D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1001010,`HS65_LS_MX41X7_S0_F_Z_F_1001010);
		if (D0 && !D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1001000,`HS65_LS_MX41X7_S0_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1001100,`HS65_LS_MX41X7_S0_F_Z_F_1001100);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1010000,`HS65_LS_MX41X7_S0_F_Z_F_1010000);
		if (D0 && !D1 && !D2 && D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1001110,`HS65_LS_MX41X7_S0_F_Z_F_1001110);
		if (D0 && !D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1010001,`HS65_LS_MX41X7_S0_F_Z_F_1010001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000001,`HS65_LS_MX41X7_S0_F_Z_F_1000001);
		if (D0 && !D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000000,`HS65_LS_MX41X7_S0_F_Z_F_1000000);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000010,`HS65_LS_MX41X7_S0_F_Z_F_1000010);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000100,`HS65_LS_MX41X7_S0_F_Z_F_1000100);
		if (D0 && !D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000011,`HS65_LS_MX41X7_S0_F_Z_F_1000011);
		if (D0 && !D1 && !D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000101,`HS65_LS_MX41X7_S0_F_Z_F_1000101);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1100011,`HS65_LS_MX41X7_S0_F_Z_F_1100011);
		if (D0 && !D1 && !D2 && !D3 && S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1000110,`HS65_LS_MX41X7_S0_F_Z_F_1000110);
		if (D0 && D1 && !D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1101000,`HS65_LS_MX41X7_S0_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1110000,`HS65_LS_MX41X7_S0_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1101010,`HS65_LS_MX41X7_S0_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1110001,`HS65_LS_MX41X7_S0_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1111000,`HS65_LS_MX41X7_S0_F_Z_F_1111000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1010100,`HS65_LS_MX41X7_S0_F_Z_F_1010100);
		if (D0 && !D1 && D2 && D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1011000,`HS65_LS_MX41X7_S0_F_Z_F_1011000);
		if (D0 && !D1 && D2 && !D3 && S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1010101,`HS65_LS_MX41X7_S0_F_Z_F_1010101);
		if (D0 && !D1 && D2 && D3 && S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1011100,`HS65_LS_MX41X7_S0_F_Z_F_1011100);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1100001,`HS65_LS_MX41X7_S0_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S1 && !S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1100000,`HS65_LS_MX41X7_S0_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S1 && S2 && !S3) (S0 +=> Z) = (`HS65_LS_MX41X7_S0_R_Z_R_1100010,`HS65_LS_MX41X7_S0_F_Z_F_1100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100111,`HS65_LS_MX41X7_S1_F_Z_F_0100111);
		if (!D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0101010,`HS65_LS_MX41X7_S1_F_Z_F_0101010);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0101000,`HS65_LS_MX41X7_S1_F_Z_F_0101000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0101100,`HS65_LS_MX41X7_S1_F_Z_F_0101100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0110000,`HS65_LS_MX41X7_S1_F_Z_F_0110000);
		if (!D0 && D1 && !D2 && D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0101110,`HS65_LS_MX41X7_S1_F_Z_F_0101110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0110001,`HS65_LS_MX41X7_S1_F_Z_F_0110001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100001,`HS65_LS_MX41X7_S1_F_Z_F_0100001);
		if (!D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100000,`HS65_LS_MX41X7_S1_F_Z_F_0100000);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100010,`HS65_LS_MX41X7_S1_F_Z_F_0100010);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100100,`HS65_LS_MX41X7_S1_F_Z_F_0100100);
		if (!D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100011,`HS65_LS_MX41X7_S1_F_Z_F_0100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100101,`HS65_LS_MX41X7_S1_F_Z_F_0100101);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1100011,`HS65_LS_MX41X7_S1_F_Z_F_1100011);
		if (!D0 && D1 && !D2 && !D3 && S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0100110,`HS65_LS_MX41X7_S1_F_Z_F_0100110);
		if (D0 && D1 && !D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1101000,`HS65_LS_MX41X7_S1_F_Z_F_1101000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1110000,`HS65_LS_MX41X7_S1_F_Z_F_1110000);
		if (D0 && D1 && !D2 && D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1101010,`HS65_LS_MX41X7_S1_F_Z_F_1101010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1110001,`HS65_LS_MX41X7_S1_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1111000,`HS65_LS_MX41X7_S1_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0110100,`HS65_LS_MX41X7_S1_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0111000,`HS65_LS_MX41X7_S1_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0110101,`HS65_LS_MX41X7_S1_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_0111100,`HS65_LS_MX41X7_S1_F_Z_F_0111100);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1100001,`HS65_LS_MX41X7_S1_F_Z_F_1100001);
		if (D0 && D1 && !D2 && !D3 && !S0 && !S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1100000,`HS65_LS_MX41X7_S1_F_Z_F_1100000);
		if (D0 && D1 && !D2 && !D3 && !S0 && S2 && !S3) (S1 +=> Z) = (`HS65_LS_MX41X7_S1_R_Z_R_1100010,`HS65_LS_MX41X7_S1_F_Z_F_1100010);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010111,`HS65_LS_MX41X7_S2_F_Z_F_0010111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0011010,`HS65_LS_MX41X7_S2_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0011000,`HS65_LS_MX41X7_S2_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0011100,`HS65_LS_MX41X7_S2_F_Z_F_0011100);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0110000,`HS65_LS_MX41X7_S2_F_Z_F_0110000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0011110,`HS65_LS_MX41X7_S2_F_Z_F_0011110);
		if (!D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0110001,`HS65_LS_MX41X7_S2_F_Z_F_0110001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010001,`HS65_LS_MX41X7_S2_F_Z_F_0010001);
		if (!D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010000,`HS65_LS_MX41X7_S2_F_Z_F_0010000);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010010,`HS65_LS_MX41X7_S2_F_Z_F_0010010);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010100,`HS65_LS_MX41X7_S2_F_Z_F_0010100);
		if (!D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010011,`HS65_LS_MX41X7_S2_F_Z_F_0010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010101,`HS65_LS_MX41X7_S2_F_Z_F_0010101);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1010011,`HS65_LS_MX41X7_S2_F_Z_F_1010011);
		if (!D0 && !D1 && D2 && !D3 && S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0010110,`HS65_LS_MX41X7_S2_F_Z_F_0010110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1011000,`HS65_LS_MX41X7_S2_F_Z_F_1011000);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1110000,`HS65_LS_MX41X7_S2_F_Z_F_1110000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1011010,`HS65_LS_MX41X7_S2_F_Z_F_1011010);
		if (D0 && D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1110001,`HS65_LS_MX41X7_S2_F_Z_F_1110001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1111000,`HS65_LS_MX41X7_S2_F_Z_F_1111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0110100,`HS65_LS_MX41X7_S2_F_Z_F_0110100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0111000,`HS65_LS_MX41X7_S2_F_Z_F_0111000);
		if (!D0 && D1 && D2 && !D3 && S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0110101,`HS65_LS_MX41X7_S2_F_Z_F_0110101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_0111100,`HS65_LS_MX41X7_S2_F_Z_F_0111100);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1010001,`HS65_LS_MX41X7_S2_F_Z_F_1010001);
		if (D0 && !D1 && D2 && !D3 && !S0 && !S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1010000,`HS65_LS_MX41X7_S2_F_Z_F_1010000);
		if (D0 && !D1 && D2 && !D3 && !S0 && S1 && !S3) (S2 +=> Z) = (`HS65_LS_MX41X7_S2_R_Z_R_1010010,`HS65_LS_MX41X7_S2_F_Z_F_1010010);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001111,`HS65_LS_MX41X7_S3_F_Z_F_0001111);
		if (!D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0011010,`HS65_LS_MX41X7_S3_F_Z_F_0011010);
		if (!D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0011000,`HS65_LS_MX41X7_S3_F_Z_F_0011000);
		if (!D0 && !D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0011100,`HS65_LS_MX41X7_S3_F_Z_F_0011100);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0101000,`HS65_LS_MX41X7_S3_F_Z_F_0101000);
		if (!D0 && !D1 && D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0011110,`HS65_LS_MX41X7_S3_F_Z_F_0011110);
		if (!D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0101001,`HS65_LS_MX41X7_S3_F_Z_F_0101001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001001,`HS65_LS_MX41X7_S3_F_Z_F_0001001);
		if (!D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001000,`HS65_LS_MX41X7_S3_F_Z_F_0001000);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001010,`HS65_LS_MX41X7_S3_F_Z_F_0001010);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001100,`HS65_LS_MX41X7_S3_F_Z_F_0001100);
		if (!D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001011,`HS65_LS_MX41X7_S3_F_Z_F_0001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001101,`HS65_LS_MX41X7_S3_F_Z_F_0001101);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1001011,`HS65_LS_MX41X7_S3_F_Z_F_1001011);
		if (!D0 && !D1 && !D2 && D3 && S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0001110,`HS65_LS_MX41X7_S3_F_Z_F_0001110);
		if (D0 && !D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1011000,`HS65_LS_MX41X7_S3_F_Z_F_1011000);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1101000,`HS65_LS_MX41X7_S3_F_Z_F_1101000);
		if (D0 && !D1 && D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1011010,`HS65_LS_MX41X7_S3_F_Z_F_1011010);
		if (D0 && D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1101001,`HS65_LS_MX41X7_S3_F_Z_F_1101001);
		if (D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1111000,`HS65_LS_MX41X7_S3_F_Z_F_1111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0101100,`HS65_LS_MX41X7_S3_F_Z_F_0101100);
		if (!D0 && D1 && D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0111000,`HS65_LS_MX41X7_S3_F_Z_F_0111000);
		if (!D0 && D1 && !D2 && D3 && S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0101101,`HS65_LS_MX41X7_S3_F_Z_F_0101101);
		if (!D0 && D1 && D2 && D3 && S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_0111100,`HS65_LS_MX41X7_S3_F_Z_F_0111100);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1001001,`HS65_LS_MX41X7_S3_F_Z_F_1001001);
		if (D0 && !D1 && !D2 && D3 && !S0 && !S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1001000,`HS65_LS_MX41X7_S3_F_Z_F_1001000);
		if (D0 && !D1 && !D2 && D3 && !S0 && S1 && !S2) (S3 +=> Z) = (`HS65_LS_MX41X7_S3_R_Z_R_1001010,`HS65_LS_MX41X7_S3_F_Z_F_1001010);


	endspecify

endmodule // HS65_LS_MX41X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2AX14_A_R_Z_R_1 0.1
`define HS65_LS_NAND2AX14_A_F_Z_F_1 0.1
`define HS65_LS_NAND2AX14_B_R_Z_F_0 0.1
`define HS65_LS_NAND2AX14_B_F_Z_R_0 0.1

module HS65_LS_NAND2AX14 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	or   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND2AX14_A_R_Z_R_1,`HS65_LS_NAND2AX14_A_F_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2AX14_B_F_Z_R_0,`HS65_LS_NAND2AX14_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NAND2AX14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2AX21_A_R_Z_R_1 0.1
`define HS65_LS_NAND2AX21_A_F_Z_F_1 0.1
`define HS65_LS_NAND2AX21_B_R_Z_F_0 0.1
`define HS65_LS_NAND2AX21_B_F_Z_R_0 0.1

module HS65_LS_NAND2AX21 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	or   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND2AX21_A_R_Z_R_1,`HS65_LS_NAND2AX21_A_F_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2AX21_B_F_Z_R_0,`HS65_LS_NAND2AX21_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NAND2AX21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2AX29_A_R_Z_R_1 0.1
`define HS65_LS_NAND2AX29_A_F_Z_F_1 0.1
`define HS65_LS_NAND2AX29_B_R_Z_F_0 0.1
`define HS65_LS_NAND2AX29_B_F_Z_R_0 0.1

module HS65_LS_NAND2AX29 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	or   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND2AX29_A_R_Z_R_1,`HS65_LS_NAND2AX29_A_F_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2AX29_B_F_Z_R_0,`HS65_LS_NAND2AX29_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NAND2AX29

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2AX4_A_R_Z_R_1 0.1
`define HS65_LS_NAND2AX4_A_F_Z_F_1 0.1
`define HS65_LS_NAND2AX4_B_R_Z_F_0 0.1
`define HS65_LS_NAND2AX4_B_F_Z_R_0 0.1

module HS65_LS_NAND2AX4 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	or   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND2AX4_A_R_Z_R_1,`HS65_LS_NAND2AX4_A_F_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2AX4_B_F_Z_R_0,`HS65_LS_NAND2AX4_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NAND2AX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2AX7_A_R_Z_R_1 0.1
`define HS65_LS_NAND2AX7_A_F_Z_F_1 0.1
`define HS65_LS_NAND2AX7_B_R_Z_F_0 0.1
`define HS65_LS_NAND2AX7_B_F_Z_R_0 0.1

module HS65_LS_NAND2AX7 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	or   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND2AX7_A_R_Z_R_1,`HS65_LS_NAND2AX7_A_F_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2AX7_B_F_Z_R_0,`HS65_LS_NAND2AX7_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NAND2AX7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X11_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X11_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X11_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X11_B_F_Z_R_1 0.1

module HS65_LS_NAND2X11 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X11_A_F_Z_R_1,`HS65_LS_NAND2X11_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X11_B_F_Z_R_1,`HS65_LS_NAND2X11_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X14_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X14_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X14_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X14_B_F_Z_R_1 0.1

module HS65_LS_NAND2X14 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X14_A_F_Z_R_1,`HS65_LS_NAND2X14_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X14_B_F_Z_R_1,`HS65_LS_NAND2X14_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X2_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X2_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X2_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X2_B_F_Z_R_1 0.1

module HS65_LS_NAND2X2 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X2_A_F_Z_R_1,`HS65_LS_NAND2X2_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X2_B_F_Z_R_1,`HS65_LS_NAND2X2_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X21_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X21_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X21_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X21_B_F_Z_R_1 0.1

module HS65_LS_NAND2X21 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X21_A_F_Z_R_1,`HS65_LS_NAND2X21_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X21_B_F_Z_R_1,`HS65_LS_NAND2X21_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X29_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X29_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X29_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X29_B_F_Z_R_1 0.1

module HS65_LS_NAND2X29 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X29_A_F_Z_R_1,`HS65_LS_NAND2X29_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X29_B_F_Z_R_1,`HS65_LS_NAND2X29_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X29

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X4_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X4_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X4_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X4_B_F_Z_R_1 0.1

module HS65_LS_NAND2X4 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X4_A_F_Z_R_1,`HS65_LS_NAND2X4_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X4_B_F_Z_R_1,`HS65_LS_NAND2X4_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X43_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X43_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X43_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X43_B_F_Z_R_1 0.1

module HS65_LS_NAND2X43 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X43_A_F_Z_R_1,`HS65_LS_NAND2X43_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X43_B_F_Z_R_1,`HS65_LS_NAND2X43_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X43

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X5_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X5_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X5_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X5_B_F_Z_R_1 0.1

module HS65_LS_NAND2X5 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X5_A_F_Z_R_1,`HS65_LS_NAND2X5_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X5_B_F_Z_R_1,`HS65_LS_NAND2X5_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X57_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X57_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X57_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X57_B_F_Z_R_1 0.1

module HS65_LS_NAND2X57 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X57_A_F_Z_R_1,`HS65_LS_NAND2X57_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X57_B_F_Z_R_1,`HS65_LS_NAND2X57_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X57

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND2X7_A_R_Z_F_1 0.1
`define HS65_LS_NAND2X7_A_F_Z_R_1 0.1
`define HS65_LS_NAND2X7_B_R_Z_F_1 0.1
`define HS65_LS_NAND2X7_B_F_Z_R_1 0.1

module HS65_LS_NAND2X7 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND2X7_A_F_Z_R_1,`HS65_LS_NAND2X7_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_NAND2X7_B_F_Z_R_1,`HS65_LS_NAND2X7_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NAND2X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3AX13_A_R_Z_R_11 0.1
`define HS65_LS_NAND3AX13_A_F_Z_F_11 0.1
`define HS65_LS_NAND3AX13_B_R_Z_F_01 0.1
`define HS65_LS_NAND3AX13_B_F_Z_R_01 0.1
`define HS65_LS_NAND3AX13_C_R_Z_F_01 0.1
`define HS65_LS_NAND3AX13_C_F_Z_R_01 0.1

module HS65_LS_NAND3AX13 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	and    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND3AX13_A_R_Z_R_11,`HS65_LS_NAND3AX13_A_F_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3AX13_B_F_Z_R_01,`HS65_LS_NAND3AX13_B_R_Z_F_01);
		(C -=> Z) = (`HS65_LS_NAND3AX13_C_F_Z_R_01,`HS65_LS_NAND3AX13_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_NAND3AX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3AX19_A_R_Z_R_11 0.1
`define HS65_LS_NAND3AX19_A_F_Z_F_11 0.1
`define HS65_LS_NAND3AX19_B_R_Z_F_01 0.1
`define HS65_LS_NAND3AX19_B_F_Z_R_01 0.1
`define HS65_LS_NAND3AX19_C_R_Z_F_01 0.1
`define HS65_LS_NAND3AX19_C_F_Z_R_01 0.1

module HS65_LS_NAND3AX19 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	and    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND3AX19_A_R_Z_R_11,`HS65_LS_NAND3AX19_A_F_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3AX19_B_F_Z_R_01,`HS65_LS_NAND3AX19_B_R_Z_F_01);
		(C -=> Z) = (`HS65_LS_NAND3AX19_C_F_Z_R_01,`HS65_LS_NAND3AX19_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_NAND3AX19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3AX25_A_R_Z_R_11 0.1
`define HS65_LS_NAND3AX25_A_F_Z_F_11 0.1
`define HS65_LS_NAND3AX25_B_R_Z_F_01 0.1
`define HS65_LS_NAND3AX25_B_F_Z_R_01 0.1
`define HS65_LS_NAND3AX25_C_R_Z_F_01 0.1
`define HS65_LS_NAND3AX25_C_F_Z_R_01 0.1

module HS65_LS_NAND3AX25 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	and    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND3AX25_A_R_Z_R_11,`HS65_LS_NAND3AX25_A_F_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3AX25_B_F_Z_R_01,`HS65_LS_NAND3AX25_B_R_Z_F_01);
		(C -=> Z) = (`HS65_LS_NAND3AX25_C_F_Z_R_01,`HS65_LS_NAND3AX25_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_NAND3AX25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3AX3_A_R_Z_R_11 0.1
`define HS65_LS_NAND3AX3_A_F_Z_F_11 0.1
`define HS65_LS_NAND3AX3_B_R_Z_F_01 0.1
`define HS65_LS_NAND3AX3_B_F_Z_R_01 0.1
`define HS65_LS_NAND3AX3_C_R_Z_F_01 0.1
`define HS65_LS_NAND3AX3_C_F_Z_R_01 0.1

module HS65_LS_NAND3AX3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	and    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND3AX3_A_R_Z_R_11,`HS65_LS_NAND3AX3_A_F_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3AX3_B_F_Z_R_01,`HS65_LS_NAND3AX3_B_R_Z_F_01);
		(C -=> Z) = (`HS65_LS_NAND3AX3_C_F_Z_R_01,`HS65_LS_NAND3AX3_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_NAND3AX3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3AX6_A_R_Z_R_11 0.1
`define HS65_LS_NAND3AX6_A_F_Z_F_11 0.1
`define HS65_LS_NAND3AX6_B_R_Z_F_01 0.1
`define HS65_LS_NAND3AX6_B_F_Z_R_01 0.1
`define HS65_LS_NAND3AX6_C_R_Z_F_01 0.1
`define HS65_LS_NAND3AX6_C_F_Z_R_01 0.1

module HS65_LS_NAND3AX6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	and    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND3AX6_A_R_Z_R_11,`HS65_LS_NAND3AX6_A_F_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3AX6_B_F_Z_R_01,`HS65_LS_NAND3AX6_B_R_Z_F_01);
		(C -=> Z) = (`HS65_LS_NAND3AX6_C_F_Z_R_01,`HS65_LS_NAND3AX6_C_R_Z_F_01);


	endspecify

endmodule // HS65_LS_NAND3AX6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X13_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X13_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X13_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X13_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X13_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X13_C_F_Z_R_11 0.1

module HS65_LS_NAND3X13 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X13_A_F_Z_R_11,`HS65_LS_NAND3X13_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X13_B_F_Z_R_11,`HS65_LS_NAND3X13_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X13_C_F_Z_R_11,`HS65_LS_NAND3X13_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X19_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X19_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X19_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X19_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X19_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X19_C_F_Z_R_11 0.1

module HS65_LS_NAND3X19 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X19_A_F_Z_R_11,`HS65_LS_NAND3X19_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X19_B_F_Z_R_11,`HS65_LS_NAND3X19_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X19_C_F_Z_R_11,`HS65_LS_NAND3X19_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X2_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X2_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X2_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X2_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X2_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X2_C_F_Z_R_11 0.1

module HS65_LS_NAND3X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X2_A_F_Z_R_11,`HS65_LS_NAND3X2_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X2_B_F_Z_R_11,`HS65_LS_NAND3X2_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X2_C_F_Z_R_11,`HS65_LS_NAND3X2_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X25_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X25_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X25_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X25_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X25_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X25_C_F_Z_R_11 0.1

module HS65_LS_NAND3X25 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X25_A_F_Z_R_11,`HS65_LS_NAND3X25_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X25_B_F_Z_R_11,`HS65_LS_NAND3X25_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X25_C_F_Z_R_11,`HS65_LS_NAND3X25_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X3_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X3_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X3_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X3_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X3_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X3_C_F_Z_R_11 0.1

module HS65_LS_NAND3X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X3_A_F_Z_R_11,`HS65_LS_NAND3X3_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X3_B_F_Z_R_11,`HS65_LS_NAND3X3_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X3_C_F_Z_R_11,`HS65_LS_NAND3X3_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X38_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X38_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X38_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X38_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X38_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X38_C_F_Z_R_11 0.1

module HS65_LS_NAND3X38 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X38_A_F_Z_R_11,`HS65_LS_NAND3X38_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X38_B_F_Z_R_11,`HS65_LS_NAND3X38_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X38_C_F_Z_R_11,`HS65_LS_NAND3X38_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X38

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X5_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X5_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X5_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X5_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X5_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X5_C_F_Z_R_11 0.1

module HS65_LS_NAND3X5 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X5_A_F_Z_R_11,`HS65_LS_NAND3X5_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X5_B_F_Z_R_11,`HS65_LS_NAND3X5_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X5_C_F_Z_R_11,`HS65_LS_NAND3X5_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X50_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X50_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X50_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X50_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X50_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X50_C_F_Z_R_11 0.1

module HS65_LS_NAND3X50 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X50_A_F_Z_R_11,`HS65_LS_NAND3X50_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X50_B_F_Z_R_11,`HS65_LS_NAND3X50_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X50_C_F_Z_R_11,`HS65_LS_NAND3X50_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X50

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X6_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X6_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X6_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X6_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X6_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X6_C_F_Z_R_11 0.1

module HS65_LS_NAND3X6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X6_A_F_Z_R_11,`HS65_LS_NAND3X6_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X6_B_F_Z_R_11,`HS65_LS_NAND3X6_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X6_C_F_Z_R_11,`HS65_LS_NAND3X6_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND3X9_A_R_Z_F_11 0.1
`define HS65_LS_NAND3X9_A_F_Z_R_11 0.1
`define HS65_LS_NAND3X9_B_R_Z_F_11 0.1
`define HS65_LS_NAND3X9_B_F_Z_R_11 0.1
`define HS65_LS_NAND3X9_C_R_Z_F_11 0.1
`define HS65_LS_NAND3X9_C_F_Z_R_11 0.1

module HS65_LS_NAND3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND3X9_A_F_Z_R_11,`HS65_LS_NAND3X9_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_NAND3X9_B_F_Z_R_11,`HS65_LS_NAND3X9_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_NAND3X9_C_F_Z_R_11,`HS65_LS_NAND3X9_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_NAND3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4ABX13_A_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX13_A_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX13_B_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX13_B_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX13_C_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX13_C_F_Z_R_001 0.1
`define HS65_LS_NAND4ABX13_D_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX13_D_F_Z_R_001 0.1

module HS65_LS_NAND4ABX13 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL2, A) ;
	not    U2 (INTERNAL3, B) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, C, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND4ABX13_A_R_Z_R_011,`HS65_LS_NAND4ABX13_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_NAND4ABX13_B_R_Z_R_011,`HS65_LS_NAND4ABX13_B_F_Z_F_011);
		(C -=> Z) = (`HS65_LS_NAND4ABX13_C_F_Z_R_001,`HS65_LS_NAND4ABX13_C_R_Z_F_001);
		(D -=> Z) = (`HS65_LS_NAND4ABX13_D_F_Z_R_001,`HS65_LS_NAND4ABX13_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_NAND4ABX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4ABX19_A_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX19_A_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX19_B_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX19_B_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX19_C_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX19_C_F_Z_R_001 0.1
`define HS65_LS_NAND4ABX19_D_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX19_D_F_Z_R_001 0.1

module HS65_LS_NAND4ABX19 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL2, A) ;
	not    U2 (INTERNAL3, B) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, C, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND4ABX19_A_R_Z_R_011,`HS65_LS_NAND4ABX19_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_NAND4ABX19_B_R_Z_R_011,`HS65_LS_NAND4ABX19_B_F_Z_F_011);
		(C -=> Z) = (`HS65_LS_NAND4ABX19_C_F_Z_R_001,`HS65_LS_NAND4ABX19_C_R_Z_F_001);
		(D -=> Z) = (`HS65_LS_NAND4ABX19_D_F_Z_R_001,`HS65_LS_NAND4ABX19_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_NAND4ABX19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4ABX25_A_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX25_A_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX25_B_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX25_B_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX25_C_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX25_C_F_Z_R_001 0.1
`define HS65_LS_NAND4ABX25_D_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX25_D_F_Z_R_001 0.1

module HS65_LS_NAND4ABX25 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL2, A) ;
	not    U2 (INTERNAL3, B) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, C, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND4ABX25_A_R_Z_R_011,`HS65_LS_NAND4ABX25_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_NAND4ABX25_B_R_Z_R_011,`HS65_LS_NAND4ABX25_B_F_Z_F_011);
		(C -=> Z) = (`HS65_LS_NAND4ABX25_C_F_Z_R_001,`HS65_LS_NAND4ABX25_C_R_Z_F_001);
		(D -=> Z) = (`HS65_LS_NAND4ABX25_D_F_Z_R_001,`HS65_LS_NAND4ABX25_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_NAND4ABX25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4ABX3_A_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX3_A_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX3_B_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX3_B_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX3_C_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX3_C_F_Z_R_001 0.1
`define HS65_LS_NAND4ABX3_D_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX3_D_F_Z_R_001 0.1

module HS65_LS_NAND4ABX3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL2, A) ;
	not    U2 (INTERNAL3, B) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, C, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND4ABX3_A_R_Z_R_011,`HS65_LS_NAND4ABX3_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_NAND4ABX3_B_R_Z_R_011,`HS65_LS_NAND4ABX3_B_F_Z_F_011);
		(C -=> Z) = (`HS65_LS_NAND4ABX3_C_F_Z_R_001,`HS65_LS_NAND4ABX3_C_R_Z_F_001);
		(D -=> Z) = (`HS65_LS_NAND4ABX3_D_F_Z_R_001,`HS65_LS_NAND4ABX3_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_NAND4ABX3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4ABX6_A_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX6_A_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX6_B_R_Z_R_011 0.1
`define HS65_LS_NAND4ABX6_B_F_Z_F_011 0.1
`define HS65_LS_NAND4ABX6_C_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX6_C_F_Z_R_001 0.1
`define HS65_LS_NAND4ABX6_D_R_Z_F_001 0.1
`define HS65_LS_NAND4ABX6_D_F_Z_R_001 0.1

module HS65_LS_NAND4ABX6 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL2, A) ;
	not    U2 (INTERNAL3, B) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, C, D) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NAND4ABX6_A_R_Z_R_011,`HS65_LS_NAND4ABX6_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_NAND4ABX6_B_R_Z_R_011,`HS65_LS_NAND4ABX6_B_F_Z_F_011);
		(C -=> Z) = (`HS65_LS_NAND4ABX6_C_F_Z_R_001,`HS65_LS_NAND4ABX6_C_R_Z_F_001);
		(D -=> Z) = (`HS65_LS_NAND4ABX6_D_F_Z_R_001,`HS65_LS_NAND4ABX6_D_R_Z_F_001);


	endspecify

endmodule // HS65_LS_NAND4ABX6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4X18_A_R_Z_F_111 0.1
`define HS65_LS_NAND4X18_A_F_Z_R_111 0.1
`define HS65_LS_NAND4X18_B_R_Z_F_111 0.1
`define HS65_LS_NAND4X18_B_F_Z_R_111 0.1
`define HS65_LS_NAND4X18_C_R_Z_F_111 0.1
`define HS65_LS_NAND4X18_C_F_Z_R_111 0.1
`define HS65_LS_NAND4X18_D_R_Z_F_111 0.1
`define HS65_LS_NAND4X18_D_F_Z_R_111 0.1

module HS65_LS_NAND4X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND4X18_A_F_Z_R_111,`HS65_LS_NAND4X18_A_R_Z_F_111);
		(B -=> Z) = (`HS65_LS_NAND4X18_B_F_Z_R_111,`HS65_LS_NAND4X18_B_R_Z_F_111);
		(C -=> Z) = (`HS65_LS_NAND4X18_C_F_Z_R_111,`HS65_LS_NAND4X18_C_R_Z_F_111);
		(D -=> Z) = (`HS65_LS_NAND4X18_D_F_Z_R_111,`HS65_LS_NAND4X18_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_NAND4X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4X27_A_R_Z_F_111 0.1
`define HS65_LS_NAND4X27_A_F_Z_R_111 0.1
`define HS65_LS_NAND4X27_B_R_Z_F_111 0.1
`define HS65_LS_NAND4X27_B_F_Z_R_111 0.1
`define HS65_LS_NAND4X27_C_R_Z_F_111 0.1
`define HS65_LS_NAND4X27_C_F_Z_R_111 0.1
`define HS65_LS_NAND4X27_D_R_Z_F_111 0.1
`define HS65_LS_NAND4X27_D_F_Z_R_111 0.1

module HS65_LS_NAND4X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND4X27_A_F_Z_R_111,`HS65_LS_NAND4X27_A_R_Z_F_111);
		(B -=> Z) = (`HS65_LS_NAND4X27_B_F_Z_R_111,`HS65_LS_NAND4X27_B_R_Z_F_111);
		(C -=> Z) = (`HS65_LS_NAND4X27_C_F_Z_R_111,`HS65_LS_NAND4X27_C_R_Z_F_111);
		(D -=> Z) = (`HS65_LS_NAND4X27_D_F_Z_R_111,`HS65_LS_NAND4X27_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_NAND4X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4X35_A_R_Z_F_111 0.1
`define HS65_LS_NAND4X35_A_F_Z_R_111 0.1
`define HS65_LS_NAND4X35_B_R_Z_F_111 0.1
`define HS65_LS_NAND4X35_B_F_Z_R_111 0.1
`define HS65_LS_NAND4X35_C_R_Z_F_111 0.1
`define HS65_LS_NAND4X35_C_F_Z_R_111 0.1
`define HS65_LS_NAND4X35_D_R_Z_F_111 0.1
`define HS65_LS_NAND4X35_D_F_Z_R_111 0.1

module HS65_LS_NAND4X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND4X35_A_F_Z_R_111,`HS65_LS_NAND4X35_A_R_Z_F_111);
		(B -=> Z) = (`HS65_LS_NAND4X35_B_F_Z_R_111,`HS65_LS_NAND4X35_B_R_Z_F_111);
		(C -=> Z) = (`HS65_LS_NAND4X35_C_F_Z_R_111,`HS65_LS_NAND4X35_C_R_Z_F_111);
		(D -=> Z) = (`HS65_LS_NAND4X35_D_F_Z_R_111,`HS65_LS_NAND4X35_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_NAND4X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4X4_A_R_Z_F_111 0.1
`define HS65_LS_NAND4X4_A_F_Z_R_111 0.1
`define HS65_LS_NAND4X4_B_R_Z_F_111 0.1
`define HS65_LS_NAND4X4_B_F_Z_R_111 0.1
`define HS65_LS_NAND4X4_C_R_Z_F_111 0.1
`define HS65_LS_NAND4X4_C_F_Z_R_111 0.1
`define HS65_LS_NAND4X4_D_R_Z_F_111 0.1
`define HS65_LS_NAND4X4_D_F_Z_R_111 0.1

module HS65_LS_NAND4X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND4X4_A_F_Z_R_111,`HS65_LS_NAND4X4_A_R_Z_F_111);
		(B -=> Z) = (`HS65_LS_NAND4X4_B_F_Z_R_111,`HS65_LS_NAND4X4_B_R_Z_F_111);
		(C -=> Z) = (`HS65_LS_NAND4X4_C_F_Z_R_111,`HS65_LS_NAND4X4_C_R_Z_F_111);
		(D -=> Z) = (`HS65_LS_NAND4X4_D_F_Z_R_111,`HS65_LS_NAND4X4_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_NAND4X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NAND4X9_A_R_Z_F_111 0.1
`define HS65_LS_NAND4X9_A_F_Z_R_111 0.1
`define HS65_LS_NAND4X9_B_R_Z_F_111 0.1
`define HS65_LS_NAND4X9_B_F_Z_R_111 0.1
`define HS65_LS_NAND4X9_C_R_Z_F_111 0.1
`define HS65_LS_NAND4X9_C_F_Z_R_111 0.1
`define HS65_LS_NAND4X9_D_R_Z_F_111 0.1
`define HS65_LS_NAND4X9_D_F_Z_R_111 0.1

module HS65_LS_NAND4X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	and    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NAND4X9_A_F_Z_R_111,`HS65_LS_NAND4X9_A_R_Z_F_111);
		(B -=> Z) = (`HS65_LS_NAND4X9_B_F_Z_R_111,`HS65_LS_NAND4X9_B_R_Z_F_111);
		(C -=> Z) = (`HS65_LS_NAND4X9_C_F_Z_R_111,`HS65_LS_NAND4X9_C_R_Z_F_111);
		(D -=> Z) = (`HS65_LS_NAND4X9_D_F_Z_R_111,`HS65_LS_NAND4X9_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_NAND4X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2AX13_A_R_Z_R_0 0.1
`define HS65_LS_NOR2AX13_A_F_Z_F_0 0.1
`define HS65_LS_NOR2AX13_B_R_Z_F_1 0.1
`define HS65_LS_NOR2AX13_B_F_Z_R_1 0.1

module HS65_LS_NOR2AX13 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	and   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR2AX13_A_R_Z_R_0,`HS65_LS_NOR2AX13_A_F_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2AX13_B_F_Z_R_1,`HS65_LS_NOR2AX13_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NOR2AX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2AX19_A_R_Z_R_0 0.1
`define HS65_LS_NOR2AX19_A_F_Z_F_0 0.1
`define HS65_LS_NOR2AX19_B_R_Z_F_1 0.1
`define HS65_LS_NOR2AX19_B_F_Z_R_1 0.1

module HS65_LS_NOR2AX19 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	and   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR2AX19_A_R_Z_R_0,`HS65_LS_NOR2AX19_A_F_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2AX19_B_F_Z_R_1,`HS65_LS_NOR2AX19_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NOR2AX19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2AX25_A_R_Z_R_0 0.1
`define HS65_LS_NOR2AX25_A_F_Z_F_0 0.1
`define HS65_LS_NOR2AX25_B_R_Z_F_1 0.1
`define HS65_LS_NOR2AX25_B_F_Z_R_1 0.1

module HS65_LS_NOR2AX25 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	and   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR2AX25_A_R_Z_R_0,`HS65_LS_NOR2AX25_A_F_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2AX25_B_F_Z_R_1,`HS65_LS_NOR2AX25_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NOR2AX25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2AX3_A_R_Z_R_0 0.1
`define HS65_LS_NOR2AX3_A_F_Z_F_0 0.1
`define HS65_LS_NOR2AX3_B_R_Z_F_1 0.1
`define HS65_LS_NOR2AX3_B_F_Z_R_1 0.1

module HS65_LS_NOR2AX3 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	and   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR2AX3_A_R_Z_R_0,`HS65_LS_NOR2AX3_A_F_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2AX3_B_F_Z_R_1,`HS65_LS_NOR2AX3_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NOR2AX3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2AX6_A_R_Z_R_0 0.1
`define HS65_LS_NOR2AX6_A_F_Z_F_0 0.1
`define HS65_LS_NOR2AX6_B_R_Z_F_1 0.1
`define HS65_LS_NOR2AX6_B_F_Z_R_1 0.1

module HS65_LS_NOR2AX6 (Z, A, B);

	output Z;
	input A;
	input B;

	not    U1 (INTERNAL1, B) ;
	and   #1 U2 (Z, A, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR2AX6_A_R_Z_R_0,`HS65_LS_NOR2AX6_A_F_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2AX6_B_F_Z_R_1,`HS65_LS_NOR2AX6_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_NOR2AX6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X13_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X13_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X13_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X13_B_F_Z_R_0 0.1

module HS65_LS_NOR2X13 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X13_A_F_Z_R_0,`HS65_LS_NOR2X13_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X13_B_F_Z_R_0,`HS65_LS_NOR2X13_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X19_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X19_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X19_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X19_B_F_Z_R_0 0.1

module HS65_LS_NOR2X19 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X19_A_F_Z_R_0,`HS65_LS_NOR2X19_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X19_B_F_Z_R_0,`HS65_LS_NOR2X19_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X2_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X2_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X2_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X2_B_F_Z_R_0 0.1

module HS65_LS_NOR2X2 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X2_A_F_Z_R_0,`HS65_LS_NOR2X2_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X2_B_F_Z_R_0,`HS65_LS_NOR2X2_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X25_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X25_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X25_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X25_B_F_Z_R_0 0.1

module HS65_LS_NOR2X25 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X25_A_F_Z_R_0,`HS65_LS_NOR2X25_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X25_B_F_Z_R_0,`HS65_LS_NOR2X25_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X25

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X3_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X3_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X3_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X3_B_F_Z_R_0 0.1

module HS65_LS_NOR2X3 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X3_A_F_Z_R_0,`HS65_LS_NOR2X3_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X3_B_F_Z_R_0,`HS65_LS_NOR2X3_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X38_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X38_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X38_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X38_B_F_Z_R_0 0.1

module HS65_LS_NOR2X38 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X38_A_F_Z_R_0,`HS65_LS_NOR2X38_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X38_B_F_Z_R_0,`HS65_LS_NOR2X38_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X38

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X5_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X5_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X5_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X5_B_F_Z_R_0 0.1

module HS65_LS_NOR2X5 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X5_A_F_Z_R_0,`HS65_LS_NOR2X5_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X5_B_F_Z_R_0,`HS65_LS_NOR2X5_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X50_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X50_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X50_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X50_B_F_Z_R_0 0.1

module HS65_LS_NOR2X50 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X50_A_F_Z_R_0,`HS65_LS_NOR2X50_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X50_B_F_Z_R_0,`HS65_LS_NOR2X50_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X50

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X6_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X6_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X6_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X6_B_F_Z_R_0 0.1

module HS65_LS_NOR2X6 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X6_A_F_Z_R_0,`HS65_LS_NOR2X6_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X6_B_F_Z_R_0,`HS65_LS_NOR2X6_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR2X9_A_R_Z_F_0 0.1
`define HS65_LS_NOR2X9_A_F_Z_R_0 0.1
`define HS65_LS_NOR2X9_B_R_Z_F_0 0.1
`define HS65_LS_NOR2X9_B_F_Z_R_0 0.1

module HS65_LS_NOR2X9 (Z, A, B);

	output Z;
	input A;
	input B;

	or    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR2X9_A_F_Z_R_0,`HS65_LS_NOR2X9_A_R_Z_F_0);
		(B -=> Z) = (`HS65_LS_NOR2X9_B_F_Z_R_0,`HS65_LS_NOR2X9_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_NOR2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3AX13_A_R_Z_R_00 0.1
`define HS65_LS_NOR3AX13_A_F_Z_F_00 0.1
`define HS65_LS_NOR3AX13_B_R_Z_F_10 0.1
`define HS65_LS_NOR3AX13_B_F_Z_R_10 0.1
`define HS65_LS_NOR3AX13_C_R_Z_F_10 0.1
`define HS65_LS_NOR3AX13_C_F_Z_R_10 0.1

module HS65_LS_NOR3AX13 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	or    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR3AX13_A_R_Z_R_00,`HS65_LS_NOR3AX13_A_F_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3AX13_B_F_Z_R_10,`HS65_LS_NOR3AX13_B_R_Z_F_10);
		(C -=> Z) = (`HS65_LS_NOR3AX13_C_F_Z_R_10,`HS65_LS_NOR3AX13_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_NOR3AX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3AX18_A_R_Z_R_00 0.1
`define HS65_LS_NOR3AX18_A_F_Z_F_00 0.1
`define HS65_LS_NOR3AX18_B_R_Z_F_10 0.1
`define HS65_LS_NOR3AX18_B_F_Z_R_10 0.1
`define HS65_LS_NOR3AX18_C_R_Z_F_10 0.1
`define HS65_LS_NOR3AX18_C_F_Z_R_10 0.1

module HS65_LS_NOR3AX18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	or    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR3AX18_A_R_Z_R_00,`HS65_LS_NOR3AX18_A_F_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3AX18_B_F_Z_R_10,`HS65_LS_NOR3AX18_B_R_Z_F_10);
		(C -=> Z) = (`HS65_LS_NOR3AX18_C_F_Z_R_10,`HS65_LS_NOR3AX18_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_NOR3AX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3AX2_A_R_Z_R_00 0.1
`define HS65_LS_NOR3AX2_A_F_Z_F_00 0.1
`define HS65_LS_NOR3AX2_B_R_Z_F_10 0.1
`define HS65_LS_NOR3AX2_B_F_Z_R_10 0.1
`define HS65_LS_NOR3AX2_C_R_Z_F_10 0.1
`define HS65_LS_NOR3AX2_C_F_Z_R_10 0.1

module HS65_LS_NOR3AX2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	or    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR3AX2_A_R_Z_R_00,`HS65_LS_NOR3AX2_A_F_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3AX2_B_F_Z_R_10,`HS65_LS_NOR3AX2_B_R_Z_F_10);
		(C -=> Z) = (`HS65_LS_NOR3AX2_C_F_Z_R_10,`HS65_LS_NOR3AX2_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_NOR3AX2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3AX4_A_R_Z_R_00 0.1
`define HS65_LS_NOR3AX4_A_F_Z_F_00 0.1
`define HS65_LS_NOR3AX4_B_R_Z_F_10 0.1
`define HS65_LS_NOR3AX4_B_F_Z_R_10 0.1
`define HS65_LS_NOR3AX4_C_R_Z_F_10 0.1
`define HS65_LS_NOR3AX4_C_F_Z_R_10 0.1

module HS65_LS_NOR3AX4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	or    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR3AX4_A_R_Z_R_00,`HS65_LS_NOR3AX4_A_F_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3AX4_B_F_Z_R_10,`HS65_LS_NOR3AX4_B_R_Z_F_10);
		(C -=> Z) = (`HS65_LS_NOR3AX4_C_F_Z_R_10,`HS65_LS_NOR3AX4_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_NOR3AX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3AX9_A_R_Z_R_00 0.1
`define HS65_LS_NOR3AX9_A_F_Z_F_00 0.1
`define HS65_LS_NOR3AX9_B_R_Z_F_10 0.1
`define HS65_LS_NOR3AX9_B_F_Z_R_10 0.1
`define HS65_LS_NOR3AX9_C_R_Z_F_10 0.1
`define HS65_LS_NOR3AX9_C_F_Z_R_10 0.1

module HS65_LS_NOR3AX9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	not    U1 (INTERNAL2, A) ;
	or    U2 (INTERNAL1, INTERNAL2, B, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR3AX9_A_R_Z_R_00,`HS65_LS_NOR3AX9_A_F_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3AX9_B_F_Z_R_10,`HS65_LS_NOR3AX9_B_R_Z_F_10);
		(C -=> Z) = (`HS65_LS_NOR3AX9_C_F_Z_R_10,`HS65_LS_NOR3AX9_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_NOR3AX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X1_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X1_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X1_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X1_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X1_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X1_C_F_Z_R_00 0.1

module HS65_LS_NOR3X1 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X1_A_F_Z_R_00,`HS65_LS_NOR3X1_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X1_B_F_Z_R_00,`HS65_LS_NOR3X1_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X1_C_F_Z_R_00,`HS65_LS_NOR3X1_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X13_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X13_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X13_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X13_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X13_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X13_C_F_Z_R_00 0.1

module HS65_LS_NOR3X13 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X13_A_F_Z_R_00,`HS65_LS_NOR3X13_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X13_B_F_Z_R_00,`HS65_LS_NOR3X13_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X13_C_F_Z_R_00,`HS65_LS_NOR3X13_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X18_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X18_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X18_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X18_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X18_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X18_C_F_Z_R_00 0.1

module HS65_LS_NOR3X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X18_A_F_Z_R_00,`HS65_LS_NOR3X18_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X18_B_F_Z_R_00,`HS65_LS_NOR3X18_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X18_C_F_Z_R_00,`HS65_LS_NOR3X18_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X2_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X2_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X2_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X2_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X2_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X2_C_F_Z_R_00 0.1

module HS65_LS_NOR3X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X2_A_F_Z_R_00,`HS65_LS_NOR3X2_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X2_B_F_Z_R_00,`HS65_LS_NOR3X2_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X2_C_F_Z_R_00,`HS65_LS_NOR3X2_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X26_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X26_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X26_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X26_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X26_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X26_C_F_Z_R_00 0.1

module HS65_LS_NOR3X26 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X26_A_F_Z_R_00,`HS65_LS_NOR3X26_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X26_B_F_Z_R_00,`HS65_LS_NOR3X26_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X26_C_F_Z_R_00,`HS65_LS_NOR3X26_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X26

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X3_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X3_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X3_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X3_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X3_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X3_C_F_Z_R_00 0.1

module HS65_LS_NOR3X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X3_A_F_Z_R_00,`HS65_LS_NOR3X3_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X3_B_F_Z_R_00,`HS65_LS_NOR3X3_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X3_C_F_Z_R_00,`HS65_LS_NOR3X3_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X35_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X35_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X35_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X35_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X35_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X35_C_F_Z_R_00 0.1

module HS65_LS_NOR3X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X35_A_F_Z_R_00,`HS65_LS_NOR3X35_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X35_B_F_Z_R_00,`HS65_LS_NOR3X35_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X35_C_F_Z_R_00,`HS65_LS_NOR3X35_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X4_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X4_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X4_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X4_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X4_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X4_C_F_Z_R_00 0.1

module HS65_LS_NOR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X4_A_F_Z_R_00,`HS65_LS_NOR3X4_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X4_B_F_Z_R_00,`HS65_LS_NOR3X4_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X4_C_F_Z_R_00,`HS65_LS_NOR3X4_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X7_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X7_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X7_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X7_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X7_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X7_C_F_Z_R_00 0.1

module HS65_LS_NOR3X7 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X7_A_F_Z_R_00,`HS65_LS_NOR3X7_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X7_B_F_Z_R_00,`HS65_LS_NOR3X7_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X7_C_F_Z_R_00,`HS65_LS_NOR3X7_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR3X9_A_R_Z_F_00 0.1
`define HS65_LS_NOR3X9_A_F_Z_R_00 0.1
`define HS65_LS_NOR3X9_B_R_Z_F_00 0.1
`define HS65_LS_NOR3X9_B_F_Z_R_00 0.1
`define HS65_LS_NOR3X9_C_R_Z_F_00 0.1
`define HS65_LS_NOR3X9_C_F_Z_R_00 0.1

module HS65_LS_NOR3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR3X9_A_F_Z_R_00,`HS65_LS_NOR3X9_A_R_Z_F_00);
		(B -=> Z) = (`HS65_LS_NOR3X9_B_F_Z_R_00,`HS65_LS_NOR3X9_B_R_Z_F_00);
		(C -=> Z) = (`HS65_LS_NOR3X9_C_F_Z_R_00,`HS65_LS_NOR3X9_C_R_Z_F_00);


	endspecify

endmodule // HS65_LS_NOR3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4ABX13_A_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX13_A_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX13_B_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX13_B_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX13_C_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX13_C_F_Z_R_110 0.1
`define HS65_LS_NOR4ABX13_D_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX13_D_F_Z_R_110 0.1

module HS65_LS_NOR4ABX13 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL1, C) ;
	not    U2 (INTERNAL2, D) ;
	and   #1 U3 (Z, A, B, INTERNAL1, INTERNAL2) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR4ABX13_A_R_Z_R_100,`HS65_LS_NOR4ABX13_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_NOR4ABX13_B_R_Z_R_100,`HS65_LS_NOR4ABX13_B_F_Z_F_100);
		(C -=> Z) = (`HS65_LS_NOR4ABX13_C_F_Z_R_110,`HS65_LS_NOR4ABX13_C_R_Z_F_110);
		(D -=> Z) = (`HS65_LS_NOR4ABX13_D_F_Z_R_110,`HS65_LS_NOR4ABX13_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_NOR4ABX13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4ABX18_A_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX18_A_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX18_B_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX18_B_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX18_C_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX18_C_F_Z_R_110 0.1
`define HS65_LS_NOR4ABX18_D_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX18_D_F_Z_R_110 0.1

module HS65_LS_NOR4ABX18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL1, C) ;
	not    U2 (INTERNAL2, D) ;
	and   #1 U3 (Z, A, B, INTERNAL1, INTERNAL2) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR4ABX18_A_R_Z_R_100,`HS65_LS_NOR4ABX18_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_NOR4ABX18_B_R_Z_R_100,`HS65_LS_NOR4ABX18_B_F_Z_F_100);
		(C -=> Z) = (`HS65_LS_NOR4ABX18_C_F_Z_R_110,`HS65_LS_NOR4ABX18_C_R_Z_F_110);
		(D -=> Z) = (`HS65_LS_NOR4ABX18_D_F_Z_R_110,`HS65_LS_NOR4ABX18_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_NOR4ABX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4ABX2_A_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX2_A_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX2_B_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX2_B_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX2_C_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX2_C_F_Z_R_110 0.1
`define HS65_LS_NOR4ABX2_D_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX2_D_F_Z_R_110 0.1

module HS65_LS_NOR4ABX2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL1, C) ;
	not    U2 (INTERNAL2, D) ;
	and   #1 U3 (Z, A, B, INTERNAL1, INTERNAL2) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR4ABX2_A_R_Z_R_100,`HS65_LS_NOR4ABX2_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_NOR4ABX2_B_R_Z_R_100,`HS65_LS_NOR4ABX2_B_F_Z_F_100);
		(C -=> Z) = (`HS65_LS_NOR4ABX2_C_F_Z_R_110,`HS65_LS_NOR4ABX2_C_R_Z_F_110);
		(D -=> Z) = (`HS65_LS_NOR4ABX2_D_F_Z_R_110,`HS65_LS_NOR4ABX2_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_NOR4ABX2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4ABX4_A_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX4_A_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX4_B_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX4_B_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX4_C_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX4_C_F_Z_R_110 0.1
`define HS65_LS_NOR4ABX4_D_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX4_D_F_Z_R_110 0.1

module HS65_LS_NOR4ABX4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL1, C) ;
	not    U2 (INTERNAL2, D) ;
	and   #1 U3 (Z, A, B, INTERNAL1, INTERNAL2) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR4ABX4_A_R_Z_R_100,`HS65_LS_NOR4ABX4_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_NOR4ABX4_B_R_Z_R_100,`HS65_LS_NOR4ABX4_B_F_Z_F_100);
		(C -=> Z) = (`HS65_LS_NOR4ABX4_C_F_Z_R_110,`HS65_LS_NOR4ABX4_C_R_Z_F_110);
		(D -=> Z) = (`HS65_LS_NOR4ABX4_D_F_Z_R_110,`HS65_LS_NOR4ABX4_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_NOR4ABX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4ABX9_A_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX9_A_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX9_B_R_Z_R_100 0.1
`define HS65_LS_NOR4ABX9_B_F_Z_F_100 0.1
`define HS65_LS_NOR4ABX9_C_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX9_C_F_Z_R_110 0.1
`define HS65_LS_NOR4ABX9_D_R_Z_F_110 0.1
`define HS65_LS_NOR4ABX9_D_F_Z_R_110 0.1

module HS65_LS_NOR4ABX9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	not    U1 (INTERNAL1, C) ;
	not    U2 (INTERNAL2, D) ;
	and   #1 U3 (Z, A, B, INTERNAL1, INTERNAL2) ;



	specify

		(A +=> Z) = (`HS65_LS_NOR4ABX9_A_R_Z_R_100,`HS65_LS_NOR4ABX9_A_F_Z_F_100);
		(B +=> Z) = (`HS65_LS_NOR4ABX9_B_R_Z_R_100,`HS65_LS_NOR4ABX9_B_F_Z_F_100);
		(C -=> Z) = (`HS65_LS_NOR4ABX9_C_F_Z_R_110,`HS65_LS_NOR4ABX9_C_R_Z_F_110);
		(D -=> Z) = (`HS65_LS_NOR4ABX9_D_F_Z_R_110,`HS65_LS_NOR4ABX9_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_NOR4ABX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4X18_A_R_Z_F_000 0.1
`define HS65_LS_NOR4X18_A_F_Z_R_000 0.1
`define HS65_LS_NOR4X18_B_R_Z_F_000 0.1
`define HS65_LS_NOR4X18_B_F_Z_R_000 0.1
`define HS65_LS_NOR4X18_C_R_Z_F_000 0.1
`define HS65_LS_NOR4X18_C_F_Z_R_000 0.1
`define HS65_LS_NOR4X18_D_R_Z_F_000 0.1
`define HS65_LS_NOR4X18_D_F_Z_R_000 0.1

module HS65_LS_NOR4X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR4X18_A_F_Z_R_000,`HS65_LS_NOR4X18_A_R_Z_F_000);
		(B -=> Z) = (`HS65_LS_NOR4X18_B_F_Z_R_000,`HS65_LS_NOR4X18_B_R_Z_F_000);
		(C -=> Z) = (`HS65_LS_NOR4X18_C_F_Z_R_000,`HS65_LS_NOR4X18_C_R_Z_F_000);
		(D -=> Z) = (`HS65_LS_NOR4X18_D_F_Z_R_000,`HS65_LS_NOR4X18_D_R_Z_F_000);


	endspecify

endmodule // HS65_LS_NOR4X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4X27_A_R_Z_F_000 0.1
`define HS65_LS_NOR4X27_A_F_Z_R_000 0.1
`define HS65_LS_NOR4X27_B_R_Z_F_000 0.1
`define HS65_LS_NOR4X27_B_F_Z_R_000 0.1
`define HS65_LS_NOR4X27_C_R_Z_F_000 0.1
`define HS65_LS_NOR4X27_C_F_Z_R_000 0.1
`define HS65_LS_NOR4X27_D_R_Z_F_000 0.1
`define HS65_LS_NOR4X27_D_F_Z_R_000 0.1

module HS65_LS_NOR4X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR4X27_A_F_Z_R_000,`HS65_LS_NOR4X27_A_R_Z_F_000);
		(B -=> Z) = (`HS65_LS_NOR4X27_B_F_Z_R_000,`HS65_LS_NOR4X27_B_R_Z_F_000);
		(C -=> Z) = (`HS65_LS_NOR4X27_C_F_Z_R_000,`HS65_LS_NOR4X27_C_R_Z_F_000);
		(D -=> Z) = (`HS65_LS_NOR4X27_D_F_Z_R_000,`HS65_LS_NOR4X27_D_R_Z_F_000);


	endspecify

endmodule // HS65_LS_NOR4X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4X35_A_R_Z_F_000 0.1
`define HS65_LS_NOR4X35_A_F_Z_R_000 0.1
`define HS65_LS_NOR4X35_B_R_Z_F_000 0.1
`define HS65_LS_NOR4X35_B_F_Z_R_000 0.1
`define HS65_LS_NOR4X35_C_R_Z_F_000 0.1
`define HS65_LS_NOR4X35_C_F_Z_R_000 0.1
`define HS65_LS_NOR4X35_D_R_Z_F_000 0.1
`define HS65_LS_NOR4X35_D_F_Z_R_000 0.1

module HS65_LS_NOR4X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR4X35_A_F_Z_R_000,`HS65_LS_NOR4X35_A_R_Z_F_000);
		(B -=> Z) = (`HS65_LS_NOR4X35_B_F_Z_R_000,`HS65_LS_NOR4X35_B_R_Z_F_000);
		(C -=> Z) = (`HS65_LS_NOR4X35_C_F_Z_R_000,`HS65_LS_NOR4X35_C_R_Z_F_000);
		(D -=> Z) = (`HS65_LS_NOR4X35_D_F_Z_R_000,`HS65_LS_NOR4X35_D_R_Z_F_000);


	endspecify

endmodule // HS65_LS_NOR4X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4X4_A_R_Z_F_000 0.1
`define HS65_LS_NOR4X4_A_F_Z_R_000 0.1
`define HS65_LS_NOR4X4_B_R_Z_F_000 0.1
`define HS65_LS_NOR4X4_B_F_Z_R_000 0.1
`define HS65_LS_NOR4X4_C_R_Z_F_000 0.1
`define HS65_LS_NOR4X4_C_F_Z_R_000 0.1
`define HS65_LS_NOR4X4_D_R_Z_F_000 0.1
`define HS65_LS_NOR4X4_D_F_Z_R_000 0.1

module HS65_LS_NOR4X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR4X4_A_F_Z_R_000,`HS65_LS_NOR4X4_A_R_Z_F_000);
		(B -=> Z) = (`HS65_LS_NOR4X4_B_F_Z_R_000,`HS65_LS_NOR4X4_B_R_Z_F_000);
		(C -=> Z) = (`HS65_LS_NOR4X4_C_F_Z_R_000,`HS65_LS_NOR4X4_C_R_Z_F_000);
		(D -=> Z) = (`HS65_LS_NOR4X4_D_F_Z_R_000,`HS65_LS_NOR4X4_D_R_Z_F_000);


	endspecify

endmodule // HS65_LS_NOR4X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_NOR4X9_A_R_Z_F_000 0.1
`define HS65_LS_NOR4X9_A_F_Z_R_000 0.1
`define HS65_LS_NOR4X9_B_R_Z_F_000 0.1
`define HS65_LS_NOR4X9_B_F_Z_R_000 0.1
`define HS65_LS_NOR4X9_C_R_Z_F_000 0.1
`define HS65_LS_NOR4X9_C_F_Z_R_000 0.1
`define HS65_LS_NOR4X9_D_R_Z_F_000 0.1
`define HS65_LS_NOR4X9_D_F_Z_R_000 0.1

module HS65_LS_NOR4X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C, D) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_NOR4X9_A_F_Z_R_000,`HS65_LS_NOR4X9_A_R_Z_F_000);
		(B -=> Z) = (`HS65_LS_NOR4X9_B_F_Z_R_000,`HS65_LS_NOR4X9_B_R_Z_F_000);
		(C -=> Z) = (`HS65_LS_NOR4X9_C_F_Z_R_000,`HS65_LS_NOR4X9_C_R_Z_F_000);
		(D -=> Z) = (`HS65_LS_NOR4X9_D_F_Z_R_000,`HS65_LS_NOR4X9_D_R_Z_F_000);


	endspecify

endmodule // HS65_LS_NOR4X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA112X18_A_R_Z_R_011 0.1
`define HS65_LS_OA112X18_A_F_Z_F_011 0.1
`define HS65_LS_OA112X18_B_R_Z_R_011 0.1
`define HS65_LS_OA112X18_B_F_Z_F_011 0.1
`define HS65_LS_OA112X18_C_R_Z_R_101 0.1
`define HS65_LS_OA112X18_C_F_Z_F_101 0.1
`define HS65_LS_OA112X18_C_R_Z_R_011 0.1
`define HS65_LS_OA112X18_C_F_Z_F_011 0.1
`define HS65_LS_OA112X18_C_R_Z_R_111 0.1
`define HS65_LS_OA112X18_C_F_Z_F_111 0.1
`define HS65_LS_OA112X18_D_R_Z_R_101 0.1
`define HS65_LS_OA112X18_D_F_Z_F_101 0.1
`define HS65_LS_OA112X18_D_R_Z_R_011 0.1
`define HS65_LS_OA112X18_D_F_Z_F_011 0.1
`define HS65_LS_OA112X18_D_R_Z_R_111 0.1
`define HS65_LS_OA112X18_D_F_Z_F_111 0.1

module HS65_LS_OA112X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA112X18_A_R_Z_R_011,`HS65_LS_OA112X18_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_OA112X18_B_R_Z_R_011,`HS65_LS_OA112X18_B_F_Z_F_011);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_OA112X18_C_R_Z_R_101,`HS65_LS_OA112X18_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_OA112X18_C_R_Z_R_011,`HS65_LS_OA112X18_C_F_Z_F_011);
		if (A && B && D) (C +=> Z) = (`HS65_LS_OA112X18_C_R_Z_R_111,`HS65_LS_OA112X18_C_F_Z_F_111);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA112X18_D_R_Z_R_101,`HS65_LS_OA112X18_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA112X18_D_R_Z_R_011,`HS65_LS_OA112X18_D_F_Z_F_011);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA112X18_D_R_Z_R_111,`HS65_LS_OA112X18_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_OA112X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA112X27_A_R_Z_R_011 0.1
`define HS65_LS_OA112X27_A_F_Z_F_011 0.1
`define HS65_LS_OA112X27_B_R_Z_R_011 0.1
`define HS65_LS_OA112X27_B_F_Z_F_011 0.1
`define HS65_LS_OA112X27_C_R_Z_R_101 0.1
`define HS65_LS_OA112X27_C_F_Z_F_101 0.1
`define HS65_LS_OA112X27_C_R_Z_R_011 0.1
`define HS65_LS_OA112X27_C_F_Z_F_011 0.1
`define HS65_LS_OA112X27_C_R_Z_R_111 0.1
`define HS65_LS_OA112X27_C_F_Z_F_111 0.1
`define HS65_LS_OA112X27_D_R_Z_R_101 0.1
`define HS65_LS_OA112X27_D_F_Z_F_101 0.1
`define HS65_LS_OA112X27_D_R_Z_R_011 0.1
`define HS65_LS_OA112X27_D_F_Z_F_011 0.1
`define HS65_LS_OA112X27_D_R_Z_R_111 0.1
`define HS65_LS_OA112X27_D_F_Z_F_111 0.1

module HS65_LS_OA112X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA112X27_A_R_Z_R_011,`HS65_LS_OA112X27_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_OA112X27_B_R_Z_R_011,`HS65_LS_OA112X27_B_F_Z_F_011);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_OA112X27_C_R_Z_R_101,`HS65_LS_OA112X27_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_OA112X27_C_R_Z_R_011,`HS65_LS_OA112X27_C_F_Z_F_011);
		if (A && B && D) (C +=> Z) = (`HS65_LS_OA112X27_C_R_Z_R_111,`HS65_LS_OA112X27_C_F_Z_F_111);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA112X27_D_R_Z_R_101,`HS65_LS_OA112X27_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA112X27_D_R_Z_R_011,`HS65_LS_OA112X27_D_F_Z_F_011);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA112X27_D_R_Z_R_111,`HS65_LS_OA112X27_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_OA112X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA112X35_A_R_Z_R_011 0.1
`define HS65_LS_OA112X35_A_F_Z_F_011 0.1
`define HS65_LS_OA112X35_B_R_Z_R_011 0.1
`define HS65_LS_OA112X35_B_F_Z_F_011 0.1
`define HS65_LS_OA112X35_C_R_Z_R_101 0.1
`define HS65_LS_OA112X35_C_F_Z_F_101 0.1
`define HS65_LS_OA112X35_C_R_Z_R_011 0.1
`define HS65_LS_OA112X35_C_F_Z_F_011 0.1
`define HS65_LS_OA112X35_C_R_Z_R_111 0.1
`define HS65_LS_OA112X35_C_F_Z_F_111 0.1
`define HS65_LS_OA112X35_D_R_Z_R_101 0.1
`define HS65_LS_OA112X35_D_F_Z_F_101 0.1
`define HS65_LS_OA112X35_D_R_Z_R_011 0.1
`define HS65_LS_OA112X35_D_F_Z_F_011 0.1
`define HS65_LS_OA112X35_D_R_Z_R_111 0.1
`define HS65_LS_OA112X35_D_F_Z_F_111 0.1

module HS65_LS_OA112X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA112X35_A_R_Z_R_011,`HS65_LS_OA112X35_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_OA112X35_B_R_Z_R_011,`HS65_LS_OA112X35_B_F_Z_F_011);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_OA112X35_C_R_Z_R_101,`HS65_LS_OA112X35_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_OA112X35_C_R_Z_R_011,`HS65_LS_OA112X35_C_F_Z_F_011);
		if (A && B && D) (C +=> Z) = (`HS65_LS_OA112X35_C_R_Z_R_111,`HS65_LS_OA112X35_C_F_Z_F_111);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA112X35_D_R_Z_R_101,`HS65_LS_OA112X35_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA112X35_D_R_Z_R_011,`HS65_LS_OA112X35_D_F_Z_F_011);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA112X35_D_R_Z_R_111,`HS65_LS_OA112X35_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_OA112X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA112X4_A_R_Z_R_011 0.1
`define HS65_LS_OA112X4_A_F_Z_F_011 0.1
`define HS65_LS_OA112X4_B_R_Z_R_011 0.1
`define HS65_LS_OA112X4_B_F_Z_F_011 0.1
`define HS65_LS_OA112X4_C_R_Z_R_101 0.1
`define HS65_LS_OA112X4_C_F_Z_F_101 0.1
`define HS65_LS_OA112X4_C_R_Z_R_011 0.1
`define HS65_LS_OA112X4_C_F_Z_F_011 0.1
`define HS65_LS_OA112X4_C_R_Z_R_111 0.1
`define HS65_LS_OA112X4_C_F_Z_F_111 0.1
`define HS65_LS_OA112X4_D_R_Z_R_101 0.1
`define HS65_LS_OA112X4_D_F_Z_F_101 0.1
`define HS65_LS_OA112X4_D_R_Z_R_011 0.1
`define HS65_LS_OA112X4_D_F_Z_F_011 0.1
`define HS65_LS_OA112X4_D_R_Z_R_111 0.1
`define HS65_LS_OA112X4_D_F_Z_F_111 0.1

module HS65_LS_OA112X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA112X4_A_R_Z_R_011,`HS65_LS_OA112X4_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_OA112X4_B_R_Z_R_011,`HS65_LS_OA112X4_B_F_Z_F_011);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_OA112X4_C_R_Z_R_101,`HS65_LS_OA112X4_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_OA112X4_C_R_Z_R_011,`HS65_LS_OA112X4_C_F_Z_F_011);
		if (A && B && D) (C +=> Z) = (`HS65_LS_OA112X4_C_R_Z_R_111,`HS65_LS_OA112X4_C_F_Z_F_111);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA112X4_D_R_Z_R_101,`HS65_LS_OA112X4_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA112X4_D_R_Z_R_011,`HS65_LS_OA112X4_D_F_Z_F_011);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA112X4_D_R_Z_R_111,`HS65_LS_OA112X4_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_OA112X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA112X9_A_R_Z_R_011 0.1
`define HS65_LS_OA112X9_A_F_Z_F_011 0.1
`define HS65_LS_OA112X9_B_R_Z_R_011 0.1
`define HS65_LS_OA112X9_B_F_Z_F_011 0.1
`define HS65_LS_OA112X9_C_R_Z_R_101 0.1
`define HS65_LS_OA112X9_C_F_Z_F_101 0.1
`define HS65_LS_OA112X9_C_R_Z_R_011 0.1
`define HS65_LS_OA112X9_C_F_Z_F_011 0.1
`define HS65_LS_OA112X9_C_R_Z_R_111 0.1
`define HS65_LS_OA112X9_C_F_Z_F_111 0.1
`define HS65_LS_OA112X9_D_R_Z_R_101 0.1
`define HS65_LS_OA112X9_D_F_Z_F_101 0.1
`define HS65_LS_OA112X9_D_R_Z_R_011 0.1
`define HS65_LS_OA112X9_D_F_Z_F_011 0.1
`define HS65_LS_OA112X9_D_R_Z_R_111 0.1
`define HS65_LS_OA112X9_D_F_Z_F_111 0.1

module HS65_LS_OA112X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA112X9_A_R_Z_R_011,`HS65_LS_OA112X9_A_F_Z_F_011);
		(B +=> Z) = (`HS65_LS_OA112X9_B_R_Z_R_011,`HS65_LS_OA112X9_B_F_Z_F_011);
		if (A && !B && D) (C +=> Z) = (`HS65_LS_OA112X9_C_R_Z_R_101,`HS65_LS_OA112X9_C_F_Z_F_101);
		if (!A && B && D) (C +=> Z) = (`HS65_LS_OA112X9_C_R_Z_R_011,`HS65_LS_OA112X9_C_F_Z_F_011);
		if (A && B && D) (C +=> Z) = (`HS65_LS_OA112X9_C_R_Z_R_111,`HS65_LS_OA112X9_C_F_Z_F_111);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA112X9_D_R_Z_R_101,`HS65_LS_OA112X9_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA112X9_D_R_Z_R_011,`HS65_LS_OA112X9_D_F_Z_F_011);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA112X9_D_R_Z_R_111,`HS65_LS_OA112X9_D_F_Z_F_111);


	endspecify

endmodule // HS65_LS_OA112X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA12X18_A_R_Z_R_01 0.1
`define HS65_LS_OA12X18_A_F_Z_F_01 0.1
`define HS65_LS_OA12X18_B_R_Z_R_01 0.1
`define HS65_LS_OA12X18_B_F_Z_F_01 0.1
`define HS65_LS_OA12X18_C_R_Z_R_01 0.1
`define HS65_LS_OA12X18_C_F_Z_F_01 0.1
`define HS65_LS_OA12X18_C_R_Z_R_11 0.1
`define HS65_LS_OA12X18_C_F_Z_F_11 0.1
`define HS65_LS_OA12X18_C_R_Z_R_10 0.1
`define HS65_LS_OA12X18_C_F_Z_F_10 0.1

module HS65_LS_OA12X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OA12X18_A_R_Z_R_01,`HS65_LS_OA12X18_A_F_Z_F_01);
		(B +=> Z) = (`HS65_LS_OA12X18_B_R_Z_R_01,`HS65_LS_OA12X18_B_F_Z_F_01);
		if (!A && B) (C +=> Z) = (`HS65_LS_OA12X18_C_R_Z_R_01,`HS65_LS_OA12X18_C_F_Z_F_01);
		if (A && B) (C +=> Z) = (`HS65_LS_OA12X18_C_R_Z_R_11,`HS65_LS_OA12X18_C_F_Z_F_11);
		if (A && !B) (C +=> Z) = (`HS65_LS_OA12X18_C_R_Z_R_10,`HS65_LS_OA12X18_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_OA12X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA12X27_A_R_Z_R_01 0.1
`define HS65_LS_OA12X27_A_F_Z_F_01 0.1
`define HS65_LS_OA12X27_B_R_Z_R_01 0.1
`define HS65_LS_OA12X27_B_F_Z_F_01 0.1
`define HS65_LS_OA12X27_C_R_Z_R_01 0.1
`define HS65_LS_OA12X27_C_F_Z_F_01 0.1
`define HS65_LS_OA12X27_C_R_Z_R_11 0.1
`define HS65_LS_OA12X27_C_F_Z_F_11 0.1
`define HS65_LS_OA12X27_C_R_Z_R_10 0.1
`define HS65_LS_OA12X27_C_F_Z_F_10 0.1

module HS65_LS_OA12X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OA12X27_A_R_Z_R_01,`HS65_LS_OA12X27_A_F_Z_F_01);
		(B +=> Z) = (`HS65_LS_OA12X27_B_R_Z_R_01,`HS65_LS_OA12X27_B_F_Z_F_01);
		if (!A && B) (C +=> Z) = (`HS65_LS_OA12X27_C_R_Z_R_01,`HS65_LS_OA12X27_C_F_Z_F_01);
		if (A && B) (C +=> Z) = (`HS65_LS_OA12X27_C_R_Z_R_11,`HS65_LS_OA12X27_C_F_Z_F_11);
		if (A && !B) (C +=> Z) = (`HS65_LS_OA12X27_C_R_Z_R_10,`HS65_LS_OA12X27_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_OA12X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA12X35_A_R_Z_R_01 0.1
`define HS65_LS_OA12X35_A_F_Z_F_01 0.1
`define HS65_LS_OA12X35_B_R_Z_R_01 0.1
`define HS65_LS_OA12X35_B_F_Z_F_01 0.1
`define HS65_LS_OA12X35_C_R_Z_R_01 0.1
`define HS65_LS_OA12X35_C_F_Z_F_01 0.1
`define HS65_LS_OA12X35_C_R_Z_R_11 0.1
`define HS65_LS_OA12X35_C_F_Z_F_11 0.1
`define HS65_LS_OA12X35_C_R_Z_R_10 0.1
`define HS65_LS_OA12X35_C_F_Z_F_10 0.1

module HS65_LS_OA12X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OA12X35_A_R_Z_R_01,`HS65_LS_OA12X35_A_F_Z_F_01);
		(B +=> Z) = (`HS65_LS_OA12X35_B_R_Z_R_01,`HS65_LS_OA12X35_B_F_Z_F_01);
		if (!A && B) (C +=> Z) = (`HS65_LS_OA12X35_C_R_Z_R_01,`HS65_LS_OA12X35_C_F_Z_F_01);
		if (A && B) (C +=> Z) = (`HS65_LS_OA12X35_C_R_Z_R_11,`HS65_LS_OA12X35_C_F_Z_F_11);
		if (A && !B) (C +=> Z) = (`HS65_LS_OA12X35_C_R_Z_R_10,`HS65_LS_OA12X35_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_OA12X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA12X4_A_R_Z_R_01 0.1
`define HS65_LS_OA12X4_A_F_Z_F_01 0.1
`define HS65_LS_OA12X4_B_R_Z_R_01 0.1
`define HS65_LS_OA12X4_B_F_Z_F_01 0.1
`define HS65_LS_OA12X4_C_R_Z_R_01 0.1
`define HS65_LS_OA12X4_C_F_Z_F_01 0.1
`define HS65_LS_OA12X4_C_R_Z_R_11 0.1
`define HS65_LS_OA12X4_C_F_Z_F_11 0.1
`define HS65_LS_OA12X4_C_R_Z_R_10 0.1
`define HS65_LS_OA12X4_C_F_Z_F_10 0.1

module HS65_LS_OA12X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OA12X4_A_R_Z_R_01,`HS65_LS_OA12X4_A_F_Z_F_01);
		(B +=> Z) = (`HS65_LS_OA12X4_B_R_Z_R_01,`HS65_LS_OA12X4_B_F_Z_F_01);
		if (!A && B) (C +=> Z) = (`HS65_LS_OA12X4_C_R_Z_R_01,`HS65_LS_OA12X4_C_F_Z_F_01);
		if (A && B) (C +=> Z) = (`HS65_LS_OA12X4_C_R_Z_R_11,`HS65_LS_OA12X4_C_F_Z_F_11);
		if (A && !B) (C +=> Z) = (`HS65_LS_OA12X4_C_R_Z_R_10,`HS65_LS_OA12X4_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_OA12X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA12X9_A_R_Z_R_01 0.1
`define HS65_LS_OA12X9_A_F_Z_F_01 0.1
`define HS65_LS_OA12X9_B_R_Z_R_01 0.1
`define HS65_LS_OA12X9_B_F_Z_F_01 0.1
`define HS65_LS_OA12X9_C_R_Z_R_01 0.1
`define HS65_LS_OA12X9_C_F_Z_F_01 0.1
`define HS65_LS_OA12X9_C_R_Z_R_11 0.1
`define HS65_LS_OA12X9_C_F_Z_F_11 0.1
`define HS65_LS_OA12X9_C_R_Z_R_10 0.1
`define HS65_LS_OA12X9_C_F_Z_F_10 0.1

module HS65_LS_OA12X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL1, A, B) ;
	and   #1 U2 (Z, INTERNAL1, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OA12X9_A_R_Z_R_01,`HS65_LS_OA12X9_A_F_Z_F_01);
		(B +=> Z) = (`HS65_LS_OA12X9_B_R_Z_R_01,`HS65_LS_OA12X9_B_F_Z_F_01);
		if (!A && B) (C +=> Z) = (`HS65_LS_OA12X9_C_R_Z_R_01,`HS65_LS_OA12X9_C_F_Z_F_01);
		if (A && B) (C +=> Z) = (`HS65_LS_OA12X9_C_R_Z_R_11,`HS65_LS_OA12X9_C_F_Z_F_11);
		if (A && !B) (C +=> Z) = (`HS65_LS_OA12X9_C_R_Z_R_10,`HS65_LS_OA12X9_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_OA12X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA212X18_A_R_Z_R_0011 0.1
`define HS65_LS_OA212X18_A_F_Z_F_0011 0.1
`define HS65_LS_OA212X18_A_R_Z_R_0111 0.1
`define HS65_LS_OA212X18_A_F_Z_F_0111 0.1
`define HS65_LS_OA212X18_A_R_Z_R_0101 0.1
`define HS65_LS_OA212X18_A_F_Z_F_0101 0.1
`define HS65_LS_OA212X18_B_R_Z_R_0011 0.1
`define HS65_LS_OA212X18_B_F_Z_F_0011 0.1
`define HS65_LS_OA212X18_B_R_Z_R_0111 0.1
`define HS65_LS_OA212X18_B_F_Z_F_0111 0.1
`define HS65_LS_OA212X18_B_R_Z_R_0101 0.1
`define HS65_LS_OA212X18_B_F_Z_F_0101 0.1
`define HS65_LS_OA212X18_C_R_Z_R_0101 0.1
`define HS65_LS_OA212X18_C_F_Z_F_0101 0.1
`define HS65_LS_OA212X18_C_R_Z_R_1101 0.1
`define HS65_LS_OA212X18_C_F_Z_F_1101 0.1
`define HS65_LS_OA212X18_C_R_Z_R_1001 0.1
`define HS65_LS_OA212X18_C_F_Z_F_1001 0.1
`define HS65_LS_OA212X18_D_R_Z_R_0101 0.1
`define HS65_LS_OA212X18_D_F_Z_F_0101 0.1
`define HS65_LS_OA212X18_D_R_Z_R_1101 0.1
`define HS65_LS_OA212X18_D_F_Z_F_1101 0.1
`define HS65_LS_OA212X18_D_R_Z_R_1001 0.1
`define HS65_LS_OA212X18_D_F_Z_F_1001 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1101 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1101 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1111 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1111 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1110 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1110 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1011 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1011 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1010 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1010 0.1
`define HS65_LS_OA212X18_E_R_Z_R_0101 0.1
`define HS65_LS_OA212X18_E_F_Z_F_0101 0.1
`define HS65_LS_OA212X18_E_R_Z_R_0111 0.1
`define HS65_LS_OA212X18_E_F_Z_F_0111 0.1
`define HS65_LS_OA212X18_E_R_Z_R_0110 0.1
`define HS65_LS_OA212X18_E_F_Z_F_0110 0.1
`define HS65_LS_OA212X18_E_R_Z_R_1001 0.1
`define HS65_LS_OA212X18_E_F_Z_F_1001 0.1

module HS65_LS_OA212X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA212X18_A_R_Z_R_0011,`HS65_LS_OA212X18_A_F_Z_F_0011);
		if (!B && C && D && E) (A +=> Z) = (`HS65_LS_OA212X18_A_R_Z_R_0111,`HS65_LS_OA212X18_A_F_Z_F_0111);
		if (!B && C && !D && E) (A +=> Z) = (`HS65_LS_OA212X18_A_R_Z_R_0101,`HS65_LS_OA212X18_A_F_Z_F_0101);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA212X18_B_R_Z_R_0011,`HS65_LS_OA212X18_B_F_Z_F_0011);
		if (!A && C && D && E) (B +=> Z) = (`HS65_LS_OA212X18_B_R_Z_R_0111,`HS65_LS_OA212X18_B_F_Z_F_0111);
		if (!A && C && !D && E) (B +=> Z) = (`HS65_LS_OA212X18_B_R_Z_R_0101,`HS65_LS_OA212X18_B_F_Z_F_0101);
		if (!A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X18_C_R_Z_R_0101,`HS65_LS_OA212X18_C_F_Z_F_0101);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X18_C_R_Z_R_1101,`HS65_LS_OA212X18_C_F_Z_F_1101);
		if (A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA212X18_C_R_Z_R_1001,`HS65_LS_OA212X18_C_F_Z_F_1001);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X18_D_R_Z_R_0101,`HS65_LS_OA212X18_D_F_Z_F_0101);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X18_D_R_Z_R_1101,`HS65_LS_OA212X18_D_F_Z_F_1101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA212X18_D_R_Z_R_1001,`HS65_LS_OA212X18_D_F_Z_F_1001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1101,`HS65_LS_OA212X18_E_F_Z_F_1101);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1111,`HS65_LS_OA212X18_E_F_Z_F_1111);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1110,`HS65_LS_OA212X18_E_F_Z_F_1110);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1011,`HS65_LS_OA212X18_E_F_Z_F_1011);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1010,`HS65_LS_OA212X18_E_F_Z_F_1010);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_0101,`HS65_LS_OA212X18_E_F_Z_F_0101);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_0111,`HS65_LS_OA212X18_E_F_Z_F_0111);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_0110,`HS65_LS_OA212X18_E_F_Z_F_0110);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA212X18_E_R_Z_R_1001,`HS65_LS_OA212X18_E_F_Z_F_1001);


	endspecify

endmodule // HS65_LS_OA212X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA212X27_A_R_Z_R_0011 0.1
`define HS65_LS_OA212X27_A_F_Z_F_0011 0.1
`define HS65_LS_OA212X27_A_R_Z_R_0111 0.1
`define HS65_LS_OA212X27_A_F_Z_F_0111 0.1
`define HS65_LS_OA212X27_A_R_Z_R_0101 0.1
`define HS65_LS_OA212X27_A_F_Z_F_0101 0.1
`define HS65_LS_OA212X27_B_R_Z_R_0011 0.1
`define HS65_LS_OA212X27_B_F_Z_F_0011 0.1
`define HS65_LS_OA212X27_B_R_Z_R_0111 0.1
`define HS65_LS_OA212X27_B_F_Z_F_0111 0.1
`define HS65_LS_OA212X27_B_R_Z_R_0101 0.1
`define HS65_LS_OA212X27_B_F_Z_F_0101 0.1
`define HS65_LS_OA212X27_C_R_Z_R_0101 0.1
`define HS65_LS_OA212X27_C_F_Z_F_0101 0.1
`define HS65_LS_OA212X27_C_R_Z_R_1101 0.1
`define HS65_LS_OA212X27_C_F_Z_F_1101 0.1
`define HS65_LS_OA212X27_C_R_Z_R_1001 0.1
`define HS65_LS_OA212X27_C_F_Z_F_1001 0.1
`define HS65_LS_OA212X27_D_R_Z_R_0101 0.1
`define HS65_LS_OA212X27_D_F_Z_F_0101 0.1
`define HS65_LS_OA212X27_D_R_Z_R_1101 0.1
`define HS65_LS_OA212X27_D_F_Z_F_1101 0.1
`define HS65_LS_OA212X27_D_R_Z_R_1001 0.1
`define HS65_LS_OA212X27_D_F_Z_F_1001 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1101 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1101 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1111 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1111 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1110 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1110 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1011 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1011 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1010 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1010 0.1
`define HS65_LS_OA212X27_E_R_Z_R_0101 0.1
`define HS65_LS_OA212X27_E_F_Z_F_0101 0.1
`define HS65_LS_OA212X27_E_R_Z_R_0111 0.1
`define HS65_LS_OA212X27_E_F_Z_F_0111 0.1
`define HS65_LS_OA212X27_E_R_Z_R_0110 0.1
`define HS65_LS_OA212X27_E_F_Z_F_0110 0.1
`define HS65_LS_OA212X27_E_R_Z_R_1001 0.1
`define HS65_LS_OA212X27_E_F_Z_F_1001 0.1

module HS65_LS_OA212X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA212X27_A_R_Z_R_0011,`HS65_LS_OA212X27_A_F_Z_F_0011);
		if (!B && C && D && E) (A +=> Z) = (`HS65_LS_OA212X27_A_R_Z_R_0111,`HS65_LS_OA212X27_A_F_Z_F_0111);
		if (!B && C && !D && E) (A +=> Z) = (`HS65_LS_OA212X27_A_R_Z_R_0101,`HS65_LS_OA212X27_A_F_Z_F_0101);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA212X27_B_R_Z_R_0011,`HS65_LS_OA212X27_B_F_Z_F_0011);
		if (!A && C && D && E) (B +=> Z) = (`HS65_LS_OA212X27_B_R_Z_R_0111,`HS65_LS_OA212X27_B_F_Z_F_0111);
		if (!A && C && !D && E) (B +=> Z) = (`HS65_LS_OA212X27_B_R_Z_R_0101,`HS65_LS_OA212X27_B_F_Z_F_0101);
		if (!A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X27_C_R_Z_R_0101,`HS65_LS_OA212X27_C_F_Z_F_0101);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X27_C_R_Z_R_1101,`HS65_LS_OA212X27_C_F_Z_F_1101);
		if (A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA212X27_C_R_Z_R_1001,`HS65_LS_OA212X27_C_F_Z_F_1001);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X27_D_R_Z_R_0101,`HS65_LS_OA212X27_D_F_Z_F_0101);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X27_D_R_Z_R_1101,`HS65_LS_OA212X27_D_F_Z_F_1101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA212X27_D_R_Z_R_1001,`HS65_LS_OA212X27_D_F_Z_F_1001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1101,`HS65_LS_OA212X27_E_F_Z_F_1101);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1111,`HS65_LS_OA212X27_E_F_Z_F_1111);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1110,`HS65_LS_OA212X27_E_F_Z_F_1110);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1011,`HS65_LS_OA212X27_E_F_Z_F_1011);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1010,`HS65_LS_OA212X27_E_F_Z_F_1010);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_0101,`HS65_LS_OA212X27_E_F_Z_F_0101);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_0111,`HS65_LS_OA212X27_E_F_Z_F_0111);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_0110,`HS65_LS_OA212X27_E_F_Z_F_0110);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA212X27_E_R_Z_R_1001,`HS65_LS_OA212X27_E_F_Z_F_1001);


	endspecify

endmodule // HS65_LS_OA212X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA212X35_A_R_Z_R_0011 0.1
`define HS65_LS_OA212X35_A_F_Z_F_0011 0.1
`define HS65_LS_OA212X35_A_R_Z_R_0111 0.1
`define HS65_LS_OA212X35_A_F_Z_F_0111 0.1
`define HS65_LS_OA212X35_A_R_Z_R_0101 0.1
`define HS65_LS_OA212X35_A_F_Z_F_0101 0.1
`define HS65_LS_OA212X35_B_R_Z_R_0011 0.1
`define HS65_LS_OA212X35_B_F_Z_F_0011 0.1
`define HS65_LS_OA212X35_B_R_Z_R_0111 0.1
`define HS65_LS_OA212X35_B_F_Z_F_0111 0.1
`define HS65_LS_OA212X35_B_R_Z_R_0101 0.1
`define HS65_LS_OA212X35_B_F_Z_F_0101 0.1
`define HS65_LS_OA212X35_C_R_Z_R_0101 0.1
`define HS65_LS_OA212X35_C_F_Z_F_0101 0.1
`define HS65_LS_OA212X35_C_R_Z_R_1101 0.1
`define HS65_LS_OA212X35_C_F_Z_F_1101 0.1
`define HS65_LS_OA212X35_C_R_Z_R_1001 0.1
`define HS65_LS_OA212X35_C_F_Z_F_1001 0.1
`define HS65_LS_OA212X35_D_R_Z_R_0101 0.1
`define HS65_LS_OA212X35_D_F_Z_F_0101 0.1
`define HS65_LS_OA212X35_D_R_Z_R_1101 0.1
`define HS65_LS_OA212X35_D_F_Z_F_1101 0.1
`define HS65_LS_OA212X35_D_R_Z_R_1001 0.1
`define HS65_LS_OA212X35_D_F_Z_F_1001 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1101 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1101 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1111 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1111 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1110 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1110 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1011 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1011 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1010 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1010 0.1
`define HS65_LS_OA212X35_E_R_Z_R_0101 0.1
`define HS65_LS_OA212X35_E_F_Z_F_0101 0.1
`define HS65_LS_OA212X35_E_R_Z_R_0111 0.1
`define HS65_LS_OA212X35_E_F_Z_F_0111 0.1
`define HS65_LS_OA212X35_E_R_Z_R_0110 0.1
`define HS65_LS_OA212X35_E_F_Z_F_0110 0.1
`define HS65_LS_OA212X35_E_R_Z_R_1001 0.1
`define HS65_LS_OA212X35_E_F_Z_F_1001 0.1

module HS65_LS_OA212X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA212X35_A_R_Z_R_0011,`HS65_LS_OA212X35_A_F_Z_F_0011);
		if (!B && C && D && E) (A +=> Z) = (`HS65_LS_OA212X35_A_R_Z_R_0111,`HS65_LS_OA212X35_A_F_Z_F_0111);
		if (!B && C && !D && E) (A +=> Z) = (`HS65_LS_OA212X35_A_R_Z_R_0101,`HS65_LS_OA212X35_A_F_Z_F_0101);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA212X35_B_R_Z_R_0011,`HS65_LS_OA212X35_B_F_Z_F_0011);
		if (!A && C && D && E) (B +=> Z) = (`HS65_LS_OA212X35_B_R_Z_R_0111,`HS65_LS_OA212X35_B_F_Z_F_0111);
		if (!A && C && !D && E) (B +=> Z) = (`HS65_LS_OA212X35_B_R_Z_R_0101,`HS65_LS_OA212X35_B_F_Z_F_0101);
		if (!A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X35_C_R_Z_R_0101,`HS65_LS_OA212X35_C_F_Z_F_0101);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X35_C_R_Z_R_1101,`HS65_LS_OA212X35_C_F_Z_F_1101);
		if (A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA212X35_C_R_Z_R_1001,`HS65_LS_OA212X35_C_F_Z_F_1001);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X35_D_R_Z_R_0101,`HS65_LS_OA212X35_D_F_Z_F_0101);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X35_D_R_Z_R_1101,`HS65_LS_OA212X35_D_F_Z_F_1101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA212X35_D_R_Z_R_1001,`HS65_LS_OA212X35_D_F_Z_F_1001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1101,`HS65_LS_OA212X35_E_F_Z_F_1101);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1111,`HS65_LS_OA212X35_E_F_Z_F_1111);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1110,`HS65_LS_OA212X35_E_F_Z_F_1110);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1011,`HS65_LS_OA212X35_E_F_Z_F_1011);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1010,`HS65_LS_OA212X35_E_F_Z_F_1010);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_0101,`HS65_LS_OA212X35_E_F_Z_F_0101);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_0111,`HS65_LS_OA212X35_E_F_Z_F_0111);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_0110,`HS65_LS_OA212X35_E_F_Z_F_0110);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA212X35_E_R_Z_R_1001,`HS65_LS_OA212X35_E_F_Z_F_1001);


	endspecify

endmodule // HS65_LS_OA212X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA212X4_A_R_Z_R_0011 0.1
`define HS65_LS_OA212X4_A_F_Z_F_0011 0.1
`define HS65_LS_OA212X4_A_R_Z_R_0111 0.1
`define HS65_LS_OA212X4_A_F_Z_F_0111 0.1
`define HS65_LS_OA212X4_A_R_Z_R_0101 0.1
`define HS65_LS_OA212X4_A_F_Z_F_0101 0.1
`define HS65_LS_OA212X4_B_R_Z_R_0011 0.1
`define HS65_LS_OA212X4_B_F_Z_F_0011 0.1
`define HS65_LS_OA212X4_B_R_Z_R_0111 0.1
`define HS65_LS_OA212X4_B_F_Z_F_0111 0.1
`define HS65_LS_OA212X4_B_R_Z_R_0101 0.1
`define HS65_LS_OA212X4_B_F_Z_F_0101 0.1
`define HS65_LS_OA212X4_C_R_Z_R_0101 0.1
`define HS65_LS_OA212X4_C_F_Z_F_0101 0.1
`define HS65_LS_OA212X4_C_R_Z_R_1101 0.1
`define HS65_LS_OA212X4_C_F_Z_F_1101 0.1
`define HS65_LS_OA212X4_C_R_Z_R_1001 0.1
`define HS65_LS_OA212X4_C_F_Z_F_1001 0.1
`define HS65_LS_OA212X4_D_R_Z_R_0101 0.1
`define HS65_LS_OA212X4_D_F_Z_F_0101 0.1
`define HS65_LS_OA212X4_D_R_Z_R_1101 0.1
`define HS65_LS_OA212X4_D_F_Z_F_1101 0.1
`define HS65_LS_OA212X4_D_R_Z_R_1001 0.1
`define HS65_LS_OA212X4_D_F_Z_F_1001 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1101 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1101 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1111 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1111 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1110 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1110 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1011 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1011 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1010 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1010 0.1
`define HS65_LS_OA212X4_E_R_Z_R_0101 0.1
`define HS65_LS_OA212X4_E_F_Z_F_0101 0.1
`define HS65_LS_OA212X4_E_R_Z_R_0111 0.1
`define HS65_LS_OA212X4_E_F_Z_F_0111 0.1
`define HS65_LS_OA212X4_E_R_Z_R_0110 0.1
`define HS65_LS_OA212X4_E_F_Z_F_0110 0.1
`define HS65_LS_OA212X4_E_R_Z_R_1001 0.1
`define HS65_LS_OA212X4_E_F_Z_F_1001 0.1

module HS65_LS_OA212X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA212X4_A_R_Z_R_0011,`HS65_LS_OA212X4_A_F_Z_F_0011);
		if (!B && C && D && E) (A +=> Z) = (`HS65_LS_OA212X4_A_R_Z_R_0111,`HS65_LS_OA212X4_A_F_Z_F_0111);
		if (!B && C && !D && E) (A +=> Z) = (`HS65_LS_OA212X4_A_R_Z_R_0101,`HS65_LS_OA212X4_A_F_Z_F_0101);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA212X4_B_R_Z_R_0011,`HS65_LS_OA212X4_B_F_Z_F_0011);
		if (!A && C && D && E) (B +=> Z) = (`HS65_LS_OA212X4_B_R_Z_R_0111,`HS65_LS_OA212X4_B_F_Z_F_0111);
		if (!A && C && !D && E) (B +=> Z) = (`HS65_LS_OA212X4_B_R_Z_R_0101,`HS65_LS_OA212X4_B_F_Z_F_0101);
		if (!A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X4_C_R_Z_R_0101,`HS65_LS_OA212X4_C_F_Z_F_0101);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X4_C_R_Z_R_1101,`HS65_LS_OA212X4_C_F_Z_F_1101);
		if (A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA212X4_C_R_Z_R_1001,`HS65_LS_OA212X4_C_F_Z_F_1001);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X4_D_R_Z_R_0101,`HS65_LS_OA212X4_D_F_Z_F_0101);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X4_D_R_Z_R_1101,`HS65_LS_OA212X4_D_F_Z_F_1101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA212X4_D_R_Z_R_1001,`HS65_LS_OA212X4_D_F_Z_F_1001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1101,`HS65_LS_OA212X4_E_F_Z_F_1101);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1111,`HS65_LS_OA212X4_E_F_Z_F_1111);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1110,`HS65_LS_OA212X4_E_F_Z_F_1110);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1011,`HS65_LS_OA212X4_E_F_Z_F_1011);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1010,`HS65_LS_OA212X4_E_F_Z_F_1010);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_0101,`HS65_LS_OA212X4_E_F_Z_F_0101);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_0111,`HS65_LS_OA212X4_E_F_Z_F_0111);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_0110,`HS65_LS_OA212X4_E_F_Z_F_0110);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA212X4_E_R_Z_R_1001,`HS65_LS_OA212X4_E_F_Z_F_1001);


	endspecify

endmodule // HS65_LS_OA212X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA212X9_A_R_Z_R_0011 0.1
`define HS65_LS_OA212X9_A_F_Z_F_0011 0.1
`define HS65_LS_OA212X9_A_R_Z_R_0111 0.1
`define HS65_LS_OA212X9_A_F_Z_F_0111 0.1
`define HS65_LS_OA212X9_A_R_Z_R_0101 0.1
`define HS65_LS_OA212X9_A_F_Z_F_0101 0.1
`define HS65_LS_OA212X9_B_R_Z_R_0011 0.1
`define HS65_LS_OA212X9_B_F_Z_F_0011 0.1
`define HS65_LS_OA212X9_B_R_Z_R_0111 0.1
`define HS65_LS_OA212X9_B_F_Z_F_0111 0.1
`define HS65_LS_OA212X9_B_R_Z_R_0101 0.1
`define HS65_LS_OA212X9_B_F_Z_F_0101 0.1
`define HS65_LS_OA212X9_C_R_Z_R_0101 0.1
`define HS65_LS_OA212X9_C_F_Z_F_0101 0.1
`define HS65_LS_OA212X9_C_R_Z_R_1101 0.1
`define HS65_LS_OA212X9_C_F_Z_F_1101 0.1
`define HS65_LS_OA212X9_C_R_Z_R_1001 0.1
`define HS65_LS_OA212X9_C_F_Z_F_1001 0.1
`define HS65_LS_OA212X9_D_R_Z_R_0101 0.1
`define HS65_LS_OA212X9_D_F_Z_F_0101 0.1
`define HS65_LS_OA212X9_D_R_Z_R_1101 0.1
`define HS65_LS_OA212X9_D_F_Z_F_1101 0.1
`define HS65_LS_OA212X9_D_R_Z_R_1001 0.1
`define HS65_LS_OA212X9_D_F_Z_F_1001 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1101 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1101 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1111 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1111 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1110 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1110 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1011 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1011 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1010 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1010 0.1
`define HS65_LS_OA212X9_E_R_Z_R_0101 0.1
`define HS65_LS_OA212X9_E_F_Z_F_0101 0.1
`define HS65_LS_OA212X9_E_R_Z_R_0111 0.1
`define HS65_LS_OA212X9_E_F_Z_F_0111 0.1
`define HS65_LS_OA212X9_E_R_Z_R_0110 0.1
`define HS65_LS_OA212X9_E_F_Z_F_0110 0.1
`define HS65_LS_OA212X9_E_R_Z_R_1001 0.1
`define HS65_LS_OA212X9_E_F_Z_F_1001 0.1

module HS65_LS_OA212X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2, E) ;



	specify

		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA212X9_A_R_Z_R_0011,`HS65_LS_OA212X9_A_F_Z_F_0011);
		if (!B && C && D && E) (A +=> Z) = (`HS65_LS_OA212X9_A_R_Z_R_0111,`HS65_LS_OA212X9_A_F_Z_F_0111);
		if (!B && C && !D && E) (A +=> Z) = (`HS65_LS_OA212X9_A_R_Z_R_0101,`HS65_LS_OA212X9_A_F_Z_F_0101);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA212X9_B_R_Z_R_0011,`HS65_LS_OA212X9_B_F_Z_F_0011);
		if (!A && C && D && E) (B +=> Z) = (`HS65_LS_OA212X9_B_R_Z_R_0111,`HS65_LS_OA212X9_B_F_Z_F_0111);
		if (!A && C && !D && E) (B +=> Z) = (`HS65_LS_OA212X9_B_R_Z_R_0101,`HS65_LS_OA212X9_B_F_Z_F_0101);
		if (!A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X9_C_R_Z_R_0101,`HS65_LS_OA212X9_C_F_Z_F_0101);
		if (A && B && !D && E) (C +=> Z) = (`HS65_LS_OA212X9_C_R_Z_R_1101,`HS65_LS_OA212X9_C_F_Z_F_1101);
		if (A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA212X9_C_R_Z_R_1001,`HS65_LS_OA212X9_C_F_Z_F_1001);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X9_D_R_Z_R_0101,`HS65_LS_OA212X9_D_F_Z_F_0101);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA212X9_D_R_Z_R_1101,`HS65_LS_OA212X9_D_F_Z_F_1101);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA212X9_D_R_Z_R_1001,`HS65_LS_OA212X9_D_F_Z_F_1001);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1101,`HS65_LS_OA212X9_E_F_Z_F_1101);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1111,`HS65_LS_OA212X9_E_F_Z_F_1111);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1110,`HS65_LS_OA212X9_E_F_Z_F_1110);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1011,`HS65_LS_OA212X9_E_F_Z_F_1011);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1010,`HS65_LS_OA212X9_E_F_Z_F_1010);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_0101,`HS65_LS_OA212X9_E_F_Z_F_0101);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_0111,`HS65_LS_OA212X9_E_F_Z_F_0111);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_0110,`HS65_LS_OA212X9_E_F_Z_F_0110);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA212X9_E_R_Z_R_1001,`HS65_LS_OA212X9_E_F_Z_F_1001);


	endspecify

endmodule // HS65_LS_OA212X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA222X18_A_R_Z_R_01110 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01110 0.1
`define HS65_LS_OA222X18_A_R_Z_R_01111 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01111 0.1
`define HS65_LS_OA222X18_A_R_Z_R_01001 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01001 0.1
`define HS65_LS_OA222X18_A_R_Z_R_01011 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01011 0.1
`define HS65_LS_OA222X18_A_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_A_R_Z_R_01101 0.1
`define HS65_LS_OA222X18_A_F_Z_F_01101 0.1
`define HS65_LS_OA222X18_A_R_Z_R_00110 0.1
`define HS65_LS_OA222X18_A_F_Z_F_00110 0.1
`define HS65_LS_OA222X18_A_R_Z_R_00101 0.1
`define HS65_LS_OA222X18_A_F_Z_F_00101 0.1
`define HS65_LS_OA222X18_A_R_Z_R_00111 0.1
`define HS65_LS_OA222X18_A_F_Z_F_00111 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01110 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01110 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01111 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01111 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01001 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01001 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01011 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01011 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_B_R_Z_R_01101 0.1
`define HS65_LS_OA222X18_B_F_Z_F_01101 0.1
`define HS65_LS_OA222X18_B_R_Z_R_00110 0.1
`define HS65_LS_OA222X18_B_F_Z_F_00110 0.1
`define HS65_LS_OA222X18_B_R_Z_R_00101 0.1
`define HS65_LS_OA222X18_B_F_Z_F_00101 0.1
`define HS65_LS_OA222X18_B_R_Z_R_00111 0.1
`define HS65_LS_OA222X18_B_F_Z_F_00111 0.1
`define HS65_LS_OA222X18_C_R_Z_R_11010 0.1
`define HS65_LS_OA222X18_C_F_Z_F_11010 0.1
`define HS65_LS_OA222X18_C_R_Z_R_11011 0.1
`define HS65_LS_OA222X18_C_F_Z_F_11011 0.1
`define HS65_LS_OA222X18_C_R_Z_R_10001 0.1
`define HS65_LS_OA222X18_C_F_Z_F_10001 0.1
`define HS65_LS_OA222X18_C_R_Z_R_10011 0.1
`define HS65_LS_OA222X18_C_F_Z_F_10011 0.1
`define HS65_LS_OA222X18_C_R_Z_R_10010 0.1
`define HS65_LS_OA222X18_C_F_Z_F_10010 0.1
`define HS65_LS_OA222X18_C_R_Z_R_11001 0.1
`define HS65_LS_OA222X18_C_F_Z_F_11001 0.1
`define HS65_LS_OA222X18_C_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_C_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_C_R_Z_R_01001 0.1
`define HS65_LS_OA222X18_C_F_Z_F_01001 0.1
`define HS65_LS_OA222X18_C_R_Z_R_01011 0.1
`define HS65_LS_OA222X18_C_F_Z_F_01011 0.1
`define HS65_LS_OA222X18_D_R_Z_R_11010 0.1
`define HS65_LS_OA222X18_D_F_Z_F_11010 0.1
`define HS65_LS_OA222X18_D_R_Z_R_11011 0.1
`define HS65_LS_OA222X18_D_F_Z_F_11011 0.1
`define HS65_LS_OA222X18_D_R_Z_R_10001 0.1
`define HS65_LS_OA222X18_D_F_Z_F_10001 0.1
`define HS65_LS_OA222X18_D_R_Z_R_10011 0.1
`define HS65_LS_OA222X18_D_F_Z_F_10011 0.1
`define HS65_LS_OA222X18_D_R_Z_R_10010 0.1
`define HS65_LS_OA222X18_D_F_Z_F_10010 0.1
`define HS65_LS_OA222X18_D_R_Z_R_11001 0.1
`define HS65_LS_OA222X18_D_F_Z_F_11001 0.1
`define HS65_LS_OA222X18_D_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_D_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_D_R_Z_R_01001 0.1
`define HS65_LS_OA222X18_D_F_Z_F_01001 0.1
`define HS65_LS_OA222X18_D_R_Z_R_01011 0.1
`define HS65_LS_OA222X18_D_F_Z_F_01011 0.1
`define HS65_LS_OA222X18_E_R_Z_R_11100 0.1
`define HS65_LS_OA222X18_E_F_Z_F_11100 0.1
`define HS65_LS_OA222X18_E_R_Z_R_11110 0.1
`define HS65_LS_OA222X18_E_F_Z_F_11110 0.1
`define HS65_LS_OA222X18_E_R_Z_R_10010 0.1
`define HS65_LS_OA222X18_E_F_Z_F_10010 0.1
`define HS65_LS_OA222X18_E_R_Z_R_10110 0.1
`define HS65_LS_OA222X18_E_F_Z_F_10110 0.1
`define HS65_LS_OA222X18_E_R_Z_R_10100 0.1
`define HS65_LS_OA222X18_E_F_Z_F_10100 0.1
`define HS65_LS_OA222X18_E_R_Z_R_11010 0.1
`define HS65_LS_OA222X18_E_F_Z_F_11010 0.1
`define HS65_LS_OA222X18_E_R_Z_R_01100 0.1
`define HS65_LS_OA222X18_E_F_Z_F_01100 0.1
`define HS65_LS_OA222X18_E_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_E_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_E_R_Z_R_01110 0.1
`define HS65_LS_OA222X18_E_F_Z_F_01110 0.1
`define HS65_LS_OA222X18_F_R_Z_R_11100 0.1
`define HS65_LS_OA222X18_F_F_Z_F_11100 0.1
`define HS65_LS_OA222X18_F_R_Z_R_11110 0.1
`define HS65_LS_OA222X18_F_F_Z_F_11110 0.1
`define HS65_LS_OA222X18_F_R_Z_R_10010 0.1
`define HS65_LS_OA222X18_F_F_Z_F_10010 0.1
`define HS65_LS_OA222X18_F_R_Z_R_10110 0.1
`define HS65_LS_OA222X18_F_F_Z_F_10110 0.1
`define HS65_LS_OA222X18_F_R_Z_R_10100 0.1
`define HS65_LS_OA222X18_F_F_Z_F_10100 0.1
`define HS65_LS_OA222X18_F_R_Z_R_11010 0.1
`define HS65_LS_OA222X18_F_F_Z_F_11010 0.1
`define HS65_LS_OA222X18_F_R_Z_R_01100 0.1
`define HS65_LS_OA222X18_F_F_Z_F_01100 0.1
`define HS65_LS_OA222X18_F_R_Z_R_01010 0.1
`define HS65_LS_OA222X18_F_F_Z_F_01010 0.1
`define HS65_LS_OA222X18_F_R_Z_R_01110 0.1
`define HS65_LS_OA222X18_F_F_Z_F_01110 0.1

module HS65_LS_OA222X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (NET1, INTERNAL1) ;
	not   #1 U6 (Z, NET1) ;



	specify

		if (!B && C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01110,`HS65_LS_OA222X18_A_F_Z_F_01110);
		if (!B && C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01111,`HS65_LS_OA222X18_A_F_Z_F_01111);
		if (!B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01001,`HS65_LS_OA222X18_A_F_Z_F_01001);
		if (!B && C && !D && E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01011,`HS65_LS_OA222X18_A_F_Z_F_01011);
		if (!B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01010,`HS65_LS_OA222X18_A_F_Z_F_01010);
		if (!B && C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_01101,`HS65_LS_OA222X18_A_F_Z_F_01101);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_00110,`HS65_LS_OA222X18_A_F_Z_F_00110);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_00101,`HS65_LS_OA222X18_A_F_Z_F_00101);
		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X18_A_R_Z_R_00111,`HS65_LS_OA222X18_A_F_Z_F_00111);
		if (!A && C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01110,`HS65_LS_OA222X18_B_F_Z_F_01110);
		if (!A && C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01111,`HS65_LS_OA222X18_B_F_Z_F_01111);
		if (!A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01001,`HS65_LS_OA222X18_B_F_Z_F_01001);
		if (!A && C && !D && E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01011,`HS65_LS_OA222X18_B_F_Z_F_01011);
		if (!A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01010,`HS65_LS_OA222X18_B_F_Z_F_01010);
		if (!A && C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_01101,`HS65_LS_OA222X18_B_F_Z_F_01101);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_00110,`HS65_LS_OA222X18_B_F_Z_F_00110);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_00101,`HS65_LS_OA222X18_B_F_Z_F_00101);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X18_B_R_Z_R_00111,`HS65_LS_OA222X18_B_F_Z_F_00111);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_11010,`HS65_LS_OA222X18_C_F_Z_F_11010);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_11011,`HS65_LS_OA222X18_C_F_Z_F_11011);
		if (A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_10001,`HS65_LS_OA222X18_C_F_Z_F_10001);
		if (A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_10011,`HS65_LS_OA222X18_C_F_Z_F_10011);
		if (A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_10010,`HS65_LS_OA222X18_C_F_Z_F_10010);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_11001,`HS65_LS_OA222X18_C_F_Z_F_11001);
		if (!A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_01010,`HS65_LS_OA222X18_C_F_Z_F_01010);
		if (!A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_01001,`HS65_LS_OA222X18_C_F_Z_F_01001);
		if (!A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X18_C_R_Z_R_01011,`HS65_LS_OA222X18_C_F_Z_F_01011);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_11010,`HS65_LS_OA222X18_D_F_Z_F_11010);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_11011,`HS65_LS_OA222X18_D_F_Z_F_11011);
		if (A && !B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_10001,`HS65_LS_OA222X18_D_F_Z_F_10001);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_10011,`HS65_LS_OA222X18_D_F_Z_F_10011);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_10010,`HS65_LS_OA222X18_D_F_Z_F_10010);
		if (A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_11001,`HS65_LS_OA222X18_D_F_Z_F_11001);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_01010,`HS65_LS_OA222X18_D_F_Z_F_01010);
		if (!A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_01001,`HS65_LS_OA222X18_D_F_Z_F_01001);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X18_D_R_Z_R_01011,`HS65_LS_OA222X18_D_F_Z_F_01011);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_11100,`HS65_LS_OA222X18_E_F_Z_F_11100);
		if (A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_11110,`HS65_LS_OA222X18_E_F_Z_F_11110);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_10010,`HS65_LS_OA222X18_E_F_Z_F_10010);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_10110,`HS65_LS_OA222X18_E_F_Z_F_10110);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_10100,`HS65_LS_OA222X18_E_F_Z_F_10100);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_11010,`HS65_LS_OA222X18_E_F_Z_F_11010);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_01100,`HS65_LS_OA222X18_E_F_Z_F_01100);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_01010,`HS65_LS_OA222X18_E_F_Z_F_01010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X18_E_R_Z_R_01110,`HS65_LS_OA222X18_E_F_Z_F_01110);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_11100,`HS65_LS_OA222X18_F_F_Z_F_11100);
		if (A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_11110,`HS65_LS_OA222X18_F_F_Z_F_11110);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_10010,`HS65_LS_OA222X18_F_F_Z_F_10010);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_10110,`HS65_LS_OA222X18_F_F_Z_F_10110);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_10100,`HS65_LS_OA222X18_F_F_Z_F_10100);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_11010,`HS65_LS_OA222X18_F_F_Z_F_11010);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_01100,`HS65_LS_OA222X18_F_F_Z_F_01100);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_01010,`HS65_LS_OA222X18_F_F_Z_F_01010);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X18_F_R_Z_R_01110,`HS65_LS_OA222X18_F_F_Z_F_01110);


	endspecify

endmodule // HS65_LS_OA222X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA222X27_A_R_Z_R_01110 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01110 0.1
`define HS65_LS_OA222X27_A_R_Z_R_01111 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01111 0.1
`define HS65_LS_OA222X27_A_R_Z_R_01001 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01001 0.1
`define HS65_LS_OA222X27_A_R_Z_R_01011 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01011 0.1
`define HS65_LS_OA222X27_A_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_A_R_Z_R_01101 0.1
`define HS65_LS_OA222X27_A_F_Z_F_01101 0.1
`define HS65_LS_OA222X27_A_R_Z_R_00110 0.1
`define HS65_LS_OA222X27_A_F_Z_F_00110 0.1
`define HS65_LS_OA222X27_A_R_Z_R_00101 0.1
`define HS65_LS_OA222X27_A_F_Z_F_00101 0.1
`define HS65_LS_OA222X27_A_R_Z_R_00111 0.1
`define HS65_LS_OA222X27_A_F_Z_F_00111 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01110 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01110 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01111 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01111 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01001 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01001 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01011 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01011 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_B_R_Z_R_01101 0.1
`define HS65_LS_OA222X27_B_F_Z_F_01101 0.1
`define HS65_LS_OA222X27_B_R_Z_R_00110 0.1
`define HS65_LS_OA222X27_B_F_Z_F_00110 0.1
`define HS65_LS_OA222X27_B_R_Z_R_00101 0.1
`define HS65_LS_OA222X27_B_F_Z_F_00101 0.1
`define HS65_LS_OA222X27_B_R_Z_R_00111 0.1
`define HS65_LS_OA222X27_B_F_Z_F_00111 0.1
`define HS65_LS_OA222X27_C_R_Z_R_11010 0.1
`define HS65_LS_OA222X27_C_F_Z_F_11010 0.1
`define HS65_LS_OA222X27_C_R_Z_R_11011 0.1
`define HS65_LS_OA222X27_C_F_Z_F_11011 0.1
`define HS65_LS_OA222X27_C_R_Z_R_10001 0.1
`define HS65_LS_OA222X27_C_F_Z_F_10001 0.1
`define HS65_LS_OA222X27_C_R_Z_R_10011 0.1
`define HS65_LS_OA222X27_C_F_Z_F_10011 0.1
`define HS65_LS_OA222X27_C_R_Z_R_10010 0.1
`define HS65_LS_OA222X27_C_F_Z_F_10010 0.1
`define HS65_LS_OA222X27_C_R_Z_R_11001 0.1
`define HS65_LS_OA222X27_C_F_Z_F_11001 0.1
`define HS65_LS_OA222X27_C_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_C_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_C_R_Z_R_01001 0.1
`define HS65_LS_OA222X27_C_F_Z_F_01001 0.1
`define HS65_LS_OA222X27_C_R_Z_R_01011 0.1
`define HS65_LS_OA222X27_C_F_Z_F_01011 0.1
`define HS65_LS_OA222X27_D_R_Z_R_11010 0.1
`define HS65_LS_OA222X27_D_F_Z_F_11010 0.1
`define HS65_LS_OA222X27_D_R_Z_R_11011 0.1
`define HS65_LS_OA222X27_D_F_Z_F_11011 0.1
`define HS65_LS_OA222X27_D_R_Z_R_10001 0.1
`define HS65_LS_OA222X27_D_F_Z_F_10001 0.1
`define HS65_LS_OA222X27_D_R_Z_R_10011 0.1
`define HS65_LS_OA222X27_D_F_Z_F_10011 0.1
`define HS65_LS_OA222X27_D_R_Z_R_10010 0.1
`define HS65_LS_OA222X27_D_F_Z_F_10010 0.1
`define HS65_LS_OA222X27_D_R_Z_R_11001 0.1
`define HS65_LS_OA222X27_D_F_Z_F_11001 0.1
`define HS65_LS_OA222X27_D_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_D_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_D_R_Z_R_01001 0.1
`define HS65_LS_OA222X27_D_F_Z_F_01001 0.1
`define HS65_LS_OA222X27_D_R_Z_R_01011 0.1
`define HS65_LS_OA222X27_D_F_Z_F_01011 0.1
`define HS65_LS_OA222X27_E_R_Z_R_11100 0.1
`define HS65_LS_OA222X27_E_F_Z_F_11100 0.1
`define HS65_LS_OA222X27_E_R_Z_R_11110 0.1
`define HS65_LS_OA222X27_E_F_Z_F_11110 0.1
`define HS65_LS_OA222X27_E_R_Z_R_10010 0.1
`define HS65_LS_OA222X27_E_F_Z_F_10010 0.1
`define HS65_LS_OA222X27_E_R_Z_R_10110 0.1
`define HS65_LS_OA222X27_E_F_Z_F_10110 0.1
`define HS65_LS_OA222X27_E_R_Z_R_10100 0.1
`define HS65_LS_OA222X27_E_F_Z_F_10100 0.1
`define HS65_LS_OA222X27_E_R_Z_R_11010 0.1
`define HS65_LS_OA222X27_E_F_Z_F_11010 0.1
`define HS65_LS_OA222X27_E_R_Z_R_01100 0.1
`define HS65_LS_OA222X27_E_F_Z_F_01100 0.1
`define HS65_LS_OA222X27_E_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_E_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_E_R_Z_R_01110 0.1
`define HS65_LS_OA222X27_E_F_Z_F_01110 0.1
`define HS65_LS_OA222X27_F_R_Z_R_11100 0.1
`define HS65_LS_OA222X27_F_F_Z_F_11100 0.1
`define HS65_LS_OA222X27_F_R_Z_R_11110 0.1
`define HS65_LS_OA222X27_F_F_Z_F_11110 0.1
`define HS65_LS_OA222X27_F_R_Z_R_10010 0.1
`define HS65_LS_OA222X27_F_F_Z_F_10010 0.1
`define HS65_LS_OA222X27_F_R_Z_R_10110 0.1
`define HS65_LS_OA222X27_F_F_Z_F_10110 0.1
`define HS65_LS_OA222X27_F_R_Z_R_10100 0.1
`define HS65_LS_OA222X27_F_F_Z_F_10100 0.1
`define HS65_LS_OA222X27_F_R_Z_R_11010 0.1
`define HS65_LS_OA222X27_F_F_Z_F_11010 0.1
`define HS65_LS_OA222X27_F_R_Z_R_01100 0.1
`define HS65_LS_OA222X27_F_F_Z_F_01100 0.1
`define HS65_LS_OA222X27_F_R_Z_R_01010 0.1
`define HS65_LS_OA222X27_F_F_Z_F_01010 0.1
`define HS65_LS_OA222X27_F_R_Z_R_01110 0.1
`define HS65_LS_OA222X27_F_F_Z_F_01110 0.1

module HS65_LS_OA222X27 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (NET1, INTERNAL1) ;
	not   #1 U6 (Z, NET1) ;



	specify

		if (!B && C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01110,`HS65_LS_OA222X27_A_F_Z_F_01110);
		if (!B && C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01111,`HS65_LS_OA222X27_A_F_Z_F_01111);
		if (!B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01001,`HS65_LS_OA222X27_A_F_Z_F_01001);
		if (!B && C && !D && E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01011,`HS65_LS_OA222X27_A_F_Z_F_01011);
		if (!B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01010,`HS65_LS_OA222X27_A_F_Z_F_01010);
		if (!B && C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_01101,`HS65_LS_OA222X27_A_F_Z_F_01101);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_00110,`HS65_LS_OA222X27_A_F_Z_F_00110);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_00101,`HS65_LS_OA222X27_A_F_Z_F_00101);
		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X27_A_R_Z_R_00111,`HS65_LS_OA222X27_A_F_Z_F_00111);
		if (!A && C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01110,`HS65_LS_OA222X27_B_F_Z_F_01110);
		if (!A && C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01111,`HS65_LS_OA222X27_B_F_Z_F_01111);
		if (!A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01001,`HS65_LS_OA222X27_B_F_Z_F_01001);
		if (!A && C && !D && E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01011,`HS65_LS_OA222X27_B_F_Z_F_01011);
		if (!A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01010,`HS65_LS_OA222X27_B_F_Z_F_01010);
		if (!A && C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_01101,`HS65_LS_OA222X27_B_F_Z_F_01101);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_00110,`HS65_LS_OA222X27_B_F_Z_F_00110);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_00101,`HS65_LS_OA222X27_B_F_Z_F_00101);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X27_B_R_Z_R_00111,`HS65_LS_OA222X27_B_F_Z_F_00111);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_11010,`HS65_LS_OA222X27_C_F_Z_F_11010);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_11011,`HS65_LS_OA222X27_C_F_Z_F_11011);
		if (A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_10001,`HS65_LS_OA222X27_C_F_Z_F_10001);
		if (A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_10011,`HS65_LS_OA222X27_C_F_Z_F_10011);
		if (A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_10010,`HS65_LS_OA222X27_C_F_Z_F_10010);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_11001,`HS65_LS_OA222X27_C_F_Z_F_11001);
		if (!A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_01010,`HS65_LS_OA222X27_C_F_Z_F_01010);
		if (!A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_01001,`HS65_LS_OA222X27_C_F_Z_F_01001);
		if (!A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X27_C_R_Z_R_01011,`HS65_LS_OA222X27_C_F_Z_F_01011);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_11010,`HS65_LS_OA222X27_D_F_Z_F_11010);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_11011,`HS65_LS_OA222X27_D_F_Z_F_11011);
		if (A && !B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_10001,`HS65_LS_OA222X27_D_F_Z_F_10001);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_10011,`HS65_LS_OA222X27_D_F_Z_F_10011);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_10010,`HS65_LS_OA222X27_D_F_Z_F_10010);
		if (A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_11001,`HS65_LS_OA222X27_D_F_Z_F_11001);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_01010,`HS65_LS_OA222X27_D_F_Z_F_01010);
		if (!A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_01001,`HS65_LS_OA222X27_D_F_Z_F_01001);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X27_D_R_Z_R_01011,`HS65_LS_OA222X27_D_F_Z_F_01011);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_11100,`HS65_LS_OA222X27_E_F_Z_F_11100);
		if (A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_11110,`HS65_LS_OA222X27_E_F_Z_F_11110);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_10010,`HS65_LS_OA222X27_E_F_Z_F_10010);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_10110,`HS65_LS_OA222X27_E_F_Z_F_10110);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_10100,`HS65_LS_OA222X27_E_F_Z_F_10100);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_11010,`HS65_LS_OA222X27_E_F_Z_F_11010);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_01100,`HS65_LS_OA222X27_E_F_Z_F_01100);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_01010,`HS65_LS_OA222X27_E_F_Z_F_01010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X27_E_R_Z_R_01110,`HS65_LS_OA222X27_E_F_Z_F_01110);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_11100,`HS65_LS_OA222X27_F_F_Z_F_11100);
		if (A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_11110,`HS65_LS_OA222X27_F_F_Z_F_11110);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_10010,`HS65_LS_OA222X27_F_F_Z_F_10010);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_10110,`HS65_LS_OA222X27_F_F_Z_F_10110);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_10100,`HS65_LS_OA222X27_F_F_Z_F_10100);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_11010,`HS65_LS_OA222X27_F_F_Z_F_11010);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_01100,`HS65_LS_OA222X27_F_F_Z_F_01100);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_01010,`HS65_LS_OA222X27_F_F_Z_F_01010);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X27_F_R_Z_R_01110,`HS65_LS_OA222X27_F_F_Z_F_01110);


	endspecify

endmodule // HS65_LS_OA222X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA222X35_A_R_Z_R_01110 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01110 0.1
`define HS65_LS_OA222X35_A_R_Z_R_01111 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01111 0.1
`define HS65_LS_OA222X35_A_R_Z_R_01001 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01001 0.1
`define HS65_LS_OA222X35_A_R_Z_R_01011 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01011 0.1
`define HS65_LS_OA222X35_A_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_A_R_Z_R_01101 0.1
`define HS65_LS_OA222X35_A_F_Z_F_01101 0.1
`define HS65_LS_OA222X35_A_R_Z_R_00110 0.1
`define HS65_LS_OA222X35_A_F_Z_F_00110 0.1
`define HS65_LS_OA222X35_A_R_Z_R_00101 0.1
`define HS65_LS_OA222X35_A_F_Z_F_00101 0.1
`define HS65_LS_OA222X35_A_R_Z_R_00111 0.1
`define HS65_LS_OA222X35_A_F_Z_F_00111 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01110 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01110 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01111 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01111 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01001 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01001 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01011 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01011 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_B_R_Z_R_01101 0.1
`define HS65_LS_OA222X35_B_F_Z_F_01101 0.1
`define HS65_LS_OA222X35_B_R_Z_R_00110 0.1
`define HS65_LS_OA222X35_B_F_Z_F_00110 0.1
`define HS65_LS_OA222X35_B_R_Z_R_00101 0.1
`define HS65_LS_OA222X35_B_F_Z_F_00101 0.1
`define HS65_LS_OA222X35_B_R_Z_R_00111 0.1
`define HS65_LS_OA222X35_B_F_Z_F_00111 0.1
`define HS65_LS_OA222X35_C_R_Z_R_11010 0.1
`define HS65_LS_OA222X35_C_F_Z_F_11010 0.1
`define HS65_LS_OA222X35_C_R_Z_R_11011 0.1
`define HS65_LS_OA222X35_C_F_Z_F_11011 0.1
`define HS65_LS_OA222X35_C_R_Z_R_10001 0.1
`define HS65_LS_OA222X35_C_F_Z_F_10001 0.1
`define HS65_LS_OA222X35_C_R_Z_R_10011 0.1
`define HS65_LS_OA222X35_C_F_Z_F_10011 0.1
`define HS65_LS_OA222X35_C_R_Z_R_10010 0.1
`define HS65_LS_OA222X35_C_F_Z_F_10010 0.1
`define HS65_LS_OA222X35_C_R_Z_R_11001 0.1
`define HS65_LS_OA222X35_C_F_Z_F_11001 0.1
`define HS65_LS_OA222X35_C_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_C_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_C_R_Z_R_01001 0.1
`define HS65_LS_OA222X35_C_F_Z_F_01001 0.1
`define HS65_LS_OA222X35_C_R_Z_R_01011 0.1
`define HS65_LS_OA222X35_C_F_Z_F_01011 0.1
`define HS65_LS_OA222X35_D_R_Z_R_11010 0.1
`define HS65_LS_OA222X35_D_F_Z_F_11010 0.1
`define HS65_LS_OA222X35_D_R_Z_R_11011 0.1
`define HS65_LS_OA222X35_D_F_Z_F_11011 0.1
`define HS65_LS_OA222X35_D_R_Z_R_10001 0.1
`define HS65_LS_OA222X35_D_F_Z_F_10001 0.1
`define HS65_LS_OA222X35_D_R_Z_R_10011 0.1
`define HS65_LS_OA222X35_D_F_Z_F_10011 0.1
`define HS65_LS_OA222X35_D_R_Z_R_10010 0.1
`define HS65_LS_OA222X35_D_F_Z_F_10010 0.1
`define HS65_LS_OA222X35_D_R_Z_R_11001 0.1
`define HS65_LS_OA222X35_D_F_Z_F_11001 0.1
`define HS65_LS_OA222X35_D_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_D_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_D_R_Z_R_01001 0.1
`define HS65_LS_OA222X35_D_F_Z_F_01001 0.1
`define HS65_LS_OA222X35_D_R_Z_R_01011 0.1
`define HS65_LS_OA222X35_D_F_Z_F_01011 0.1
`define HS65_LS_OA222X35_E_R_Z_R_11100 0.1
`define HS65_LS_OA222X35_E_F_Z_F_11100 0.1
`define HS65_LS_OA222X35_E_R_Z_R_11110 0.1
`define HS65_LS_OA222X35_E_F_Z_F_11110 0.1
`define HS65_LS_OA222X35_E_R_Z_R_10010 0.1
`define HS65_LS_OA222X35_E_F_Z_F_10010 0.1
`define HS65_LS_OA222X35_E_R_Z_R_10110 0.1
`define HS65_LS_OA222X35_E_F_Z_F_10110 0.1
`define HS65_LS_OA222X35_E_R_Z_R_10100 0.1
`define HS65_LS_OA222X35_E_F_Z_F_10100 0.1
`define HS65_LS_OA222X35_E_R_Z_R_11010 0.1
`define HS65_LS_OA222X35_E_F_Z_F_11010 0.1
`define HS65_LS_OA222X35_E_R_Z_R_01100 0.1
`define HS65_LS_OA222X35_E_F_Z_F_01100 0.1
`define HS65_LS_OA222X35_E_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_E_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_E_R_Z_R_01110 0.1
`define HS65_LS_OA222X35_E_F_Z_F_01110 0.1
`define HS65_LS_OA222X35_F_R_Z_R_11100 0.1
`define HS65_LS_OA222X35_F_F_Z_F_11100 0.1
`define HS65_LS_OA222X35_F_R_Z_R_11110 0.1
`define HS65_LS_OA222X35_F_F_Z_F_11110 0.1
`define HS65_LS_OA222X35_F_R_Z_R_10010 0.1
`define HS65_LS_OA222X35_F_F_Z_F_10010 0.1
`define HS65_LS_OA222X35_F_R_Z_R_10110 0.1
`define HS65_LS_OA222X35_F_F_Z_F_10110 0.1
`define HS65_LS_OA222X35_F_R_Z_R_10100 0.1
`define HS65_LS_OA222X35_F_F_Z_F_10100 0.1
`define HS65_LS_OA222X35_F_R_Z_R_11010 0.1
`define HS65_LS_OA222X35_F_F_Z_F_11010 0.1
`define HS65_LS_OA222X35_F_R_Z_R_01100 0.1
`define HS65_LS_OA222X35_F_F_Z_F_01100 0.1
`define HS65_LS_OA222X35_F_R_Z_R_01010 0.1
`define HS65_LS_OA222X35_F_F_Z_F_01010 0.1
`define HS65_LS_OA222X35_F_R_Z_R_01110 0.1
`define HS65_LS_OA222X35_F_F_Z_F_01110 0.1

module HS65_LS_OA222X35 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (NET1, INTERNAL1) ;
	not   #1 U6 (Z, NET1) ;



	specify

		if (!B && C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01110,`HS65_LS_OA222X35_A_F_Z_F_01110);
		if (!B && C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01111,`HS65_LS_OA222X35_A_F_Z_F_01111);
		if (!B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01001,`HS65_LS_OA222X35_A_F_Z_F_01001);
		if (!B && C && !D && E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01011,`HS65_LS_OA222X35_A_F_Z_F_01011);
		if (!B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01010,`HS65_LS_OA222X35_A_F_Z_F_01010);
		if (!B && C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_01101,`HS65_LS_OA222X35_A_F_Z_F_01101);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_00110,`HS65_LS_OA222X35_A_F_Z_F_00110);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_00101,`HS65_LS_OA222X35_A_F_Z_F_00101);
		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X35_A_R_Z_R_00111,`HS65_LS_OA222X35_A_F_Z_F_00111);
		if (!A && C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01110,`HS65_LS_OA222X35_B_F_Z_F_01110);
		if (!A && C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01111,`HS65_LS_OA222X35_B_F_Z_F_01111);
		if (!A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01001,`HS65_LS_OA222X35_B_F_Z_F_01001);
		if (!A && C && !D && E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01011,`HS65_LS_OA222X35_B_F_Z_F_01011);
		if (!A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01010,`HS65_LS_OA222X35_B_F_Z_F_01010);
		if (!A && C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_01101,`HS65_LS_OA222X35_B_F_Z_F_01101);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_00110,`HS65_LS_OA222X35_B_F_Z_F_00110);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_00101,`HS65_LS_OA222X35_B_F_Z_F_00101);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X35_B_R_Z_R_00111,`HS65_LS_OA222X35_B_F_Z_F_00111);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_11010,`HS65_LS_OA222X35_C_F_Z_F_11010);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_11011,`HS65_LS_OA222X35_C_F_Z_F_11011);
		if (A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_10001,`HS65_LS_OA222X35_C_F_Z_F_10001);
		if (A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_10011,`HS65_LS_OA222X35_C_F_Z_F_10011);
		if (A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_10010,`HS65_LS_OA222X35_C_F_Z_F_10010);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_11001,`HS65_LS_OA222X35_C_F_Z_F_11001);
		if (!A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_01010,`HS65_LS_OA222X35_C_F_Z_F_01010);
		if (!A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_01001,`HS65_LS_OA222X35_C_F_Z_F_01001);
		if (!A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X35_C_R_Z_R_01011,`HS65_LS_OA222X35_C_F_Z_F_01011);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_11010,`HS65_LS_OA222X35_D_F_Z_F_11010);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_11011,`HS65_LS_OA222X35_D_F_Z_F_11011);
		if (A && !B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_10001,`HS65_LS_OA222X35_D_F_Z_F_10001);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_10011,`HS65_LS_OA222X35_D_F_Z_F_10011);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_10010,`HS65_LS_OA222X35_D_F_Z_F_10010);
		if (A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_11001,`HS65_LS_OA222X35_D_F_Z_F_11001);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_01010,`HS65_LS_OA222X35_D_F_Z_F_01010);
		if (!A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_01001,`HS65_LS_OA222X35_D_F_Z_F_01001);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X35_D_R_Z_R_01011,`HS65_LS_OA222X35_D_F_Z_F_01011);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_11100,`HS65_LS_OA222X35_E_F_Z_F_11100);
		if (A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_11110,`HS65_LS_OA222X35_E_F_Z_F_11110);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_10010,`HS65_LS_OA222X35_E_F_Z_F_10010);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_10110,`HS65_LS_OA222X35_E_F_Z_F_10110);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_10100,`HS65_LS_OA222X35_E_F_Z_F_10100);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_11010,`HS65_LS_OA222X35_E_F_Z_F_11010);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_01100,`HS65_LS_OA222X35_E_F_Z_F_01100);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_01010,`HS65_LS_OA222X35_E_F_Z_F_01010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X35_E_R_Z_R_01110,`HS65_LS_OA222X35_E_F_Z_F_01110);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_11100,`HS65_LS_OA222X35_F_F_Z_F_11100);
		if (A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_11110,`HS65_LS_OA222X35_F_F_Z_F_11110);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_10010,`HS65_LS_OA222X35_F_F_Z_F_10010);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_10110,`HS65_LS_OA222X35_F_F_Z_F_10110);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_10100,`HS65_LS_OA222X35_F_F_Z_F_10100);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_11010,`HS65_LS_OA222X35_F_F_Z_F_11010);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_01100,`HS65_LS_OA222X35_F_F_Z_F_01100);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_01010,`HS65_LS_OA222X35_F_F_Z_F_01010);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X35_F_R_Z_R_01110,`HS65_LS_OA222X35_F_F_Z_F_01110);


	endspecify

endmodule // HS65_LS_OA222X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA222X4_A_R_Z_R_01110 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01110 0.1
`define HS65_LS_OA222X4_A_R_Z_R_01111 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01111 0.1
`define HS65_LS_OA222X4_A_R_Z_R_01001 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01001 0.1
`define HS65_LS_OA222X4_A_R_Z_R_01011 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01011 0.1
`define HS65_LS_OA222X4_A_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_A_R_Z_R_01101 0.1
`define HS65_LS_OA222X4_A_F_Z_F_01101 0.1
`define HS65_LS_OA222X4_A_R_Z_R_00110 0.1
`define HS65_LS_OA222X4_A_F_Z_F_00110 0.1
`define HS65_LS_OA222X4_A_R_Z_R_00101 0.1
`define HS65_LS_OA222X4_A_F_Z_F_00101 0.1
`define HS65_LS_OA222X4_A_R_Z_R_00111 0.1
`define HS65_LS_OA222X4_A_F_Z_F_00111 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01110 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01110 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01111 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01111 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01001 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01001 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01011 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01011 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_B_R_Z_R_01101 0.1
`define HS65_LS_OA222X4_B_F_Z_F_01101 0.1
`define HS65_LS_OA222X4_B_R_Z_R_00110 0.1
`define HS65_LS_OA222X4_B_F_Z_F_00110 0.1
`define HS65_LS_OA222X4_B_R_Z_R_00101 0.1
`define HS65_LS_OA222X4_B_F_Z_F_00101 0.1
`define HS65_LS_OA222X4_B_R_Z_R_00111 0.1
`define HS65_LS_OA222X4_B_F_Z_F_00111 0.1
`define HS65_LS_OA222X4_C_R_Z_R_11010 0.1
`define HS65_LS_OA222X4_C_F_Z_F_11010 0.1
`define HS65_LS_OA222X4_C_R_Z_R_11011 0.1
`define HS65_LS_OA222X4_C_F_Z_F_11011 0.1
`define HS65_LS_OA222X4_C_R_Z_R_10001 0.1
`define HS65_LS_OA222X4_C_F_Z_F_10001 0.1
`define HS65_LS_OA222X4_C_R_Z_R_10011 0.1
`define HS65_LS_OA222X4_C_F_Z_F_10011 0.1
`define HS65_LS_OA222X4_C_R_Z_R_10010 0.1
`define HS65_LS_OA222X4_C_F_Z_F_10010 0.1
`define HS65_LS_OA222X4_C_R_Z_R_11001 0.1
`define HS65_LS_OA222X4_C_F_Z_F_11001 0.1
`define HS65_LS_OA222X4_C_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_C_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_C_R_Z_R_01001 0.1
`define HS65_LS_OA222X4_C_F_Z_F_01001 0.1
`define HS65_LS_OA222X4_C_R_Z_R_01011 0.1
`define HS65_LS_OA222X4_C_F_Z_F_01011 0.1
`define HS65_LS_OA222X4_D_R_Z_R_11010 0.1
`define HS65_LS_OA222X4_D_F_Z_F_11010 0.1
`define HS65_LS_OA222X4_D_R_Z_R_11011 0.1
`define HS65_LS_OA222X4_D_F_Z_F_11011 0.1
`define HS65_LS_OA222X4_D_R_Z_R_10001 0.1
`define HS65_LS_OA222X4_D_F_Z_F_10001 0.1
`define HS65_LS_OA222X4_D_R_Z_R_10011 0.1
`define HS65_LS_OA222X4_D_F_Z_F_10011 0.1
`define HS65_LS_OA222X4_D_R_Z_R_10010 0.1
`define HS65_LS_OA222X4_D_F_Z_F_10010 0.1
`define HS65_LS_OA222X4_D_R_Z_R_11001 0.1
`define HS65_LS_OA222X4_D_F_Z_F_11001 0.1
`define HS65_LS_OA222X4_D_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_D_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_D_R_Z_R_01001 0.1
`define HS65_LS_OA222X4_D_F_Z_F_01001 0.1
`define HS65_LS_OA222X4_D_R_Z_R_01011 0.1
`define HS65_LS_OA222X4_D_F_Z_F_01011 0.1
`define HS65_LS_OA222X4_E_R_Z_R_11100 0.1
`define HS65_LS_OA222X4_E_F_Z_F_11100 0.1
`define HS65_LS_OA222X4_E_R_Z_R_11110 0.1
`define HS65_LS_OA222X4_E_F_Z_F_11110 0.1
`define HS65_LS_OA222X4_E_R_Z_R_10010 0.1
`define HS65_LS_OA222X4_E_F_Z_F_10010 0.1
`define HS65_LS_OA222X4_E_R_Z_R_10110 0.1
`define HS65_LS_OA222X4_E_F_Z_F_10110 0.1
`define HS65_LS_OA222X4_E_R_Z_R_10100 0.1
`define HS65_LS_OA222X4_E_F_Z_F_10100 0.1
`define HS65_LS_OA222X4_E_R_Z_R_11010 0.1
`define HS65_LS_OA222X4_E_F_Z_F_11010 0.1
`define HS65_LS_OA222X4_E_R_Z_R_01100 0.1
`define HS65_LS_OA222X4_E_F_Z_F_01100 0.1
`define HS65_LS_OA222X4_E_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_E_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_E_R_Z_R_01110 0.1
`define HS65_LS_OA222X4_E_F_Z_F_01110 0.1
`define HS65_LS_OA222X4_F_R_Z_R_11100 0.1
`define HS65_LS_OA222X4_F_F_Z_F_11100 0.1
`define HS65_LS_OA222X4_F_R_Z_R_11110 0.1
`define HS65_LS_OA222X4_F_F_Z_F_11110 0.1
`define HS65_LS_OA222X4_F_R_Z_R_10010 0.1
`define HS65_LS_OA222X4_F_F_Z_F_10010 0.1
`define HS65_LS_OA222X4_F_R_Z_R_10110 0.1
`define HS65_LS_OA222X4_F_F_Z_F_10110 0.1
`define HS65_LS_OA222X4_F_R_Z_R_10100 0.1
`define HS65_LS_OA222X4_F_F_Z_F_10100 0.1
`define HS65_LS_OA222X4_F_R_Z_R_11010 0.1
`define HS65_LS_OA222X4_F_F_Z_F_11010 0.1
`define HS65_LS_OA222X4_F_R_Z_R_01100 0.1
`define HS65_LS_OA222X4_F_F_Z_F_01100 0.1
`define HS65_LS_OA222X4_F_R_Z_R_01010 0.1
`define HS65_LS_OA222X4_F_F_Z_F_01010 0.1
`define HS65_LS_OA222X4_F_R_Z_R_01110 0.1
`define HS65_LS_OA222X4_F_F_Z_F_01110 0.1

module HS65_LS_OA222X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (NET1, INTERNAL1) ;
	not   #1 U6 (Z, NET1) ;



	specify

		if (!B && C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01110,`HS65_LS_OA222X4_A_F_Z_F_01110);
		if (!B && C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01111,`HS65_LS_OA222X4_A_F_Z_F_01111);
		if (!B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01001,`HS65_LS_OA222X4_A_F_Z_F_01001);
		if (!B && C && !D && E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01011,`HS65_LS_OA222X4_A_F_Z_F_01011);
		if (!B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01010,`HS65_LS_OA222X4_A_F_Z_F_01010);
		if (!B && C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_01101,`HS65_LS_OA222X4_A_F_Z_F_01101);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_00110,`HS65_LS_OA222X4_A_F_Z_F_00110);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_00101,`HS65_LS_OA222X4_A_F_Z_F_00101);
		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X4_A_R_Z_R_00111,`HS65_LS_OA222X4_A_F_Z_F_00111);
		if (!A && C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01110,`HS65_LS_OA222X4_B_F_Z_F_01110);
		if (!A && C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01111,`HS65_LS_OA222X4_B_F_Z_F_01111);
		if (!A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01001,`HS65_LS_OA222X4_B_F_Z_F_01001);
		if (!A && C && !D && E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01011,`HS65_LS_OA222X4_B_F_Z_F_01011);
		if (!A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01010,`HS65_LS_OA222X4_B_F_Z_F_01010);
		if (!A && C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_01101,`HS65_LS_OA222X4_B_F_Z_F_01101);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_00110,`HS65_LS_OA222X4_B_F_Z_F_00110);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_00101,`HS65_LS_OA222X4_B_F_Z_F_00101);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X4_B_R_Z_R_00111,`HS65_LS_OA222X4_B_F_Z_F_00111);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_11010,`HS65_LS_OA222X4_C_F_Z_F_11010);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_11011,`HS65_LS_OA222X4_C_F_Z_F_11011);
		if (A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_10001,`HS65_LS_OA222X4_C_F_Z_F_10001);
		if (A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_10011,`HS65_LS_OA222X4_C_F_Z_F_10011);
		if (A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_10010,`HS65_LS_OA222X4_C_F_Z_F_10010);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_11001,`HS65_LS_OA222X4_C_F_Z_F_11001);
		if (!A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_01010,`HS65_LS_OA222X4_C_F_Z_F_01010);
		if (!A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_01001,`HS65_LS_OA222X4_C_F_Z_F_01001);
		if (!A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X4_C_R_Z_R_01011,`HS65_LS_OA222X4_C_F_Z_F_01011);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_11010,`HS65_LS_OA222X4_D_F_Z_F_11010);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_11011,`HS65_LS_OA222X4_D_F_Z_F_11011);
		if (A && !B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_10001,`HS65_LS_OA222X4_D_F_Z_F_10001);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_10011,`HS65_LS_OA222X4_D_F_Z_F_10011);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_10010,`HS65_LS_OA222X4_D_F_Z_F_10010);
		if (A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_11001,`HS65_LS_OA222X4_D_F_Z_F_11001);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_01010,`HS65_LS_OA222X4_D_F_Z_F_01010);
		if (!A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_01001,`HS65_LS_OA222X4_D_F_Z_F_01001);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X4_D_R_Z_R_01011,`HS65_LS_OA222X4_D_F_Z_F_01011);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_11100,`HS65_LS_OA222X4_E_F_Z_F_11100);
		if (A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_11110,`HS65_LS_OA222X4_E_F_Z_F_11110);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_10010,`HS65_LS_OA222X4_E_F_Z_F_10010);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_10110,`HS65_LS_OA222X4_E_F_Z_F_10110);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_10100,`HS65_LS_OA222X4_E_F_Z_F_10100);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_11010,`HS65_LS_OA222X4_E_F_Z_F_11010);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_01100,`HS65_LS_OA222X4_E_F_Z_F_01100);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_01010,`HS65_LS_OA222X4_E_F_Z_F_01010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X4_E_R_Z_R_01110,`HS65_LS_OA222X4_E_F_Z_F_01110);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_11100,`HS65_LS_OA222X4_F_F_Z_F_11100);
		if (A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_11110,`HS65_LS_OA222X4_F_F_Z_F_11110);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_10010,`HS65_LS_OA222X4_F_F_Z_F_10010);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_10110,`HS65_LS_OA222X4_F_F_Z_F_10110);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_10100,`HS65_LS_OA222X4_F_F_Z_F_10100);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_11010,`HS65_LS_OA222X4_F_F_Z_F_11010);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_01100,`HS65_LS_OA222X4_F_F_Z_F_01100);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_01010,`HS65_LS_OA222X4_F_F_Z_F_01010);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X4_F_R_Z_R_01110,`HS65_LS_OA222X4_F_F_Z_F_01110);


	endspecify

endmodule // HS65_LS_OA222X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA222X9_A_R_Z_R_01110 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01110 0.1
`define HS65_LS_OA222X9_A_R_Z_R_01111 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01111 0.1
`define HS65_LS_OA222X9_A_R_Z_R_01001 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01001 0.1
`define HS65_LS_OA222X9_A_R_Z_R_01011 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01011 0.1
`define HS65_LS_OA222X9_A_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_A_R_Z_R_01101 0.1
`define HS65_LS_OA222X9_A_F_Z_F_01101 0.1
`define HS65_LS_OA222X9_A_R_Z_R_00110 0.1
`define HS65_LS_OA222X9_A_F_Z_F_00110 0.1
`define HS65_LS_OA222X9_A_R_Z_R_00101 0.1
`define HS65_LS_OA222X9_A_F_Z_F_00101 0.1
`define HS65_LS_OA222X9_A_R_Z_R_00111 0.1
`define HS65_LS_OA222X9_A_F_Z_F_00111 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01110 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01110 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01111 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01111 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01001 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01001 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01011 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01011 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_B_R_Z_R_01101 0.1
`define HS65_LS_OA222X9_B_F_Z_F_01101 0.1
`define HS65_LS_OA222X9_B_R_Z_R_00110 0.1
`define HS65_LS_OA222X9_B_F_Z_F_00110 0.1
`define HS65_LS_OA222X9_B_R_Z_R_00101 0.1
`define HS65_LS_OA222X9_B_F_Z_F_00101 0.1
`define HS65_LS_OA222X9_B_R_Z_R_00111 0.1
`define HS65_LS_OA222X9_B_F_Z_F_00111 0.1
`define HS65_LS_OA222X9_C_R_Z_R_11010 0.1
`define HS65_LS_OA222X9_C_F_Z_F_11010 0.1
`define HS65_LS_OA222X9_C_R_Z_R_11011 0.1
`define HS65_LS_OA222X9_C_F_Z_F_11011 0.1
`define HS65_LS_OA222X9_C_R_Z_R_10001 0.1
`define HS65_LS_OA222X9_C_F_Z_F_10001 0.1
`define HS65_LS_OA222X9_C_R_Z_R_10011 0.1
`define HS65_LS_OA222X9_C_F_Z_F_10011 0.1
`define HS65_LS_OA222X9_C_R_Z_R_10010 0.1
`define HS65_LS_OA222X9_C_F_Z_F_10010 0.1
`define HS65_LS_OA222X9_C_R_Z_R_11001 0.1
`define HS65_LS_OA222X9_C_F_Z_F_11001 0.1
`define HS65_LS_OA222X9_C_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_C_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_C_R_Z_R_01001 0.1
`define HS65_LS_OA222X9_C_F_Z_F_01001 0.1
`define HS65_LS_OA222X9_C_R_Z_R_01011 0.1
`define HS65_LS_OA222X9_C_F_Z_F_01011 0.1
`define HS65_LS_OA222X9_D_R_Z_R_11010 0.1
`define HS65_LS_OA222X9_D_F_Z_F_11010 0.1
`define HS65_LS_OA222X9_D_R_Z_R_11011 0.1
`define HS65_LS_OA222X9_D_F_Z_F_11011 0.1
`define HS65_LS_OA222X9_D_R_Z_R_10001 0.1
`define HS65_LS_OA222X9_D_F_Z_F_10001 0.1
`define HS65_LS_OA222X9_D_R_Z_R_10011 0.1
`define HS65_LS_OA222X9_D_F_Z_F_10011 0.1
`define HS65_LS_OA222X9_D_R_Z_R_10010 0.1
`define HS65_LS_OA222X9_D_F_Z_F_10010 0.1
`define HS65_LS_OA222X9_D_R_Z_R_11001 0.1
`define HS65_LS_OA222X9_D_F_Z_F_11001 0.1
`define HS65_LS_OA222X9_D_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_D_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_D_R_Z_R_01001 0.1
`define HS65_LS_OA222X9_D_F_Z_F_01001 0.1
`define HS65_LS_OA222X9_D_R_Z_R_01011 0.1
`define HS65_LS_OA222X9_D_F_Z_F_01011 0.1
`define HS65_LS_OA222X9_E_R_Z_R_11100 0.1
`define HS65_LS_OA222X9_E_F_Z_F_11100 0.1
`define HS65_LS_OA222X9_E_R_Z_R_11110 0.1
`define HS65_LS_OA222X9_E_F_Z_F_11110 0.1
`define HS65_LS_OA222X9_E_R_Z_R_10010 0.1
`define HS65_LS_OA222X9_E_F_Z_F_10010 0.1
`define HS65_LS_OA222X9_E_R_Z_R_10110 0.1
`define HS65_LS_OA222X9_E_F_Z_F_10110 0.1
`define HS65_LS_OA222X9_E_R_Z_R_10100 0.1
`define HS65_LS_OA222X9_E_F_Z_F_10100 0.1
`define HS65_LS_OA222X9_E_R_Z_R_11010 0.1
`define HS65_LS_OA222X9_E_F_Z_F_11010 0.1
`define HS65_LS_OA222X9_E_R_Z_R_01100 0.1
`define HS65_LS_OA222X9_E_F_Z_F_01100 0.1
`define HS65_LS_OA222X9_E_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_E_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_E_R_Z_R_01110 0.1
`define HS65_LS_OA222X9_E_F_Z_F_01110 0.1
`define HS65_LS_OA222X9_F_R_Z_R_11100 0.1
`define HS65_LS_OA222X9_F_F_Z_F_11100 0.1
`define HS65_LS_OA222X9_F_R_Z_R_11110 0.1
`define HS65_LS_OA222X9_F_F_Z_F_11110 0.1
`define HS65_LS_OA222X9_F_R_Z_R_10010 0.1
`define HS65_LS_OA222X9_F_F_Z_F_10010 0.1
`define HS65_LS_OA222X9_F_R_Z_R_10110 0.1
`define HS65_LS_OA222X9_F_F_Z_F_10110 0.1
`define HS65_LS_OA222X9_F_R_Z_R_10100 0.1
`define HS65_LS_OA222X9_F_F_Z_F_10100 0.1
`define HS65_LS_OA222X9_F_R_Z_R_11010 0.1
`define HS65_LS_OA222X9_F_F_Z_F_11010 0.1
`define HS65_LS_OA222X9_F_R_Z_R_01100 0.1
`define HS65_LS_OA222X9_F_F_Z_F_01100 0.1
`define HS65_LS_OA222X9_F_R_Z_R_01010 0.1
`define HS65_LS_OA222X9_F_F_Z_F_01010 0.1
`define HS65_LS_OA222X9_F_R_Z_R_01110 0.1
`define HS65_LS_OA222X9_F_F_Z_F_01110 0.1

module HS65_LS_OA222X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not    U5 (NET1, INTERNAL1) ;
	not   #1 U6 (Z, NET1) ;



	specify

		if (!B && C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01110,`HS65_LS_OA222X9_A_F_Z_F_01110);
		if (!B && C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01111,`HS65_LS_OA222X9_A_F_Z_F_01111);
		if (!B && C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01001,`HS65_LS_OA222X9_A_F_Z_F_01001);
		if (!B && C && !D && E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01011,`HS65_LS_OA222X9_A_F_Z_F_01011);
		if (!B && C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01010,`HS65_LS_OA222X9_A_F_Z_F_01010);
		if (!B && C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_01101,`HS65_LS_OA222X9_A_F_Z_F_01101);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_00110,`HS65_LS_OA222X9_A_F_Z_F_00110);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_00101,`HS65_LS_OA222X9_A_F_Z_F_00101);
		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA222X9_A_R_Z_R_00111,`HS65_LS_OA222X9_A_F_Z_F_00111);
		if (!A && C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01110,`HS65_LS_OA222X9_B_F_Z_F_01110);
		if (!A && C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01111,`HS65_LS_OA222X9_B_F_Z_F_01111);
		if (!A && C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01001,`HS65_LS_OA222X9_B_F_Z_F_01001);
		if (!A && C && !D && E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01011,`HS65_LS_OA222X9_B_F_Z_F_01011);
		if (!A && C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01010,`HS65_LS_OA222X9_B_F_Z_F_01010);
		if (!A && C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_01101,`HS65_LS_OA222X9_B_F_Z_F_01101);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_00110,`HS65_LS_OA222X9_B_F_Z_F_00110);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_00101,`HS65_LS_OA222X9_B_F_Z_F_00101);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA222X9_B_R_Z_R_00111,`HS65_LS_OA222X9_B_F_Z_F_00111);
		if (A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_11010,`HS65_LS_OA222X9_C_F_Z_F_11010);
		if (A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_11011,`HS65_LS_OA222X9_C_F_Z_F_11011);
		if (A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_10001,`HS65_LS_OA222X9_C_F_Z_F_10001);
		if (A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_10011,`HS65_LS_OA222X9_C_F_Z_F_10011);
		if (A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_10010,`HS65_LS_OA222X9_C_F_Z_F_10010);
		if (A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_11001,`HS65_LS_OA222X9_C_F_Z_F_11001);
		if (!A && B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_01010,`HS65_LS_OA222X9_C_F_Z_F_01010);
		if (!A && B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_01001,`HS65_LS_OA222X9_C_F_Z_F_01001);
		if (!A && B && !D && E && F) (C +=> Z) = (`HS65_LS_OA222X9_C_R_Z_R_01011,`HS65_LS_OA222X9_C_F_Z_F_01011);
		if (A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_11010,`HS65_LS_OA222X9_D_F_Z_F_11010);
		if (A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_11011,`HS65_LS_OA222X9_D_F_Z_F_11011);
		if (A && !B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_10001,`HS65_LS_OA222X9_D_F_Z_F_10001);
		if (A && !B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_10011,`HS65_LS_OA222X9_D_F_Z_F_10011);
		if (A && !B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_10010,`HS65_LS_OA222X9_D_F_Z_F_10010);
		if (A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_11001,`HS65_LS_OA222X9_D_F_Z_F_11001);
		if (!A && B && !C && E && !F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_01010,`HS65_LS_OA222X9_D_F_Z_F_01010);
		if (!A && B && !C && !E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_01001,`HS65_LS_OA222X9_D_F_Z_F_01001);
		if (!A && B && !C && E && F) (D +=> Z) = (`HS65_LS_OA222X9_D_R_Z_R_01011,`HS65_LS_OA222X9_D_F_Z_F_01011);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_11100,`HS65_LS_OA222X9_E_F_Z_F_11100);
		if (A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_11110,`HS65_LS_OA222X9_E_F_Z_F_11110);
		if (A && !B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_10010,`HS65_LS_OA222X9_E_F_Z_F_10010);
		if (A && !B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_10110,`HS65_LS_OA222X9_E_F_Z_F_10110);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_10100,`HS65_LS_OA222X9_E_F_Z_F_10100);
		if (A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_11010,`HS65_LS_OA222X9_E_F_Z_F_11010);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_01100,`HS65_LS_OA222X9_E_F_Z_F_01100);
		if (!A && B && !C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_01010,`HS65_LS_OA222X9_E_F_Z_F_01010);
		if (!A && B && C && D && !F) (E +=> Z) = (`HS65_LS_OA222X9_E_R_Z_R_01110,`HS65_LS_OA222X9_E_F_Z_F_01110);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_11100,`HS65_LS_OA222X9_F_F_Z_F_11100);
		if (A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_11110,`HS65_LS_OA222X9_F_F_Z_F_11110);
		if (A && !B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_10010,`HS65_LS_OA222X9_F_F_Z_F_10010);
		if (A && !B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_10110,`HS65_LS_OA222X9_F_F_Z_F_10110);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_10100,`HS65_LS_OA222X9_F_F_Z_F_10100);
		if (A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_11010,`HS65_LS_OA222X9_F_F_Z_F_11010);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_01100,`HS65_LS_OA222X9_F_F_Z_F_01100);
		if (!A && B && !C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_01010,`HS65_LS_OA222X9_F_F_Z_F_01010);
		if (!A && B && C && D && !E) (F +=> Z) = (`HS65_LS_OA222X9_F_R_Z_R_01110,`HS65_LS_OA222X9_F_F_Z_F_01110);


	endspecify

endmodule // HS65_LS_OA222X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA22X18_A_R_Z_R_010 0.1
`define HS65_LS_OA22X18_A_F_Z_F_010 0.1
`define HS65_LS_OA22X18_A_R_Z_R_001 0.1
`define HS65_LS_OA22X18_A_F_Z_F_001 0.1
`define HS65_LS_OA22X18_A_R_Z_R_011 0.1
`define HS65_LS_OA22X18_A_F_Z_F_011 0.1
`define HS65_LS_OA22X18_B_R_Z_R_010 0.1
`define HS65_LS_OA22X18_B_F_Z_F_010 0.1
`define HS65_LS_OA22X18_B_R_Z_R_001 0.1
`define HS65_LS_OA22X18_B_F_Z_F_001 0.1
`define HS65_LS_OA22X18_B_R_Z_R_011 0.1
`define HS65_LS_OA22X18_B_F_Z_F_011 0.1
`define HS65_LS_OA22X18_C_R_Z_R_100 0.1
`define HS65_LS_OA22X18_C_F_Z_F_100 0.1
`define HS65_LS_OA22X18_C_R_Z_R_010 0.1
`define HS65_LS_OA22X18_C_F_Z_F_010 0.1
`define HS65_LS_OA22X18_C_R_Z_R_110 0.1
`define HS65_LS_OA22X18_C_F_Z_F_110 0.1
`define HS65_LS_OA22X18_D_R_Z_R_100 0.1
`define HS65_LS_OA22X18_D_F_Z_F_100 0.1
`define HS65_LS_OA22X18_D_R_Z_R_010 0.1
`define HS65_LS_OA22X18_D_F_Z_F_010 0.1
`define HS65_LS_OA22X18_D_R_Z_R_110 0.1
`define HS65_LS_OA22X18_D_F_Z_F_110 0.1

module HS65_LS_OA22X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && C && !D) (A +=> Z) = (`HS65_LS_OA22X18_A_R_Z_R_010,`HS65_LS_OA22X18_A_F_Z_F_010);
		if (!B && !C && D) (A +=> Z) = (`HS65_LS_OA22X18_A_R_Z_R_001,`HS65_LS_OA22X18_A_F_Z_F_001);
		if (!B && C && D) (A +=> Z) = (`HS65_LS_OA22X18_A_R_Z_R_011,`HS65_LS_OA22X18_A_F_Z_F_011);
		if (!A && C && !D) (B +=> Z) = (`HS65_LS_OA22X18_B_R_Z_R_010,`HS65_LS_OA22X18_B_F_Z_F_010);
		if (!A && !C && D) (B +=> Z) = (`HS65_LS_OA22X18_B_R_Z_R_001,`HS65_LS_OA22X18_B_F_Z_F_001);
		if (!A && C && D) (B +=> Z) = (`HS65_LS_OA22X18_B_R_Z_R_011,`HS65_LS_OA22X18_B_F_Z_F_011);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_OA22X18_C_R_Z_R_100,`HS65_LS_OA22X18_C_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_OA22X18_C_R_Z_R_010,`HS65_LS_OA22X18_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_OA22X18_C_R_Z_R_110,`HS65_LS_OA22X18_C_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA22X18_D_R_Z_R_100,`HS65_LS_OA22X18_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA22X18_D_R_Z_R_010,`HS65_LS_OA22X18_D_F_Z_F_010);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA22X18_D_R_Z_R_110,`HS65_LS_OA22X18_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_OA22X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA22X27_A_R_Z_R_010 0.1
`define HS65_LS_OA22X27_A_F_Z_F_010 0.1
`define HS65_LS_OA22X27_A_R_Z_R_001 0.1
`define HS65_LS_OA22X27_A_F_Z_F_001 0.1
`define HS65_LS_OA22X27_A_R_Z_R_011 0.1
`define HS65_LS_OA22X27_A_F_Z_F_011 0.1
`define HS65_LS_OA22X27_B_R_Z_R_010 0.1
`define HS65_LS_OA22X27_B_F_Z_F_010 0.1
`define HS65_LS_OA22X27_B_R_Z_R_001 0.1
`define HS65_LS_OA22X27_B_F_Z_F_001 0.1
`define HS65_LS_OA22X27_B_R_Z_R_011 0.1
`define HS65_LS_OA22X27_B_F_Z_F_011 0.1
`define HS65_LS_OA22X27_C_R_Z_R_100 0.1
`define HS65_LS_OA22X27_C_F_Z_F_100 0.1
`define HS65_LS_OA22X27_C_R_Z_R_010 0.1
`define HS65_LS_OA22X27_C_F_Z_F_010 0.1
`define HS65_LS_OA22X27_C_R_Z_R_110 0.1
`define HS65_LS_OA22X27_C_F_Z_F_110 0.1
`define HS65_LS_OA22X27_D_R_Z_R_100 0.1
`define HS65_LS_OA22X27_D_F_Z_F_100 0.1
`define HS65_LS_OA22X27_D_R_Z_R_010 0.1
`define HS65_LS_OA22X27_D_F_Z_F_010 0.1
`define HS65_LS_OA22X27_D_R_Z_R_110 0.1
`define HS65_LS_OA22X27_D_F_Z_F_110 0.1

module HS65_LS_OA22X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && C && !D) (A +=> Z) = (`HS65_LS_OA22X27_A_R_Z_R_010,`HS65_LS_OA22X27_A_F_Z_F_010);
		if (!B && !C && D) (A +=> Z) = (`HS65_LS_OA22X27_A_R_Z_R_001,`HS65_LS_OA22X27_A_F_Z_F_001);
		if (!B && C && D) (A +=> Z) = (`HS65_LS_OA22X27_A_R_Z_R_011,`HS65_LS_OA22X27_A_F_Z_F_011);
		if (!A && C && !D) (B +=> Z) = (`HS65_LS_OA22X27_B_R_Z_R_010,`HS65_LS_OA22X27_B_F_Z_F_010);
		if (!A && !C && D) (B +=> Z) = (`HS65_LS_OA22X27_B_R_Z_R_001,`HS65_LS_OA22X27_B_F_Z_F_001);
		if (!A && C && D) (B +=> Z) = (`HS65_LS_OA22X27_B_R_Z_R_011,`HS65_LS_OA22X27_B_F_Z_F_011);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_OA22X27_C_R_Z_R_100,`HS65_LS_OA22X27_C_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_OA22X27_C_R_Z_R_010,`HS65_LS_OA22X27_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_OA22X27_C_R_Z_R_110,`HS65_LS_OA22X27_C_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA22X27_D_R_Z_R_100,`HS65_LS_OA22X27_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA22X27_D_R_Z_R_010,`HS65_LS_OA22X27_D_F_Z_F_010);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA22X27_D_R_Z_R_110,`HS65_LS_OA22X27_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_OA22X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA22X35_A_R_Z_R_010 0.1
`define HS65_LS_OA22X35_A_F_Z_F_010 0.1
`define HS65_LS_OA22X35_A_R_Z_R_001 0.1
`define HS65_LS_OA22X35_A_F_Z_F_001 0.1
`define HS65_LS_OA22X35_A_R_Z_R_011 0.1
`define HS65_LS_OA22X35_A_F_Z_F_011 0.1
`define HS65_LS_OA22X35_B_R_Z_R_010 0.1
`define HS65_LS_OA22X35_B_F_Z_F_010 0.1
`define HS65_LS_OA22X35_B_R_Z_R_001 0.1
`define HS65_LS_OA22X35_B_F_Z_F_001 0.1
`define HS65_LS_OA22X35_B_R_Z_R_011 0.1
`define HS65_LS_OA22X35_B_F_Z_F_011 0.1
`define HS65_LS_OA22X35_C_R_Z_R_100 0.1
`define HS65_LS_OA22X35_C_F_Z_F_100 0.1
`define HS65_LS_OA22X35_C_R_Z_R_010 0.1
`define HS65_LS_OA22X35_C_F_Z_F_010 0.1
`define HS65_LS_OA22X35_C_R_Z_R_110 0.1
`define HS65_LS_OA22X35_C_F_Z_F_110 0.1
`define HS65_LS_OA22X35_D_R_Z_R_100 0.1
`define HS65_LS_OA22X35_D_F_Z_F_100 0.1
`define HS65_LS_OA22X35_D_R_Z_R_010 0.1
`define HS65_LS_OA22X35_D_F_Z_F_010 0.1
`define HS65_LS_OA22X35_D_R_Z_R_110 0.1
`define HS65_LS_OA22X35_D_F_Z_F_110 0.1

module HS65_LS_OA22X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && C && !D) (A +=> Z) = (`HS65_LS_OA22X35_A_R_Z_R_010,`HS65_LS_OA22X35_A_F_Z_F_010);
		if (!B && !C && D) (A +=> Z) = (`HS65_LS_OA22X35_A_R_Z_R_001,`HS65_LS_OA22X35_A_F_Z_F_001);
		if (!B && C && D) (A +=> Z) = (`HS65_LS_OA22X35_A_R_Z_R_011,`HS65_LS_OA22X35_A_F_Z_F_011);
		if (!A && C && !D) (B +=> Z) = (`HS65_LS_OA22X35_B_R_Z_R_010,`HS65_LS_OA22X35_B_F_Z_F_010);
		if (!A && !C && D) (B +=> Z) = (`HS65_LS_OA22X35_B_R_Z_R_001,`HS65_LS_OA22X35_B_F_Z_F_001);
		if (!A && C && D) (B +=> Z) = (`HS65_LS_OA22X35_B_R_Z_R_011,`HS65_LS_OA22X35_B_F_Z_F_011);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_OA22X35_C_R_Z_R_100,`HS65_LS_OA22X35_C_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_OA22X35_C_R_Z_R_010,`HS65_LS_OA22X35_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_OA22X35_C_R_Z_R_110,`HS65_LS_OA22X35_C_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA22X35_D_R_Z_R_100,`HS65_LS_OA22X35_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA22X35_D_R_Z_R_010,`HS65_LS_OA22X35_D_F_Z_F_010);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA22X35_D_R_Z_R_110,`HS65_LS_OA22X35_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_OA22X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA22X4_A_R_Z_R_010 0.1
`define HS65_LS_OA22X4_A_F_Z_F_010 0.1
`define HS65_LS_OA22X4_A_R_Z_R_001 0.1
`define HS65_LS_OA22X4_A_F_Z_F_001 0.1
`define HS65_LS_OA22X4_A_R_Z_R_011 0.1
`define HS65_LS_OA22X4_A_F_Z_F_011 0.1
`define HS65_LS_OA22X4_B_R_Z_R_010 0.1
`define HS65_LS_OA22X4_B_F_Z_F_010 0.1
`define HS65_LS_OA22X4_B_R_Z_R_001 0.1
`define HS65_LS_OA22X4_B_F_Z_F_001 0.1
`define HS65_LS_OA22X4_B_R_Z_R_011 0.1
`define HS65_LS_OA22X4_B_F_Z_F_011 0.1
`define HS65_LS_OA22X4_C_R_Z_R_100 0.1
`define HS65_LS_OA22X4_C_F_Z_F_100 0.1
`define HS65_LS_OA22X4_C_R_Z_R_010 0.1
`define HS65_LS_OA22X4_C_F_Z_F_010 0.1
`define HS65_LS_OA22X4_C_R_Z_R_110 0.1
`define HS65_LS_OA22X4_C_F_Z_F_110 0.1
`define HS65_LS_OA22X4_D_R_Z_R_100 0.1
`define HS65_LS_OA22X4_D_F_Z_F_100 0.1
`define HS65_LS_OA22X4_D_R_Z_R_010 0.1
`define HS65_LS_OA22X4_D_F_Z_F_010 0.1
`define HS65_LS_OA22X4_D_R_Z_R_110 0.1
`define HS65_LS_OA22X4_D_F_Z_F_110 0.1

module HS65_LS_OA22X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && C && !D) (A +=> Z) = (`HS65_LS_OA22X4_A_R_Z_R_010,`HS65_LS_OA22X4_A_F_Z_F_010);
		if (!B && !C && D) (A +=> Z) = (`HS65_LS_OA22X4_A_R_Z_R_001,`HS65_LS_OA22X4_A_F_Z_F_001);
		if (!B && C && D) (A +=> Z) = (`HS65_LS_OA22X4_A_R_Z_R_011,`HS65_LS_OA22X4_A_F_Z_F_011);
		if (!A && C && !D) (B +=> Z) = (`HS65_LS_OA22X4_B_R_Z_R_010,`HS65_LS_OA22X4_B_F_Z_F_010);
		if (!A && !C && D) (B +=> Z) = (`HS65_LS_OA22X4_B_R_Z_R_001,`HS65_LS_OA22X4_B_F_Z_F_001);
		if (!A && C && D) (B +=> Z) = (`HS65_LS_OA22X4_B_R_Z_R_011,`HS65_LS_OA22X4_B_F_Z_F_011);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_OA22X4_C_R_Z_R_100,`HS65_LS_OA22X4_C_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_OA22X4_C_R_Z_R_010,`HS65_LS_OA22X4_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_OA22X4_C_R_Z_R_110,`HS65_LS_OA22X4_C_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA22X4_D_R_Z_R_100,`HS65_LS_OA22X4_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA22X4_D_R_Z_R_010,`HS65_LS_OA22X4_D_F_Z_F_010);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA22X4_D_R_Z_R_110,`HS65_LS_OA22X4_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_OA22X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA22X9_A_R_Z_R_010 0.1
`define HS65_LS_OA22X9_A_F_Z_F_010 0.1
`define HS65_LS_OA22X9_A_R_Z_R_001 0.1
`define HS65_LS_OA22X9_A_F_Z_F_001 0.1
`define HS65_LS_OA22X9_A_R_Z_R_011 0.1
`define HS65_LS_OA22X9_A_F_Z_F_011 0.1
`define HS65_LS_OA22X9_B_R_Z_R_010 0.1
`define HS65_LS_OA22X9_B_F_Z_F_010 0.1
`define HS65_LS_OA22X9_B_R_Z_R_001 0.1
`define HS65_LS_OA22X9_B_F_Z_F_001 0.1
`define HS65_LS_OA22X9_B_R_Z_R_011 0.1
`define HS65_LS_OA22X9_B_F_Z_F_011 0.1
`define HS65_LS_OA22X9_C_R_Z_R_100 0.1
`define HS65_LS_OA22X9_C_F_Z_F_100 0.1
`define HS65_LS_OA22X9_C_R_Z_R_010 0.1
`define HS65_LS_OA22X9_C_F_Z_F_010 0.1
`define HS65_LS_OA22X9_C_R_Z_R_110 0.1
`define HS65_LS_OA22X9_C_F_Z_F_110 0.1
`define HS65_LS_OA22X9_D_R_Z_R_100 0.1
`define HS65_LS_OA22X9_D_F_Z_F_100 0.1
`define HS65_LS_OA22X9_D_R_Z_R_010 0.1
`define HS65_LS_OA22X9_D_F_Z_F_010 0.1
`define HS65_LS_OA22X9_D_R_Z_R_110 0.1
`define HS65_LS_OA22X9_D_F_Z_F_110 0.1

module HS65_LS_OA22X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B) ;
	or    U2 (INTERNAL2, C, D) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && C && !D) (A +=> Z) = (`HS65_LS_OA22X9_A_R_Z_R_010,`HS65_LS_OA22X9_A_F_Z_F_010);
		if (!B && !C && D) (A +=> Z) = (`HS65_LS_OA22X9_A_R_Z_R_001,`HS65_LS_OA22X9_A_F_Z_F_001);
		if (!B && C && D) (A +=> Z) = (`HS65_LS_OA22X9_A_R_Z_R_011,`HS65_LS_OA22X9_A_F_Z_F_011);
		if (!A && C && !D) (B +=> Z) = (`HS65_LS_OA22X9_B_R_Z_R_010,`HS65_LS_OA22X9_B_F_Z_F_010);
		if (!A && !C && D) (B +=> Z) = (`HS65_LS_OA22X9_B_R_Z_R_001,`HS65_LS_OA22X9_B_F_Z_F_001);
		if (!A && C && D) (B +=> Z) = (`HS65_LS_OA22X9_B_R_Z_R_011,`HS65_LS_OA22X9_B_F_Z_F_011);
		if (A && !B && !D) (C +=> Z) = (`HS65_LS_OA22X9_C_R_Z_R_100,`HS65_LS_OA22X9_C_F_Z_F_100);
		if (!A && B && !D) (C +=> Z) = (`HS65_LS_OA22X9_C_R_Z_R_010,`HS65_LS_OA22X9_C_F_Z_F_010);
		if (A && B && !D) (C +=> Z) = (`HS65_LS_OA22X9_C_R_Z_R_110,`HS65_LS_OA22X9_C_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA22X9_D_R_Z_R_100,`HS65_LS_OA22X9_D_F_Z_F_100);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA22X9_D_R_Z_R_010,`HS65_LS_OA22X9_D_F_Z_F_010);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA22X9_D_R_Z_R_110,`HS65_LS_OA22X9_D_F_Z_F_110);


	endspecify

endmodule // HS65_LS_OA22X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA311X18_A_R_Z_R_0011 0.1
`define HS65_LS_OA311X18_A_F_Z_F_0011 0.1
`define HS65_LS_OA311X18_B_R_Z_R_0011 0.1
`define HS65_LS_OA311X18_B_F_Z_F_0011 0.1
`define HS65_LS_OA311X18_C_R_Z_R_0011 0.1
`define HS65_LS_OA311X18_C_F_Z_F_0011 0.1
`define HS65_LS_OA311X18_D_R_Z_R_1101 0.1
`define HS65_LS_OA311X18_D_F_Z_F_1101 0.1
`define HS65_LS_OA311X18_D_R_Z_R_1011 0.1
`define HS65_LS_OA311X18_D_F_Z_F_1011 0.1
`define HS65_LS_OA311X18_D_R_Z_R_1111 0.1
`define HS65_LS_OA311X18_D_F_Z_F_1111 0.1
`define HS65_LS_OA311X18_D_R_Z_R_0101 0.1
`define HS65_LS_OA311X18_D_F_Z_F_0101 0.1
`define HS65_LS_OA311X18_D_R_Z_R_0011 0.1
`define HS65_LS_OA311X18_D_F_Z_F_0011 0.1
`define HS65_LS_OA311X18_D_R_Z_R_1001 0.1
`define HS65_LS_OA311X18_D_F_Z_F_1001 0.1
`define HS65_LS_OA311X18_D_R_Z_R_0111 0.1
`define HS65_LS_OA311X18_D_F_Z_F_0111 0.1
`define HS65_LS_OA311X18_E_R_Z_R_1101 0.1
`define HS65_LS_OA311X18_E_F_Z_F_1101 0.1
`define HS65_LS_OA311X18_E_R_Z_R_1011 0.1
`define HS65_LS_OA311X18_E_F_Z_F_1011 0.1
`define HS65_LS_OA311X18_E_R_Z_R_1111 0.1
`define HS65_LS_OA311X18_E_F_Z_F_1111 0.1
`define HS65_LS_OA311X18_E_R_Z_R_0101 0.1
`define HS65_LS_OA311X18_E_F_Z_F_0101 0.1
`define HS65_LS_OA311X18_E_R_Z_R_0011 0.1
`define HS65_LS_OA311X18_E_F_Z_F_0011 0.1
`define HS65_LS_OA311X18_E_R_Z_R_1001 0.1
`define HS65_LS_OA311X18_E_F_Z_F_1001 0.1
`define HS65_LS_OA311X18_E_R_Z_R_0111 0.1
`define HS65_LS_OA311X18_E_F_Z_F_0111 0.1

module HS65_LS_OA311X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_OA311X18_A_R_Z_R_0011,`HS65_LS_OA311X18_A_F_Z_F_0011);
		(B +=> Z) = (`HS65_LS_OA311X18_B_R_Z_R_0011,`HS65_LS_OA311X18_B_F_Z_F_0011);
		(C +=> Z) = (`HS65_LS_OA311X18_C_R_Z_R_0011,`HS65_LS_OA311X18_C_F_Z_F_0011);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_1101,`HS65_LS_OA311X18_D_F_Z_F_1101);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_1011,`HS65_LS_OA311X18_D_F_Z_F_1011);
		if (A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_1111,`HS65_LS_OA311X18_D_F_Z_F_1111);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_0101,`HS65_LS_OA311X18_D_F_Z_F_0101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_0011,`HS65_LS_OA311X18_D_F_Z_F_0011);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_1001,`HS65_LS_OA311X18_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X18_D_R_Z_R_0111,`HS65_LS_OA311X18_D_F_Z_F_0111);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_1101,`HS65_LS_OA311X18_E_F_Z_F_1101);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_1011,`HS65_LS_OA311X18_E_F_Z_F_1011);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_1111,`HS65_LS_OA311X18_E_F_Z_F_1111);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_0101,`HS65_LS_OA311X18_E_F_Z_F_0101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_0011,`HS65_LS_OA311X18_E_F_Z_F_0011);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_1001,`HS65_LS_OA311X18_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X18_E_R_Z_R_0111,`HS65_LS_OA311X18_E_F_Z_F_0111);


	endspecify

endmodule // HS65_LS_OA311X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA311X27_A_R_Z_R_0011 0.1
`define HS65_LS_OA311X27_A_F_Z_F_0011 0.1
`define HS65_LS_OA311X27_B_R_Z_R_0011 0.1
`define HS65_LS_OA311X27_B_F_Z_F_0011 0.1
`define HS65_LS_OA311X27_C_R_Z_R_0011 0.1
`define HS65_LS_OA311X27_C_F_Z_F_0011 0.1
`define HS65_LS_OA311X27_D_R_Z_R_1101 0.1
`define HS65_LS_OA311X27_D_F_Z_F_1101 0.1
`define HS65_LS_OA311X27_D_R_Z_R_1011 0.1
`define HS65_LS_OA311X27_D_F_Z_F_1011 0.1
`define HS65_LS_OA311X27_D_R_Z_R_1111 0.1
`define HS65_LS_OA311X27_D_F_Z_F_1111 0.1
`define HS65_LS_OA311X27_D_R_Z_R_0101 0.1
`define HS65_LS_OA311X27_D_F_Z_F_0101 0.1
`define HS65_LS_OA311X27_D_R_Z_R_0011 0.1
`define HS65_LS_OA311X27_D_F_Z_F_0011 0.1
`define HS65_LS_OA311X27_D_R_Z_R_1001 0.1
`define HS65_LS_OA311X27_D_F_Z_F_1001 0.1
`define HS65_LS_OA311X27_D_R_Z_R_0111 0.1
`define HS65_LS_OA311X27_D_F_Z_F_0111 0.1
`define HS65_LS_OA311X27_E_R_Z_R_1101 0.1
`define HS65_LS_OA311X27_E_F_Z_F_1101 0.1
`define HS65_LS_OA311X27_E_R_Z_R_1011 0.1
`define HS65_LS_OA311X27_E_F_Z_F_1011 0.1
`define HS65_LS_OA311X27_E_R_Z_R_1111 0.1
`define HS65_LS_OA311X27_E_F_Z_F_1111 0.1
`define HS65_LS_OA311X27_E_R_Z_R_0101 0.1
`define HS65_LS_OA311X27_E_F_Z_F_0101 0.1
`define HS65_LS_OA311X27_E_R_Z_R_0011 0.1
`define HS65_LS_OA311X27_E_F_Z_F_0011 0.1
`define HS65_LS_OA311X27_E_R_Z_R_1001 0.1
`define HS65_LS_OA311X27_E_F_Z_F_1001 0.1
`define HS65_LS_OA311X27_E_R_Z_R_0111 0.1
`define HS65_LS_OA311X27_E_F_Z_F_0111 0.1

module HS65_LS_OA311X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_OA311X27_A_R_Z_R_0011,`HS65_LS_OA311X27_A_F_Z_F_0011);
		(B +=> Z) = (`HS65_LS_OA311X27_B_R_Z_R_0011,`HS65_LS_OA311X27_B_F_Z_F_0011);
		(C +=> Z) = (`HS65_LS_OA311X27_C_R_Z_R_0011,`HS65_LS_OA311X27_C_F_Z_F_0011);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_1101,`HS65_LS_OA311X27_D_F_Z_F_1101);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_1011,`HS65_LS_OA311X27_D_F_Z_F_1011);
		if (A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_1111,`HS65_LS_OA311X27_D_F_Z_F_1111);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_0101,`HS65_LS_OA311X27_D_F_Z_F_0101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_0011,`HS65_LS_OA311X27_D_F_Z_F_0011);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_1001,`HS65_LS_OA311X27_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X27_D_R_Z_R_0111,`HS65_LS_OA311X27_D_F_Z_F_0111);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_1101,`HS65_LS_OA311X27_E_F_Z_F_1101);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_1011,`HS65_LS_OA311X27_E_F_Z_F_1011);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_1111,`HS65_LS_OA311X27_E_F_Z_F_1111);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_0101,`HS65_LS_OA311X27_E_F_Z_F_0101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_0011,`HS65_LS_OA311X27_E_F_Z_F_0011);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_1001,`HS65_LS_OA311X27_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X27_E_R_Z_R_0111,`HS65_LS_OA311X27_E_F_Z_F_0111);


	endspecify

endmodule // HS65_LS_OA311X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA311X35_A_R_Z_R_0011 0.1
`define HS65_LS_OA311X35_A_F_Z_F_0011 0.1
`define HS65_LS_OA311X35_B_R_Z_R_0011 0.1
`define HS65_LS_OA311X35_B_F_Z_F_0011 0.1
`define HS65_LS_OA311X35_C_R_Z_R_0011 0.1
`define HS65_LS_OA311X35_C_F_Z_F_0011 0.1
`define HS65_LS_OA311X35_D_R_Z_R_1101 0.1
`define HS65_LS_OA311X35_D_F_Z_F_1101 0.1
`define HS65_LS_OA311X35_D_R_Z_R_1011 0.1
`define HS65_LS_OA311X35_D_F_Z_F_1011 0.1
`define HS65_LS_OA311X35_D_R_Z_R_1111 0.1
`define HS65_LS_OA311X35_D_F_Z_F_1111 0.1
`define HS65_LS_OA311X35_D_R_Z_R_0101 0.1
`define HS65_LS_OA311X35_D_F_Z_F_0101 0.1
`define HS65_LS_OA311X35_D_R_Z_R_0011 0.1
`define HS65_LS_OA311X35_D_F_Z_F_0011 0.1
`define HS65_LS_OA311X35_D_R_Z_R_1001 0.1
`define HS65_LS_OA311X35_D_F_Z_F_1001 0.1
`define HS65_LS_OA311X35_D_R_Z_R_0111 0.1
`define HS65_LS_OA311X35_D_F_Z_F_0111 0.1
`define HS65_LS_OA311X35_E_R_Z_R_1101 0.1
`define HS65_LS_OA311X35_E_F_Z_F_1101 0.1
`define HS65_LS_OA311X35_E_R_Z_R_1011 0.1
`define HS65_LS_OA311X35_E_F_Z_F_1011 0.1
`define HS65_LS_OA311X35_E_R_Z_R_1111 0.1
`define HS65_LS_OA311X35_E_F_Z_F_1111 0.1
`define HS65_LS_OA311X35_E_R_Z_R_0101 0.1
`define HS65_LS_OA311X35_E_F_Z_F_0101 0.1
`define HS65_LS_OA311X35_E_R_Z_R_0011 0.1
`define HS65_LS_OA311X35_E_F_Z_F_0011 0.1
`define HS65_LS_OA311X35_E_R_Z_R_1001 0.1
`define HS65_LS_OA311X35_E_F_Z_F_1001 0.1
`define HS65_LS_OA311X35_E_R_Z_R_0111 0.1
`define HS65_LS_OA311X35_E_F_Z_F_0111 0.1

module HS65_LS_OA311X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_OA311X35_A_R_Z_R_0011,`HS65_LS_OA311X35_A_F_Z_F_0011);
		(B +=> Z) = (`HS65_LS_OA311X35_B_R_Z_R_0011,`HS65_LS_OA311X35_B_F_Z_F_0011);
		(C +=> Z) = (`HS65_LS_OA311X35_C_R_Z_R_0011,`HS65_LS_OA311X35_C_F_Z_F_0011);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_1101,`HS65_LS_OA311X35_D_F_Z_F_1101);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_1011,`HS65_LS_OA311X35_D_F_Z_F_1011);
		if (A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_1111,`HS65_LS_OA311X35_D_F_Z_F_1111);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_0101,`HS65_LS_OA311X35_D_F_Z_F_0101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_0011,`HS65_LS_OA311X35_D_F_Z_F_0011);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_1001,`HS65_LS_OA311X35_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X35_D_R_Z_R_0111,`HS65_LS_OA311X35_D_F_Z_F_0111);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_1101,`HS65_LS_OA311X35_E_F_Z_F_1101);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_1011,`HS65_LS_OA311X35_E_F_Z_F_1011);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_1111,`HS65_LS_OA311X35_E_F_Z_F_1111);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_0101,`HS65_LS_OA311X35_E_F_Z_F_0101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_0011,`HS65_LS_OA311X35_E_F_Z_F_0011);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_1001,`HS65_LS_OA311X35_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X35_E_R_Z_R_0111,`HS65_LS_OA311X35_E_F_Z_F_0111);


	endspecify

endmodule // HS65_LS_OA311X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA311X4_A_R_Z_R_0011 0.1
`define HS65_LS_OA311X4_A_F_Z_F_0011 0.1
`define HS65_LS_OA311X4_B_R_Z_R_0011 0.1
`define HS65_LS_OA311X4_B_F_Z_F_0011 0.1
`define HS65_LS_OA311X4_C_R_Z_R_0011 0.1
`define HS65_LS_OA311X4_C_F_Z_F_0011 0.1
`define HS65_LS_OA311X4_D_R_Z_R_1101 0.1
`define HS65_LS_OA311X4_D_F_Z_F_1101 0.1
`define HS65_LS_OA311X4_D_R_Z_R_1011 0.1
`define HS65_LS_OA311X4_D_F_Z_F_1011 0.1
`define HS65_LS_OA311X4_D_R_Z_R_1111 0.1
`define HS65_LS_OA311X4_D_F_Z_F_1111 0.1
`define HS65_LS_OA311X4_D_R_Z_R_0101 0.1
`define HS65_LS_OA311X4_D_F_Z_F_0101 0.1
`define HS65_LS_OA311X4_D_R_Z_R_0011 0.1
`define HS65_LS_OA311X4_D_F_Z_F_0011 0.1
`define HS65_LS_OA311X4_D_R_Z_R_1001 0.1
`define HS65_LS_OA311X4_D_F_Z_F_1001 0.1
`define HS65_LS_OA311X4_D_R_Z_R_0111 0.1
`define HS65_LS_OA311X4_D_F_Z_F_0111 0.1
`define HS65_LS_OA311X4_E_R_Z_R_1101 0.1
`define HS65_LS_OA311X4_E_F_Z_F_1101 0.1
`define HS65_LS_OA311X4_E_R_Z_R_1011 0.1
`define HS65_LS_OA311X4_E_F_Z_F_1011 0.1
`define HS65_LS_OA311X4_E_R_Z_R_1111 0.1
`define HS65_LS_OA311X4_E_F_Z_F_1111 0.1
`define HS65_LS_OA311X4_E_R_Z_R_0101 0.1
`define HS65_LS_OA311X4_E_F_Z_F_0101 0.1
`define HS65_LS_OA311X4_E_R_Z_R_0011 0.1
`define HS65_LS_OA311X4_E_F_Z_F_0011 0.1
`define HS65_LS_OA311X4_E_R_Z_R_1001 0.1
`define HS65_LS_OA311X4_E_F_Z_F_1001 0.1
`define HS65_LS_OA311X4_E_R_Z_R_0111 0.1
`define HS65_LS_OA311X4_E_F_Z_F_0111 0.1

module HS65_LS_OA311X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_OA311X4_A_R_Z_R_0011,`HS65_LS_OA311X4_A_F_Z_F_0011);
		(B +=> Z) = (`HS65_LS_OA311X4_B_R_Z_R_0011,`HS65_LS_OA311X4_B_F_Z_F_0011);
		(C +=> Z) = (`HS65_LS_OA311X4_C_R_Z_R_0011,`HS65_LS_OA311X4_C_F_Z_F_0011);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_1101,`HS65_LS_OA311X4_D_F_Z_F_1101);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_1011,`HS65_LS_OA311X4_D_F_Z_F_1011);
		if (A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_1111,`HS65_LS_OA311X4_D_F_Z_F_1111);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_0101,`HS65_LS_OA311X4_D_F_Z_F_0101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_0011,`HS65_LS_OA311X4_D_F_Z_F_0011);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_1001,`HS65_LS_OA311X4_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X4_D_R_Z_R_0111,`HS65_LS_OA311X4_D_F_Z_F_0111);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_1101,`HS65_LS_OA311X4_E_F_Z_F_1101);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_1011,`HS65_LS_OA311X4_E_F_Z_F_1011);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_1111,`HS65_LS_OA311X4_E_F_Z_F_1111);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_0101,`HS65_LS_OA311X4_E_F_Z_F_0101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_0011,`HS65_LS_OA311X4_E_F_Z_F_0011);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_1001,`HS65_LS_OA311X4_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X4_E_R_Z_R_0111,`HS65_LS_OA311X4_E_F_Z_F_0111);


	endspecify

endmodule // HS65_LS_OA311X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA311X9_A_R_Z_R_0011 0.1
`define HS65_LS_OA311X9_A_F_Z_F_0011 0.1
`define HS65_LS_OA311X9_B_R_Z_R_0011 0.1
`define HS65_LS_OA311X9_B_F_Z_F_0011 0.1
`define HS65_LS_OA311X9_C_R_Z_R_0011 0.1
`define HS65_LS_OA311X9_C_F_Z_F_0011 0.1
`define HS65_LS_OA311X9_D_R_Z_R_1101 0.1
`define HS65_LS_OA311X9_D_F_Z_F_1101 0.1
`define HS65_LS_OA311X9_D_R_Z_R_1011 0.1
`define HS65_LS_OA311X9_D_F_Z_F_1011 0.1
`define HS65_LS_OA311X9_D_R_Z_R_1111 0.1
`define HS65_LS_OA311X9_D_F_Z_F_1111 0.1
`define HS65_LS_OA311X9_D_R_Z_R_0101 0.1
`define HS65_LS_OA311X9_D_F_Z_F_0101 0.1
`define HS65_LS_OA311X9_D_R_Z_R_0011 0.1
`define HS65_LS_OA311X9_D_F_Z_F_0011 0.1
`define HS65_LS_OA311X9_D_R_Z_R_1001 0.1
`define HS65_LS_OA311X9_D_F_Z_F_1001 0.1
`define HS65_LS_OA311X9_D_R_Z_R_0111 0.1
`define HS65_LS_OA311X9_D_F_Z_F_0111 0.1
`define HS65_LS_OA311X9_E_R_Z_R_1101 0.1
`define HS65_LS_OA311X9_E_F_Z_F_1101 0.1
`define HS65_LS_OA311X9_E_R_Z_R_1011 0.1
`define HS65_LS_OA311X9_E_F_Z_F_1011 0.1
`define HS65_LS_OA311X9_E_R_Z_R_1111 0.1
`define HS65_LS_OA311X9_E_F_Z_F_1111 0.1
`define HS65_LS_OA311X9_E_R_Z_R_0101 0.1
`define HS65_LS_OA311X9_E_F_Z_F_0101 0.1
`define HS65_LS_OA311X9_E_R_Z_R_0011 0.1
`define HS65_LS_OA311X9_E_F_Z_F_0011 0.1
`define HS65_LS_OA311X9_E_R_Z_R_1001 0.1
`define HS65_LS_OA311X9_E_F_Z_F_1001 0.1
`define HS65_LS_OA311X9_E_R_Z_R_0111 0.1
`define HS65_LS_OA311X9_E_F_Z_F_0111 0.1

module HS65_LS_OA311X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D, E) ;



	specify

		(A +=> Z) = (`HS65_LS_OA311X9_A_R_Z_R_0011,`HS65_LS_OA311X9_A_F_Z_F_0011);
		(B +=> Z) = (`HS65_LS_OA311X9_B_R_Z_R_0011,`HS65_LS_OA311X9_B_F_Z_F_0011);
		(C +=> Z) = (`HS65_LS_OA311X9_C_R_Z_R_0011,`HS65_LS_OA311X9_C_F_Z_F_0011);
		if (A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_1101,`HS65_LS_OA311X9_D_F_Z_F_1101);
		if (A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_1011,`HS65_LS_OA311X9_D_F_Z_F_1011);
		if (A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_1111,`HS65_LS_OA311X9_D_F_Z_F_1111);
		if (!A && B && !C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_0101,`HS65_LS_OA311X9_D_F_Z_F_0101);
		if (!A && !B && C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_0011,`HS65_LS_OA311X9_D_F_Z_F_0011);
		if (A && !B && !C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_1001,`HS65_LS_OA311X9_D_F_Z_F_1001);
		if (!A && B && C && E) (D +=> Z) = (`HS65_LS_OA311X9_D_R_Z_R_0111,`HS65_LS_OA311X9_D_F_Z_F_0111);
		if (A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_1101,`HS65_LS_OA311X9_E_F_Z_F_1101);
		if (A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_1011,`HS65_LS_OA311X9_E_F_Z_F_1011);
		if (A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_1111,`HS65_LS_OA311X9_E_F_Z_F_1111);
		if (!A && B && !C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_0101,`HS65_LS_OA311X9_E_F_Z_F_0101);
		if (!A && !B && C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_0011,`HS65_LS_OA311X9_E_F_Z_F_0011);
		if (A && !B && !C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_1001,`HS65_LS_OA311X9_E_F_Z_F_1001);
		if (!A && B && C && D) (E +=> Z) = (`HS65_LS_OA311X9_E_R_Z_R_0111,`HS65_LS_OA311X9_E_F_Z_F_0111);


	endspecify

endmodule // HS65_LS_OA311X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA31X18_A_R_Z_R_001 0.1
`define HS65_LS_OA31X18_A_F_Z_F_001 0.1
`define HS65_LS_OA31X18_B_R_Z_R_001 0.1
`define HS65_LS_OA31X18_B_F_Z_F_001 0.1
`define HS65_LS_OA31X18_C_R_Z_R_001 0.1
`define HS65_LS_OA31X18_C_F_Z_F_001 0.1
`define HS65_LS_OA31X18_D_R_Z_R_111 0.1
`define HS65_LS_OA31X18_D_F_Z_F_111 0.1
`define HS65_LS_OA31X18_D_R_Z_R_110 0.1
`define HS65_LS_OA31X18_D_F_Z_F_110 0.1
`define HS65_LS_OA31X18_D_R_Z_R_100 0.1
`define HS65_LS_OA31X18_D_F_Z_F_100 0.1
`define HS65_LS_OA31X18_D_R_Z_R_001 0.1
`define HS65_LS_OA31X18_D_F_Z_F_001 0.1
`define HS65_LS_OA31X18_D_R_Z_R_101 0.1
`define HS65_LS_OA31X18_D_F_Z_F_101 0.1
`define HS65_LS_OA31X18_D_R_Z_R_011 0.1
`define HS65_LS_OA31X18_D_F_Z_F_011 0.1
`define HS65_LS_OA31X18_D_R_Z_R_010 0.1
`define HS65_LS_OA31X18_D_F_Z_F_010 0.1

module HS65_LS_OA31X18 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA31X18_A_R_Z_R_001,`HS65_LS_OA31X18_A_F_Z_F_001);
		(B +=> Z) = (`HS65_LS_OA31X18_B_R_Z_R_001,`HS65_LS_OA31X18_B_F_Z_F_001);
		(C +=> Z) = (`HS65_LS_OA31X18_C_R_Z_R_001,`HS65_LS_OA31X18_C_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_111,`HS65_LS_OA31X18_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_110,`HS65_LS_OA31X18_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_100,`HS65_LS_OA31X18_D_F_Z_F_100);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_001,`HS65_LS_OA31X18_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_101,`HS65_LS_OA31X18_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_011,`HS65_LS_OA31X18_D_F_Z_F_011);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA31X18_D_R_Z_R_010,`HS65_LS_OA31X18_D_F_Z_F_010);


	endspecify

endmodule // HS65_LS_OA31X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA31X27_A_R_Z_R_001 0.1
`define HS65_LS_OA31X27_A_F_Z_F_001 0.1
`define HS65_LS_OA31X27_B_R_Z_R_001 0.1
`define HS65_LS_OA31X27_B_F_Z_F_001 0.1
`define HS65_LS_OA31X27_C_R_Z_R_001 0.1
`define HS65_LS_OA31X27_C_F_Z_F_001 0.1
`define HS65_LS_OA31X27_D_R_Z_R_111 0.1
`define HS65_LS_OA31X27_D_F_Z_F_111 0.1
`define HS65_LS_OA31X27_D_R_Z_R_110 0.1
`define HS65_LS_OA31X27_D_F_Z_F_110 0.1
`define HS65_LS_OA31X27_D_R_Z_R_100 0.1
`define HS65_LS_OA31X27_D_F_Z_F_100 0.1
`define HS65_LS_OA31X27_D_R_Z_R_001 0.1
`define HS65_LS_OA31X27_D_F_Z_F_001 0.1
`define HS65_LS_OA31X27_D_R_Z_R_101 0.1
`define HS65_LS_OA31X27_D_F_Z_F_101 0.1
`define HS65_LS_OA31X27_D_R_Z_R_011 0.1
`define HS65_LS_OA31X27_D_F_Z_F_011 0.1
`define HS65_LS_OA31X27_D_R_Z_R_010 0.1
`define HS65_LS_OA31X27_D_F_Z_F_010 0.1

module HS65_LS_OA31X27 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA31X27_A_R_Z_R_001,`HS65_LS_OA31X27_A_F_Z_F_001);
		(B +=> Z) = (`HS65_LS_OA31X27_B_R_Z_R_001,`HS65_LS_OA31X27_B_F_Z_F_001);
		(C +=> Z) = (`HS65_LS_OA31X27_C_R_Z_R_001,`HS65_LS_OA31X27_C_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_111,`HS65_LS_OA31X27_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_110,`HS65_LS_OA31X27_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_100,`HS65_LS_OA31X27_D_F_Z_F_100);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_001,`HS65_LS_OA31X27_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_101,`HS65_LS_OA31X27_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_011,`HS65_LS_OA31X27_D_F_Z_F_011);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA31X27_D_R_Z_R_010,`HS65_LS_OA31X27_D_F_Z_F_010);


	endspecify

endmodule // HS65_LS_OA31X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA31X35_A_R_Z_R_001 0.1
`define HS65_LS_OA31X35_A_F_Z_F_001 0.1
`define HS65_LS_OA31X35_B_R_Z_R_001 0.1
`define HS65_LS_OA31X35_B_F_Z_F_001 0.1
`define HS65_LS_OA31X35_C_R_Z_R_001 0.1
`define HS65_LS_OA31X35_C_F_Z_F_001 0.1
`define HS65_LS_OA31X35_D_R_Z_R_111 0.1
`define HS65_LS_OA31X35_D_F_Z_F_111 0.1
`define HS65_LS_OA31X35_D_R_Z_R_110 0.1
`define HS65_LS_OA31X35_D_F_Z_F_110 0.1
`define HS65_LS_OA31X35_D_R_Z_R_100 0.1
`define HS65_LS_OA31X35_D_F_Z_F_100 0.1
`define HS65_LS_OA31X35_D_R_Z_R_001 0.1
`define HS65_LS_OA31X35_D_F_Z_F_001 0.1
`define HS65_LS_OA31X35_D_R_Z_R_101 0.1
`define HS65_LS_OA31X35_D_F_Z_F_101 0.1
`define HS65_LS_OA31X35_D_R_Z_R_011 0.1
`define HS65_LS_OA31X35_D_F_Z_F_011 0.1
`define HS65_LS_OA31X35_D_R_Z_R_010 0.1
`define HS65_LS_OA31X35_D_F_Z_F_010 0.1

module HS65_LS_OA31X35 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA31X35_A_R_Z_R_001,`HS65_LS_OA31X35_A_F_Z_F_001);
		(B +=> Z) = (`HS65_LS_OA31X35_B_R_Z_R_001,`HS65_LS_OA31X35_B_F_Z_F_001);
		(C +=> Z) = (`HS65_LS_OA31X35_C_R_Z_R_001,`HS65_LS_OA31X35_C_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_111,`HS65_LS_OA31X35_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_110,`HS65_LS_OA31X35_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_100,`HS65_LS_OA31X35_D_F_Z_F_100);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_001,`HS65_LS_OA31X35_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_101,`HS65_LS_OA31X35_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_011,`HS65_LS_OA31X35_D_F_Z_F_011);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA31X35_D_R_Z_R_010,`HS65_LS_OA31X35_D_F_Z_F_010);


	endspecify

endmodule // HS65_LS_OA31X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA31X4_A_R_Z_R_001 0.1
`define HS65_LS_OA31X4_A_F_Z_F_001 0.1
`define HS65_LS_OA31X4_B_R_Z_R_001 0.1
`define HS65_LS_OA31X4_B_F_Z_F_001 0.1
`define HS65_LS_OA31X4_C_R_Z_R_001 0.1
`define HS65_LS_OA31X4_C_F_Z_F_001 0.1
`define HS65_LS_OA31X4_D_R_Z_R_111 0.1
`define HS65_LS_OA31X4_D_F_Z_F_111 0.1
`define HS65_LS_OA31X4_D_R_Z_R_110 0.1
`define HS65_LS_OA31X4_D_F_Z_F_110 0.1
`define HS65_LS_OA31X4_D_R_Z_R_100 0.1
`define HS65_LS_OA31X4_D_F_Z_F_100 0.1
`define HS65_LS_OA31X4_D_R_Z_R_001 0.1
`define HS65_LS_OA31X4_D_F_Z_F_001 0.1
`define HS65_LS_OA31X4_D_R_Z_R_101 0.1
`define HS65_LS_OA31X4_D_F_Z_F_101 0.1
`define HS65_LS_OA31X4_D_R_Z_R_011 0.1
`define HS65_LS_OA31X4_D_F_Z_F_011 0.1
`define HS65_LS_OA31X4_D_R_Z_R_010 0.1
`define HS65_LS_OA31X4_D_F_Z_F_010 0.1

module HS65_LS_OA31X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA31X4_A_R_Z_R_001,`HS65_LS_OA31X4_A_F_Z_F_001);
		(B +=> Z) = (`HS65_LS_OA31X4_B_R_Z_R_001,`HS65_LS_OA31X4_B_F_Z_F_001);
		(C +=> Z) = (`HS65_LS_OA31X4_C_R_Z_R_001,`HS65_LS_OA31X4_C_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_111,`HS65_LS_OA31X4_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_110,`HS65_LS_OA31X4_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_100,`HS65_LS_OA31X4_D_F_Z_F_100);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_001,`HS65_LS_OA31X4_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_101,`HS65_LS_OA31X4_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_011,`HS65_LS_OA31X4_D_F_Z_F_011);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA31X4_D_R_Z_R_010,`HS65_LS_OA31X4_D_F_Z_F_010);


	endspecify

endmodule // HS65_LS_OA31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA31X9_A_R_Z_R_001 0.1
`define HS65_LS_OA31X9_A_F_Z_F_001 0.1
`define HS65_LS_OA31X9_B_R_Z_R_001 0.1
`define HS65_LS_OA31X9_B_F_Z_F_001 0.1
`define HS65_LS_OA31X9_C_R_Z_R_001 0.1
`define HS65_LS_OA31X9_C_F_Z_F_001 0.1
`define HS65_LS_OA31X9_D_R_Z_R_111 0.1
`define HS65_LS_OA31X9_D_F_Z_F_111 0.1
`define HS65_LS_OA31X9_D_R_Z_R_110 0.1
`define HS65_LS_OA31X9_D_F_Z_F_110 0.1
`define HS65_LS_OA31X9_D_R_Z_R_100 0.1
`define HS65_LS_OA31X9_D_F_Z_F_100 0.1
`define HS65_LS_OA31X9_D_R_Z_R_001 0.1
`define HS65_LS_OA31X9_D_F_Z_F_001 0.1
`define HS65_LS_OA31X9_D_R_Z_R_101 0.1
`define HS65_LS_OA31X9_D_F_Z_F_101 0.1
`define HS65_LS_OA31X9_D_R_Z_R_011 0.1
`define HS65_LS_OA31X9_D_F_Z_F_011 0.1
`define HS65_LS_OA31X9_D_R_Z_R_010 0.1
`define HS65_LS_OA31X9_D_F_Z_F_010 0.1

module HS65_LS_OA31X9 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL1, A, B, C) ;
	and   #1 U2 (Z, INTERNAL1, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OA31X9_A_R_Z_R_001,`HS65_LS_OA31X9_A_F_Z_F_001);
		(B +=> Z) = (`HS65_LS_OA31X9_B_R_Z_R_001,`HS65_LS_OA31X9_B_F_Z_F_001);
		(C +=> Z) = (`HS65_LS_OA31X9_C_R_Z_R_001,`HS65_LS_OA31X9_C_F_Z_F_001);
		if (A && B && C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_111,`HS65_LS_OA31X9_D_F_Z_F_111);
		if (A && B && !C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_110,`HS65_LS_OA31X9_D_F_Z_F_110);
		if (A && !B && !C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_100,`HS65_LS_OA31X9_D_F_Z_F_100);
		if (!A && !B && C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_001,`HS65_LS_OA31X9_D_F_Z_F_001);
		if (A && !B && C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_101,`HS65_LS_OA31X9_D_F_Z_F_101);
		if (!A && B && C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_011,`HS65_LS_OA31X9_D_F_Z_F_011);
		if (!A && B && !C) (D +=> Z) = (`HS65_LS_OA31X9_D_R_Z_R_010,`HS65_LS_OA31X9_D_F_Z_F_010);


	endspecify

endmodule // HS65_LS_OA31X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA32X18_A_R_Z_R_0001 0.1
`define HS65_LS_OA32X18_A_F_Z_F_0001 0.1
`define HS65_LS_OA32X18_A_R_Z_R_0011 0.1
`define HS65_LS_OA32X18_A_F_Z_F_0011 0.1
`define HS65_LS_OA32X18_A_R_Z_R_0010 0.1
`define HS65_LS_OA32X18_A_F_Z_F_0010 0.1
`define HS65_LS_OA32X18_B_R_Z_R_0001 0.1
`define HS65_LS_OA32X18_B_F_Z_F_0001 0.1
`define HS65_LS_OA32X18_B_R_Z_R_0011 0.1
`define HS65_LS_OA32X18_B_F_Z_F_0011 0.1
`define HS65_LS_OA32X18_B_R_Z_R_0010 0.1
`define HS65_LS_OA32X18_B_F_Z_F_0010 0.1
`define HS65_LS_OA32X18_C_R_Z_R_0001 0.1
`define HS65_LS_OA32X18_C_F_Z_F_0001 0.1
`define HS65_LS_OA32X18_C_R_Z_R_0011 0.1
`define HS65_LS_OA32X18_C_F_Z_F_0011 0.1
`define HS65_LS_OA32X18_C_R_Z_R_0010 0.1
`define HS65_LS_OA32X18_C_F_Z_F_0010 0.1
`define HS65_LS_OA32X18_D_R_Z_R_0100 0.1
`define HS65_LS_OA32X18_D_F_Z_F_0100 0.1
`define HS65_LS_OA32X18_D_R_Z_R_0110 0.1
`define HS65_LS_OA32X18_D_F_Z_F_0110 0.1
`define HS65_LS_OA32X18_D_R_Z_R_1010 0.1
`define HS65_LS_OA32X18_D_F_Z_F_1010 0.1
`define HS65_LS_OA32X18_D_R_Z_R_1000 0.1
`define HS65_LS_OA32X18_D_F_Z_F_1000 0.1
`define HS65_LS_OA32X18_D_R_Z_R_1100 0.1
`define HS65_LS_OA32X18_D_F_Z_F_1100 0.1
`define HS65_LS_OA32X18_D_R_Z_R_0010 0.1
`define HS65_LS_OA32X18_D_F_Z_F_0010 0.1
`define HS65_LS_OA32X18_D_R_Z_R_1110 0.1
`define HS65_LS_OA32X18_D_F_Z_F_1110 0.1
`define HS65_LS_OA32X18_E_R_Z_R_0100 0.1
`define HS65_LS_OA32X18_E_F_Z_F_0100 0.1
`define HS65_LS_OA32X18_E_R_Z_R_0110 0.1
`define HS65_LS_OA32X18_E_F_Z_F_0110 0.1
`define HS65_LS_OA32X18_E_R_Z_R_1010 0.1
`define HS65_LS_OA32X18_E_F_Z_F_1010 0.1
`define HS65_LS_OA32X18_E_R_Z_R_1000 0.1
`define HS65_LS_OA32X18_E_F_Z_F_1000 0.1
`define HS65_LS_OA32X18_E_R_Z_R_1100 0.1
`define HS65_LS_OA32X18_E_F_Z_F_1100 0.1
`define HS65_LS_OA32X18_E_R_Z_R_0010 0.1
`define HS65_LS_OA32X18_E_F_Z_F_0010 0.1
`define HS65_LS_OA32X18_E_R_Z_R_1110 0.1
`define HS65_LS_OA32X18_E_F_Z_F_1110 0.1

module HS65_LS_OA32X18 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && !D && E) (A +=> Z) = (`HS65_LS_OA32X18_A_R_Z_R_0001,`HS65_LS_OA32X18_A_F_Z_F_0001);
		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA32X18_A_R_Z_R_0011,`HS65_LS_OA32X18_A_F_Z_F_0011);
		if (!B && !C && D && !E) (A +=> Z) = (`HS65_LS_OA32X18_A_R_Z_R_0010,`HS65_LS_OA32X18_A_F_Z_F_0010);
		if (!A && !C && !D && E) (B +=> Z) = (`HS65_LS_OA32X18_B_R_Z_R_0001,`HS65_LS_OA32X18_B_F_Z_F_0001);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA32X18_B_R_Z_R_0011,`HS65_LS_OA32X18_B_F_Z_F_0011);
		if (!A && !C && D && !E) (B +=> Z) = (`HS65_LS_OA32X18_B_R_Z_R_0010,`HS65_LS_OA32X18_B_F_Z_F_0010);
		if (!A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA32X18_C_R_Z_R_0001,`HS65_LS_OA32X18_C_F_Z_F_0001);
		if (!A && !B && D && E) (C +=> Z) = (`HS65_LS_OA32X18_C_R_Z_R_0011,`HS65_LS_OA32X18_C_F_Z_F_0011);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_OA32X18_C_R_Z_R_0010,`HS65_LS_OA32X18_C_F_Z_F_0010);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_0100,`HS65_LS_OA32X18_D_F_Z_F_0100);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_0110,`HS65_LS_OA32X18_D_F_Z_F_0110);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_1010,`HS65_LS_OA32X18_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_1000,`HS65_LS_OA32X18_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_1100,`HS65_LS_OA32X18_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_0010,`HS65_LS_OA32X18_D_F_Z_F_0010);
		if (A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X18_D_R_Z_R_1110,`HS65_LS_OA32X18_D_F_Z_F_1110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_0100,`HS65_LS_OA32X18_E_F_Z_F_0100);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_0110,`HS65_LS_OA32X18_E_F_Z_F_0110);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_1010,`HS65_LS_OA32X18_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_1000,`HS65_LS_OA32X18_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_1100,`HS65_LS_OA32X18_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_0010,`HS65_LS_OA32X18_E_F_Z_F_0010);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X18_E_R_Z_R_1110,`HS65_LS_OA32X18_E_F_Z_F_1110);


	endspecify

endmodule // HS65_LS_OA32X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA32X27_A_R_Z_R_0001 0.1
`define HS65_LS_OA32X27_A_F_Z_F_0001 0.1
`define HS65_LS_OA32X27_A_R_Z_R_0011 0.1
`define HS65_LS_OA32X27_A_F_Z_F_0011 0.1
`define HS65_LS_OA32X27_A_R_Z_R_0010 0.1
`define HS65_LS_OA32X27_A_F_Z_F_0010 0.1
`define HS65_LS_OA32X27_B_R_Z_R_0001 0.1
`define HS65_LS_OA32X27_B_F_Z_F_0001 0.1
`define HS65_LS_OA32X27_B_R_Z_R_0011 0.1
`define HS65_LS_OA32X27_B_F_Z_F_0011 0.1
`define HS65_LS_OA32X27_B_R_Z_R_0010 0.1
`define HS65_LS_OA32X27_B_F_Z_F_0010 0.1
`define HS65_LS_OA32X27_C_R_Z_R_0001 0.1
`define HS65_LS_OA32X27_C_F_Z_F_0001 0.1
`define HS65_LS_OA32X27_C_R_Z_R_0011 0.1
`define HS65_LS_OA32X27_C_F_Z_F_0011 0.1
`define HS65_LS_OA32X27_C_R_Z_R_0010 0.1
`define HS65_LS_OA32X27_C_F_Z_F_0010 0.1
`define HS65_LS_OA32X27_D_R_Z_R_0100 0.1
`define HS65_LS_OA32X27_D_F_Z_F_0100 0.1
`define HS65_LS_OA32X27_D_R_Z_R_0110 0.1
`define HS65_LS_OA32X27_D_F_Z_F_0110 0.1
`define HS65_LS_OA32X27_D_R_Z_R_1010 0.1
`define HS65_LS_OA32X27_D_F_Z_F_1010 0.1
`define HS65_LS_OA32X27_D_R_Z_R_1000 0.1
`define HS65_LS_OA32X27_D_F_Z_F_1000 0.1
`define HS65_LS_OA32X27_D_R_Z_R_1100 0.1
`define HS65_LS_OA32X27_D_F_Z_F_1100 0.1
`define HS65_LS_OA32X27_D_R_Z_R_0010 0.1
`define HS65_LS_OA32X27_D_F_Z_F_0010 0.1
`define HS65_LS_OA32X27_D_R_Z_R_1110 0.1
`define HS65_LS_OA32X27_D_F_Z_F_1110 0.1
`define HS65_LS_OA32X27_E_R_Z_R_0100 0.1
`define HS65_LS_OA32X27_E_F_Z_F_0100 0.1
`define HS65_LS_OA32X27_E_R_Z_R_0110 0.1
`define HS65_LS_OA32X27_E_F_Z_F_0110 0.1
`define HS65_LS_OA32X27_E_R_Z_R_1010 0.1
`define HS65_LS_OA32X27_E_F_Z_F_1010 0.1
`define HS65_LS_OA32X27_E_R_Z_R_1000 0.1
`define HS65_LS_OA32X27_E_F_Z_F_1000 0.1
`define HS65_LS_OA32X27_E_R_Z_R_1100 0.1
`define HS65_LS_OA32X27_E_F_Z_F_1100 0.1
`define HS65_LS_OA32X27_E_R_Z_R_0010 0.1
`define HS65_LS_OA32X27_E_F_Z_F_0010 0.1
`define HS65_LS_OA32X27_E_R_Z_R_1110 0.1
`define HS65_LS_OA32X27_E_F_Z_F_1110 0.1

module HS65_LS_OA32X27 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && !D && E) (A +=> Z) = (`HS65_LS_OA32X27_A_R_Z_R_0001,`HS65_LS_OA32X27_A_F_Z_F_0001);
		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA32X27_A_R_Z_R_0011,`HS65_LS_OA32X27_A_F_Z_F_0011);
		if (!B && !C && D && !E) (A +=> Z) = (`HS65_LS_OA32X27_A_R_Z_R_0010,`HS65_LS_OA32X27_A_F_Z_F_0010);
		if (!A && !C && !D && E) (B +=> Z) = (`HS65_LS_OA32X27_B_R_Z_R_0001,`HS65_LS_OA32X27_B_F_Z_F_0001);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA32X27_B_R_Z_R_0011,`HS65_LS_OA32X27_B_F_Z_F_0011);
		if (!A && !C && D && !E) (B +=> Z) = (`HS65_LS_OA32X27_B_R_Z_R_0010,`HS65_LS_OA32X27_B_F_Z_F_0010);
		if (!A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA32X27_C_R_Z_R_0001,`HS65_LS_OA32X27_C_F_Z_F_0001);
		if (!A && !B && D && E) (C +=> Z) = (`HS65_LS_OA32X27_C_R_Z_R_0011,`HS65_LS_OA32X27_C_F_Z_F_0011);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_OA32X27_C_R_Z_R_0010,`HS65_LS_OA32X27_C_F_Z_F_0010);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_0100,`HS65_LS_OA32X27_D_F_Z_F_0100);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_0110,`HS65_LS_OA32X27_D_F_Z_F_0110);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_1010,`HS65_LS_OA32X27_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_1000,`HS65_LS_OA32X27_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_1100,`HS65_LS_OA32X27_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_0010,`HS65_LS_OA32X27_D_F_Z_F_0010);
		if (A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X27_D_R_Z_R_1110,`HS65_LS_OA32X27_D_F_Z_F_1110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_0100,`HS65_LS_OA32X27_E_F_Z_F_0100);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_0110,`HS65_LS_OA32X27_E_F_Z_F_0110);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_1010,`HS65_LS_OA32X27_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_1000,`HS65_LS_OA32X27_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_1100,`HS65_LS_OA32X27_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_0010,`HS65_LS_OA32X27_E_F_Z_F_0010);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X27_E_R_Z_R_1110,`HS65_LS_OA32X27_E_F_Z_F_1110);


	endspecify

endmodule // HS65_LS_OA32X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA32X35_A_R_Z_R_0001 0.1
`define HS65_LS_OA32X35_A_F_Z_F_0001 0.1
`define HS65_LS_OA32X35_A_R_Z_R_0011 0.1
`define HS65_LS_OA32X35_A_F_Z_F_0011 0.1
`define HS65_LS_OA32X35_A_R_Z_R_0010 0.1
`define HS65_LS_OA32X35_A_F_Z_F_0010 0.1
`define HS65_LS_OA32X35_B_R_Z_R_0001 0.1
`define HS65_LS_OA32X35_B_F_Z_F_0001 0.1
`define HS65_LS_OA32X35_B_R_Z_R_0011 0.1
`define HS65_LS_OA32X35_B_F_Z_F_0011 0.1
`define HS65_LS_OA32X35_B_R_Z_R_0010 0.1
`define HS65_LS_OA32X35_B_F_Z_F_0010 0.1
`define HS65_LS_OA32X35_C_R_Z_R_0001 0.1
`define HS65_LS_OA32X35_C_F_Z_F_0001 0.1
`define HS65_LS_OA32X35_C_R_Z_R_0011 0.1
`define HS65_LS_OA32X35_C_F_Z_F_0011 0.1
`define HS65_LS_OA32X35_C_R_Z_R_0010 0.1
`define HS65_LS_OA32X35_C_F_Z_F_0010 0.1
`define HS65_LS_OA32X35_D_R_Z_R_0100 0.1
`define HS65_LS_OA32X35_D_F_Z_F_0100 0.1
`define HS65_LS_OA32X35_D_R_Z_R_0110 0.1
`define HS65_LS_OA32X35_D_F_Z_F_0110 0.1
`define HS65_LS_OA32X35_D_R_Z_R_1010 0.1
`define HS65_LS_OA32X35_D_F_Z_F_1010 0.1
`define HS65_LS_OA32X35_D_R_Z_R_1000 0.1
`define HS65_LS_OA32X35_D_F_Z_F_1000 0.1
`define HS65_LS_OA32X35_D_R_Z_R_1100 0.1
`define HS65_LS_OA32X35_D_F_Z_F_1100 0.1
`define HS65_LS_OA32X35_D_R_Z_R_0010 0.1
`define HS65_LS_OA32X35_D_F_Z_F_0010 0.1
`define HS65_LS_OA32X35_D_R_Z_R_1110 0.1
`define HS65_LS_OA32X35_D_F_Z_F_1110 0.1
`define HS65_LS_OA32X35_E_R_Z_R_0100 0.1
`define HS65_LS_OA32X35_E_F_Z_F_0100 0.1
`define HS65_LS_OA32X35_E_R_Z_R_0110 0.1
`define HS65_LS_OA32X35_E_F_Z_F_0110 0.1
`define HS65_LS_OA32X35_E_R_Z_R_1010 0.1
`define HS65_LS_OA32X35_E_F_Z_F_1010 0.1
`define HS65_LS_OA32X35_E_R_Z_R_1000 0.1
`define HS65_LS_OA32X35_E_F_Z_F_1000 0.1
`define HS65_LS_OA32X35_E_R_Z_R_1100 0.1
`define HS65_LS_OA32X35_E_F_Z_F_1100 0.1
`define HS65_LS_OA32X35_E_R_Z_R_0010 0.1
`define HS65_LS_OA32X35_E_F_Z_F_0010 0.1
`define HS65_LS_OA32X35_E_R_Z_R_1110 0.1
`define HS65_LS_OA32X35_E_F_Z_F_1110 0.1

module HS65_LS_OA32X35 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && !D && E) (A +=> Z) = (`HS65_LS_OA32X35_A_R_Z_R_0001,`HS65_LS_OA32X35_A_F_Z_F_0001);
		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA32X35_A_R_Z_R_0011,`HS65_LS_OA32X35_A_F_Z_F_0011);
		if (!B && !C && D && !E) (A +=> Z) = (`HS65_LS_OA32X35_A_R_Z_R_0010,`HS65_LS_OA32X35_A_F_Z_F_0010);
		if (!A && !C && !D && E) (B +=> Z) = (`HS65_LS_OA32X35_B_R_Z_R_0001,`HS65_LS_OA32X35_B_F_Z_F_0001);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA32X35_B_R_Z_R_0011,`HS65_LS_OA32X35_B_F_Z_F_0011);
		if (!A && !C && D && !E) (B +=> Z) = (`HS65_LS_OA32X35_B_R_Z_R_0010,`HS65_LS_OA32X35_B_F_Z_F_0010);
		if (!A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA32X35_C_R_Z_R_0001,`HS65_LS_OA32X35_C_F_Z_F_0001);
		if (!A && !B && D && E) (C +=> Z) = (`HS65_LS_OA32X35_C_R_Z_R_0011,`HS65_LS_OA32X35_C_F_Z_F_0011);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_OA32X35_C_R_Z_R_0010,`HS65_LS_OA32X35_C_F_Z_F_0010);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_0100,`HS65_LS_OA32X35_D_F_Z_F_0100);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_0110,`HS65_LS_OA32X35_D_F_Z_F_0110);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_1010,`HS65_LS_OA32X35_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_1000,`HS65_LS_OA32X35_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_1100,`HS65_LS_OA32X35_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_0010,`HS65_LS_OA32X35_D_F_Z_F_0010);
		if (A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X35_D_R_Z_R_1110,`HS65_LS_OA32X35_D_F_Z_F_1110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_0100,`HS65_LS_OA32X35_E_F_Z_F_0100);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_0110,`HS65_LS_OA32X35_E_F_Z_F_0110);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_1010,`HS65_LS_OA32X35_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_1000,`HS65_LS_OA32X35_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_1100,`HS65_LS_OA32X35_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_0010,`HS65_LS_OA32X35_E_F_Z_F_0010);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X35_E_R_Z_R_1110,`HS65_LS_OA32X35_E_F_Z_F_1110);


	endspecify

endmodule // HS65_LS_OA32X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA32X4_A_R_Z_R_0001 0.1
`define HS65_LS_OA32X4_A_F_Z_F_0001 0.1
`define HS65_LS_OA32X4_A_R_Z_R_0011 0.1
`define HS65_LS_OA32X4_A_F_Z_F_0011 0.1
`define HS65_LS_OA32X4_A_R_Z_R_0010 0.1
`define HS65_LS_OA32X4_A_F_Z_F_0010 0.1
`define HS65_LS_OA32X4_B_R_Z_R_0001 0.1
`define HS65_LS_OA32X4_B_F_Z_F_0001 0.1
`define HS65_LS_OA32X4_B_R_Z_R_0011 0.1
`define HS65_LS_OA32X4_B_F_Z_F_0011 0.1
`define HS65_LS_OA32X4_B_R_Z_R_0010 0.1
`define HS65_LS_OA32X4_B_F_Z_F_0010 0.1
`define HS65_LS_OA32X4_C_R_Z_R_0001 0.1
`define HS65_LS_OA32X4_C_F_Z_F_0001 0.1
`define HS65_LS_OA32X4_C_R_Z_R_0011 0.1
`define HS65_LS_OA32X4_C_F_Z_F_0011 0.1
`define HS65_LS_OA32X4_C_R_Z_R_0010 0.1
`define HS65_LS_OA32X4_C_F_Z_F_0010 0.1
`define HS65_LS_OA32X4_D_R_Z_R_0100 0.1
`define HS65_LS_OA32X4_D_F_Z_F_0100 0.1
`define HS65_LS_OA32X4_D_R_Z_R_0110 0.1
`define HS65_LS_OA32X4_D_F_Z_F_0110 0.1
`define HS65_LS_OA32X4_D_R_Z_R_1010 0.1
`define HS65_LS_OA32X4_D_F_Z_F_1010 0.1
`define HS65_LS_OA32X4_D_R_Z_R_1000 0.1
`define HS65_LS_OA32X4_D_F_Z_F_1000 0.1
`define HS65_LS_OA32X4_D_R_Z_R_1100 0.1
`define HS65_LS_OA32X4_D_F_Z_F_1100 0.1
`define HS65_LS_OA32X4_D_R_Z_R_0010 0.1
`define HS65_LS_OA32X4_D_F_Z_F_0010 0.1
`define HS65_LS_OA32X4_D_R_Z_R_1110 0.1
`define HS65_LS_OA32X4_D_F_Z_F_1110 0.1
`define HS65_LS_OA32X4_E_R_Z_R_0100 0.1
`define HS65_LS_OA32X4_E_F_Z_F_0100 0.1
`define HS65_LS_OA32X4_E_R_Z_R_0110 0.1
`define HS65_LS_OA32X4_E_F_Z_F_0110 0.1
`define HS65_LS_OA32X4_E_R_Z_R_1010 0.1
`define HS65_LS_OA32X4_E_F_Z_F_1010 0.1
`define HS65_LS_OA32X4_E_R_Z_R_1000 0.1
`define HS65_LS_OA32X4_E_F_Z_F_1000 0.1
`define HS65_LS_OA32X4_E_R_Z_R_1100 0.1
`define HS65_LS_OA32X4_E_F_Z_F_1100 0.1
`define HS65_LS_OA32X4_E_R_Z_R_0010 0.1
`define HS65_LS_OA32X4_E_F_Z_F_0010 0.1
`define HS65_LS_OA32X4_E_R_Z_R_1110 0.1
`define HS65_LS_OA32X4_E_F_Z_F_1110 0.1

module HS65_LS_OA32X4 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && !D && E) (A +=> Z) = (`HS65_LS_OA32X4_A_R_Z_R_0001,`HS65_LS_OA32X4_A_F_Z_F_0001);
		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA32X4_A_R_Z_R_0011,`HS65_LS_OA32X4_A_F_Z_F_0011);
		if (!B && !C && D && !E) (A +=> Z) = (`HS65_LS_OA32X4_A_R_Z_R_0010,`HS65_LS_OA32X4_A_F_Z_F_0010);
		if (!A && !C && !D && E) (B +=> Z) = (`HS65_LS_OA32X4_B_R_Z_R_0001,`HS65_LS_OA32X4_B_F_Z_F_0001);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA32X4_B_R_Z_R_0011,`HS65_LS_OA32X4_B_F_Z_F_0011);
		if (!A && !C && D && !E) (B +=> Z) = (`HS65_LS_OA32X4_B_R_Z_R_0010,`HS65_LS_OA32X4_B_F_Z_F_0010);
		if (!A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA32X4_C_R_Z_R_0001,`HS65_LS_OA32X4_C_F_Z_F_0001);
		if (!A && !B && D && E) (C +=> Z) = (`HS65_LS_OA32X4_C_R_Z_R_0011,`HS65_LS_OA32X4_C_F_Z_F_0011);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_OA32X4_C_R_Z_R_0010,`HS65_LS_OA32X4_C_F_Z_F_0010);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_0100,`HS65_LS_OA32X4_D_F_Z_F_0100);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_0110,`HS65_LS_OA32X4_D_F_Z_F_0110);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_1010,`HS65_LS_OA32X4_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_1000,`HS65_LS_OA32X4_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_1100,`HS65_LS_OA32X4_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_0010,`HS65_LS_OA32X4_D_F_Z_F_0010);
		if (A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X4_D_R_Z_R_1110,`HS65_LS_OA32X4_D_F_Z_F_1110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_0100,`HS65_LS_OA32X4_E_F_Z_F_0100);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_0110,`HS65_LS_OA32X4_E_F_Z_F_0110);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_1010,`HS65_LS_OA32X4_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_1000,`HS65_LS_OA32X4_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_1100,`HS65_LS_OA32X4_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_0010,`HS65_LS_OA32X4_E_F_Z_F_0010);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X4_E_R_Z_R_1110,`HS65_LS_OA32X4_E_F_Z_F_1110);


	endspecify

endmodule // HS65_LS_OA32X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA32X9_A_R_Z_R_0001 0.1
`define HS65_LS_OA32X9_A_F_Z_F_0001 0.1
`define HS65_LS_OA32X9_A_R_Z_R_0011 0.1
`define HS65_LS_OA32X9_A_F_Z_F_0011 0.1
`define HS65_LS_OA32X9_A_R_Z_R_0010 0.1
`define HS65_LS_OA32X9_A_F_Z_F_0010 0.1
`define HS65_LS_OA32X9_B_R_Z_R_0001 0.1
`define HS65_LS_OA32X9_B_F_Z_F_0001 0.1
`define HS65_LS_OA32X9_B_R_Z_R_0011 0.1
`define HS65_LS_OA32X9_B_F_Z_F_0011 0.1
`define HS65_LS_OA32X9_B_R_Z_R_0010 0.1
`define HS65_LS_OA32X9_B_F_Z_F_0010 0.1
`define HS65_LS_OA32X9_C_R_Z_R_0001 0.1
`define HS65_LS_OA32X9_C_F_Z_F_0001 0.1
`define HS65_LS_OA32X9_C_R_Z_R_0011 0.1
`define HS65_LS_OA32X9_C_F_Z_F_0011 0.1
`define HS65_LS_OA32X9_C_R_Z_R_0010 0.1
`define HS65_LS_OA32X9_C_F_Z_F_0010 0.1
`define HS65_LS_OA32X9_D_R_Z_R_0100 0.1
`define HS65_LS_OA32X9_D_F_Z_F_0100 0.1
`define HS65_LS_OA32X9_D_R_Z_R_0110 0.1
`define HS65_LS_OA32X9_D_F_Z_F_0110 0.1
`define HS65_LS_OA32X9_D_R_Z_R_1010 0.1
`define HS65_LS_OA32X9_D_F_Z_F_1010 0.1
`define HS65_LS_OA32X9_D_R_Z_R_1000 0.1
`define HS65_LS_OA32X9_D_F_Z_F_1000 0.1
`define HS65_LS_OA32X9_D_R_Z_R_1100 0.1
`define HS65_LS_OA32X9_D_F_Z_F_1100 0.1
`define HS65_LS_OA32X9_D_R_Z_R_0010 0.1
`define HS65_LS_OA32X9_D_F_Z_F_0010 0.1
`define HS65_LS_OA32X9_D_R_Z_R_1110 0.1
`define HS65_LS_OA32X9_D_F_Z_F_1110 0.1
`define HS65_LS_OA32X9_E_R_Z_R_0100 0.1
`define HS65_LS_OA32X9_E_F_Z_F_0100 0.1
`define HS65_LS_OA32X9_E_R_Z_R_0110 0.1
`define HS65_LS_OA32X9_E_F_Z_F_0110 0.1
`define HS65_LS_OA32X9_E_R_Z_R_1010 0.1
`define HS65_LS_OA32X9_E_F_Z_F_1010 0.1
`define HS65_LS_OA32X9_E_R_Z_R_1000 0.1
`define HS65_LS_OA32X9_E_F_Z_F_1000 0.1
`define HS65_LS_OA32X9_E_R_Z_R_1100 0.1
`define HS65_LS_OA32X9_E_F_Z_F_1100 0.1
`define HS65_LS_OA32X9_E_R_Z_R_0010 0.1
`define HS65_LS_OA32X9_E_F_Z_F_0010 0.1
`define HS65_LS_OA32X9_E_R_Z_R_1110 0.1
`define HS65_LS_OA32X9_E_F_Z_F_1110 0.1

module HS65_LS_OA32X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && !D && E) (A +=> Z) = (`HS65_LS_OA32X9_A_R_Z_R_0001,`HS65_LS_OA32X9_A_F_Z_F_0001);
		if (!B && !C && D && E) (A +=> Z) = (`HS65_LS_OA32X9_A_R_Z_R_0011,`HS65_LS_OA32X9_A_F_Z_F_0011);
		if (!B && !C && D && !E) (A +=> Z) = (`HS65_LS_OA32X9_A_R_Z_R_0010,`HS65_LS_OA32X9_A_F_Z_F_0010);
		if (!A && !C && !D && E) (B +=> Z) = (`HS65_LS_OA32X9_B_R_Z_R_0001,`HS65_LS_OA32X9_B_F_Z_F_0001);
		if (!A && !C && D && E) (B +=> Z) = (`HS65_LS_OA32X9_B_R_Z_R_0011,`HS65_LS_OA32X9_B_F_Z_F_0011);
		if (!A && !C && D && !E) (B +=> Z) = (`HS65_LS_OA32X9_B_R_Z_R_0010,`HS65_LS_OA32X9_B_F_Z_F_0010);
		if (!A && !B && !D && E) (C +=> Z) = (`HS65_LS_OA32X9_C_R_Z_R_0001,`HS65_LS_OA32X9_C_F_Z_F_0001);
		if (!A && !B && D && E) (C +=> Z) = (`HS65_LS_OA32X9_C_R_Z_R_0011,`HS65_LS_OA32X9_C_F_Z_F_0011);
		if (!A && !B && D && !E) (C +=> Z) = (`HS65_LS_OA32X9_C_R_Z_R_0010,`HS65_LS_OA32X9_C_F_Z_F_0010);
		if (!A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_0100,`HS65_LS_OA32X9_D_F_Z_F_0100);
		if (!A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_0110,`HS65_LS_OA32X9_D_F_Z_F_0110);
		if (A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_1010,`HS65_LS_OA32X9_D_F_Z_F_1010);
		if (A && !B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_1000,`HS65_LS_OA32X9_D_F_Z_F_1000);
		if (A && B && !C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_1100,`HS65_LS_OA32X9_D_F_Z_F_1100);
		if (!A && !B && C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_0010,`HS65_LS_OA32X9_D_F_Z_F_0010);
		if (A && B && C && !E) (D +=> Z) = (`HS65_LS_OA32X9_D_R_Z_R_1110,`HS65_LS_OA32X9_D_F_Z_F_1110);
		if (!A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_0100,`HS65_LS_OA32X9_E_F_Z_F_0100);
		if (!A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_0110,`HS65_LS_OA32X9_E_F_Z_F_0110);
		if (A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_1010,`HS65_LS_OA32X9_E_F_Z_F_1010);
		if (A && !B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_1000,`HS65_LS_OA32X9_E_F_Z_F_1000);
		if (A && B && !C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_1100,`HS65_LS_OA32X9_E_F_Z_F_1100);
		if (!A && !B && C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_0010,`HS65_LS_OA32X9_E_F_Z_F_0010);
		if (A && B && C && !D) (E +=> Z) = (`HS65_LS_OA32X9_E_R_Z_R_1110,`HS65_LS_OA32X9_E_F_Z_F_1110);


	endspecify

endmodule // HS65_LS_OA32X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA33X18_A_R_Z_R_00111 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00111 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00011 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00011 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00101 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00101 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00100 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00110 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00110 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00010 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00010 0.1
`define HS65_LS_OA33X18_A_R_Z_R_00001 0.1
`define HS65_LS_OA33X18_A_F_Z_F_00001 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00111 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00111 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00011 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00011 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00101 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00101 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00100 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00110 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00110 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00010 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00010 0.1
`define HS65_LS_OA33X18_B_R_Z_R_00001 0.1
`define HS65_LS_OA33X18_B_F_Z_F_00001 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00111 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00111 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00011 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00011 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00101 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00101 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00100 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00110 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00110 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00010 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00010 0.1
`define HS65_LS_OA33X18_C_R_Z_R_00001 0.1
`define HS65_LS_OA33X18_C_F_Z_F_00001 0.1
`define HS65_LS_OA33X18_D_R_Z_R_11100 0.1
`define HS65_LS_OA33X18_D_F_Z_F_11100 0.1
`define HS65_LS_OA33X18_D_R_Z_R_01100 0.1
`define HS65_LS_OA33X18_D_F_Z_F_01100 0.1
`define HS65_LS_OA33X18_D_R_Z_R_10100 0.1
`define HS65_LS_OA33X18_D_F_Z_F_10100 0.1
`define HS65_LS_OA33X18_D_R_Z_R_10000 0.1
`define HS65_LS_OA33X18_D_F_Z_F_10000 0.1
`define HS65_LS_OA33X18_D_R_Z_R_11000 0.1
`define HS65_LS_OA33X18_D_F_Z_F_11000 0.1
`define HS65_LS_OA33X18_D_R_Z_R_01000 0.1
`define HS65_LS_OA33X18_D_F_Z_F_01000 0.1
`define HS65_LS_OA33X18_D_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_D_F_Z_F_00100 0.1
`define HS65_LS_OA33X18_E_R_Z_R_11100 0.1
`define HS65_LS_OA33X18_E_F_Z_F_11100 0.1
`define HS65_LS_OA33X18_E_R_Z_R_01100 0.1
`define HS65_LS_OA33X18_E_F_Z_F_01100 0.1
`define HS65_LS_OA33X18_E_R_Z_R_10100 0.1
`define HS65_LS_OA33X18_E_F_Z_F_10100 0.1
`define HS65_LS_OA33X18_E_R_Z_R_10000 0.1
`define HS65_LS_OA33X18_E_F_Z_F_10000 0.1
`define HS65_LS_OA33X18_E_R_Z_R_11000 0.1
`define HS65_LS_OA33X18_E_F_Z_F_11000 0.1
`define HS65_LS_OA33X18_E_R_Z_R_01000 0.1
`define HS65_LS_OA33X18_E_F_Z_F_01000 0.1
`define HS65_LS_OA33X18_E_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_E_F_Z_F_00100 0.1
`define HS65_LS_OA33X18_F_R_Z_R_11100 0.1
`define HS65_LS_OA33X18_F_F_Z_F_11100 0.1
`define HS65_LS_OA33X18_F_R_Z_R_01100 0.1
`define HS65_LS_OA33X18_F_F_Z_F_01100 0.1
`define HS65_LS_OA33X18_F_R_Z_R_10100 0.1
`define HS65_LS_OA33X18_F_F_Z_F_10100 0.1
`define HS65_LS_OA33X18_F_R_Z_R_10000 0.1
`define HS65_LS_OA33X18_F_F_Z_F_10000 0.1
`define HS65_LS_OA33X18_F_R_Z_R_11000 0.1
`define HS65_LS_OA33X18_F_F_Z_F_11000 0.1
`define HS65_LS_OA33X18_F_R_Z_R_01000 0.1
`define HS65_LS_OA33X18_F_F_Z_F_01000 0.1
`define HS65_LS_OA33X18_F_R_Z_R_00100 0.1
`define HS65_LS_OA33X18_F_F_Z_F_00100 0.1

module HS65_LS_OA33X18 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E, F) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00111,`HS65_LS_OA33X18_A_F_Z_F_00111);
		if (!B && !C && !D && E && F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00011,`HS65_LS_OA33X18_A_F_Z_F_00011);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00101,`HS65_LS_OA33X18_A_F_Z_F_00101);
		if (!B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00100,`HS65_LS_OA33X18_A_F_Z_F_00100);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00110,`HS65_LS_OA33X18_A_F_Z_F_00110);
		if (!B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00010,`HS65_LS_OA33X18_A_F_Z_F_00010);
		if (!B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA33X18_A_R_Z_R_00001,`HS65_LS_OA33X18_A_F_Z_F_00001);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00111,`HS65_LS_OA33X18_B_F_Z_F_00111);
		if (!A && !C && !D && E && F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00011,`HS65_LS_OA33X18_B_F_Z_F_00011);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00101,`HS65_LS_OA33X18_B_F_Z_F_00101);
		if (!A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00100,`HS65_LS_OA33X18_B_F_Z_F_00100);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00110,`HS65_LS_OA33X18_B_F_Z_F_00110);
		if (!A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00010,`HS65_LS_OA33X18_B_F_Z_F_00010);
		if (!A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA33X18_B_R_Z_R_00001,`HS65_LS_OA33X18_B_F_Z_F_00001);
		if (!A && !B && D && E && F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00111,`HS65_LS_OA33X18_C_F_Z_F_00111);
		if (!A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00011,`HS65_LS_OA33X18_C_F_Z_F_00011);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00101,`HS65_LS_OA33X18_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00100,`HS65_LS_OA33X18_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00110,`HS65_LS_OA33X18_C_F_Z_F_00110);
		if (!A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00010,`HS65_LS_OA33X18_C_F_Z_F_00010);
		if (!A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA33X18_C_R_Z_R_00001,`HS65_LS_OA33X18_C_F_Z_F_00001);
		if (A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_11100,`HS65_LS_OA33X18_D_F_Z_F_11100);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_01100,`HS65_LS_OA33X18_D_F_Z_F_01100);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_10100,`HS65_LS_OA33X18_D_F_Z_F_10100);
		if (A && !B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_10000,`HS65_LS_OA33X18_D_F_Z_F_10000);
		if (A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_11000,`HS65_LS_OA33X18_D_F_Z_F_11000);
		if (!A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_01000,`HS65_LS_OA33X18_D_F_Z_F_01000);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X18_D_R_Z_R_00100,`HS65_LS_OA33X18_D_F_Z_F_00100);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_11100,`HS65_LS_OA33X18_E_F_Z_F_11100);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_01100,`HS65_LS_OA33X18_E_F_Z_F_01100);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_10100,`HS65_LS_OA33X18_E_F_Z_F_10100);
		if (A && !B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_10000,`HS65_LS_OA33X18_E_F_Z_F_10000);
		if (A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_11000,`HS65_LS_OA33X18_E_F_Z_F_11000);
		if (!A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_01000,`HS65_LS_OA33X18_E_F_Z_F_01000);
		if (!A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X18_E_R_Z_R_00100,`HS65_LS_OA33X18_E_F_Z_F_00100);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_11100,`HS65_LS_OA33X18_F_F_Z_F_11100);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_01100,`HS65_LS_OA33X18_F_F_Z_F_01100);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_10100,`HS65_LS_OA33X18_F_F_Z_F_10100);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_10000,`HS65_LS_OA33X18_F_F_Z_F_10000);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_11000,`HS65_LS_OA33X18_F_F_Z_F_11000);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_01000,`HS65_LS_OA33X18_F_F_Z_F_01000);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X18_F_R_Z_R_00100,`HS65_LS_OA33X18_F_F_Z_F_00100);


	endspecify

endmodule // HS65_LS_OA33X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA33X27_A_R_Z_R_00111 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00111 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00011 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00011 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00101 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00101 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00100 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00110 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00110 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00010 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00010 0.1
`define HS65_LS_OA33X27_A_R_Z_R_00001 0.1
`define HS65_LS_OA33X27_A_F_Z_F_00001 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00111 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00111 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00011 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00011 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00101 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00101 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00100 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00110 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00110 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00010 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00010 0.1
`define HS65_LS_OA33X27_B_R_Z_R_00001 0.1
`define HS65_LS_OA33X27_B_F_Z_F_00001 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00111 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00111 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00011 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00011 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00101 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00101 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00100 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00110 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00110 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00010 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00010 0.1
`define HS65_LS_OA33X27_C_R_Z_R_00001 0.1
`define HS65_LS_OA33X27_C_F_Z_F_00001 0.1
`define HS65_LS_OA33X27_D_R_Z_R_11100 0.1
`define HS65_LS_OA33X27_D_F_Z_F_11100 0.1
`define HS65_LS_OA33X27_D_R_Z_R_01100 0.1
`define HS65_LS_OA33X27_D_F_Z_F_01100 0.1
`define HS65_LS_OA33X27_D_R_Z_R_10100 0.1
`define HS65_LS_OA33X27_D_F_Z_F_10100 0.1
`define HS65_LS_OA33X27_D_R_Z_R_10000 0.1
`define HS65_LS_OA33X27_D_F_Z_F_10000 0.1
`define HS65_LS_OA33X27_D_R_Z_R_11000 0.1
`define HS65_LS_OA33X27_D_F_Z_F_11000 0.1
`define HS65_LS_OA33X27_D_R_Z_R_01000 0.1
`define HS65_LS_OA33X27_D_F_Z_F_01000 0.1
`define HS65_LS_OA33X27_D_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_D_F_Z_F_00100 0.1
`define HS65_LS_OA33X27_E_R_Z_R_11100 0.1
`define HS65_LS_OA33X27_E_F_Z_F_11100 0.1
`define HS65_LS_OA33X27_E_R_Z_R_01100 0.1
`define HS65_LS_OA33X27_E_F_Z_F_01100 0.1
`define HS65_LS_OA33X27_E_R_Z_R_10100 0.1
`define HS65_LS_OA33X27_E_F_Z_F_10100 0.1
`define HS65_LS_OA33X27_E_R_Z_R_10000 0.1
`define HS65_LS_OA33X27_E_F_Z_F_10000 0.1
`define HS65_LS_OA33X27_E_R_Z_R_11000 0.1
`define HS65_LS_OA33X27_E_F_Z_F_11000 0.1
`define HS65_LS_OA33X27_E_R_Z_R_01000 0.1
`define HS65_LS_OA33X27_E_F_Z_F_01000 0.1
`define HS65_LS_OA33X27_E_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_E_F_Z_F_00100 0.1
`define HS65_LS_OA33X27_F_R_Z_R_11100 0.1
`define HS65_LS_OA33X27_F_F_Z_F_11100 0.1
`define HS65_LS_OA33X27_F_R_Z_R_01100 0.1
`define HS65_LS_OA33X27_F_F_Z_F_01100 0.1
`define HS65_LS_OA33X27_F_R_Z_R_10100 0.1
`define HS65_LS_OA33X27_F_F_Z_F_10100 0.1
`define HS65_LS_OA33X27_F_R_Z_R_10000 0.1
`define HS65_LS_OA33X27_F_F_Z_F_10000 0.1
`define HS65_LS_OA33X27_F_R_Z_R_11000 0.1
`define HS65_LS_OA33X27_F_F_Z_F_11000 0.1
`define HS65_LS_OA33X27_F_R_Z_R_01000 0.1
`define HS65_LS_OA33X27_F_F_Z_F_01000 0.1
`define HS65_LS_OA33X27_F_R_Z_R_00100 0.1
`define HS65_LS_OA33X27_F_F_Z_F_00100 0.1

module HS65_LS_OA33X27 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E, F) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00111,`HS65_LS_OA33X27_A_F_Z_F_00111);
		if (!B && !C && !D && E && F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00011,`HS65_LS_OA33X27_A_F_Z_F_00011);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00101,`HS65_LS_OA33X27_A_F_Z_F_00101);
		if (!B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00100,`HS65_LS_OA33X27_A_F_Z_F_00100);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00110,`HS65_LS_OA33X27_A_F_Z_F_00110);
		if (!B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00010,`HS65_LS_OA33X27_A_F_Z_F_00010);
		if (!B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA33X27_A_R_Z_R_00001,`HS65_LS_OA33X27_A_F_Z_F_00001);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00111,`HS65_LS_OA33X27_B_F_Z_F_00111);
		if (!A && !C && !D && E && F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00011,`HS65_LS_OA33X27_B_F_Z_F_00011);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00101,`HS65_LS_OA33X27_B_F_Z_F_00101);
		if (!A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00100,`HS65_LS_OA33X27_B_F_Z_F_00100);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00110,`HS65_LS_OA33X27_B_F_Z_F_00110);
		if (!A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00010,`HS65_LS_OA33X27_B_F_Z_F_00010);
		if (!A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA33X27_B_R_Z_R_00001,`HS65_LS_OA33X27_B_F_Z_F_00001);
		if (!A && !B && D && E && F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00111,`HS65_LS_OA33X27_C_F_Z_F_00111);
		if (!A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00011,`HS65_LS_OA33X27_C_F_Z_F_00011);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00101,`HS65_LS_OA33X27_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00100,`HS65_LS_OA33X27_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00110,`HS65_LS_OA33X27_C_F_Z_F_00110);
		if (!A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00010,`HS65_LS_OA33X27_C_F_Z_F_00010);
		if (!A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA33X27_C_R_Z_R_00001,`HS65_LS_OA33X27_C_F_Z_F_00001);
		if (A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_11100,`HS65_LS_OA33X27_D_F_Z_F_11100);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_01100,`HS65_LS_OA33X27_D_F_Z_F_01100);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_10100,`HS65_LS_OA33X27_D_F_Z_F_10100);
		if (A && !B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_10000,`HS65_LS_OA33X27_D_F_Z_F_10000);
		if (A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_11000,`HS65_LS_OA33X27_D_F_Z_F_11000);
		if (!A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_01000,`HS65_LS_OA33X27_D_F_Z_F_01000);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X27_D_R_Z_R_00100,`HS65_LS_OA33X27_D_F_Z_F_00100);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_11100,`HS65_LS_OA33X27_E_F_Z_F_11100);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_01100,`HS65_LS_OA33X27_E_F_Z_F_01100);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_10100,`HS65_LS_OA33X27_E_F_Z_F_10100);
		if (A && !B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_10000,`HS65_LS_OA33X27_E_F_Z_F_10000);
		if (A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_11000,`HS65_LS_OA33X27_E_F_Z_F_11000);
		if (!A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_01000,`HS65_LS_OA33X27_E_F_Z_F_01000);
		if (!A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X27_E_R_Z_R_00100,`HS65_LS_OA33X27_E_F_Z_F_00100);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_11100,`HS65_LS_OA33X27_F_F_Z_F_11100);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_01100,`HS65_LS_OA33X27_F_F_Z_F_01100);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_10100,`HS65_LS_OA33X27_F_F_Z_F_10100);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_10000,`HS65_LS_OA33X27_F_F_Z_F_10000);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_11000,`HS65_LS_OA33X27_F_F_Z_F_11000);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_01000,`HS65_LS_OA33X27_F_F_Z_F_01000);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X27_F_R_Z_R_00100,`HS65_LS_OA33X27_F_F_Z_F_00100);


	endspecify

endmodule // HS65_LS_OA33X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA33X35_A_R_Z_R_00111 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00111 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00011 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00011 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00101 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00101 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00100 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00110 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00110 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00010 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00010 0.1
`define HS65_LS_OA33X35_A_R_Z_R_00001 0.1
`define HS65_LS_OA33X35_A_F_Z_F_00001 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00111 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00111 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00011 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00011 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00101 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00101 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00100 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00110 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00110 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00010 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00010 0.1
`define HS65_LS_OA33X35_B_R_Z_R_00001 0.1
`define HS65_LS_OA33X35_B_F_Z_F_00001 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00111 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00111 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00011 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00011 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00101 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00101 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00100 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00110 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00110 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00010 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00010 0.1
`define HS65_LS_OA33X35_C_R_Z_R_00001 0.1
`define HS65_LS_OA33X35_C_F_Z_F_00001 0.1
`define HS65_LS_OA33X35_D_R_Z_R_11100 0.1
`define HS65_LS_OA33X35_D_F_Z_F_11100 0.1
`define HS65_LS_OA33X35_D_R_Z_R_01100 0.1
`define HS65_LS_OA33X35_D_F_Z_F_01100 0.1
`define HS65_LS_OA33X35_D_R_Z_R_10100 0.1
`define HS65_LS_OA33X35_D_F_Z_F_10100 0.1
`define HS65_LS_OA33X35_D_R_Z_R_10000 0.1
`define HS65_LS_OA33X35_D_F_Z_F_10000 0.1
`define HS65_LS_OA33X35_D_R_Z_R_11000 0.1
`define HS65_LS_OA33X35_D_F_Z_F_11000 0.1
`define HS65_LS_OA33X35_D_R_Z_R_01000 0.1
`define HS65_LS_OA33X35_D_F_Z_F_01000 0.1
`define HS65_LS_OA33X35_D_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_D_F_Z_F_00100 0.1
`define HS65_LS_OA33X35_E_R_Z_R_11100 0.1
`define HS65_LS_OA33X35_E_F_Z_F_11100 0.1
`define HS65_LS_OA33X35_E_R_Z_R_01100 0.1
`define HS65_LS_OA33X35_E_F_Z_F_01100 0.1
`define HS65_LS_OA33X35_E_R_Z_R_10100 0.1
`define HS65_LS_OA33X35_E_F_Z_F_10100 0.1
`define HS65_LS_OA33X35_E_R_Z_R_10000 0.1
`define HS65_LS_OA33X35_E_F_Z_F_10000 0.1
`define HS65_LS_OA33X35_E_R_Z_R_11000 0.1
`define HS65_LS_OA33X35_E_F_Z_F_11000 0.1
`define HS65_LS_OA33X35_E_R_Z_R_01000 0.1
`define HS65_LS_OA33X35_E_F_Z_F_01000 0.1
`define HS65_LS_OA33X35_E_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_E_F_Z_F_00100 0.1
`define HS65_LS_OA33X35_F_R_Z_R_11100 0.1
`define HS65_LS_OA33X35_F_F_Z_F_11100 0.1
`define HS65_LS_OA33X35_F_R_Z_R_01100 0.1
`define HS65_LS_OA33X35_F_F_Z_F_01100 0.1
`define HS65_LS_OA33X35_F_R_Z_R_10100 0.1
`define HS65_LS_OA33X35_F_F_Z_F_10100 0.1
`define HS65_LS_OA33X35_F_R_Z_R_10000 0.1
`define HS65_LS_OA33X35_F_F_Z_F_10000 0.1
`define HS65_LS_OA33X35_F_R_Z_R_11000 0.1
`define HS65_LS_OA33X35_F_F_Z_F_11000 0.1
`define HS65_LS_OA33X35_F_R_Z_R_01000 0.1
`define HS65_LS_OA33X35_F_F_Z_F_01000 0.1
`define HS65_LS_OA33X35_F_R_Z_R_00100 0.1
`define HS65_LS_OA33X35_F_F_Z_F_00100 0.1

module HS65_LS_OA33X35 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E, F) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00111,`HS65_LS_OA33X35_A_F_Z_F_00111);
		if (!B && !C && !D && E && F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00011,`HS65_LS_OA33X35_A_F_Z_F_00011);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00101,`HS65_LS_OA33X35_A_F_Z_F_00101);
		if (!B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00100,`HS65_LS_OA33X35_A_F_Z_F_00100);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00110,`HS65_LS_OA33X35_A_F_Z_F_00110);
		if (!B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00010,`HS65_LS_OA33X35_A_F_Z_F_00010);
		if (!B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA33X35_A_R_Z_R_00001,`HS65_LS_OA33X35_A_F_Z_F_00001);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00111,`HS65_LS_OA33X35_B_F_Z_F_00111);
		if (!A && !C && !D && E && F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00011,`HS65_LS_OA33X35_B_F_Z_F_00011);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00101,`HS65_LS_OA33X35_B_F_Z_F_00101);
		if (!A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00100,`HS65_LS_OA33X35_B_F_Z_F_00100);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00110,`HS65_LS_OA33X35_B_F_Z_F_00110);
		if (!A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00010,`HS65_LS_OA33X35_B_F_Z_F_00010);
		if (!A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA33X35_B_R_Z_R_00001,`HS65_LS_OA33X35_B_F_Z_F_00001);
		if (!A && !B && D && E && F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00111,`HS65_LS_OA33X35_C_F_Z_F_00111);
		if (!A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00011,`HS65_LS_OA33X35_C_F_Z_F_00011);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00101,`HS65_LS_OA33X35_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00100,`HS65_LS_OA33X35_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00110,`HS65_LS_OA33X35_C_F_Z_F_00110);
		if (!A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00010,`HS65_LS_OA33X35_C_F_Z_F_00010);
		if (!A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA33X35_C_R_Z_R_00001,`HS65_LS_OA33X35_C_F_Z_F_00001);
		if (A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_11100,`HS65_LS_OA33X35_D_F_Z_F_11100);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_01100,`HS65_LS_OA33X35_D_F_Z_F_01100);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_10100,`HS65_LS_OA33X35_D_F_Z_F_10100);
		if (A && !B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_10000,`HS65_LS_OA33X35_D_F_Z_F_10000);
		if (A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_11000,`HS65_LS_OA33X35_D_F_Z_F_11000);
		if (!A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_01000,`HS65_LS_OA33X35_D_F_Z_F_01000);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X35_D_R_Z_R_00100,`HS65_LS_OA33X35_D_F_Z_F_00100);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_11100,`HS65_LS_OA33X35_E_F_Z_F_11100);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_01100,`HS65_LS_OA33X35_E_F_Z_F_01100);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_10100,`HS65_LS_OA33X35_E_F_Z_F_10100);
		if (A && !B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_10000,`HS65_LS_OA33X35_E_F_Z_F_10000);
		if (A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_11000,`HS65_LS_OA33X35_E_F_Z_F_11000);
		if (!A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_01000,`HS65_LS_OA33X35_E_F_Z_F_01000);
		if (!A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X35_E_R_Z_R_00100,`HS65_LS_OA33X35_E_F_Z_F_00100);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_11100,`HS65_LS_OA33X35_F_F_Z_F_11100);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_01100,`HS65_LS_OA33X35_F_F_Z_F_01100);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_10100,`HS65_LS_OA33X35_F_F_Z_F_10100);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_10000,`HS65_LS_OA33X35_F_F_Z_F_10000);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_11000,`HS65_LS_OA33X35_F_F_Z_F_11000);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_01000,`HS65_LS_OA33X35_F_F_Z_F_01000);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X35_F_R_Z_R_00100,`HS65_LS_OA33X35_F_F_Z_F_00100);


	endspecify

endmodule // HS65_LS_OA33X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA33X4_A_R_Z_R_00111 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00111 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00011 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00011 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00101 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00101 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00100 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00110 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00110 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00010 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00010 0.1
`define HS65_LS_OA33X4_A_R_Z_R_00001 0.1
`define HS65_LS_OA33X4_A_F_Z_F_00001 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00111 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00111 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00011 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00011 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00101 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00101 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00100 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00110 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00110 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00010 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00010 0.1
`define HS65_LS_OA33X4_B_R_Z_R_00001 0.1
`define HS65_LS_OA33X4_B_F_Z_F_00001 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00111 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00111 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00011 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00011 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00101 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00101 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00100 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00110 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00110 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00010 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00010 0.1
`define HS65_LS_OA33X4_C_R_Z_R_00001 0.1
`define HS65_LS_OA33X4_C_F_Z_F_00001 0.1
`define HS65_LS_OA33X4_D_R_Z_R_11100 0.1
`define HS65_LS_OA33X4_D_F_Z_F_11100 0.1
`define HS65_LS_OA33X4_D_R_Z_R_01100 0.1
`define HS65_LS_OA33X4_D_F_Z_F_01100 0.1
`define HS65_LS_OA33X4_D_R_Z_R_10100 0.1
`define HS65_LS_OA33X4_D_F_Z_F_10100 0.1
`define HS65_LS_OA33X4_D_R_Z_R_10000 0.1
`define HS65_LS_OA33X4_D_F_Z_F_10000 0.1
`define HS65_LS_OA33X4_D_R_Z_R_11000 0.1
`define HS65_LS_OA33X4_D_F_Z_F_11000 0.1
`define HS65_LS_OA33X4_D_R_Z_R_01000 0.1
`define HS65_LS_OA33X4_D_F_Z_F_01000 0.1
`define HS65_LS_OA33X4_D_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_D_F_Z_F_00100 0.1
`define HS65_LS_OA33X4_E_R_Z_R_11100 0.1
`define HS65_LS_OA33X4_E_F_Z_F_11100 0.1
`define HS65_LS_OA33X4_E_R_Z_R_01100 0.1
`define HS65_LS_OA33X4_E_F_Z_F_01100 0.1
`define HS65_LS_OA33X4_E_R_Z_R_10100 0.1
`define HS65_LS_OA33X4_E_F_Z_F_10100 0.1
`define HS65_LS_OA33X4_E_R_Z_R_10000 0.1
`define HS65_LS_OA33X4_E_F_Z_F_10000 0.1
`define HS65_LS_OA33X4_E_R_Z_R_11000 0.1
`define HS65_LS_OA33X4_E_F_Z_F_11000 0.1
`define HS65_LS_OA33X4_E_R_Z_R_01000 0.1
`define HS65_LS_OA33X4_E_F_Z_F_01000 0.1
`define HS65_LS_OA33X4_E_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_E_F_Z_F_00100 0.1
`define HS65_LS_OA33X4_F_R_Z_R_11100 0.1
`define HS65_LS_OA33X4_F_F_Z_F_11100 0.1
`define HS65_LS_OA33X4_F_R_Z_R_01100 0.1
`define HS65_LS_OA33X4_F_F_Z_F_01100 0.1
`define HS65_LS_OA33X4_F_R_Z_R_10100 0.1
`define HS65_LS_OA33X4_F_F_Z_F_10100 0.1
`define HS65_LS_OA33X4_F_R_Z_R_10000 0.1
`define HS65_LS_OA33X4_F_F_Z_F_10000 0.1
`define HS65_LS_OA33X4_F_R_Z_R_11000 0.1
`define HS65_LS_OA33X4_F_F_Z_F_11000 0.1
`define HS65_LS_OA33X4_F_R_Z_R_01000 0.1
`define HS65_LS_OA33X4_F_F_Z_F_01000 0.1
`define HS65_LS_OA33X4_F_R_Z_R_00100 0.1
`define HS65_LS_OA33X4_F_F_Z_F_00100 0.1

module HS65_LS_OA33X4 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E, F) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00111,`HS65_LS_OA33X4_A_F_Z_F_00111);
		if (!B && !C && !D && E && F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00011,`HS65_LS_OA33X4_A_F_Z_F_00011);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00101,`HS65_LS_OA33X4_A_F_Z_F_00101);
		if (!B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00100,`HS65_LS_OA33X4_A_F_Z_F_00100);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00110,`HS65_LS_OA33X4_A_F_Z_F_00110);
		if (!B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00010,`HS65_LS_OA33X4_A_F_Z_F_00010);
		if (!B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA33X4_A_R_Z_R_00001,`HS65_LS_OA33X4_A_F_Z_F_00001);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00111,`HS65_LS_OA33X4_B_F_Z_F_00111);
		if (!A && !C && !D && E && F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00011,`HS65_LS_OA33X4_B_F_Z_F_00011);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00101,`HS65_LS_OA33X4_B_F_Z_F_00101);
		if (!A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00100,`HS65_LS_OA33X4_B_F_Z_F_00100);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00110,`HS65_LS_OA33X4_B_F_Z_F_00110);
		if (!A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00010,`HS65_LS_OA33X4_B_F_Z_F_00010);
		if (!A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA33X4_B_R_Z_R_00001,`HS65_LS_OA33X4_B_F_Z_F_00001);
		if (!A && !B && D && E && F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00111,`HS65_LS_OA33X4_C_F_Z_F_00111);
		if (!A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00011,`HS65_LS_OA33X4_C_F_Z_F_00011);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00101,`HS65_LS_OA33X4_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00100,`HS65_LS_OA33X4_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00110,`HS65_LS_OA33X4_C_F_Z_F_00110);
		if (!A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00010,`HS65_LS_OA33X4_C_F_Z_F_00010);
		if (!A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA33X4_C_R_Z_R_00001,`HS65_LS_OA33X4_C_F_Z_F_00001);
		if (A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_11100,`HS65_LS_OA33X4_D_F_Z_F_11100);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_01100,`HS65_LS_OA33X4_D_F_Z_F_01100);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_10100,`HS65_LS_OA33X4_D_F_Z_F_10100);
		if (A && !B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_10000,`HS65_LS_OA33X4_D_F_Z_F_10000);
		if (A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_11000,`HS65_LS_OA33X4_D_F_Z_F_11000);
		if (!A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_01000,`HS65_LS_OA33X4_D_F_Z_F_01000);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X4_D_R_Z_R_00100,`HS65_LS_OA33X4_D_F_Z_F_00100);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_11100,`HS65_LS_OA33X4_E_F_Z_F_11100);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_01100,`HS65_LS_OA33X4_E_F_Z_F_01100);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_10100,`HS65_LS_OA33X4_E_F_Z_F_10100);
		if (A && !B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_10000,`HS65_LS_OA33X4_E_F_Z_F_10000);
		if (A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_11000,`HS65_LS_OA33X4_E_F_Z_F_11000);
		if (!A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_01000,`HS65_LS_OA33X4_E_F_Z_F_01000);
		if (!A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X4_E_R_Z_R_00100,`HS65_LS_OA33X4_E_F_Z_F_00100);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_11100,`HS65_LS_OA33X4_F_F_Z_F_11100);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_01100,`HS65_LS_OA33X4_F_F_Z_F_01100);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_10100,`HS65_LS_OA33X4_F_F_Z_F_10100);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_10000,`HS65_LS_OA33X4_F_F_Z_F_10000);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_11000,`HS65_LS_OA33X4_F_F_Z_F_11000);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_01000,`HS65_LS_OA33X4_F_F_Z_F_01000);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X4_F_R_Z_R_00100,`HS65_LS_OA33X4_F_F_Z_F_00100);


	endspecify

endmodule // HS65_LS_OA33X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OA33X9_A_R_Z_R_00111 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00111 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00011 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00011 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00101 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00101 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00100 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00110 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00110 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00010 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00010 0.1
`define HS65_LS_OA33X9_A_R_Z_R_00001 0.1
`define HS65_LS_OA33X9_A_F_Z_F_00001 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00111 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00111 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00011 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00011 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00101 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00101 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00100 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00110 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00110 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00010 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00010 0.1
`define HS65_LS_OA33X9_B_R_Z_R_00001 0.1
`define HS65_LS_OA33X9_B_F_Z_F_00001 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00111 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00111 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00011 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00011 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00101 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00101 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00100 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00110 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00110 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00010 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00010 0.1
`define HS65_LS_OA33X9_C_R_Z_R_00001 0.1
`define HS65_LS_OA33X9_C_F_Z_F_00001 0.1
`define HS65_LS_OA33X9_D_R_Z_R_11100 0.1
`define HS65_LS_OA33X9_D_F_Z_F_11100 0.1
`define HS65_LS_OA33X9_D_R_Z_R_01100 0.1
`define HS65_LS_OA33X9_D_F_Z_F_01100 0.1
`define HS65_LS_OA33X9_D_R_Z_R_10100 0.1
`define HS65_LS_OA33X9_D_F_Z_F_10100 0.1
`define HS65_LS_OA33X9_D_R_Z_R_10000 0.1
`define HS65_LS_OA33X9_D_F_Z_F_10000 0.1
`define HS65_LS_OA33X9_D_R_Z_R_11000 0.1
`define HS65_LS_OA33X9_D_F_Z_F_11000 0.1
`define HS65_LS_OA33X9_D_R_Z_R_01000 0.1
`define HS65_LS_OA33X9_D_F_Z_F_01000 0.1
`define HS65_LS_OA33X9_D_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_D_F_Z_F_00100 0.1
`define HS65_LS_OA33X9_E_R_Z_R_11100 0.1
`define HS65_LS_OA33X9_E_F_Z_F_11100 0.1
`define HS65_LS_OA33X9_E_R_Z_R_01100 0.1
`define HS65_LS_OA33X9_E_F_Z_F_01100 0.1
`define HS65_LS_OA33X9_E_R_Z_R_10100 0.1
`define HS65_LS_OA33X9_E_F_Z_F_10100 0.1
`define HS65_LS_OA33X9_E_R_Z_R_10000 0.1
`define HS65_LS_OA33X9_E_F_Z_F_10000 0.1
`define HS65_LS_OA33X9_E_R_Z_R_11000 0.1
`define HS65_LS_OA33X9_E_F_Z_F_11000 0.1
`define HS65_LS_OA33X9_E_R_Z_R_01000 0.1
`define HS65_LS_OA33X9_E_F_Z_F_01000 0.1
`define HS65_LS_OA33X9_E_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_E_F_Z_F_00100 0.1
`define HS65_LS_OA33X9_F_R_Z_R_11100 0.1
`define HS65_LS_OA33X9_F_F_Z_F_11100 0.1
`define HS65_LS_OA33X9_F_R_Z_R_01100 0.1
`define HS65_LS_OA33X9_F_F_Z_F_01100 0.1
`define HS65_LS_OA33X9_F_R_Z_R_10100 0.1
`define HS65_LS_OA33X9_F_F_Z_F_10100 0.1
`define HS65_LS_OA33X9_F_R_Z_R_10000 0.1
`define HS65_LS_OA33X9_F_F_Z_F_10000 0.1
`define HS65_LS_OA33X9_F_R_Z_R_11000 0.1
`define HS65_LS_OA33X9_F_F_Z_F_11000 0.1
`define HS65_LS_OA33X9_F_R_Z_R_01000 0.1
`define HS65_LS_OA33X9_F_F_Z_F_01000 0.1
`define HS65_LS_OA33X9_F_R_Z_R_00100 0.1
`define HS65_LS_OA33X9_F_F_Z_F_00100 0.1

module HS65_LS_OA33X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL1, A, B, C) ;
	or    U2 (INTERNAL2, D, E, F) ;
	and   #1 U3 (Z, INTERNAL1, INTERNAL2) ;



	specify

		if (!B && !C && D && E && F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00111,`HS65_LS_OA33X9_A_F_Z_F_00111);
		if (!B && !C && !D && E && F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00011,`HS65_LS_OA33X9_A_F_Z_F_00011);
		if (!B && !C && D && !E && F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00101,`HS65_LS_OA33X9_A_F_Z_F_00101);
		if (!B && !C && D && !E && !F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00100,`HS65_LS_OA33X9_A_F_Z_F_00100);
		if (!B && !C && D && E && !F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00110,`HS65_LS_OA33X9_A_F_Z_F_00110);
		if (!B && !C && !D && E && !F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00010,`HS65_LS_OA33X9_A_F_Z_F_00010);
		if (!B && !C && !D && !E && F) (A +=> Z) = (`HS65_LS_OA33X9_A_R_Z_R_00001,`HS65_LS_OA33X9_A_F_Z_F_00001);
		if (!A && !C && D && E && F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00111,`HS65_LS_OA33X9_B_F_Z_F_00111);
		if (!A && !C && !D && E && F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00011,`HS65_LS_OA33X9_B_F_Z_F_00011);
		if (!A && !C && D && !E && F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00101,`HS65_LS_OA33X9_B_F_Z_F_00101);
		if (!A && !C && D && !E && !F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00100,`HS65_LS_OA33X9_B_F_Z_F_00100);
		if (!A && !C && D && E && !F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00110,`HS65_LS_OA33X9_B_F_Z_F_00110);
		if (!A && !C && !D && E && !F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00010,`HS65_LS_OA33X9_B_F_Z_F_00010);
		if (!A && !C && !D && !E && F) (B +=> Z) = (`HS65_LS_OA33X9_B_R_Z_R_00001,`HS65_LS_OA33X9_B_F_Z_F_00001);
		if (!A && !B && D && E && F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00111,`HS65_LS_OA33X9_C_F_Z_F_00111);
		if (!A && !B && !D && E && F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00011,`HS65_LS_OA33X9_C_F_Z_F_00011);
		if (!A && !B && D && !E && F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00101,`HS65_LS_OA33X9_C_F_Z_F_00101);
		if (!A && !B && D && !E && !F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00100,`HS65_LS_OA33X9_C_F_Z_F_00100);
		if (!A && !B && D && E && !F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00110,`HS65_LS_OA33X9_C_F_Z_F_00110);
		if (!A && !B && !D && E && !F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00010,`HS65_LS_OA33X9_C_F_Z_F_00010);
		if (!A && !B && !D && !E && F) (C +=> Z) = (`HS65_LS_OA33X9_C_R_Z_R_00001,`HS65_LS_OA33X9_C_F_Z_F_00001);
		if (A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_11100,`HS65_LS_OA33X9_D_F_Z_F_11100);
		if (!A && B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_01100,`HS65_LS_OA33X9_D_F_Z_F_01100);
		if (A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_10100,`HS65_LS_OA33X9_D_F_Z_F_10100);
		if (A && !B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_10000,`HS65_LS_OA33X9_D_F_Z_F_10000);
		if (A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_11000,`HS65_LS_OA33X9_D_F_Z_F_11000);
		if (!A && B && !C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_01000,`HS65_LS_OA33X9_D_F_Z_F_01000);
		if (!A && !B && C && !E && !F) (D +=> Z) = (`HS65_LS_OA33X9_D_R_Z_R_00100,`HS65_LS_OA33X9_D_F_Z_F_00100);
		if (A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_11100,`HS65_LS_OA33X9_E_F_Z_F_11100);
		if (!A && B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_01100,`HS65_LS_OA33X9_E_F_Z_F_01100);
		if (A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_10100,`HS65_LS_OA33X9_E_F_Z_F_10100);
		if (A && !B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_10000,`HS65_LS_OA33X9_E_F_Z_F_10000);
		if (A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_11000,`HS65_LS_OA33X9_E_F_Z_F_11000);
		if (!A && B && !C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_01000,`HS65_LS_OA33X9_E_F_Z_F_01000);
		if (!A && !B && C && !D && !F) (E +=> Z) = (`HS65_LS_OA33X9_E_R_Z_R_00100,`HS65_LS_OA33X9_E_F_Z_F_00100);
		if (A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_11100,`HS65_LS_OA33X9_F_F_Z_F_11100);
		if (!A && B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_01100,`HS65_LS_OA33X9_F_F_Z_F_01100);
		if (A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_10100,`HS65_LS_OA33X9_F_F_Z_F_10100);
		if (A && !B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_10000,`HS65_LS_OA33X9_F_F_Z_F_10000);
		if (A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_11000,`HS65_LS_OA33X9_F_F_Z_F_11000);
		if (!A && B && !C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_01000,`HS65_LS_OA33X9_F_F_Z_F_01000);
		if (!A && !B && C && !D && !E) (F +=> Z) = (`HS65_LS_OA33X9_F_R_Z_R_00100,`HS65_LS_OA33X9_F_F_Z_F_00100);


	endspecify

endmodule // HS65_LS_OA33X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X1_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X1_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X1_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X1_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X1_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X1_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X1_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X1_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X1_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X1_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X1_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X1_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X1_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X1_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X1_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X1_D_F_Z_R_111 0.1

module HS65_LS_OAI112X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X1_A_F_Z_R_011,`HS65_LS_OAI112X1_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X1_B_F_Z_R_011,`HS65_LS_OAI112X1_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X1_C_F_Z_R_101,`HS65_LS_OAI112X1_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X1_C_F_Z_R_011,`HS65_LS_OAI112X1_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X1_C_F_Z_R_111,`HS65_LS_OAI112X1_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X1_D_F_Z_R_101,`HS65_LS_OAI112X1_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X1_D_F_Z_R_011,`HS65_LS_OAI112X1_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X1_D_F_Z_R_111,`HS65_LS_OAI112X1_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X11_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X11_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X11_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X11_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X11_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X11_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X11_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X11_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X11_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X11_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X11_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X11_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X11_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X11_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X11_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X11_D_F_Z_R_111 0.1

module HS65_LS_OAI112X11 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X11_A_F_Z_R_011,`HS65_LS_OAI112X11_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X11_B_F_Z_R_011,`HS65_LS_OAI112X11_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X11_C_F_Z_R_101,`HS65_LS_OAI112X11_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X11_C_F_Z_R_011,`HS65_LS_OAI112X11_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X11_C_F_Z_R_111,`HS65_LS_OAI112X11_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X11_D_F_Z_R_101,`HS65_LS_OAI112X11_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X11_D_F_Z_R_011,`HS65_LS_OAI112X11_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X11_D_F_Z_R_111,`HS65_LS_OAI112X11_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X16_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X16_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X16_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X16_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X16_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X16_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X16_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X16_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X16_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X16_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X16_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X16_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X16_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X16_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X16_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X16_D_F_Z_R_111 0.1

module HS65_LS_OAI112X16 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X16_A_F_Z_R_011,`HS65_LS_OAI112X16_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X16_B_F_Z_R_011,`HS65_LS_OAI112X16_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X16_C_F_Z_R_101,`HS65_LS_OAI112X16_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X16_C_F_Z_R_011,`HS65_LS_OAI112X16_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X16_C_F_Z_R_111,`HS65_LS_OAI112X16_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X16_D_F_Z_R_101,`HS65_LS_OAI112X16_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X16_D_F_Z_R_011,`HS65_LS_OAI112X16_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X16_D_F_Z_R_111,`HS65_LS_OAI112X16_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X16

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X22_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X22_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X22_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X22_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X22_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X22_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X22_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X22_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X22_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X22_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X22_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X22_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X22_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X22_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X22_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X22_D_F_Z_R_111 0.1

module HS65_LS_OAI112X22 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X22_A_F_Z_R_011,`HS65_LS_OAI112X22_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X22_B_F_Z_R_011,`HS65_LS_OAI112X22_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X22_C_F_Z_R_101,`HS65_LS_OAI112X22_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X22_C_F_Z_R_011,`HS65_LS_OAI112X22_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X22_C_F_Z_R_111,`HS65_LS_OAI112X22_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X22_D_F_Z_R_101,`HS65_LS_OAI112X22_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X22_D_F_Z_R_011,`HS65_LS_OAI112X22_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X22_D_F_Z_R_111,`HS65_LS_OAI112X22_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X3_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X3_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X3_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X3_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X3_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X3_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X3_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X3_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X3_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X3_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X3_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X3_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X3_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X3_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X3_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X3_D_F_Z_R_111 0.1

module HS65_LS_OAI112X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X3_A_F_Z_R_011,`HS65_LS_OAI112X3_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X3_B_F_Z_R_011,`HS65_LS_OAI112X3_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X3_C_F_Z_R_101,`HS65_LS_OAI112X3_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X3_C_F_Z_R_011,`HS65_LS_OAI112X3_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X3_C_F_Z_R_111,`HS65_LS_OAI112X3_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X3_D_F_Z_R_101,`HS65_LS_OAI112X3_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X3_D_F_Z_R_011,`HS65_LS_OAI112X3_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X3_D_F_Z_R_111,`HS65_LS_OAI112X3_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X33_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X33_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X33_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X33_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X33_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X33_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X33_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X33_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X33_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X33_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X33_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X33_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X33_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X33_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X33_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X33_D_F_Z_R_111 0.1

module HS65_LS_OAI112X33 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X33_A_F_Z_R_011,`HS65_LS_OAI112X33_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X33_B_F_Z_R_011,`HS65_LS_OAI112X33_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X33_C_F_Z_R_101,`HS65_LS_OAI112X33_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X33_C_F_Z_R_011,`HS65_LS_OAI112X33_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X33_C_F_Z_R_111,`HS65_LS_OAI112X33_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X33_D_F_Z_R_101,`HS65_LS_OAI112X33_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X33_D_F_Z_R_011,`HS65_LS_OAI112X33_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X33_D_F_Z_R_111,`HS65_LS_OAI112X33_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X4_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X4_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X4_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X4_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X4_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X4_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X4_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X4_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X4_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X4_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X4_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X4_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X4_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X4_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X4_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X4_D_F_Z_R_111 0.1

module HS65_LS_OAI112X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X4_A_F_Z_R_011,`HS65_LS_OAI112X4_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X4_B_F_Z_R_011,`HS65_LS_OAI112X4_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X4_C_F_Z_R_101,`HS65_LS_OAI112X4_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X4_C_F_Z_R_011,`HS65_LS_OAI112X4_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X4_C_F_Z_R_111,`HS65_LS_OAI112X4_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X4_D_F_Z_R_101,`HS65_LS_OAI112X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X4_D_F_Z_R_011,`HS65_LS_OAI112X4_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X4_D_F_Z_R_111,`HS65_LS_OAI112X4_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X44_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X44_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X44_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X44_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X44_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X44_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X44_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X44_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X44_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X44_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X44_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X44_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X44_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X44_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X44_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X44_D_F_Z_R_111 0.1

module HS65_LS_OAI112X44 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X44_A_F_Z_R_011,`HS65_LS_OAI112X44_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X44_B_F_Z_R_011,`HS65_LS_OAI112X44_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X44_C_F_Z_R_101,`HS65_LS_OAI112X44_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X44_C_F_Z_R_011,`HS65_LS_OAI112X44_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X44_C_F_Z_R_111,`HS65_LS_OAI112X44_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X44_D_F_Z_R_101,`HS65_LS_OAI112X44_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X44_D_F_Z_R_011,`HS65_LS_OAI112X44_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X44_D_F_Z_R_111,`HS65_LS_OAI112X44_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X5_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X5_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X5_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X5_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X5_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X5_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X5_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X5_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X5_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X5_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X5_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X5_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X5_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X5_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X5_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X5_D_F_Z_R_111 0.1

module HS65_LS_OAI112X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X5_A_F_Z_R_011,`HS65_LS_OAI112X5_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X5_B_F_Z_R_011,`HS65_LS_OAI112X5_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X5_C_F_Z_R_101,`HS65_LS_OAI112X5_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X5_C_F_Z_R_011,`HS65_LS_OAI112X5_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X5_C_F_Z_R_111,`HS65_LS_OAI112X5_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X5_D_F_Z_R_101,`HS65_LS_OAI112X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X5_D_F_Z_R_011,`HS65_LS_OAI112X5_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X5_D_F_Z_R_111,`HS65_LS_OAI112X5_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI112X8_A_R_Z_F_011 0.1
`define HS65_LS_OAI112X8_A_F_Z_R_011 0.1
`define HS65_LS_OAI112X8_B_R_Z_F_011 0.1
`define HS65_LS_OAI112X8_B_F_Z_R_011 0.1
`define HS65_LS_OAI112X8_C_R_Z_F_101 0.1
`define HS65_LS_OAI112X8_C_F_Z_R_101 0.1
`define HS65_LS_OAI112X8_C_R_Z_F_011 0.1
`define HS65_LS_OAI112X8_C_F_Z_R_011 0.1
`define HS65_LS_OAI112X8_C_R_Z_F_111 0.1
`define HS65_LS_OAI112X8_C_F_Z_R_111 0.1
`define HS65_LS_OAI112X8_D_R_Z_F_101 0.1
`define HS65_LS_OAI112X8_D_F_Z_R_101 0.1
`define HS65_LS_OAI112X8_D_R_Z_F_011 0.1
`define HS65_LS_OAI112X8_D_F_Z_R_011 0.1
`define HS65_LS_OAI112X8_D_R_Z_F_111 0.1
`define HS65_LS_OAI112X8_D_F_Z_R_111 0.1

module HS65_LS_OAI112X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI112X8_A_F_Z_R_011,`HS65_LS_OAI112X8_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI112X8_B_F_Z_R_011,`HS65_LS_OAI112X8_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI112X8_C_F_Z_R_101,`HS65_LS_OAI112X8_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI112X8_C_F_Z_R_011,`HS65_LS_OAI112X8_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI112X8_C_F_Z_R_111,`HS65_LS_OAI112X8_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI112X8_D_F_Z_R_101,`HS65_LS_OAI112X8_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI112X8_D_F_Z_R_011,`HS65_LS_OAI112X8_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI112X8_D_F_Z_R_111,`HS65_LS_OAI112X8_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI112X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X12_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X12_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X12_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X12_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X12_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X12_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X12_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X12_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X12_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X12_C_F_Z_R_10 0.1

module HS65_LS_OAI12X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X12_A_F_Z_R_01,`HS65_LS_OAI12X12_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X12_B_F_Z_R_01,`HS65_LS_OAI12X12_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X12_C_F_Z_R_01,`HS65_LS_OAI12X12_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X12_C_F_Z_R_11,`HS65_LS_OAI12X12_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X12_C_F_Z_R_10,`HS65_LS_OAI12X12_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X18_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X18_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X18_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X18_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X18_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X18_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X18_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X18_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X18_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X18_C_F_Z_R_10 0.1

module HS65_LS_OAI12X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X18_A_F_Z_R_01,`HS65_LS_OAI12X18_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X18_B_F_Z_R_01,`HS65_LS_OAI12X18_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X18_C_F_Z_R_01,`HS65_LS_OAI12X18_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X18_C_F_Z_R_11,`HS65_LS_OAI12X18_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X18_C_F_Z_R_10,`HS65_LS_OAI12X18_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X2_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X2_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X2_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X2_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X2_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X2_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X2_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X2_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X2_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X2_C_F_Z_R_10 0.1

module HS65_LS_OAI12X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X2_A_F_Z_R_01,`HS65_LS_OAI12X2_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X2_B_F_Z_R_01,`HS65_LS_OAI12X2_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X2_C_F_Z_R_01,`HS65_LS_OAI12X2_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X2_C_F_Z_R_11,`HS65_LS_OAI12X2_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X2_C_F_Z_R_10,`HS65_LS_OAI12X2_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X24_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X24_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X24_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X24_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X24_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X24_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X24_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X24_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X24_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X24_C_F_Z_R_10 0.1

module HS65_LS_OAI12X24 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X24_A_F_Z_R_01,`HS65_LS_OAI12X24_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X24_B_F_Z_R_01,`HS65_LS_OAI12X24_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X24_C_F_Z_R_01,`HS65_LS_OAI12X24_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X24_C_F_Z_R_11,`HS65_LS_OAI12X24_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X24_C_F_Z_R_10,`HS65_LS_OAI12X24_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X24

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X3_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X3_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X3_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X3_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X3_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X3_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X3_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X3_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X3_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X3_C_F_Z_R_10 0.1

module HS65_LS_OAI12X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X3_A_F_Z_R_01,`HS65_LS_OAI12X3_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X3_B_F_Z_R_01,`HS65_LS_OAI12X3_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X3_C_F_Z_R_01,`HS65_LS_OAI12X3_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X3_C_F_Z_R_11,`HS65_LS_OAI12X3_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X3_C_F_Z_R_10,`HS65_LS_OAI12X3_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X37_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X37_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X37_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X37_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X37_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X37_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X37_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X37_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X37_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X37_C_F_Z_R_10 0.1

module HS65_LS_OAI12X37 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X37_A_F_Z_R_01,`HS65_LS_OAI12X37_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X37_B_F_Z_R_01,`HS65_LS_OAI12X37_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X37_C_F_Z_R_01,`HS65_LS_OAI12X37_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X37_C_F_Z_R_11,`HS65_LS_OAI12X37_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X37_C_F_Z_R_10,`HS65_LS_OAI12X37_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X37

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X49_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X49_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X49_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X49_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X49_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X49_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X49_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X49_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X49_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X49_C_F_Z_R_10 0.1

module HS65_LS_OAI12X49 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X49_A_F_Z_R_01,`HS65_LS_OAI12X49_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X49_B_F_Z_R_01,`HS65_LS_OAI12X49_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X49_C_F_Z_R_01,`HS65_LS_OAI12X49_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X49_C_F_Z_R_11,`HS65_LS_OAI12X49_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X49_C_F_Z_R_10,`HS65_LS_OAI12X49_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X49

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X5_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X5_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X5_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X5_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X5_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X5_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X5_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X5_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X5_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X5_C_F_Z_R_10 0.1

module HS65_LS_OAI12X5 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X5_A_F_Z_R_01,`HS65_LS_OAI12X5_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X5_B_F_Z_R_01,`HS65_LS_OAI12X5_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X5_C_F_Z_R_01,`HS65_LS_OAI12X5_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X5_C_F_Z_R_11,`HS65_LS_OAI12X5_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X5_C_F_Z_R_10,`HS65_LS_OAI12X5_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X6_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X6_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X6_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X6_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X6_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X6_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X6_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X6_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X6_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X6_C_F_Z_R_10 0.1

module HS65_LS_OAI12X6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X6_A_F_Z_R_01,`HS65_LS_OAI12X6_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X6_B_F_Z_R_01,`HS65_LS_OAI12X6_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X6_C_F_Z_R_01,`HS65_LS_OAI12X6_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X6_C_F_Z_R_11,`HS65_LS_OAI12X6_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X6_C_F_Z_R_10,`HS65_LS_OAI12X6_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI12X9_A_R_Z_F_01 0.1
`define HS65_LS_OAI12X9_A_F_Z_R_01 0.1
`define HS65_LS_OAI12X9_B_R_Z_F_01 0.1
`define HS65_LS_OAI12X9_B_F_Z_R_01 0.1
`define HS65_LS_OAI12X9_C_R_Z_F_01 0.1
`define HS65_LS_OAI12X9_C_F_Z_R_01 0.1
`define HS65_LS_OAI12X9_C_R_Z_F_11 0.1
`define HS65_LS_OAI12X9_C_F_Z_R_11 0.1
`define HS65_LS_OAI12X9_C_R_Z_F_10 0.1
`define HS65_LS_OAI12X9_C_F_Z_R_10 0.1

module HS65_LS_OAI12X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI12X9_A_F_Z_R_01,`HS65_LS_OAI12X9_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI12X9_B_F_Z_R_01,`HS65_LS_OAI12X9_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI12X9_C_F_Z_R_01,`HS65_LS_OAI12X9_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI12X9_C_F_Z_R_11,`HS65_LS_OAI12X9_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI12X9_C_F_Z_R_10,`HS65_LS_OAI12X9_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI12X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X1_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X1_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X1_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X1_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X1_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X1_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X1_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X1_D_F_Z_R_010 0.1

module HS65_LS_OAI13X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X1_A_F_Z_R_001,`HS65_LS_OAI13X1_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X1_B_F_Z_R_001,`HS65_LS_OAI13X1_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X1_C_F_Z_R_001,`HS65_LS_OAI13X1_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_111,`HS65_LS_OAI13X1_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_110,`HS65_LS_OAI13X1_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_100,`HS65_LS_OAI13X1_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_001,`HS65_LS_OAI13X1_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_101,`HS65_LS_OAI13X1_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_011,`HS65_LS_OAI13X1_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X1_D_F_Z_R_010,`HS65_LS_OAI13X1_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X10_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X10_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X10_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X10_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X10_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X10_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X10_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X10_D_F_Z_R_010 0.1

module HS65_LS_OAI13X10 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X10_A_F_Z_R_001,`HS65_LS_OAI13X10_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X10_B_F_Z_R_001,`HS65_LS_OAI13X10_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X10_C_F_Z_R_001,`HS65_LS_OAI13X10_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_111,`HS65_LS_OAI13X10_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_110,`HS65_LS_OAI13X10_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_100,`HS65_LS_OAI13X10_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_001,`HS65_LS_OAI13X10_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_101,`HS65_LS_OAI13X10_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_011,`HS65_LS_OAI13X10_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X10_D_F_Z_R_010,`HS65_LS_OAI13X10_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X15_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X15_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X15_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X15_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X15_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X15_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X15_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X15_D_F_Z_R_010 0.1

module HS65_LS_OAI13X15 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X15_A_F_Z_R_001,`HS65_LS_OAI13X15_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X15_B_F_Z_R_001,`HS65_LS_OAI13X15_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X15_C_F_Z_R_001,`HS65_LS_OAI13X15_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_111,`HS65_LS_OAI13X15_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_110,`HS65_LS_OAI13X15_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_100,`HS65_LS_OAI13X15_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_001,`HS65_LS_OAI13X15_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_101,`HS65_LS_OAI13X15_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_011,`HS65_LS_OAI13X15_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X15_D_F_Z_R_010,`HS65_LS_OAI13X15_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X2_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X2_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X2_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X2_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X2_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X2_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X2_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X2_D_F_Z_R_010 0.1

module HS65_LS_OAI13X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X2_A_F_Z_R_001,`HS65_LS_OAI13X2_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X2_B_F_Z_R_001,`HS65_LS_OAI13X2_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X2_C_F_Z_R_001,`HS65_LS_OAI13X2_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_111,`HS65_LS_OAI13X2_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_110,`HS65_LS_OAI13X2_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_100,`HS65_LS_OAI13X2_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_001,`HS65_LS_OAI13X2_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_101,`HS65_LS_OAI13X2_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_011,`HS65_LS_OAI13X2_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X2_D_F_Z_R_010,`HS65_LS_OAI13X2_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X20_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X20_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X20_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X20_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X20_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X20_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X20_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X20_D_F_Z_R_010 0.1

module HS65_LS_OAI13X20 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X20_A_F_Z_R_001,`HS65_LS_OAI13X20_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X20_B_F_Z_R_001,`HS65_LS_OAI13X20_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X20_C_F_Z_R_001,`HS65_LS_OAI13X20_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_111,`HS65_LS_OAI13X20_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_110,`HS65_LS_OAI13X20_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_100,`HS65_LS_OAI13X20_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_001,`HS65_LS_OAI13X20_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_101,`HS65_LS_OAI13X20_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_011,`HS65_LS_OAI13X20_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X20_D_F_Z_R_010,`HS65_LS_OAI13X20_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X30_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X30_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X30_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X30_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X30_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X30_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X30_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X30_D_F_Z_R_010 0.1

module HS65_LS_OAI13X30 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X30_A_F_Z_R_001,`HS65_LS_OAI13X30_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X30_B_F_Z_R_001,`HS65_LS_OAI13X30_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X30_C_F_Z_R_001,`HS65_LS_OAI13X30_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_111,`HS65_LS_OAI13X30_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_110,`HS65_LS_OAI13X30_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_100,`HS65_LS_OAI13X30_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_001,`HS65_LS_OAI13X30_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_101,`HS65_LS_OAI13X30_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_011,`HS65_LS_OAI13X30_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X30_D_F_Z_R_010,`HS65_LS_OAI13X30_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X4_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X4_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X4_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X4_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X4_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X4_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X4_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X4_D_F_Z_R_010 0.1

module HS65_LS_OAI13X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X4_A_F_Z_R_001,`HS65_LS_OAI13X4_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X4_B_F_Z_R_001,`HS65_LS_OAI13X4_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X4_C_F_Z_R_001,`HS65_LS_OAI13X4_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_111,`HS65_LS_OAI13X4_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_110,`HS65_LS_OAI13X4_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_100,`HS65_LS_OAI13X4_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_001,`HS65_LS_OAI13X4_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_101,`HS65_LS_OAI13X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_011,`HS65_LS_OAI13X4_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X4_D_F_Z_R_010,`HS65_LS_OAI13X4_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X40_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X40_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X40_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X40_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X40_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X40_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X40_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X40_D_F_Z_R_010 0.1

module HS65_LS_OAI13X40 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X40_A_F_Z_R_001,`HS65_LS_OAI13X40_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X40_B_F_Z_R_001,`HS65_LS_OAI13X40_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X40_C_F_Z_R_001,`HS65_LS_OAI13X40_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_111,`HS65_LS_OAI13X40_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_110,`HS65_LS_OAI13X40_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_100,`HS65_LS_OAI13X40_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_001,`HS65_LS_OAI13X40_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_101,`HS65_LS_OAI13X40_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_011,`HS65_LS_OAI13X40_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X40_D_F_Z_R_010,`HS65_LS_OAI13X40_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X40

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X5_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X5_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X5_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X5_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X5_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X5_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X5_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X5_D_F_Z_R_010 0.1

module HS65_LS_OAI13X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X5_A_F_Z_R_001,`HS65_LS_OAI13X5_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X5_B_F_Z_R_001,`HS65_LS_OAI13X5_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X5_C_F_Z_R_001,`HS65_LS_OAI13X5_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_111,`HS65_LS_OAI13X5_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_110,`HS65_LS_OAI13X5_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_100,`HS65_LS_OAI13X5_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_001,`HS65_LS_OAI13X5_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_101,`HS65_LS_OAI13X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_011,`HS65_LS_OAI13X5_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X5_D_F_Z_R_010,`HS65_LS_OAI13X5_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI13X7_A_R_Z_F_001 0.1
`define HS65_LS_OAI13X7_A_F_Z_R_001 0.1
`define HS65_LS_OAI13X7_B_R_Z_F_001 0.1
`define HS65_LS_OAI13X7_B_F_Z_R_001 0.1
`define HS65_LS_OAI13X7_C_R_Z_F_001 0.1
`define HS65_LS_OAI13X7_C_F_Z_R_001 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_111 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_111 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_110 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_110 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_100 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_100 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_001 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_001 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_101 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_101 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_011 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_011 0.1
`define HS65_LS_OAI13X7_D_R_Z_F_010 0.1
`define HS65_LS_OAI13X7_D_F_Z_R_010 0.1

module HS65_LS_OAI13X7 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI13X7_A_F_Z_R_001,`HS65_LS_OAI13X7_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI13X7_B_F_Z_R_001,`HS65_LS_OAI13X7_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI13X7_C_F_Z_R_001,`HS65_LS_OAI13X7_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_111,`HS65_LS_OAI13X7_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_110,`HS65_LS_OAI13X7_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_100,`HS65_LS_OAI13X7_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_001,`HS65_LS_OAI13X7_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_101,`HS65_LS_OAI13X7_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_011,`HS65_LS_OAI13X7_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI13X7_D_F_Z_R_010,`HS65_LS_OAI13X7_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI13X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X1_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X1_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X1_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X1_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X1_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X1_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X1_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X1_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X1_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X1_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X1_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X1_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X1_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X1_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X1_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X1_D_F_Z_R_111 0.1

module HS65_LS_OAI211X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X1_A_F_Z_R_011,`HS65_LS_OAI211X1_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X1_B_F_Z_R_011,`HS65_LS_OAI211X1_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X1_C_F_Z_R_101,`HS65_LS_OAI211X1_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X1_C_F_Z_R_011,`HS65_LS_OAI211X1_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X1_C_F_Z_R_111,`HS65_LS_OAI211X1_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X1_D_F_Z_R_101,`HS65_LS_OAI211X1_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X1_D_F_Z_R_011,`HS65_LS_OAI211X1_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X1_D_F_Z_R_111,`HS65_LS_OAI211X1_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X11_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X11_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X11_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X11_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X11_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X11_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X11_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X11_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X11_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X11_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X11_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X11_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X11_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X11_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X11_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X11_D_F_Z_R_111 0.1

module HS65_LS_OAI211X11 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X11_A_F_Z_R_011,`HS65_LS_OAI211X11_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X11_B_F_Z_R_011,`HS65_LS_OAI211X11_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X11_C_F_Z_R_101,`HS65_LS_OAI211X11_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X11_C_F_Z_R_011,`HS65_LS_OAI211X11_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X11_C_F_Z_R_111,`HS65_LS_OAI211X11_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X11_D_F_Z_R_101,`HS65_LS_OAI211X11_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X11_D_F_Z_R_011,`HS65_LS_OAI211X11_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X11_D_F_Z_R_111,`HS65_LS_OAI211X11_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X16_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X16_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X16_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X16_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X16_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X16_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X16_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X16_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X16_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X16_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X16_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X16_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X16_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X16_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X16_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X16_D_F_Z_R_111 0.1

module HS65_LS_OAI211X16 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X16_A_F_Z_R_011,`HS65_LS_OAI211X16_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X16_B_F_Z_R_011,`HS65_LS_OAI211X16_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X16_C_F_Z_R_101,`HS65_LS_OAI211X16_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X16_C_F_Z_R_011,`HS65_LS_OAI211X16_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X16_C_F_Z_R_111,`HS65_LS_OAI211X16_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X16_D_F_Z_R_101,`HS65_LS_OAI211X16_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X16_D_F_Z_R_011,`HS65_LS_OAI211X16_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X16_D_F_Z_R_111,`HS65_LS_OAI211X16_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X16

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X22_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X22_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X22_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X22_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X22_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X22_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X22_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X22_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X22_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X22_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X22_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X22_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X22_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X22_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X22_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X22_D_F_Z_R_111 0.1

module HS65_LS_OAI211X22 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X22_A_F_Z_R_011,`HS65_LS_OAI211X22_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X22_B_F_Z_R_011,`HS65_LS_OAI211X22_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X22_C_F_Z_R_101,`HS65_LS_OAI211X22_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X22_C_F_Z_R_011,`HS65_LS_OAI211X22_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X22_C_F_Z_R_111,`HS65_LS_OAI211X22_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X22_D_F_Z_R_101,`HS65_LS_OAI211X22_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X22_D_F_Z_R_011,`HS65_LS_OAI211X22_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X22_D_F_Z_R_111,`HS65_LS_OAI211X22_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X3_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X3_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X3_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X3_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X3_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X3_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X3_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X3_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X3_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X3_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X3_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X3_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X3_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X3_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X3_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X3_D_F_Z_R_111 0.1

module HS65_LS_OAI211X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X3_A_F_Z_R_011,`HS65_LS_OAI211X3_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X3_B_F_Z_R_011,`HS65_LS_OAI211X3_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X3_C_F_Z_R_101,`HS65_LS_OAI211X3_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X3_C_F_Z_R_011,`HS65_LS_OAI211X3_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X3_C_F_Z_R_111,`HS65_LS_OAI211X3_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X3_D_F_Z_R_101,`HS65_LS_OAI211X3_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X3_D_F_Z_R_011,`HS65_LS_OAI211X3_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X3_D_F_Z_R_111,`HS65_LS_OAI211X3_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X33_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X33_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X33_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X33_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X33_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X33_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X33_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X33_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X33_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X33_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X33_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X33_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X33_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X33_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X33_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X33_D_F_Z_R_111 0.1

module HS65_LS_OAI211X33 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X33_A_F_Z_R_011,`HS65_LS_OAI211X33_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X33_B_F_Z_R_011,`HS65_LS_OAI211X33_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X33_C_F_Z_R_101,`HS65_LS_OAI211X33_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X33_C_F_Z_R_011,`HS65_LS_OAI211X33_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X33_C_F_Z_R_111,`HS65_LS_OAI211X33_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X33_D_F_Z_R_101,`HS65_LS_OAI211X33_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X33_D_F_Z_R_011,`HS65_LS_OAI211X33_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X33_D_F_Z_R_111,`HS65_LS_OAI211X33_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X4_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X4_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X4_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X4_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X4_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X4_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X4_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X4_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X4_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X4_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X4_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X4_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X4_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X4_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X4_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X4_D_F_Z_R_111 0.1

module HS65_LS_OAI211X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X4_A_F_Z_R_011,`HS65_LS_OAI211X4_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X4_B_F_Z_R_011,`HS65_LS_OAI211X4_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X4_C_F_Z_R_101,`HS65_LS_OAI211X4_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X4_C_F_Z_R_011,`HS65_LS_OAI211X4_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X4_C_F_Z_R_111,`HS65_LS_OAI211X4_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X4_D_F_Z_R_101,`HS65_LS_OAI211X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X4_D_F_Z_R_011,`HS65_LS_OAI211X4_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X4_D_F_Z_R_111,`HS65_LS_OAI211X4_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X44_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X44_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X44_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X44_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X44_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X44_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X44_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X44_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X44_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X44_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X44_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X44_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X44_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X44_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X44_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X44_D_F_Z_R_111 0.1

module HS65_LS_OAI211X44 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X44_A_F_Z_R_011,`HS65_LS_OAI211X44_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X44_B_F_Z_R_011,`HS65_LS_OAI211X44_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X44_C_F_Z_R_101,`HS65_LS_OAI211X44_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X44_C_F_Z_R_011,`HS65_LS_OAI211X44_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X44_C_F_Z_R_111,`HS65_LS_OAI211X44_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X44_D_F_Z_R_101,`HS65_LS_OAI211X44_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X44_D_F_Z_R_011,`HS65_LS_OAI211X44_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X44_D_F_Z_R_111,`HS65_LS_OAI211X44_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X5_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X5_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X5_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X5_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X5_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X5_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X5_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X5_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X5_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X5_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X5_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X5_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X5_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X5_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X5_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X5_D_F_Z_R_111 0.1

module HS65_LS_OAI211X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X5_A_F_Z_R_011,`HS65_LS_OAI211X5_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X5_B_F_Z_R_011,`HS65_LS_OAI211X5_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X5_C_F_Z_R_101,`HS65_LS_OAI211X5_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X5_C_F_Z_R_011,`HS65_LS_OAI211X5_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X5_C_F_Z_R_111,`HS65_LS_OAI211X5_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X5_D_F_Z_R_101,`HS65_LS_OAI211X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X5_D_F_Z_R_011,`HS65_LS_OAI211X5_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X5_D_F_Z_R_111,`HS65_LS_OAI211X5_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI211X8_A_R_Z_F_011 0.1
`define HS65_LS_OAI211X8_A_F_Z_R_011 0.1
`define HS65_LS_OAI211X8_B_R_Z_F_011 0.1
`define HS65_LS_OAI211X8_B_F_Z_R_011 0.1
`define HS65_LS_OAI211X8_C_R_Z_F_101 0.1
`define HS65_LS_OAI211X8_C_F_Z_R_101 0.1
`define HS65_LS_OAI211X8_C_R_Z_F_011 0.1
`define HS65_LS_OAI211X8_C_F_Z_R_011 0.1
`define HS65_LS_OAI211X8_C_R_Z_F_111 0.1
`define HS65_LS_OAI211X8_C_F_Z_R_111 0.1
`define HS65_LS_OAI211X8_D_R_Z_F_101 0.1
`define HS65_LS_OAI211X8_D_F_Z_R_101 0.1
`define HS65_LS_OAI211X8_D_R_Z_F_011 0.1
`define HS65_LS_OAI211X8_D_F_Z_R_011 0.1
`define HS65_LS_OAI211X8_D_R_Z_F_111 0.1
`define HS65_LS_OAI211X8_D_F_Z_R_111 0.1

module HS65_LS_OAI211X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI211X8_A_F_Z_R_011,`HS65_LS_OAI211X8_A_R_Z_F_011);
		(B -=> Z) = (`HS65_LS_OAI211X8_B_F_Z_R_011,`HS65_LS_OAI211X8_B_R_Z_F_011);
		if (A && !B && D) (C -=> Z) = (`HS65_LS_OAI211X8_C_F_Z_R_101,`HS65_LS_OAI211X8_C_R_Z_F_101);
		if (!A && B && D) (C -=> Z) = (`HS65_LS_OAI211X8_C_F_Z_R_011,`HS65_LS_OAI211X8_C_R_Z_F_011);
		if (A && B && D) (C -=> Z) = (`HS65_LS_OAI211X8_C_F_Z_R_111,`HS65_LS_OAI211X8_C_R_Z_F_111);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI211X8_D_F_Z_R_101,`HS65_LS_OAI211X8_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI211X8_D_F_Z_R_011,`HS65_LS_OAI211X8_D_R_Z_F_011);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI211X8_D_F_Z_R_111,`HS65_LS_OAI211X8_D_R_Z_F_111);


	endspecify

endmodule // HS65_LS_OAI211X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI212X10_A_R_Z_F_0011 0.1
`define HS65_LS_OAI212X10_A_F_Z_R_0011 0.1
`define HS65_LS_OAI212X10_A_R_Z_F_0111 0.1
`define HS65_LS_OAI212X10_A_F_Z_R_0111 0.1
`define HS65_LS_OAI212X10_A_R_Z_F_0101 0.1
`define HS65_LS_OAI212X10_A_F_Z_R_0101 0.1
`define HS65_LS_OAI212X10_B_R_Z_F_0011 0.1
`define HS65_LS_OAI212X10_B_F_Z_R_0011 0.1
`define HS65_LS_OAI212X10_B_R_Z_F_0111 0.1
`define HS65_LS_OAI212X10_B_F_Z_R_0111 0.1
`define HS65_LS_OAI212X10_B_R_Z_F_0101 0.1
`define HS65_LS_OAI212X10_B_F_Z_R_0101 0.1
`define HS65_LS_OAI212X10_C_R_Z_F_0101 0.1
`define HS65_LS_OAI212X10_C_F_Z_R_0101 0.1
`define HS65_LS_OAI212X10_C_R_Z_F_1101 0.1
`define HS65_LS_OAI212X10_C_F_Z_R_1101 0.1
`define HS65_LS_OAI212X10_C_R_Z_F_1001 0.1
`define HS65_LS_OAI212X10_C_F_Z_R_1001 0.1
`define HS65_LS_OAI212X10_D_R_Z_F_0101 0.1
`define HS65_LS_OAI212X10_D_F_Z_R_0101 0.1
`define HS65_LS_OAI212X10_D_R_Z_F_1101 0.1
`define HS65_LS_OAI212X10_D_F_Z_R_1101 0.1
`define HS65_LS_OAI212X10_D_R_Z_F_1001 0.1
`define HS65_LS_OAI212X10_D_F_Z_R_1001 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1101 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1101 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1111 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1111 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1110 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1110 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1011 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1011 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1010 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1010 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_0101 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_0101 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_0111 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_0111 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_0110 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_0110 0.1
`define HS65_LS_OAI212X10_E_R_Z_F_1001 0.1
`define HS65_LS_OAI212X10_E_F_Z_R_1001 0.1

module HS65_LS_OAI212X10 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI212X10_A_F_Z_R_0011,`HS65_LS_OAI212X10_A_R_Z_F_0011);
		if (!B && C && D && E) (A -=> Z) = (`HS65_LS_OAI212X10_A_F_Z_R_0111,`HS65_LS_OAI212X10_A_R_Z_F_0111);
		if (!B && C && !D && E) (A -=> Z) = (`HS65_LS_OAI212X10_A_F_Z_R_0101,`HS65_LS_OAI212X10_A_R_Z_F_0101);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI212X10_B_F_Z_R_0011,`HS65_LS_OAI212X10_B_R_Z_F_0011);
		if (!A && C && D && E) (B -=> Z) = (`HS65_LS_OAI212X10_B_F_Z_R_0111,`HS65_LS_OAI212X10_B_R_Z_F_0111);
		if (!A && C && !D && E) (B -=> Z) = (`HS65_LS_OAI212X10_B_F_Z_R_0101,`HS65_LS_OAI212X10_B_R_Z_F_0101);
		if (!A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X10_C_F_Z_R_0101,`HS65_LS_OAI212X10_C_R_Z_F_0101);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X10_C_F_Z_R_1101,`HS65_LS_OAI212X10_C_R_Z_F_1101);
		if (A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X10_C_F_Z_R_1001,`HS65_LS_OAI212X10_C_R_Z_F_1001);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X10_D_F_Z_R_0101,`HS65_LS_OAI212X10_D_R_Z_F_0101);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X10_D_F_Z_R_1101,`HS65_LS_OAI212X10_D_R_Z_F_1101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X10_D_F_Z_R_1001,`HS65_LS_OAI212X10_D_R_Z_F_1001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1101,`HS65_LS_OAI212X10_E_R_Z_F_1101);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1111,`HS65_LS_OAI212X10_E_R_Z_F_1111);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1110,`HS65_LS_OAI212X10_E_R_Z_F_1110);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1011,`HS65_LS_OAI212X10_E_R_Z_F_1011);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1010,`HS65_LS_OAI212X10_E_R_Z_F_1010);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_0101,`HS65_LS_OAI212X10_E_R_Z_F_0101);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_0111,`HS65_LS_OAI212X10_E_R_Z_F_0111);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_0110,`HS65_LS_OAI212X10_E_R_Z_F_0110);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X10_E_F_Z_R_1001,`HS65_LS_OAI212X10_E_R_Z_F_1001);


	endspecify

endmodule // HS65_LS_OAI212X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI212X15_A_R_Z_F_0011 0.1
`define HS65_LS_OAI212X15_A_F_Z_R_0011 0.1
`define HS65_LS_OAI212X15_A_R_Z_F_0111 0.1
`define HS65_LS_OAI212X15_A_F_Z_R_0111 0.1
`define HS65_LS_OAI212X15_A_R_Z_F_0101 0.1
`define HS65_LS_OAI212X15_A_F_Z_R_0101 0.1
`define HS65_LS_OAI212X15_B_R_Z_F_0011 0.1
`define HS65_LS_OAI212X15_B_F_Z_R_0011 0.1
`define HS65_LS_OAI212X15_B_R_Z_F_0111 0.1
`define HS65_LS_OAI212X15_B_F_Z_R_0111 0.1
`define HS65_LS_OAI212X15_B_R_Z_F_0101 0.1
`define HS65_LS_OAI212X15_B_F_Z_R_0101 0.1
`define HS65_LS_OAI212X15_C_R_Z_F_0101 0.1
`define HS65_LS_OAI212X15_C_F_Z_R_0101 0.1
`define HS65_LS_OAI212X15_C_R_Z_F_1101 0.1
`define HS65_LS_OAI212X15_C_F_Z_R_1101 0.1
`define HS65_LS_OAI212X15_C_R_Z_F_1001 0.1
`define HS65_LS_OAI212X15_C_F_Z_R_1001 0.1
`define HS65_LS_OAI212X15_D_R_Z_F_0101 0.1
`define HS65_LS_OAI212X15_D_F_Z_R_0101 0.1
`define HS65_LS_OAI212X15_D_R_Z_F_1101 0.1
`define HS65_LS_OAI212X15_D_F_Z_R_1101 0.1
`define HS65_LS_OAI212X15_D_R_Z_F_1001 0.1
`define HS65_LS_OAI212X15_D_F_Z_R_1001 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1101 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1101 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1111 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1111 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1110 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1110 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1011 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1011 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1010 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1010 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_0101 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_0101 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_0111 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_0111 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_0110 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_0110 0.1
`define HS65_LS_OAI212X15_E_R_Z_F_1001 0.1
`define HS65_LS_OAI212X15_E_F_Z_R_1001 0.1

module HS65_LS_OAI212X15 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI212X15_A_F_Z_R_0011,`HS65_LS_OAI212X15_A_R_Z_F_0011);
		if (!B && C && D && E) (A -=> Z) = (`HS65_LS_OAI212X15_A_F_Z_R_0111,`HS65_LS_OAI212X15_A_R_Z_F_0111);
		if (!B && C && !D && E) (A -=> Z) = (`HS65_LS_OAI212X15_A_F_Z_R_0101,`HS65_LS_OAI212X15_A_R_Z_F_0101);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI212X15_B_F_Z_R_0011,`HS65_LS_OAI212X15_B_R_Z_F_0011);
		if (!A && C && D && E) (B -=> Z) = (`HS65_LS_OAI212X15_B_F_Z_R_0111,`HS65_LS_OAI212X15_B_R_Z_F_0111);
		if (!A && C && !D && E) (B -=> Z) = (`HS65_LS_OAI212X15_B_F_Z_R_0101,`HS65_LS_OAI212X15_B_R_Z_F_0101);
		if (!A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X15_C_F_Z_R_0101,`HS65_LS_OAI212X15_C_R_Z_F_0101);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X15_C_F_Z_R_1101,`HS65_LS_OAI212X15_C_R_Z_F_1101);
		if (A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X15_C_F_Z_R_1001,`HS65_LS_OAI212X15_C_R_Z_F_1001);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X15_D_F_Z_R_0101,`HS65_LS_OAI212X15_D_R_Z_F_0101);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X15_D_F_Z_R_1101,`HS65_LS_OAI212X15_D_R_Z_F_1101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X15_D_F_Z_R_1001,`HS65_LS_OAI212X15_D_R_Z_F_1001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1101,`HS65_LS_OAI212X15_E_R_Z_F_1101);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1111,`HS65_LS_OAI212X15_E_R_Z_F_1111);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1110,`HS65_LS_OAI212X15_E_R_Z_F_1110);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1011,`HS65_LS_OAI212X15_E_R_Z_F_1011);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1010,`HS65_LS_OAI212X15_E_R_Z_F_1010);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_0101,`HS65_LS_OAI212X15_E_R_Z_F_0101);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_0111,`HS65_LS_OAI212X15_E_R_Z_F_0111);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_0110,`HS65_LS_OAI212X15_E_R_Z_F_0110);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X15_E_F_Z_R_1001,`HS65_LS_OAI212X15_E_R_Z_F_1001);


	endspecify

endmodule // HS65_LS_OAI212X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI212X20_A_R_Z_F_0011 0.1
`define HS65_LS_OAI212X20_A_F_Z_R_0011 0.1
`define HS65_LS_OAI212X20_A_R_Z_F_0111 0.1
`define HS65_LS_OAI212X20_A_F_Z_R_0111 0.1
`define HS65_LS_OAI212X20_A_R_Z_F_0101 0.1
`define HS65_LS_OAI212X20_A_F_Z_R_0101 0.1
`define HS65_LS_OAI212X20_B_R_Z_F_0011 0.1
`define HS65_LS_OAI212X20_B_F_Z_R_0011 0.1
`define HS65_LS_OAI212X20_B_R_Z_F_0111 0.1
`define HS65_LS_OAI212X20_B_F_Z_R_0111 0.1
`define HS65_LS_OAI212X20_B_R_Z_F_0101 0.1
`define HS65_LS_OAI212X20_B_F_Z_R_0101 0.1
`define HS65_LS_OAI212X20_C_R_Z_F_0101 0.1
`define HS65_LS_OAI212X20_C_F_Z_R_0101 0.1
`define HS65_LS_OAI212X20_C_R_Z_F_1101 0.1
`define HS65_LS_OAI212X20_C_F_Z_R_1101 0.1
`define HS65_LS_OAI212X20_C_R_Z_F_1001 0.1
`define HS65_LS_OAI212X20_C_F_Z_R_1001 0.1
`define HS65_LS_OAI212X20_D_R_Z_F_0101 0.1
`define HS65_LS_OAI212X20_D_F_Z_R_0101 0.1
`define HS65_LS_OAI212X20_D_R_Z_F_1101 0.1
`define HS65_LS_OAI212X20_D_F_Z_R_1101 0.1
`define HS65_LS_OAI212X20_D_R_Z_F_1001 0.1
`define HS65_LS_OAI212X20_D_F_Z_R_1001 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1101 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1101 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1111 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1111 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1110 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1110 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1011 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1011 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1010 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1010 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_0101 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_0101 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_0111 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_0111 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_0110 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_0110 0.1
`define HS65_LS_OAI212X20_E_R_Z_F_1001 0.1
`define HS65_LS_OAI212X20_E_F_Z_R_1001 0.1

module HS65_LS_OAI212X20 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI212X20_A_F_Z_R_0011,`HS65_LS_OAI212X20_A_R_Z_F_0011);
		if (!B && C && D && E) (A -=> Z) = (`HS65_LS_OAI212X20_A_F_Z_R_0111,`HS65_LS_OAI212X20_A_R_Z_F_0111);
		if (!B && C && !D && E) (A -=> Z) = (`HS65_LS_OAI212X20_A_F_Z_R_0101,`HS65_LS_OAI212X20_A_R_Z_F_0101);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI212X20_B_F_Z_R_0011,`HS65_LS_OAI212X20_B_R_Z_F_0011);
		if (!A && C && D && E) (B -=> Z) = (`HS65_LS_OAI212X20_B_F_Z_R_0111,`HS65_LS_OAI212X20_B_R_Z_F_0111);
		if (!A && C && !D && E) (B -=> Z) = (`HS65_LS_OAI212X20_B_F_Z_R_0101,`HS65_LS_OAI212X20_B_R_Z_F_0101);
		if (!A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X20_C_F_Z_R_0101,`HS65_LS_OAI212X20_C_R_Z_F_0101);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X20_C_F_Z_R_1101,`HS65_LS_OAI212X20_C_R_Z_F_1101);
		if (A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X20_C_F_Z_R_1001,`HS65_LS_OAI212X20_C_R_Z_F_1001);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X20_D_F_Z_R_0101,`HS65_LS_OAI212X20_D_R_Z_F_0101);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X20_D_F_Z_R_1101,`HS65_LS_OAI212X20_D_R_Z_F_1101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X20_D_F_Z_R_1001,`HS65_LS_OAI212X20_D_R_Z_F_1001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1101,`HS65_LS_OAI212X20_E_R_Z_F_1101);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1111,`HS65_LS_OAI212X20_E_R_Z_F_1111);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1110,`HS65_LS_OAI212X20_E_R_Z_F_1110);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1011,`HS65_LS_OAI212X20_E_R_Z_F_1011);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1010,`HS65_LS_OAI212X20_E_R_Z_F_1010);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_0101,`HS65_LS_OAI212X20_E_R_Z_F_0101);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_0111,`HS65_LS_OAI212X20_E_R_Z_F_0111);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_0110,`HS65_LS_OAI212X20_E_R_Z_F_0110);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X20_E_F_Z_R_1001,`HS65_LS_OAI212X20_E_R_Z_F_1001);


	endspecify

endmodule // HS65_LS_OAI212X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI212X3_A_R_Z_F_0011 0.1
`define HS65_LS_OAI212X3_A_F_Z_R_0011 0.1
`define HS65_LS_OAI212X3_A_R_Z_F_0111 0.1
`define HS65_LS_OAI212X3_A_F_Z_R_0111 0.1
`define HS65_LS_OAI212X3_A_R_Z_F_0101 0.1
`define HS65_LS_OAI212X3_A_F_Z_R_0101 0.1
`define HS65_LS_OAI212X3_B_R_Z_F_0011 0.1
`define HS65_LS_OAI212X3_B_F_Z_R_0011 0.1
`define HS65_LS_OAI212X3_B_R_Z_F_0111 0.1
`define HS65_LS_OAI212X3_B_F_Z_R_0111 0.1
`define HS65_LS_OAI212X3_B_R_Z_F_0101 0.1
`define HS65_LS_OAI212X3_B_F_Z_R_0101 0.1
`define HS65_LS_OAI212X3_C_R_Z_F_0101 0.1
`define HS65_LS_OAI212X3_C_F_Z_R_0101 0.1
`define HS65_LS_OAI212X3_C_R_Z_F_1101 0.1
`define HS65_LS_OAI212X3_C_F_Z_R_1101 0.1
`define HS65_LS_OAI212X3_C_R_Z_F_1001 0.1
`define HS65_LS_OAI212X3_C_F_Z_R_1001 0.1
`define HS65_LS_OAI212X3_D_R_Z_F_0101 0.1
`define HS65_LS_OAI212X3_D_F_Z_R_0101 0.1
`define HS65_LS_OAI212X3_D_R_Z_F_1101 0.1
`define HS65_LS_OAI212X3_D_F_Z_R_1101 0.1
`define HS65_LS_OAI212X3_D_R_Z_F_1001 0.1
`define HS65_LS_OAI212X3_D_F_Z_R_1001 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1101 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1101 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1111 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1111 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1110 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1110 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1011 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1011 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1010 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1010 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_0101 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_0101 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_0111 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_0111 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_0110 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_0110 0.1
`define HS65_LS_OAI212X3_E_R_Z_F_1001 0.1
`define HS65_LS_OAI212X3_E_F_Z_R_1001 0.1

module HS65_LS_OAI212X3 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI212X3_A_F_Z_R_0011,`HS65_LS_OAI212X3_A_R_Z_F_0011);
		if (!B && C && D && E) (A -=> Z) = (`HS65_LS_OAI212X3_A_F_Z_R_0111,`HS65_LS_OAI212X3_A_R_Z_F_0111);
		if (!B && C && !D && E) (A -=> Z) = (`HS65_LS_OAI212X3_A_F_Z_R_0101,`HS65_LS_OAI212X3_A_R_Z_F_0101);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI212X3_B_F_Z_R_0011,`HS65_LS_OAI212X3_B_R_Z_F_0011);
		if (!A && C && D && E) (B -=> Z) = (`HS65_LS_OAI212X3_B_F_Z_R_0111,`HS65_LS_OAI212X3_B_R_Z_F_0111);
		if (!A && C && !D && E) (B -=> Z) = (`HS65_LS_OAI212X3_B_F_Z_R_0101,`HS65_LS_OAI212X3_B_R_Z_F_0101);
		if (!A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X3_C_F_Z_R_0101,`HS65_LS_OAI212X3_C_R_Z_F_0101);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X3_C_F_Z_R_1101,`HS65_LS_OAI212X3_C_R_Z_F_1101);
		if (A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X3_C_F_Z_R_1001,`HS65_LS_OAI212X3_C_R_Z_F_1001);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X3_D_F_Z_R_0101,`HS65_LS_OAI212X3_D_R_Z_F_0101);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X3_D_F_Z_R_1101,`HS65_LS_OAI212X3_D_R_Z_F_1101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X3_D_F_Z_R_1001,`HS65_LS_OAI212X3_D_R_Z_F_1001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1101,`HS65_LS_OAI212X3_E_R_Z_F_1101);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1111,`HS65_LS_OAI212X3_E_R_Z_F_1111);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1110,`HS65_LS_OAI212X3_E_R_Z_F_1110);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1011,`HS65_LS_OAI212X3_E_R_Z_F_1011);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1010,`HS65_LS_OAI212X3_E_R_Z_F_1010);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_0101,`HS65_LS_OAI212X3_E_R_Z_F_0101);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_0111,`HS65_LS_OAI212X3_E_R_Z_F_0111);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_0110,`HS65_LS_OAI212X3_E_R_Z_F_0110);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X3_E_F_Z_R_1001,`HS65_LS_OAI212X3_E_R_Z_F_1001);


	endspecify

endmodule // HS65_LS_OAI212X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI212X5_A_R_Z_F_0011 0.1
`define HS65_LS_OAI212X5_A_F_Z_R_0011 0.1
`define HS65_LS_OAI212X5_A_R_Z_F_0111 0.1
`define HS65_LS_OAI212X5_A_F_Z_R_0111 0.1
`define HS65_LS_OAI212X5_A_R_Z_F_0101 0.1
`define HS65_LS_OAI212X5_A_F_Z_R_0101 0.1
`define HS65_LS_OAI212X5_B_R_Z_F_0011 0.1
`define HS65_LS_OAI212X5_B_F_Z_R_0011 0.1
`define HS65_LS_OAI212X5_B_R_Z_F_0111 0.1
`define HS65_LS_OAI212X5_B_F_Z_R_0111 0.1
`define HS65_LS_OAI212X5_B_R_Z_F_0101 0.1
`define HS65_LS_OAI212X5_B_F_Z_R_0101 0.1
`define HS65_LS_OAI212X5_C_R_Z_F_0101 0.1
`define HS65_LS_OAI212X5_C_F_Z_R_0101 0.1
`define HS65_LS_OAI212X5_C_R_Z_F_1101 0.1
`define HS65_LS_OAI212X5_C_F_Z_R_1101 0.1
`define HS65_LS_OAI212X5_C_R_Z_F_1001 0.1
`define HS65_LS_OAI212X5_C_F_Z_R_1001 0.1
`define HS65_LS_OAI212X5_D_R_Z_F_0101 0.1
`define HS65_LS_OAI212X5_D_F_Z_R_0101 0.1
`define HS65_LS_OAI212X5_D_R_Z_F_1101 0.1
`define HS65_LS_OAI212X5_D_F_Z_R_1101 0.1
`define HS65_LS_OAI212X5_D_R_Z_F_1001 0.1
`define HS65_LS_OAI212X5_D_F_Z_R_1001 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1101 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1101 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1111 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1111 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1110 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1110 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1011 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1011 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1010 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1010 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_0101 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_0101 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_0111 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_0111 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_0110 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_0110 0.1
`define HS65_LS_OAI212X5_E_R_Z_F_1001 0.1
`define HS65_LS_OAI212X5_E_F_Z_R_1001 0.1

module HS65_LS_OAI212X5 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3, E) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI212X5_A_F_Z_R_0011,`HS65_LS_OAI212X5_A_R_Z_F_0011);
		if (!B && C && D && E) (A -=> Z) = (`HS65_LS_OAI212X5_A_F_Z_R_0111,`HS65_LS_OAI212X5_A_R_Z_F_0111);
		if (!B && C && !D && E) (A -=> Z) = (`HS65_LS_OAI212X5_A_F_Z_R_0101,`HS65_LS_OAI212X5_A_R_Z_F_0101);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI212X5_B_F_Z_R_0011,`HS65_LS_OAI212X5_B_R_Z_F_0011);
		if (!A && C && D && E) (B -=> Z) = (`HS65_LS_OAI212X5_B_F_Z_R_0111,`HS65_LS_OAI212X5_B_R_Z_F_0111);
		if (!A && C && !D && E) (B -=> Z) = (`HS65_LS_OAI212X5_B_F_Z_R_0101,`HS65_LS_OAI212X5_B_R_Z_F_0101);
		if (!A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X5_C_F_Z_R_0101,`HS65_LS_OAI212X5_C_R_Z_F_0101);
		if (A && B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X5_C_F_Z_R_1101,`HS65_LS_OAI212X5_C_R_Z_F_1101);
		if (A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI212X5_C_F_Z_R_1001,`HS65_LS_OAI212X5_C_R_Z_F_1001);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X5_D_F_Z_R_0101,`HS65_LS_OAI212X5_D_R_Z_F_0101);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X5_D_F_Z_R_1101,`HS65_LS_OAI212X5_D_R_Z_F_1101);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI212X5_D_F_Z_R_1001,`HS65_LS_OAI212X5_D_R_Z_F_1001);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1101,`HS65_LS_OAI212X5_E_R_Z_F_1101);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1111,`HS65_LS_OAI212X5_E_R_Z_F_1111);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1110,`HS65_LS_OAI212X5_E_R_Z_F_1110);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1011,`HS65_LS_OAI212X5_E_R_Z_F_1011);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1010,`HS65_LS_OAI212X5_E_R_Z_F_1010);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_0101,`HS65_LS_OAI212X5_E_R_Z_F_0101);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_0111,`HS65_LS_OAI212X5_E_R_Z_F_0111);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_0110,`HS65_LS_OAI212X5_E_R_Z_F_0110);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI212X5_E_F_Z_R_1001,`HS65_LS_OAI212X5_E_R_Z_F_1001);


	endspecify

endmodule // HS65_LS_OAI212X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X12_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X12_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X12_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X12_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X12_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X12_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X12_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X12_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X12_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X12_C_F_Z_R_10 0.1

module HS65_LS_OAI21X12 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X12_A_F_Z_R_01,`HS65_LS_OAI21X12_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X12_B_F_Z_R_01,`HS65_LS_OAI21X12_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X12_C_F_Z_R_01,`HS65_LS_OAI21X12_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X12_C_F_Z_R_11,`HS65_LS_OAI21X12_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X12_C_F_Z_R_10,`HS65_LS_OAI21X12_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X18_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X18_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X18_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X18_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X18_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X18_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X18_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X18_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X18_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X18_C_F_Z_R_10 0.1

module HS65_LS_OAI21X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X18_A_F_Z_R_01,`HS65_LS_OAI21X18_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X18_B_F_Z_R_01,`HS65_LS_OAI21X18_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X18_C_F_Z_R_01,`HS65_LS_OAI21X18_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X18_C_F_Z_R_11,`HS65_LS_OAI21X18_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X18_C_F_Z_R_10,`HS65_LS_OAI21X18_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X2_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X2_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X2_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X2_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X2_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X2_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X2_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X2_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X2_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X2_C_F_Z_R_10 0.1

module HS65_LS_OAI21X2 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X2_A_F_Z_R_01,`HS65_LS_OAI21X2_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X2_B_F_Z_R_01,`HS65_LS_OAI21X2_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X2_C_F_Z_R_01,`HS65_LS_OAI21X2_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X2_C_F_Z_R_11,`HS65_LS_OAI21X2_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X2_C_F_Z_R_10,`HS65_LS_OAI21X2_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X24_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X24_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X24_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X24_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X24_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X24_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X24_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X24_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X24_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X24_C_F_Z_R_10 0.1

module HS65_LS_OAI21X24 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X24_A_F_Z_R_01,`HS65_LS_OAI21X24_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X24_B_F_Z_R_01,`HS65_LS_OAI21X24_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X24_C_F_Z_R_01,`HS65_LS_OAI21X24_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X24_C_F_Z_R_11,`HS65_LS_OAI21X24_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X24_C_F_Z_R_10,`HS65_LS_OAI21X24_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X24

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X3_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X3_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X3_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X3_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X3_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X3_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X3_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X3_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X3_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X3_C_F_Z_R_10 0.1

module HS65_LS_OAI21X3 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X3_A_F_Z_R_01,`HS65_LS_OAI21X3_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X3_B_F_Z_R_01,`HS65_LS_OAI21X3_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X3_C_F_Z_R_01,`HS65_LS_OAI21X3_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X3_C_F_Z_R_11,`HS65_LS_OAI21X3_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X3_C_F_Z_R_10,`HS65_LS_OAI21X3_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X37_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X37_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X37_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X37_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X37_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X37_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X37_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X37_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X37_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X37_C_F_Z_R_10 0.1

module HS65_LS_OAI21X37 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X37_A_F_Z_R_01,`HS65_LS_OAI21X37_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X37_B_F_Z_R_01,`HS65_LS_OAI21X37_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X37_C_F_Z_R_01,`HS65_LS_OAI21X37_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X37_C_F_Z_R_11,`HS65_LS_OAI21X37_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X37_C_F_Z_R_10,`HS65_LS_OAI21X37_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X37

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X49_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X49_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X49_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X49_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X49_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X49_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X49_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X49_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X49_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X49_C_F_Z_R_10 0.1

module HS65_LS_OAI21X49 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X49_A_F_Z_R_01,`HS65_LS_OAI21X49_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X49_B_F_Z_R_01,`HS65_LS_OAI21X49_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X49_C_F_Z_R_01,`HS65_LS_OAI21X49_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X49_C_F_Z_R_11,`HS65_LS_OAI21X49_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X49_C_F_Z_R_10,`HS65_LS_OAI21X49_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X49

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X5_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X5_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X5_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X5_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X5_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X5_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X5_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X5_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X5_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X5_C_F_Z_R_10 0.1

module HS65_LS_OAI21X5 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X5_A_F_Z_R_01,`HS65_LS_OAI21X5_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X5_B_F_Z_R_01,`HS65_LS_OAI21X5_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X5_C_F_Z_R_01,`HS65_LS_OAI21X5_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X5_C_F_Z_R_11,`HS65_LS_OAI21X5_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X5_C_F_Z_R_10,`HS65_LS_OAI21X5_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X6_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X6_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X6_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X6_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X6_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X6_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X6_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X6_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X6_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X6_C_F_Z_R_10 0.1

module HS65_LS_OAI21X6 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X6_A_F_Z_R_01,`HS65_LS_OAI21X6_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X6_B_F_Z_R_01,`HS65_LS_OAI21X6_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X6_C_F_Z_R_01,`HS65_LS_OAI21X6_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X6_C_F_Z_R_11,`HS65_LS_OAI21X6_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X6_C_F_Z_R_10,`HS65_LS_OAI21X6_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI21X9_A_R_Z_F_01 0.1
`define HS65_LS_OAI21X9_A_F_Z_R_01 0.1
`define HS65_LS_OAI21X9_B_R_Z_F_01 0.1
`define HS65_LS_OAI21X9_B_F_Z_R_01 0.1
`define HS65_LS_OAI21X9_C_R_Z_F_01 0.1
`define HS65_LS_OAI21X9_C_F_Z_R_01 0.1
`define HS65_LS_OAI21X9_C_R_Z_F_11 0.1
`define HS65_LS_OAI21X9_C_F_Z_R_11 0.1
`define HS65_LS_OAI21X9_C_R_Z_F_10 0.1
`define HS65_LS_OAI21X9_C_F_Z_R_10 0.1

module HS65_LS_OAI21X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or    U1 (INTERNAL2, A, B) ;
	and    U2 (INTERNAL1, INTERNAL2, C) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI21X9_A_F_Z_R_01,`HS65_LS_OAI21X9_A_R_Z_F_01);
		(B -=> Z) = (`HS65_LS_OAI21X9_B_F_Z_R_01,`HS65_LS_OAI21X9_B_R_Z_F_01);
		if (!A && B) (C -=> Z) = (`HS65_LS_OAI21X9_C_F_Z_R_01,`HS65_LS_OAI21X9_C_R_Z_F_01);
		if (A && B) (C -=> Z) = (`HS65_LS_OAI21X9_C_F_Z_R_11,`HS65_LS_OAI21X9_C_R_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_OAI21X9_C_F_Z_R_10,`HS65_LS_OAI21X9_C_R_Z_F_10);


	endspecify

endmodule // HS65_LS_OAI21X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI222X14_A_R_Z_F_01110 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01110 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_01111 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01111 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_01001 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01001 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_01011 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01011 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_01101 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_01101 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_00110 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_00110 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_00101 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_00101 0.1
`define HS65_LS_OAI222X14_A_R_Z_F_00111 0.1
`define HS65_LS_OAI222X14_A_F_Z_R_00111 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01110 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01110 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01111 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01111 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01001 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01001 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01011 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01011 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_01101 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_01101 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_00110 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_00110 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_00101 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_00101 0.1
`define HS65_LS_OAI222X14_B_R_Z_F_00111 0.1
`define HS65_LS_OAI222X14_B_F_Z_R_00111 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_11010 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_11010 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_11011 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_11011 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_10001 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_10001 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_10011 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_10011 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_10010 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_10010 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_11001 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_11001 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_01001 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_01001 0.1
`define HS65_LS_OAI222X14_C_R_Z_F_01011 0.1
`define HS65_LS_OAI222X14_C_F_Z_R_01011 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_11010 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_11010 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_11011 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_11011 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_10001 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_10001 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_10011 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_10011 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_10010 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_10010 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_11001 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_11001 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_01001 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_01001 0.1
`define HS65_LS_OAI222X14_D_R_Z_F_01011 0.1
`define HS65_LS_OAI222X14_D_F_Z_R_01011 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_11100 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_11100 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_11110 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_11110 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_10010 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_10010 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_10110 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_10110 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_10100 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_10100 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_11010 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_11010 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_01100 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_01100 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_E_R_Z_F_01110 0.1
`define HS65_LS_OAI222X14_E_F_Z_R_01110 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_11100 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_11100 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_11110 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_11110 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_10010 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_10010 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_10110 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_10110 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_10100 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_10100 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_11010 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_11010 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_01100 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_01100 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_01010 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_01010 0.1
`define HS65_LS_OAI222X14_F_R_Z_F_01110 0.1
`define HS65_LS_OAI222X14_F_F_Z_R_01110 0.1

module HS65_LS_OAI222X14 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01110,`HS65_LS_OAI222X14_A_R_Z_F_01110);
		if (!B && C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01111,`HS65_LS_OAI222X14_A_R_Z_F_01111);
		if (!B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01001,`HS65_LS_OAI222X14_A_R_Z_F_01001);
		if (!B && C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01011,`HS65_LS_OAI222X14_A_R_Z_F_01011);
		if (!B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01010,`HS65_LS_OAI222X14_A_R_Z_F_01010);
		if (!B && C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_01101,`HS65_LS_OAI222X14_A_R_Z_F_01101);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_00110,`HS65_LS_OAI222X14_A_R_Z_F_00110);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_00101,`HS65_LS_OAI222X14_A_R_Z_F_00101);
		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X14_A_F_Z_R_00111,`HS65_LS_OAI222X14_A_R_Z_F_00111);
		if (!A && C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01110,`HS65_LS_OAI222X14_B_R_Z_F_01110);
		if (!A && C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01111,`HS65_LS_OAI222X14_B_R_Z_F_01111);
		if (!A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01001,`HS65_LS_OAI222X14_B_R_Z_F_01001);
		if (!A && C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01011,`HS65_LS_OAI222X14_B_R_Z_F_01011);
		if (!A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01010,`HS65_LS_OAI222X14_B_R_Z_F_01010);
		if (!A && C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_01101,`HS65_LS_OAI222X14_B_R_Z_F_01101);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_00110,`HS65_LS_OAI222X14_B_R_Z_F_00110);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_00101,`HS65_LS_OAI222X14_B_R_Z_F_00101);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X14_B_F_Z_R_00111,`HS65_LS_OAI222X14_B_R_Z_F_00111);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_11010,`HS65_LS_OAI222X14_C_R_Z_F_11010);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_11011,`HS65_LS_OAI222X14_C_R_Z_F_11011);
		if (A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_10001,`HS65_LS_OAI222X14_C_R_Z_F_10001);
		if (A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_10011,`HS65_LS_OAI222X14_C_R_Z_F_10011);
		if (A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_10010,`HS65_LS_OAI222X14_C_R_Z_F_10010);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_11001,`HS65_LS_OAI222X14_C_R_Z_F_11001);
		if (!A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_01010,`HS65_LS_OAI222X14_C_R_Z_F_01010);
		if (!A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_01001,`HS65_LS_OAI222X14_C_R_Z_F_01001);
		if (!A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X14_C_F_Z_R_01011,`HS65_LS_OAI222X14_C_R_Z_F_01011);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_11010,`HS65_LS_OAI222X14_D_R_Z_F_11010);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_11011,`HS65_LS_OAI222X14_D_R_Z_F_11011);
		if (A && !B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_10001,`HS65_LS_OAI222X14_D_R_Z_F_10001);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_10011,`HS65_LS_OAI222X14_D_R_Z_F_10011);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_10010,`HS65_LS_OAI222X14_D_R_Z_F_10010);
		if (A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_11001,`HS65_LS_OAI222X14_D_R_Z_F_11001);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_01010,`HS65_LS_OAI222X14_D_R_Z_F_01010);
		if (!A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_01001,`HS65_LS_OAI222X14_D_R_Z_F_01001);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X14_D_F_Z_R_01011,`HS65_LS_OAI222X14_D_R_Z_F_01011);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_11100,`HS65_LS_OAI222X14_E_R_Z_F_11100);
		if (A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_11110,`HS65_LS_OAI222X14_E_R_Z_F_11110);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_10010,`HS65_LS_OAI222X14_E_R_Z_F_10010);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_10110,`HS65_LS_OAI222X14_E_R_Z_F_10110);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_10100,`HS65_LS_OAI222X14_E_R_Z_F_10100);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_11010,`HS65_LS_OAI222X14_E_R_Z_F_11010);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_01100,`HS65_LS_OAI222X14_E_R_Z_F_01100);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_01010,`HS65_LS_OAI222X14_E_R_Z_F_01010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X14_E_F_Z_R_01110,`HS65_LS_OAI222X14_E_R_Z_F_01110);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_11100,`HS65_LS_OAI222X14_F_R_Z_F_11100);
		if (A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_11110,`HS65_LS_OAI222X14_F_R_Z_F_11110);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_10010,`HS65_LS_OAI222X14_F_R_Z_F_10010);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_10110,`HS65_LS_OAI222X14_F_R_Z_F_10110);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_10100,`HS65_LS_OAI222X14_F_R_Z_F_10100);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_11010,`HS65_LS_OAI222X14_F_R_Z_F_11010);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_01100,`HS65_LS_OAI222X14_F_R_Z_F_01100);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_01010,`HS65_LS_OAI222X14_F_R_Z_F_01010);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X14_F_F_Z_R_01110,`HS65_LS_OAI222X14_F_R_Z_F_01110);


	endspecify

endmodule // HS65_LS_OAI222X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI222X19_A_R_Z_F_01110 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01110 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_01111 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01111 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_01001 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01001 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_01011 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01011 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_01101 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_01101 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_00110 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_00110 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_00101 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_00101 0.1
`define HS65_LS_OAI222X19_A_R_Z_F_00111 0.1
`define HS65_LS_OAI222X19_A_F_Z_R_00111 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01110 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01110 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01111 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01111 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01001 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01001 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01011 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01011 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_01101 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_01101 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_00110 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_00110 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_00101 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_00101 0.1
`define HS65_LS_OAI222X19_B_R_Z_F_00111 0.1
`define HS65_LS_OAI222X19_B_F_Z_R_00111 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_11010 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_11010 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_11011 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_11011 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_10001 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_10001 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_10011 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_10011 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_10010 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_10010 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_11001 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_11001 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_01001 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_01001 0.1
`define HS65_LS_OAI222X19_C_R_Z_F_01011 0.1
`define HS65_LS_OAI222X19_C_F_Z_R_01011 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_11010 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_11010 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_11011 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_11011 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_10001 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_10001 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_10011 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_10011 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_10010 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_10010 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_11001 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_11001 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_01001 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_01001 0.1
`define HS65_LS_OAI222X19_D_R_Z_F_01011 0.1
`define HS65_LS_OAI222X19_D_F_Z_R_01011 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_11100 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_11100 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_11110 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_11110 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_10010 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_10010 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_10110 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_10110 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_10100 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_10100 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_11010 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_11010 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_01100 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_01100 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_E_R_Z_F_01110 0.1
`define HS65_LS_OAI222X19_E_F_Z_R_01110 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_11100 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_11100 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_11110 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_11110 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_10010 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_10010 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_10110 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_10110 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_10100 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_10100 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_11010 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_11010 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_01100 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_01100 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_01010 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_01010 0.1
`define HS65_LS_OAI222X19_F_R_Z_F_01110 0.1
`define HS65_LS_OAI222X19_F_F_Z_R_01110 0.1

module HS65_LS_OAI222X19 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01110,`HS65_LS_OAI222X19_A_R_Z_F_01110);
		if (!B && C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01111,`HS65_LS_OAI222X19_A_R_Z_F_01111);
		if (!B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01001,`HS65_LS_OAI222X19_A_R_Z_F_01001);
		if (!B && C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01011,`HS65_LS_OAI222X19_A_R_Z_F_01011);
		if (!B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01010,`HS65_LS_OAI222X19_A_R_Z_F_01010);
		if (!B && C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_01101,`HS65_LS_OAI222X19_A_R_Z_F_01101);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_00110,`HS65_LS_OAI222X19_A_R_Z_F_00110);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_00101,`HS65_LS_OAI222X19_A_R_Z_F_00101);
		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X19_A_F_Z_R_00111,`HS65_LS_OAI222X19_A_R_Z_F_00111);
		if (!A && C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01110,`HS65_LS_OAI222X19_B_R_Z_F_01110);
		if (!A && C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01111,`HS65_LS_OAI222X19_B_R_Z_F_01111);
		if (!A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01001,`HS65_LS_OAI222X19_B_R_Z_F_01001);
		if (!A && C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01011,`HS65_LS_OAI222X19_B_R_Z_F_01011);
		if (!A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01010,`HS65_LS_OAI222X19_B_R_Z_F_01010);
		if (!A && C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_01101,`HS65_LS_OAI222X19_B_R_Z_F_01101);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_00110,`HS65_LS_OAI222X19_B_R_Z_F_00110);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_00101,`HS65_LS_OAI222X19_B_R_Z_F_00101);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X19_B_F_Z_R_00111,`HS65_LS_OAI222X19_B_R_Z_F_00111);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_11010,`HS65_LS_OAI222X19_C_R_Z_F_11010);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_11011,`HS65_LS_OAI222X19_C_R_Z_F_11011);
		if (A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_10001,`HS65_LS_OAI222X19_C_R_Z_F_10001);
		if (A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_10011,`HS65_LS_OAI222X19_C_R_Z_F_10011);
		if (A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_10010,`HS65_LS_OAI222X19_C_R_Z_F_10010);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_11001,`HS65_LS_OAI222X19_C_R_Z_F_11001);
		if (!A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_01010,`HS65_LS_OAI222X19_C_R_Z_F_01010);
		if (!A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_01001,`HS65_LS_OAI222X19_C_R_Z_F_01001);
		if (!A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X19_C_F_Z_R_01011,`HS65_LS_OAI222X19_C_R_Z_F_01011);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_11010,`HS65_LS_OAI222X19_D_R_Z_F_11010);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_11011,`HS65_LS_OAI222X19_D_R_Z_F_11011);
		if (A && !B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_10001,`HS65_LS_OAI222X19_D_R_Z_F_10001);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_10011,`HS65_LS_OAI222X19_D_R_Z_F_10011);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_10010,`HS65_LS_OAI222X19_D_R_Z_F_10010);
		if (A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_11001,`HS65_LS_OAI222X19_D_R_Z_F_11001);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_01010,`HS65_LS_OAI222X19_D_R_Z_F_01010);
		if (!A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_01001,`HS65_LS_OAI222X19_D_R_Z_F_01001);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X19_D_F_Z_R_01011,`HS65_LS_OAI222X19_D_R_Z_F_01011);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_11100,`HS65_LS_OAI222X19_E_R_Z_F_11100);
		if (A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_11110,`HS65_LS_OAI222X19_E_R_Z_F_11110);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_10010,`HS65_LS_OAI222X19_E_R_Z_F_10010);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_10110,`HS65_LS_OAI222X19_E_R_Z_F_10110);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_10100,`HS65_LS_OAI222X19_E_R_Z_F_10100);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_11010,`HS65_LS_OAI222X19_E_R_Z_F_11010);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_01100,`HS65_LS_OAI222X19_E_R_Z_F_01100);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_01010,`HS65_LS_OAI222X19_E_R_Z_F_01010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X19_E_F_Z_R_01110,`HS65_LS_OAI222X19_E_R_Z_F_01110);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_11100,`HS65_LS_OAI222X19_F_R_Z_F_11100);
		if (A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_11110,`HS65_LS_OAI222X19_F_R_Z_F_11110);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_10010,`HS65_LS_OAI222X19_F_R_Z_F_10010);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_10110,`HS65_LS_OAI222X19_F_R_Z_F_10110);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_10100,`HS65_LS_OAI222X19_F_R_Z_F_10100);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_11010,`HS65_LS_OAI222X19_F_R_Z_F_11010);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_01100,`HS65_LS_OAI222X19_F_R_Z_F_01100);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_01010,`HS65_LS_OAI222X19_F_R_Z_F_01010);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X19_F_F_Z_R_01110,`HS65_LS_OAI222X19_F_R_Z_F_01110);


	endspecify

endmodule // HS65_LS_OAI222X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI222X2_A_R_Z_F_01110 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01110 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_01111 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01111 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_01001 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01001 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_01011 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01011 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_01101 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_01101 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_00110 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_00110 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_00101 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_00101 0.1
`define HS65_LS_OAI222X2_A_R_Z_F_00111 0.1
`define HS65_LS_OAI222X2_A_F_Z_R_00111 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01110 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01110 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01111 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01111 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01001 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01001 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01011 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01011 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_01101 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_01101 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_00110 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_00110 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_00101 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_00101 0.1
`define HS65_LS_OAI222X2_B_R_Z_F_00111 0.1
`define HS65_LS_OAI222X2_B_F_Z_R_00111 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_11010 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_11010 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_11011 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_11011 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_10001 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_10001 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_10011 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_10011 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_10010 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_10010 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_11001 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_11001 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_01001 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_01001 0.1
`define HS65_LS_OAI222X2_C_R_Z_F_01011 0.1
`define HS65_LS_OAI222X2_C_F_Z_R_01011 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_11010 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_11010 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_11011 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_11011 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_10001 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_10001 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_10011 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_10011 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_10010 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_10010 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_11001 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_11001 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_01001 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_01001 0.1
`define HS65_LS_OAI222X2_D_R_Z_F_01011 0.1
`define HS65_LS_OAI222X2_D_F_Z_R_01011 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_11100 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_11100 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_11110 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_11110 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_10010 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_10010 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_10110 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_10110 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_10100 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_10100 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_11010 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_11010 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_01100 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_01100 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_E_R_Z_F_01110 0.1
`define HS65_LS_OAI222X2_E_F_Z_R_01110 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_11100 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_11100 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_11110 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_11110 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_10010 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_10010 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_10110 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_10110 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_10100 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_10100 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_11010 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_11010 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_01100 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_01100 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_01010 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_01010 0.1
`define HS65_LS_OAI222X2_F_R_Z_F_01110 0.1
`define HS65_LS_OAI222X2_F_F_Z_R_01110 0.1

module HS65_LS_OAI222X2 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01110,`HS65_LS_OAI222X2_A_R_Z_F_01110);
		if (!B && C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01111,`HS65_LS_OAI222X2_A_R_Z_F_01111);
		if (!B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01001,`HS65_LS_OAI222X2_A_R_Z_F_01001);
		if (!B && C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01011,`HS65_LS_OAI222X2_A_R_Z_F_01011);
		if (!B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01010,`HS65_LS_OAI222X2_A_R_Z_F_01010);
		if (!B && C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_01101,`HS65_LS_OAI222X2_A_R_Z_F_01101);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_00110,`HS65_LS_OAI222X2_A_R_Z_F_00110);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_00101,`HS65_LS_OAI222X2_A_R_Z_F_00101);
		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X2_A_F_Z_R_00111,`HS65_LS_OAI222X2_A_R_Z_F_00111);
		if (!A && C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01110,`HS65_LS_OAI222X2_B_R_Z_F_01110);
		if (!A && C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01111,`HS65_LS_OAI222X2_B_R_Z_F_01111);
		if (!A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01001,`HS65_LS_OAI222X2_B_R_Z_F_01001);
		if (!A && C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01011,`HS65_LS_OAI222X2_B_R_Z_F_01011);
		if (!A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01010,`HS65_LS_OAI222X2_B_R_Z_F_01010);
		if (!A && C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_01101,`HS65_LS_OAI222X2_B_R_Z_F_01101);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_00110,`HS65_LS_OAI222X2_B_R_Z_F_00110);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_00101,`HS65_LS_OAI222X2_B_R_Z_F_00101);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X2_B_F_Z_R_00111,`HS65_LS_OAI222X2_B_R_Z_F_00111);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_11010,`HS65_LS_OAI222X2_C_R_Z_F_11010);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_11011,`HS65_LS_OAI222X2_C_R_Z_F_11011);
		if (A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_10001,`HS65_LS_OAI222X2_C_R_Z_F_10001);
		if (A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_10011,`HS65_LS_OAI222X2_C_R_Z_F_10011);
		if (A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_10010,`HS65_LS_OAI222X2_C_R_Z_F_10010);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_11001,`HS65_LS_OAI222X2_C_R_Z_F_11001);
		if (!A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_01010,`HS65_LS_OAI222X2_C_R_Z_F_01010);
		if (!A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_01001,`HS65_LS_OAI222X2_C_R_Z_F_01001);
		if (!A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X2_C_F_Z_R_01011,`HS65_LS_OAI222X2_C_R_Z_F_01011);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_11010,`HS65_LS_OAI222X2_D_R_Z_F_11010);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_11011,`HS65_LS_OAI222X2_D_R_Z_F_11011);
		if (A && !B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_10001,`HS65_LS_OAI222X2_D_R_Z_F_10001);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_10011,`HS65_LS_OAI222X2_D_R_Z_F_10011);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_10010,`HS65_LS_OAI222X2_D_R_Z_F_10010);
		if (A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_11001,`HS65_LS_OAI222X2_D_R_Z_F_11001);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_01010,`HS65_LS_OAI222X2_D_R_Z_F_01010);
		if (!A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_01001,`HS65_LS_OAI222X2_D_R_Z_F_01001);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X2_D_F_Z_R_01011,`HS65_LS_OAI222X2_D_R_Z_F_01011);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_11100,`HS65_LS_OAI222X2_E_R_Z_F_11100);
		if (A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_11110,`HS65_LS_OAI222X2_E_R_Z_F_11110);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_10010,`HS65_LS_OAI222X2_E_R_Z_F_10010);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_10110,`HS65_LS_OAI222X2_E_R_Z_F_10110);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_10100,`HS65_LS_OAI222X2_E_R_Z_F_10100);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_11010,`HS65_LS_OAI222X2_E_R_Z_F_11010);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_01100,`HS65_LS_OAI222X2_E_R_Z_F_01100);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_01010,`HS65_LS_OAI222X2_E_R_Z_F_01010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X2_E_F_Z_R_01110,`HS65_LS_OAI222X2_E_R_Z_F_01110);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_11100,`HS65_LS_OAI222X2_F_R_Z_F_11100);
		if (A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_11110,`HS65_LS_OAI222X2_F_R_Z_F_11110);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_10010,`HS65_LS_OAI222X2_F_R_Z_F_10010);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_10110,`HS65_LS_OAI222X2_F_R_Z_F_10110);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_10100,`HS65_LS_OAI222X2_F_R_Z_F_10100);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_11010,`HS65_LS_OAI222X2_F_R_Z_F_11010);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_01100,`HS65_LS_OAI222X2_F_R_Z_F_01100);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_01010,`HS65_LS_OAI222X2_F_R_Z_F_01010);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X2_F_F_Z_R_01110,`HS65_LS_OAI222X2_F_R_Z_F_01110);


	endspecify

endmodule // HS65_LS_OAI222X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI222X5_A_R_Z_F_01110 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01110 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_01111 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01111 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_01001 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01001 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_01011 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01011 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_01101 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_01101 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_00110 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_00110 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_00101 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_00101 0.1
`define HS65_LS_OAI222X5_A_R_Z_F_00111 0.1
`define HS65_LS_OAI222X5_A_F_Z_R_00111 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01110 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01110 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01111 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01111 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01001 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01001 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01011 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01011 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_01101 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_01101 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_00110 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_00110 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_00101 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_00101 0.1
`define HS65_LS_OAI222X5_B_R_Z_F_00111 0.1
`define HS65_LS_OAI222X5_B_F_Z_R_00111 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_11010 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_11010 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_11011 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_11011 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_10001 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_10001 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_10011 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_10011 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_10010 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_10010 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_11001 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_11001 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_01001 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_01001 0.1
`define HS65_LS_OAI222X5_C_R_Z_F_01011 0.1
`define HS65_LS_OAI222X5_C_F_Z_R_01011 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_11010 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_11010 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_11011 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_11011 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_10001 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_10001 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_10011 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_10011 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_10010 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_10010 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_11001 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_11001 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_01001 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_01001 0.1
`define HS65_LS_OAI222X5_D_R_Z_F_01011 0.1
`define HS65_LS_OAI222X5_D_F_Z_R_01011 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_11100 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_11100 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_11110 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_11110 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_10010 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_10010 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_10110 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_10110 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_10100 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_10100 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_11010 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_11010 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_01100 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_01100 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_E_R_Z_F_01110 0.1
`define HS65_LS_OAI222X5_E_F_Z_R_01110 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_11100 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_11100 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_11110 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_11110 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_10010 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_10010 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_10110 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_10110 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_10100 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_10100 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_11010 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_11010 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_01100 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_01100 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_01010 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_01010 0.1
`define HS65_LS_OAI222X5_F_R_Z_F_01110 0.1
`define HS65_LS_OAI222X5_F_F_Z_R_01110 0.1

module HS65_LS_OAI222X5 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01110,`HS65_LS_OAI222X5_A_R_Z_F_01110);
		if (!B && C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01111,`HS65_LS_OAI222X5_A_R_Z_F_01111);
		if (!B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01001,`HS65_LS_OAI222X5_A_R_Z_F_01001);
		if (!B && C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01011,`HS65_LS_OAI222X5_A_R_Z_F_01011);
		if (!B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01010,`HS65_LS_OAI222X5_A_R_Z_F_01010);
		if (!B && C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_01101,`HS65_LS_OAI222X5_A_R_Z_F_01101);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_00110,`HS65_LS_OAI222X5_A_R_Z_F_00110);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_00101,`HS65_LS_OAI222X5_A_R_Z_F_00101);
		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X5_A_F_Z_R_00111,`HS65_LS_OAI222X5_A_R_Z_F_00111);
		if (!A && C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01110,`HS65_LS_OAI222X5_B_R_Z_F_01110);
		if (!A && C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01111,`HS65_LS_OAI222X5_B_R_Z_F_01111);
		if (!A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01001,`HS65_LS_OAI222X5_B_R_Z_F_01001);
		if (!A && C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01011,`HS65_LS_OAI222X5_B_R_Z_F_01011);
		if (!A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01010,`HS65_LS_OAI222X5_B_R_Z_F_01010);
		if (!A && C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_01101,`HS65_LS_OAI222X5_B_R_Z_F_01101);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_00110,`HS65_LS_OAI222X5_B_R_Z_F_00110);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_00101,`HS65_LS_OAI222X5_B_R_Z_F_00101);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X5_B_F_Z_R_00111,`HS65_LS_OAI222X5_B_R_Z_F_00111);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_11010,`HS65_LS_OAI222X5_C_R_Z_F_11010);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_11011,`HS65_LS_OAI222X5_C_R_Z_F_11011);
		if (A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_10001,`HS65_LS_OAI222X5_C_R_Z_F_10001);
		if (A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_10011,`HS65_LS_OAI222X5_C_R_Z_F_10011);
		if (A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_10010,`HS65_LS_OAI222X5_C_R_Z_F_10010);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_11001,`HS65_LS_OAI222X5_C_R_Z_F_11001);
		if (!A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_01010,`HS65_LS_OAI222X5_C_R_Z_F_01010);
		if (!A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_01001,`HS65_LS_OAI222X5_C_R_Z_F_01001);
		if (!A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X5_C_F_Z_R_01011,`HS65_LS_OAI222X5_C_R_Z_F_01011);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_11010,`HS65_LS_OAI222X5_D_R_Z_F_11010);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_11011,`HS65_LS_OAI222X5_D_R_Z_F_11011);
		if (A && !B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_10001,`HS65_LS_OAI222X5_D_R_Z_F_10001);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_10011,`HS65_LS_OAI222X5_D_R_Z_F_10011);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_10010,`HS65_LS_OAI222X5_D_R_Z_F_10010);
		if (A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_11001,`HS65_LS_OAI222X5_D_R_Z_F_11001);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_01010,`HS65_LS_OAI222X5_D_R_Z_F_01010);
		if (!A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_01001,`HS65_LS_OAI222X5_D_R_Z_F_01001);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X5_D_F_Z_R_01011,`HS65_LS_OAI222X5_D_R_Z_F_01011);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_11100,`HS65_LS_OAI222X5_E_R_Z_F_11100);
		if (A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_11110,`HS65_LS_OAI222X5_E_R_Z_F_11110);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_10010,`HS65_LS_OAI222X5_E_R_Z_F_10010);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_10110,`HS65_LS_OAI222X5_E_R_Z_F_10110);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_10100,`HS65_LS_OAI222X5_E_R_Z_F_10100);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_11010,`HS65_LS_OAI222X5_E_R_Z_F_11010);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_01100,`HS65_LS_OAI222X5_E_R_Z_F_01100);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_01010,`HS65_LS_OAI222X5_E_R_Z_F_01010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X5_E_F_Z_R_01110,`HS65_LS_OAI222X5_E_R_Z_F_01110);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_11100,`HS65_LS_OAI222X5_F_R_Z_F_11100);
		if (A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_11110,`HS65_LS_OAI222X5_F_R_Z_F_11110);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_10010,`HS65_LS_OAI222X5_F_R_Z_F_10010);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_10110,`HS65_LS_OAI222X5_F_R_Z_F_10110);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_10100,`HS65_LS_OAI222X5_F_R_Z_F_10100);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_11010,`HS65_LS_OAI222X5_F_R_Z_F_11010);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_01100,`HS65_LS_OAI222X5_F_R_Z_F_01100);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_01010,`HS65_LS_OAI222X5_F_R_Z_F_01010);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X5_F_F_Z_R_01110,`HS65_LS_OAI222X5_F_R_Z_F_01110);


	endspecify

endmodule // HS65_LS_OAI222X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI222X9_A_R_Z_F_01110 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01110 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_01111 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01111 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_01001 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01001 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_01011 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01011 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_01101 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_01101 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_00110 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_00110 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_00101 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_00101 0.1
`define HS65_LS_OAI222X9_A_R_Z_F_00111 0.1
`define HS65_LS_OAI222X9_A_F_Z_R_00111 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01110 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01110 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01111 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01111 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01001 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01001 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01011 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01011 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_01101 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_01101 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_00110 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_00110 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_00101 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_00101 0.1
`define HS65_LS_OAI222X9_B_R_Z_F_00111 0.1
`define HS65_LS_OAI222X9_B_F_Z_R_00111 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_11010 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_11010 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_11011 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_11011 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_10001 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_10001 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_10011 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_10011 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_10010 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_10010 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_11001 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_11001 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_01001 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_01001 0.1
`define HS65_LS_OAI222X9_C_R_Z_F_01011 0.1
`define HS65_LS_OAI222X9_C_F_Z_R_01011 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_11010 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_11010 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_11011 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_11011 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_10001 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_10001 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_10011 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_10011 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_10010 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_10010 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_11001 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_11001 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_01001 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_01001 0.1
`define HS65_LS_OAI222X9_D_R_Z_F_01011 0.1
`define HS65_LS_OAI222X9_D_F_Z_R_01011 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_11100 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_11100 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_11110 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_11110 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_10010 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_10010 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_10110 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_10110 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_10100 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_10100 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_11010 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_11010 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_01100 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_01100 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_E_R_Z_F_01110 0.1
`define HS65_LS_OAI222X9_E_F_Z_R_01110 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_11100 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_11100 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_11110 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_11110 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_10010 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_10010 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_10110 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_10110 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_10100 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_10100 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_11010 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_11010 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_01100 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_01100 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_01010 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_01010 0.1
`define HS65_LS_OAI222X9_F_R_Z_F_01110 0.1
`define HS65_LS_OAI222X9_F_F_Z_R_01110 0.1

module HS65_LS_OAI222X9 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	or    U3 (INTERNAL4, E, F) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL3, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01110,`HS65_LS_OAI222X9_A_R_Z_F_01110);
		if (!B && C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01111,`HS65_LS_OAI222X9_A_R_Z_F_01111);
		if (!B && C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01001,`HS65_LS_OAI222X9_A_R_Z_F_01001);
		if (!B && C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01011,`HS65_LS_OAI222X9_A_R_Z_F_01011);
		if (!B && C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01010,`HS65_LS_OAI222X9_A_R_Z_F_01010);
		if (!B && C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_01101,`HS65_LS_OAI222X9_A_R_Z_F_01101);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_00110,`HS65_LS_OAI222X9_A_R_Z_F_00110);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_00101,`HS65_LS_OAI222X9_A_R_Z_F_00101);
		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI222X9_A_F_Z_R_00111,`HS65_LS_OAI222X9_A_R_Z_F_00111);
		if (!A && C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01110,`HS65_LS_OAI222X9_B_R_Z_F_01110);
		if (!A && C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01111,`HS65_LS_OAI222X9_B_R_Z_F_01111);
		if (!A && C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01001,`HS65_LS_OAI222X9_B_R_Z_F_01001);
		if (!A && C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01011,`HS65_LS_OAI222X9_B_R_Z_F_01011);
		if (!A && C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01010,`HS65_LS_OAI222X9_B_R_Z_F_01010);
		if (!A && C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_01101,`HS65_LS_OAI222X9_B_R_Z_F_01101);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_00110,`HS65_LS_OAI222X9_B_R_Z_F_00110);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_00101,`HS65_LS_OAI222X9_B_R_Z_F_00101);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI222X9_B_F_Z_R_00111,`HS65_LS_OAI222X9_B_R_Z_F_00111);
		if (A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_11010,`HS65_LS_OAI222X9_C_R_Z_F_11010);
		if (A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_11011,`HS65_LS_OAI222X9_C_R_Z_F_11011);
		if (A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_10001,`HS65_LS_OAI222X9_C_R_Z_F_10001);
		if (A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_10011,`HS65_LS_OAI222X9_C_R_Z_F_10011);
		if (A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_10010,`HS65_LS_OAI222X9_C_R_Z_F_10010);
		if (A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_11001,`HS65_LS_OAI222X9_C_R_Z_F_11001);
		if (!A && B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_01010,`HS65_LS_OAI222X9_C_R_Z_F_01010);
		if (!A && B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_01001,`HS65_LS_OAI222X9_C_R_Z_F_01001);
		if (!A && B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI222X9_C_F_Z_R_01011,`HS65_LS_OAI222X9_C_R_Z_F_01011);
		if (A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_11010,`HS65_LS_OAI222X9_D_R_Z_F_11010);
		if (A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_11011,`HS65_LS_OAI222X9_D_R_Z_F_11011);
		if (A && !B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_10001,`HS65_LS_OAI222X9_D_R_Z_F_10001);
		if (A && !B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_10011,`HS65_LS_OAI222X9_D_R_Z_F_10011);
		if (A && !B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_10010,`HS65_LS_OAI222X9_D_R_Z_F_10010);
		if (A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_11001,`HS65_LS_OAI222X9_D_R_Z_F_11001);
		if (!A && B && !C && E && !F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_01010,`HS65_LS_OAI222X9_D_R_Z_F_01010);
		if (!A && B && !C && !E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_01001,`HS65_LS_OAI222X9_D_R_Z_F_01001);
		if (!A && B && !C && E && F) (D -=> Z) = (`HS65_LS_OAI222X9_D_F_Z_R_01011,`HS65_LS_OAI222X9_D_R_Z_F_01011);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_11100,`HS65_LS_OAI222X9_E_R_Z_F_11100);
		if (A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_11110,`HS65_LS_OAI222X9_E_R_Z_F_11110);
		if (A && !B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_10010,`HS65_LS_OAI222X9_E_R_Z_F_10010);
		if (A && !B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_10110,`HS65_LS_OAI222X9_E_R_Z_F_10110);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_10100,`HS65_LS_OAI222X9_E_R_Z_F_10100);
		if (A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_11010,`HS65_LS_OAI222X9_E_R_Z_F_11010);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_01100,`HS65_LS_OAI222X9_E_R_Z_F_01100);
		if (!A && B && !C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_01010,`HS65_LS_OAI222X9_E_R_Z_F_01010);
		if (!A && B && C && D && !F) (E -=> Z) = (`HS65_LS_OAI222X9_E_F_Z_R_01110,`HS65_LS_OAI222X9_E_R_Z_F_01110);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_11100,`HS65_LS_OAI222X9_F_R_Z_F_11100);
		if (A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_11110,`HS65_LS_OAI222X9_F_R_Z_F_11110);
		if (A && !B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_10010,`HS65_LS_OAI222X9_F_R_Z_F_10010);
		if (A && !B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_10110,`HS65_LS_OAI222X9_F_R_Z_F_10110);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_10100,`HS65_LS_OAI222X9_F_R_Z_F_10100);
		if (A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_11010,`HS65_LS_OAI222X9_F_R_Z_F_11010);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_01100,`HS65_LS_OAI222X9_F_R_Z_F_01100);
		if (!A && B && !C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_01010,`HS65_LS_OAI222X9_F_R_Z_F_01010);
		if (!A && B && C && D && !E) (F -=> Z) = (`HS65_LS_OAI222X9_F_F_Z_R_01110,`HS65_LS_OAI222X9_F_R_Z_F_01110);


	endspecify

endmodule // HS65_LS_OAI222X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X1_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X1_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X1_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X1_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X1_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X1_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X1_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X1_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X1_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X1_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X1_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X1_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X1_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X1_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X1_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X1_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X1_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X1_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X1_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X1_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X1_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X1_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X1_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X1_D_F_Z_R_110 0.1

module HS65_LS_OAI22X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X1_A_F_Z_R_010,`HS65_LS_OAI22X1_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X1_A_F_Z_R_001,`HS65_LS_OAI22X1_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X1_A_F_Z_R_011,`HS65_LS_OAI22X1_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X1_B_F_Z_R_010,`HS65_LS_OAI22X1_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X1_B_F_Z_R_001,`HS65_LS_OAI22X1_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X1_B_F_Z_R_011,`HS65_LS_OAI22X1_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X1_C_F_Z_R_100,`HS65_LS_OAI22X1_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X1_C_F_Z_R_010,`HS65_LS_OAI22X1_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X1_C_F_Z_R_110,`HS65_LS_OAI22X1_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X1_D_F_Z_R_100,`HS65_LS_OAI22X1_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X1_D_F_Z_R_010,`HS65_LS_OAI22X1_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X1_D_F_Z_R_110,`HS65_LS_OAI22X1_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X11_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X11_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X11_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X11_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X11_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X11_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X11_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X11_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X11_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X11_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X11_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X11_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X11_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X11_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X11_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X11_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X11_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X11_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X11_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X11_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X11_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X11_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X11_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X11_D_F_Z_R_110 0.1

module HS65_LS_OAI22X11 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X11_A_F_Z_R_010,`HS65_LS_OAI22X11_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X11_A_F_Z_R_001,`HS65_LS_OAI22X11_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X11_A_F_Z_R_011,`HS65_LS_OAI22X11_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X11_B_F_Z_R_010,`HS65_LS_OAI22X11_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X11_B_F_Z_R_001,`HS65_LS_OAI22X11_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X11_B_F_Z_R_011,`HS65_LS_OAI22X11_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X11_C_F_Z_R_100,`HS65_LS_OAI22X11_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X11_C_F_Z_R_010,`HS65_LS_OAI22X11_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X11_C_F_Z_R_110,`HS65_LS_OAI22X11_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X11_D_F_Z_R_100,`HS65_LS_OAI22X11_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X11_D_F_Z_R_010,`HS65_LS_OAI22X11_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X11_D_F_Z_R_110,`HS65_LS_OAI22X11_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X17_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X17_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X17_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X17_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X17_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X17_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X17_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X17_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X17_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X17_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X17_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X17_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X17_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X17_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X17_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X17_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X17_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X17_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X17_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X17_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X17_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X17_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X17_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X17_D_F_Z_R_110 0.1

module HS65_LS_OAI22X17 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X17_A_F_Z_R_010,`HS65_LS_OAI22X17_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X17_A_F_Z_R_001,`HS65_LS_OAI22X17_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X17_A_F_Z_R_011,`HS65_LS_OAI22X17_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X17_B_F_Z_R_010,`HS65_LS_OAI22X17_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X17_B_F_Z_R_001,`HS65_LS_OAI22X17_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X17_B_F_Z_R_011,`HS65_LS_OAI22X17_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X17_C_F_Z_R_100,`HS65_LS_OAI22X17_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X17_C_F_Z_R_010,`HS65_LS_OAI22X17_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X17_C_F_Z_R_110,`HS65_LS_OAI22X17_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X17_D_F_Z_R_100,`HS65_LS_OAI22X17_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X17_D_F_Z_R_010,`HS65_LS_OAI22X17_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X17_D_F_Z_R_110,`HS65_LS_OAI22X17_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X22_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X22_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X22_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X22_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X22_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X22_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X22_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X22_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X22_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X22_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X22_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X22_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X22_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X22_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X22_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X22_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X22_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X22_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X22_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X22_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X22_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X22_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X22_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X22_D_F_Z_R_110 0.1

module HS65_LS_OAI22X22 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X22_A_F_Z_R_010,`HS65_LS_OAI22X22_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X22_A_F_Z_R_001,`HS65_LS_OAI22X22_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X22_A_F_Z_R_011,`HS65_LS_OAI22X22_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X22_B_F_Z_R_010,`HS65_LS_OAI22X22_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X22_B_F_Z_R_001,`HS65_LS_OAI22X22_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X22_B_F_Z_R_011,`HS65_LS_OAI22X22_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X22_C_F_Z_R_100,`HS65_LS_OAI22X22_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X22_C_F_Z_R_010,`HS65_LS_OAI22X22_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X22_C_F_Z_R_110,`HS65_LS_OAI22X22_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X22_D_F_Z_R_100,`HS65_LS_OAI22X22_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X22_D_F_Z_R_010,`HS65_LS_OAI22X22_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X22_D_F_Z_R_110,`HS65_LS_OAI22X22_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X3_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X3_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X3_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X3_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X3_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X3_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X3_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X3_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X3_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X3_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X3_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X3_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X3_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X3_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X3_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X3_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X3_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X3_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X3_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X3_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X3_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X3_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X3_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X3_D_F_Z_R_110 0.1

module HS65_LS_OAI22X3 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X3_A_F_Z_R_010,`HS65_LS_OAI22X3_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X3_A_F_Z_R_001,`HS65_LS_OAI22X3_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X3_A_F_Z_R_011,`HS65_LS_OAI22X3_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X3_B_F_Z_R_010,`HS65_LS_OAI22X3_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X3_B_F_Z_R_001,`HS65_LS_OAI22X3_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X3_B_F_Z_R_011,`HS65_LS_OAI22X3_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X3_C_F_Z_R_100,`HS65_LS_OAI22X3_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X3_C_F_Z_R_010,`HS65_LS_OAI22X3_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X3_C_F_Z_R_110,`HS65_LS_OAI22X3_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X3_D_F_Z_R_100,`HS65_LS_OAI22X3_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X3_D_F_Z_R_010,`HS65_LS_OAI22X3_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X3_D_F_Z_R_110,`HS65_LS_OAI22X3_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X33_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X33_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X33_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X33_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X33_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X33_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X33_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X33_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X33_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X33_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X33_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X33_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X33_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X33_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X33_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X33_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X33_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X33_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X33_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X33_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X33_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X33_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X33_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X33_D_F_Z_R_110 0.1

module HS65_LS_OAI22X33 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X33_A_F_Z_R_010,`HS65_LS_OAI22X33_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X33_A_F_Z_R_001,`HS65_LS_OAI22X33_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X33_A_F_Z_R_011,`HS65_LS_OAI22X33_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X33_B_F_Z_R_010,`HS65_LS_OAI22X33_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X33_B_F_Z_R_001,`HS65_LS_OAI22X33_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X33_B_F_Z_R_011,`HS65_LS_OAI22X33_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X33_C_F_Z_R_100,`HS65_LS_OAI22X33_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X33_C_F_Z_R_010,`HS65_LS_OAI22X33_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X33_C_F_Z_R_110,`HS65_LS_OAI22X33_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X33_D_F_Z_R_100,`HS65_LS_OAI22X33_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X33_D_F_Z_R_010,`HS65_LS_OAI22X33_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X33_D_F_Z_R_110,`HS65_LS_OAI22X33_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X4_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X4_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X4_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X4_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X4_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X4_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X4_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X4_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X4_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X4_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X4_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X4_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X4_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X4_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X4_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X4_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X4_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X4_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X4_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X4_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X4_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X4_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X4_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X4_D_F_Z_R_110 0.1

module HS65_LS_OAI22X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X4_A_F_Z_R_010,`HS65_LS_OAI22X4_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X4_A_F_Z_R_001,`HS65_LS_OAI22X4_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X4_A_F_Z_R_011,`HS65_LS_OAI22X4_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X4_B_F_Z_R_010,`HS65_LS_OAI22X4_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X4_B_F_Z_R_001,`HS65_LS_OAI22X4_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X4_B_F_Z_R_011,`HS65_LS_OAI22X4_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X4_C_F_Z_R_100,`HS65_LS_OAI22X4_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X4_C_F_Z_R_010,`HS65_LS_OAI22X4_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X4_C_F_Z_R_110,`HS65_LS_OAI22X4_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X4_D_F_Z_R_100,`HS65_LS_OAI22X4_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X4_D_F_Z_R_010,`HS65_LS_OAI22X4_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X4_D_F_Z_R_110,`HS65_LS_OAI22X4_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X44_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X44_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X44_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X44_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X44_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X44_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X44_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X44_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X44_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X44_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X44_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X44_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X44_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X44_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X44_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X44_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X44_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X44_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X44_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X44_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X44_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X44_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X44_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X44_D_F_Z_R_110 0.1

module HS65_LS_OAI22X44 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X44_A_F_Z_R_010,`HS65_LS_OAI22X44_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X44_A_F_Z_R_001,`HS65_LS_OAI22X44_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X44_A_F_Z_R_011,`HS65_LS_OAI22X44_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X44_B_F_Z_R_010,`HS65_LS_OAI22X44_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X44_B_F_Z_R_001,`HS65_LS_OAI22X44_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X44_B_F_Z_R_011,`HS65_LS_OAI22X44_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X44_C_F_Z_R_100,`HS65_LS_OAI22X44_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X44_C_F_Z_R_010,`HS65_LS_OAI22X44_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X44_C_F_Z_R_110,`HS65_LS_OAI22X44_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X44_D_F_Z_R_100,`HS65_LS_OAI22X44_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X44_D_F_Z_R_010,`HS65_LS_OAI22X44_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X44_D_F_Z_R_110,`HS65_LS_OAI22X44_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X6_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X6_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X6_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X6_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X6_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X6_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X6_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X6_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X6_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X6_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X6_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X6_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X6_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X6_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X6_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X6_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X6_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X6_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X6_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X6_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X6_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X6_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X6_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X6_D_F_Z_R_110 0.1

module HS65_LS_OAI22X6 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X6_A_F_Z_R_010,`HS65_LS_OAI22X6_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X6_A_F_Z_R_001,`HS65_LS_OAI22X6_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X6_A_F_Z_R_011,`HS65_LS_OAI22X6_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X6_B_F_Z_R_010,`HS65_LS_OAI22X6_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X6_B_F_Z_R_001,`HS65_LS_OAI22X6_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X6_B_F_Z_R_011,`HS65_LS_OAI22X6_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X6_C_F_Z_R_100,`HS65_LS_OAI22X6_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X6_C_F_Z_R_010,`HS65_LS_OAI22X6_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X6_C_F_Z_R_110,`HS65_LS_OAI22X6_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X6_D_F_Z_R_100,`HS65_LS_OAI22X6_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X6_D_F_Z_R_010,`HS65_LS_OAI22X6_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X6_D_F_Z_R_110,`HS65_LS_OAI22X6_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI22X8_A_R_Z_F_010 0.1
`define HS65_LS_OAI22X8_A_F_Z_R_010 0.1
`define HS65_LS_OAI22X8_A_R_Z_F_001 0.1
`define HS65_LS_OAI22X8_A_F_Z_R_001 0.1
`define HS65_LS_OAI22X8_A_R_Z_F_011 0.1
`define HS65_LS_OAI22X8_A_F_Z_R_011 0.1
`define HS65_LS_OAI22X8_B_R_Z_F_010 0.1
`define HS65_LS_OAI22X8_B_F_Z_R_010 0.1
`define HS65_LS_OAI22X8_B_R_Z_F_001 0.1
`define HS65_LS_OAI22X8_B_F_Z_R_001 0.1
`define HS65_LS_OAI22X8_B_R_Z_F_011 0.1
`define HS65_LS_OAI22X8_B_F_Z_R_011 0.1
`define HS65_LS_OAI22X8_C_R_Z_F_100 0.1
`define HS65_LS_OAI22X8_C_F_Z_R_100 0.1
`define HS65_LS_OAI22X8_C_R_Z_F_010 0.1
`define HS65_LS_OAI22X8_C_F_Z_R_010 0.1
`define HS65_LS_OAI22X8_C_R_Z_F_110 0.1
`define HS65_LS_OAI22X8_C_F_Z_R_110 0.1
`define HS65_LS_OAI22X8_D_R_Z_F_100 0.1
`define HS65_LS_OAI22X8_D_F_Z_R_100 0.1
`define HS65_LS_OAI22X8_D_R_Z_F_010 0.1
`define HS65_LS_OAI22X8_D_F_Z_R_010 0.1
`define HS65_LS_OAI22X8_D_R_Z_F_110 0.1
`define HS65_LS_OAI22X8_D_F_Z_R_110 0.1

module HS65_LS_OAI22X8 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B) ;
	or    U2 (INTERNAL3, C, D) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && C && !D) (A -=> Z) = (`HS65_LS_OAI22X8_A_F_Z_R_010,`HS65_LS_OAI22X8_A_R_Z_F_010);
		if (!B && !C && D) (A -=> Z) = (`HS65_LS_OAI22X8_A_F_Z_R_001,`HS65_LS_OAI22X8_A_R_Z_F_001);
		if (!B && C && D) (A -=> Z) = (`HS65_LS_OAI22X8_A_F_Z_R_011,`HS65_LS_OAI22X8_A_R_Z_F_011);
		if (!A && C && !D) (B -=> Z) = (`HS65_LS_OAI22X8_B_F_Z_R_010,`HS65_LS_OAI22X8_B_R_Z_F_010);
		if (!A && !C && D) (B -=> Z) = (`HS65_LS_OAI22X8_B_F_Z_R_001,`HS65_LS_OAI22X8_B_R_Z_F_001);
		if (!A && C && D) (B -=> Z) = (`HS65_LS_OAI22X8_B_F_Z_R_011,`HS65_LS_OAI22X8_B_R_Z_F_011);
		if (A && !B && !D) (C -=> Z) = (`HS65_LS_OAI22X8_C_F_Z_R_100,`HS65_LS_OAI22X8_C_R_Z_F_100);
		if (!A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X8_C_F_Z_R_010,`HS65_LS_OAI22X8_C_R_Z_F_010);
		if (A && B && !D) (C -=> Z) = (`HS65_LS_OAI22X8_C_F_Z_R_110,`HS65_LS_OAI22X8_C_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI22X8_D_F_Z_R_100,`HS65_LS_OAI22X8_D_R_Z_F_100);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X8_D_F_Z_R_010,`HS65_LS_OAI22X8_D_R_Z_F_010);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI22X8_D_F_Z_R_110,`HS65_LS_OAI22X8_D_R_Z_F_110);


	endspecify

endmodule // HS65_LS_OAI22X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI311X10_A_R_Z_F_0011 0.1
`define HS65_LS_OAI311X10_A_F_Z_R_0011 0.1
`define HS65_LS_OAI311X10_B_R_Z_F_0011 0.1
`define HS65_LS_OAI311X10_B_F_Z_R_0011 0.1
`define HS65_LS_OAI311X10_C_R_Z_F_0011 0.1
`define HS65_LS_OAI311X10_C_F_Z_R_0011 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_1101 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_1101 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_1011 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_1011 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_1111 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_1111 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_0101 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_0101 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_0011 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_0011 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_1001 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_1001 0.1
`define HS65_LS_OAI311X10_D_R_Z_F_0111 0.1
`define HS65_LS_OAI311X10_D_F_Z_R_0111 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_1101 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_1101 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_1011 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_1011 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_1111 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_1111 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_0101 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_0101 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_0011 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_0011 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_1001 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_1001 0.1
`define HS65_LS_OAI311X10_E_R_Z_F_0111 0.1
`define HS65_LS_OAI311X10_E_F_Z_R_0111 0.1

module HS65_LS_OAI311X10 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI311X10_A_F_Z_R_0011,`HS65_LS_OAI311X10_A_R_Z_F_0011);
		(B -=> Z) = (`HS65_LS_OAI311X10_B_F_Z_R_0011,`HS65_LS_OAI311X10_B_R_Z_F_0011);
		(C -=> Z) = (`HS65_LS_OAI311X10_C_F_Z_R_0011,`HS65_LS_OAI311X10_C_R_Z_F_0011);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_1101,`HS65_LS_OAI311X10_D_R_Z_F_1101);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_1011,`HS65_LS_OAI311X10_D_R_Z_F_1011);
		if (A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_1111,`HS65_LS_OAI311X10_D_R_Z_F_1111);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_0101,`HS65_LS_OAI311X10_D_R_Z_F_0101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_0011,`HS65_LS_OAI311X10_D_R_Z_F_0011);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_1001,`HS65_LS_OAI311X10_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X10_D_F_Z_R_0111,`HS65_LS_OAI311X10_D_R_Z_F_0111);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_1101,`HS65_LS_OAI311X10_E_R_Z_F_1101);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_1011,`HS65_LS_OAI311X10_E_R_Z_F_1011);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_1111,`HS65_LS_OAI311X10_E_R_Z_F_1111);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_0101,`HS65_LS_OAI311X10_E_R_Z_F_0101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_0011,`HS65_LS_OAI311X10_E_R_Z_F_0011);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_1001,`HS65_LS_OAI311X10_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X10_E_F_Z_R_0111,`HS65_LS_OAI311X10_E_R_Z_F_0111);


	endspecify

endmodule // HS65_LS_OAI311X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI311X15_A_R_Z_F_0011 0.1
`define HS65_LS_OAI311X15_A_F_Z_R_0011 0.1
`define HS65_LS_OAI311X15_B_R_Z_F_0011 0.1
`define HS65_LS_OAI311X15_B_F_Z_R_0011 0.1
`define HS65_LS_OAI311X15_C_R_Z_F_0011 0.1
`define HS65_LS_OAI311X15_C_F_Z_R_0011 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_1101 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_1101 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_1011 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_1011 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_1111 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_1111 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_0101 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_0101 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_0011 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_0011 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_1001 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_1001 0.1
`define HS65_LS_OAI311X15_D_R_Z_F_0111 0.1
`define HS65_LS_OAI311X15_D_F_Z_R_0111 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_1101 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_1101 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_1011 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_1011 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_1111 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_1111 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_0101 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_0101 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_0011 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_0011 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_1001 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_1001 0.1
`define HS65_LS_OAI311X15_E_R_Z_F_0111 0.1
`define HS65_LS_OAI311X15_E_F_Z_R_0111 0.1

module HS65_LS_OAI311X15 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI311X15_A_F_Z_R_0011,`HS65_LS_OAI311X15_A_R_Z_F_0011);
		(B -=> Z) = (`HS65_LS_OAI311X15_B_F_Z_R_0011,`HS65_LS_OAI311X15_B_R_Z_F_0011);
		(C -=> Z) = (`HS65_LS_OAI311X15_C_F_Z_R_0011,`HS65_LS_OAI311X15_C_R_Z_F_0011);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_1101,`HS65_LS_OAI311X15_D_R_Z_F_1101);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_1011,`HS65_LS_OAI311X15_D_R_Z_F_1011);
		if (A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_1111,`HS65_LS_OAI311X15_D_R_Z_F_1111);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_0101,`HS65_LS_OAI311X15_D_R_Z_F_0101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_0011,`HS65_LS_OAI311X15_D_R_Z_F_0011);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_1001,`HS65_LS_OAI311X15_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X15_D_F_Z_R_0111,`HS65_LS_OAI311X15_D_R_Z_F_0111);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_1101,`HS65_LS_OAI311X15_E_R_Z_F_1101);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_1011,`HS65_LS_OAI311X15_E_R_Z_F_1011);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_1111,`HS65_LS_OAI311X15_E_R_Z_F_1111);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_0101,`HS65_LS_OAI311X15_E_R_Z_F_0101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_0011,`HS65_LS_OAI311X15_E_R_Z_F_0011);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_1001,`HS65_LS_OAI311X15_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X15_E_F_Z_R_0111,`HS65_LS_OAI311X15_E_R_Z_F_0111);


	endspecify

endmodule // HS65_LS_OAI311X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI311X2_A_R_Z_F_0011 0.1
`define HS65_LS_OAI311X2_A_F_Z_R_0011 0.1
`define HS65_LS_OAI311X2_B_R_Z_F_0011 0.1
`define HS65_LS_OAI311X2_B_F_Z_R_0011 0.1
`define HS65_LS_OAI311X2_C_R_Z_F_0011 0.1
`define HS65_LS_OAI311X2_C_F_Z_R_0011 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_1101 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_1101 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_1011 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_1011 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_1111 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_1111 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_0101 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_0101 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_0011 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_0011 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_1001 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_1001 0.1
`define HS65_LS_OAI311X2_D_R_Z_F_0111 0.1
`define HS65_LS_OAI311X2_D_F_Z_R_0111 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_1101 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_1101 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_1011 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_1011 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_1111 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_1111 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_0101 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_0101 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_0011 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_0011 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_1001 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_1001 0.1
`define HS65_LS_OAI311X2_E_R_Z_F_0111 0.1
`define HS65_LS_OAI311X2_E_F_Z_R_0111 0.1

module HS65_LS_OAI311X2 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI311X2_A_F_Z_R_0011,`HS65_LS_OAI311X2_A_R_Z_F_0011);
		(B -=> Z) = (`HS65_LS_OAI311X2_B_F_Z_R_0011,`HS65_LS_OAI311X2_B_R_Z_F_0011);
		(C -=> Z) = (`HS65_LS_OAI311X2_C_F_Z_R_0011,`HS65_LS_OAI311X2_C_R_Z_F_0011);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_1101,`HS65_LS_OAI311X2_D_R_Z_F_1101);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_1011,`HS65_LS_OAI311X2_D_R_Z_F_1011);
		if (A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_1111,`HS65_LS_OAI311X2_D_R_Z_F_1111);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_0101,`HS65_LS_OAI311X2_D_R_Z_F_0101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_0011,`HS65_LS_OAI311X2_D_R_Z_F_0011);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_1001,`HS65_LS_OAI311X2_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X2_D_F_Z_R_0111,`HS65_LS_OAI311X2_D_R_Z_F_0111);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_1101,`HS65_LS_OAI311X2_E_R_Z_F_1101);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_1011,`HS65_LS_OAI311X2_E_R_Z_F_1011);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_1111,`HS65_LS_OAI311X2_E_R_Z_F_1111);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_0101,`HS65_LS_OAI311X2_E_R_Z_F_0101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_0011,`HS65_LS_OAI311X2_E_R_Z_F_0011);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_1001,`HS65_LS_OAI311X2_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X2_E_F_Z_R_0111,`HS65_LS_OAI311X2_E_R_Z_F_0111);


	endspecify

endmodule // HS65_LS_OAI311X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI311X20_A_R_Z_F_0011 0.1
`define HS65_LS_OAI311X20_A_F_Z_R_0011 0.1
`define HS65_LS_OAI311X20_B_R_Z_F_0011 0.1
`define HS65_LS_OAI311X20_B_F_Z_R_0011 0.1
`define HS65_LS_OAI311X20_C_R_Z_F_0011 0.1
`define HS65_LS_OAI311X20_C_F_Z_R_0011 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_1101 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_1101 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_1011 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_1011 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_1111 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_1111 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_0101 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_0101 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_0011 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_0011 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_1001 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_1001 0.1
`define HS65_LS_OAI311X20_D_R_Z_F_0111 0.1
`define HS65_LS_OAI311X20_D_F_Z_R_0111 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_1101 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_1101 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_1011 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_1011 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_1111 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_1111 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_0101 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_0101 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_0011 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_0011 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_1001 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_1001 0.1
`define HS65_LS_OAI311X20_E_R_Z_F_0111 0.1
`define HS65_LS_OAI311X20_E_F_Z_R_0111 0.1

module HS65_LS_OAI311X20 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI311X20_A_F_Z_R_0011,`HS65_LS_OAI311X20_A_R_Z_F_0011);
		(B -=> Z) = (`HS65_LS_OAI311X20_B_F_Z_R_0011,`HS65_LS_OAI311X20_B_R_Z_F_0011);
		(C -=> Z) = (`HS65_LS_OAI311X20_C_F_Z_R_0011,`HS65_LS_OAI311X20_C_R_Z_F_0011);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_1101,`HS65_LS_OAI311X20_D_R_Z_F_1101);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_1011,`HS65_LS_OAI311X20_D_R_Z_F_1011);
		if (A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_1111,`HS65_LS_OAI311X20_D_R_Z_F_1111);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_0101,`HS65_LS_OAI311X20_D_R_Z_F_0101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_0011,`HS65_LS_OAI311X20_D_R_Z_F_0011);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_1001,`HS65_LS_OAI311X20_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X20_D_F_Z_R_0111,`HS65_LS_OAI311X20_D_R_Z_F_0111);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_1101,`HS65_LS_OAI311X20_E_R_Z_F_1101);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_1011,`HS65_LS_OAI311X20_E_R_Z_F_1011);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_1111,`HS65_LS_OAI311X20_E_R_Z_F_1111);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_0101,`HS65_LS_OAI311X20_E_R_Z_F_0101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_0011,`HS65_LS_OAI311X20_E_R_Z_F_0011);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_1001,`HS65_LS_OAI311X20_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X20_E_F_Z_R_0111,`HS65_LS_OAI311X20_E_R_Z_F_0111);


	endspecify

endmodule // HS65_LS_OAI311X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI311X5_A_R_Z_F_0011 0.1
`define HS65_LS_OAI311X5_A_F_Z_R_0011 0.1
`define HS65_LS_OAI311X5_B_R_Z_F_0011 0.1
`define HS65_LS_OAI311X5_B_F_Z_R_0011 0.1
`define HS65_LS_OAI311X5_C_R_Z_F_0011 0.1
`define HS65_LS_OAI311X5_C_F_Z_R_0011 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_1101 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_1101 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_1011 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_1011 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_1111 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_1111 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_0101 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_0101 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_0011 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_0011 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_1001 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_1001 0.1
`define HS65_LS_OAI311X5_D_R_Z_F_0111 0.1
`define HS65_LS_OAI311X5_D_F_Z_R_0111 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_1101 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_1101 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_1011 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_1011 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_1111 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_1111 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_0101 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_0101 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_0011 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_0011 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_1001 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_1001 0.1
`define HS65_LS_OAI311X5_E_R_Z_F_0111 0.1
`define HS65_LS_OAI311X5_E_F_Z_R_0111 0.1

module HS65_LS_OAI311X5 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D, E) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI311X5_A_F_Z_R_0011,`HS65_LS_OAI311X5_A_R_Z_F_0011);
		(B -=> Z) = (`HS65_LS_OAI311X5_B_F_Z_R_0011,`HS65_LS_OAI311X5_B_R_Z_F_0011);
		(C -=> Z) = (`HS65_LS_OAI311X5_C_F_Z_R_0011,`HS65_LS_OAI311X5_C_R_Z_F_0011);
		if (A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_1101,`HS65_LS_OAI311X5_D_R_Z_F_1101);
		if (A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_1011,`HS65_LS_OAI311X5_D_R_Z_F_1011);
		if (A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_1111,`HS65_LS_OAI311X5_D_R_Z_F_1111);
		if (!A && B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_0101,`HS65_LS_OAI311X5_D_R_Z_F_0101);
		if (!A && !B && C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_0011,`HS65_LS_OAI311X5_D_R_Z_F_0011);
		if (A && !B && !C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_1001,`HS65_LS_OAI311X5_D_R_Z_F_1001);
		if (!A && B && C && E) (D -=> Z) = (`HS65_LS_OAI311X5_D_F_Z_R_0111,`HS65_LS_OAI311X5_D_R_Z_F_0111);
		if (A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_1101,`HS65_LS_OAI311X5_E_R_Z_F_1101);
		if (A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_1011,`HS65_LS_OAI311X5_E_R_Z_F_1011);
		if (A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_1111,`HS65_LS_OAI311X5_E_R_Z_F_1111);
		if (!A && B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_0101,`HS65_LS_OAI311X5_E_R_Z_F_0101);
		if (!A && !B && C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_0011,`HS65_LS_OAI311X5_E_R_Z_F_0011);
		if (A && !B && !C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_1001,`HS65_LS_OAI311X5_E_R_Z_F_1001);
		if (!A && B && C && D) (E -=> Z) = (`HS65_LS_OAI311X5_E_F_Z_R_0111,`HS65_LS_OAI311X5_E_R_Z_F_0111);


	endspecify

endmodule // HS65_LS_OAI311X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X1_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X1_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X1_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X1_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X1_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X1_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X1_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X1_D_F_Z_R_010 0.1

module HS65_LS_OAI31X1 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X1_A_F_Z_R_001,`HS65_LS_OAI31X1_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X1_B_F_Z_R_001,`HS65_LS_OAI31X1_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X1_C_F_Z_R_001,`HS65_LS_OAI31X1_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_111,`HS65_LS_OAI31X1_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_110,`HS65_LS_OAI31X1_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_100,`HS65_LS_OAI31X1_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_001,`HS65_LS_OAI31X1_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_101,`HS65_LS_OAI31X1_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_011,`HS65_LS_OAI31X1_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X1_D_F_Z_R_010,`HS65_LS_OAI31X1_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X10_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X10_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X10_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X10_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X10_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X10_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X10_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X10_D_F_Z_R_010 0.1

module HS65_LS_OAI31X10 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X10_A_F_Z_R_001,`HS65_LS_OAI31X10_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X10_B_F_Z_R_001,`HS65_LS_OAI31X10_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X10_C_F_Z_R_001,`HS65_LS_OAI31X10_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_111,`HS65_LS_OAI31X10_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_110,`HS65_LS_OAI31X10_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_100,`HS65_LS_OAI31X10_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_001,`HS65_LS_OAI31X10_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_101,`HS65_LS_OAI31X10_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_011,`HS65_LS_OAI31X10_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X10_D_F_Z_R_010,`HS65_LS_OAI31X10_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X15_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X15_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X15_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X15_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X15_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X15_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X15_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X15_D_F_Z_R_010 0.1

module HS65_LS_OAI31X15 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X15_A_F_Z_R_001,`HS65_LS_OAI31X15_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X15_B_F_Z_R_001,`HS65_LS_OAI31X15_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X15_C_F_Z_R_001,`HS65_LS_OAI31X15_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_111,`HS65_LS_OAI31X15_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_110,`HS65_LS_OAI31X15_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_100,`HS65_LS_OAI31X15_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_001,`HS65_LS_OAI31X15_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_101,`HS65_LS_OAI31X15_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_011,`HS65_LS_OAI31X15_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X15_D_F_Z_R_010,`HS65_LS_OAI31X15_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X15

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X2_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X2_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X2_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X2_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X2_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X2_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X2_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X2_D_F_Z_R_010 0.1

module HS65_LS_OAI31X2 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X2_A_F_Z_R_001,`HS65_LS_OAI31X2_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X2_B_F_Z_R_001,`HS65_LS_OAI31X2_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X2_C_F_Z_R_001,`HS65_LS_OAI31X2_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_111,`HS65_LS_OAI31X2_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_110,`HS65_LS_OAI31X2_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_100,`HS65_LS_OAI31X2_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_001,`HS65_LS_OAI31X2_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_101,`HS65_LS_OAI31X2_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_011,`HS65_LS_OAI31X2_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X2_D_F_Z_R_010,`HS65_LS_OAI31X2_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X20_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X20_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X20_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X20_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X20_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X20_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X20_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X20_D_F_Z_R_010 0.1

module HS65_LS_OAI31X20 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X20_A_F_Z_R_001,`HS65_LS_OAI31X20_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X20_B_F_Z_R_001,`HS65_LS_OAI31X20_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X20_C_F_Z_R_001,`HS65_LS_OAI31X20_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_111,`HS65_LS_OAI31X20_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_110,`HS65_LS_OAI31X20_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_100,`HS65_LS_OAI31X20_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_001,`HS65_LS_OAI31X20_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_101,`HS65_LS_OAI31X20_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_011,`HS65_LS_OAI31X20_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X20_D_F_Z_R_010,`HS65_LS_OAI31X20_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X20

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X30_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X30_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X30_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X30_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X30_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X30_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X30_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X30_D_F_Z_R_010 0.1

module HS65_LS_OAI31X30 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X30_A_F_Z_R_001,`HS65_LS_OAI31X30_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X30_B_F_Z_R_001,`HS65_LS_OAI31X30_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X30_C_F_Z_R_001,`HS65_LS_OAI31X30_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_111,`HS65_LS_OAI31X30_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_110,`HS65_LS_OAI31X30_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_100,`HS65_LS_OAI31X30_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_001,`HS65_LS_OAI31X30_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_101,`HS65_LS_OAI31X30_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_011,`HS65_LS_OAI31X30_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X30_D_F_Z_R_010,`HS65_LS_OAI31X30_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X30

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X4_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X4_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X4_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X4_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X4_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X4_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X4_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X4_D_F_Z_R_010 0.1

module HS65_LS_OAI31X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X4_A_F_Z_R_001,`HS65_LS_OAI31X4_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X4_B_F_Z_R_001,`HS65_LS_OAI31X4_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X4_C_F_Z_R_001,`HS65_LS_OAI31X4_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_111,`HS65_LS_OAI31X4_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_110,`HS65_LS_OAI31X4_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_100,`HS65_LS_OAI31X4_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_001,`HS65_LS_OAI31X4_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_101,`HS65_LS_OAI31X4_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_011,`HS65_LS_OAI31X4_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X4_D_F_Z_R_010,`HS65_LS_OAI31X4_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X40_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X40_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X40_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X40_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X40_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X40_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X40_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X40_D_F_Z_R_010 0.1

module HS65_LS_OAI31X40 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X40_A_F_Z_R_001,`HS65_LS_OAI31X40_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X40_B_F_Z_R_001,`HS65_LS_OAI31X40_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X40_C_F_Z_R_001,`HS65_LS_OAI31X40_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_111,`HS65_LS_OAI31X40_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_110,`HS65_LS_OAI31X40_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_100,`HS65_LS_OAI31X40_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_001,`HS65_LS_OAI31X40_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_101,`HS65_LS_OAI31X40_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_011,`HS65_LS_OAI31X40_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X40_D_F_Z_R_010,`HS65_LS_OAI31X40_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X40

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X5_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X5_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X5_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X5_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X5_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X5_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X5_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X5_D_F_Z_R_010 0.1

module HS65_LS_OAI31X5 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X5_A_F_Z_R_001,`HS65_LS_OAI31X5_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X5_B_F_Z_R_001,`HS65_LS_OAI31X5_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X5_C_F_Z_R_001,`HS65_LS_OAI31X5_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_111,`HS65_LS_OAI31X5_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_110,`HS65_LS_OAI31X5_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_100,`HS65_LS_OAI31X5_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_001,`HS65_LS_OAI31X5_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_101,`HS65_LS_OAI31X5_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_011,`HS65_LS_OAI31X5_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X5_D_F_Z_R_010,`HS65_LS_OAI31X5_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI31X7_A_R_Z_F_001 0.1
`define HS65_LS_OAI31X7_A_F_Z_R_001 0.1
`define HS65_LS_OAI31X7_B_R_Z_F_001 0.1
`define HS65_LS_OAI31X7_B_F_Z_R_001 0.1
`define HS65_LS_OAI31X7_C_R_Z_F_001 0.1
`define HS65_LS_OAI31X7_C_F_Z_R_001 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_111 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_111 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_110 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_110 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_100 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_100 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_001 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_001 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_101 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_101 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_011 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_011 0.1
`define HS65_LS_OAI31X7_D_R_Z_F_010 0.1
`define HS65_LS_OAI31X7_D_F_Z_R_010 0.1

module HS65_LS_OAI31X7 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or    U1 (INTERNAL2, A, B, C) ;
	and    U2 (INTERNAL1, INTERNAL2, D) ;
	not   #1 U3 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OAI31X7_A_F_Z_R_001,`HS65_LS_OAI31X7_A_R_Z_F_001);
		(B -=> Z) = (`HS65_LS_OAI31X7_B_F_Z_R_001,`HS65_LS_OAI31X7_B_R_Z_F_001);
		(C -=> Z) = (`HS65_LS_OAI31X7_C_F_Z_R_001,`HS65_LS_OAI31X7_C_R_Z_F_001);
		if (A && B && C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_111,`HS65_LS_OAI31X7_D_R_Z_F_111);
		if (A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_110,`HS65_LS_OAI31X7_D_R_Z_F_110);
		if (A && !B && !C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_100,`HS65_LS_OAI31X7_D_R_Z_F_100);
		if (!A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_001,`HS65_LS_OAI31X7_D_R_Z_F_001);
		if (A && !B && C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_101,`HS65_LS_OAI31X7_D_R_Z_F_101);
		if (!A && B && C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_011,`HS65_LS_OAI31X7_D_R_Z_F_011);
		if (!A && B && !C) (D -=> Z) = (`HS65_LS_OAI31X7_D_F_Z_R_010,`HS65_LS_OAI31X7_D_R_Z_F_010);


	endspecify

endmodule // HS65_LS_OAI31X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI32X14_A_R_Z_F_0001 0.1
`define HS65_LS_OAI32X14_A_F_Z_R_0001 0.1
`define HS65_LS_OAI32X14_A_R_Z_F_0011 0.1
`define HS65_LS_OAI32X14_A_F_Z_R_0011 0.1
`define HS65_LS_OAI32X14_A_R_Z_F_0010 0.1
`define HS65_LS_OAI32X14_A_F_Z_R_0010 0.1
`define HS65_LS_OAI32X14_B_R_Z_F_0001 0.1
`define HS65_LS_OAI32X14_B_F_Z_R_0001 0.1
`define HS65_LS_OAI32X14_B_R_Z_F_0011 0.1
`define HS65_LS_OAI32X14_B_F_Z_R_0011 0.1
`define HS65_LS_OAI32X14_B_R_Z_F_0010 0.1
`define HS65_LS_OAI32X14_B_F_Z_R_0010 0.1
`define HS65_LS_OAI32X14_C_R_Z_F_0001 0.1
`define HS65_LS_OAI32X14_C_F_Z_R_0001 0.1
`define HS65_LS_OAI32X14_C_R_Z_F_0011 0.1
`define HS65_LS_OAI32X14_C_F_Z_R_0011 0.1
`define HS65_LS_OAI32X14_C_R_Z_F_0010 0.1
`define HS65_LS_OAI32X14_C_F_Z_R_0010 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_0100 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_0100 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_0110 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_0110 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_1010 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_1010 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_1000 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_1000 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_1100 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_1100 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_0010 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_0010 0.1
`define HS65_LS_OAI32X14_D_R_Z_F_1110 0.1
`define HS65_LS_OAI32X14_D_F_Z_R_1110 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_0100 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_0100 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_0110 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_0110 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_1010 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_1010 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_1000 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_1000 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_1100 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_1100 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_0010 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_0010 0.1
`define HS65_LS_OAI32X14_E_R_Z_F_1110 0.1
`define HS65_LS_OAI32X14_E_F_Z_R_1110 0.1

module HS65_LS_OAI32X14 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && !D && E) (A -=> Z) = (`HS65_LS_OAI32X14_A_F_Z_R_0001,`HS65_LS_OAI32X14_A_R_Z_F_0001);
		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI32X14_A_F_Z_R_0011,`HS65_LS_OAI32X14_A_R_Z_F_0011);
		if (!B && !C && D && !E) (A -=> Z) = (`HS65_LS_OAI32X14_A_F_Z_R_0010,`HS65_LS_OAI32X14_A_R_Z_F_0010);
		if (!A && !C && !D && E) (B -=> Z) = (`HS65_LS_OAI32X14_B_F_Z_R_0001,`HS65_LS_OAI32X14_B_R_Z_F_0001);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI32X14_B_F_Z_R_0011,`HS65_LS_OAI32X14_B_R_Z_F_0011);
		if (!A && !C && D && !E) (B -=> Z) = (`HS65_LS_OAI32X14_B_F_Z_R_0010,`HS65_LS_OAI32X14_B_R_Z_F_0010);
		if (!A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI32X14_C_F_Z_R_0001,`HS65_LS_OAI32X14_C_R_Z_F_0001);
		if (!A && !B && D && E) (C -=> Z) = (`HS65_LS_OAI32X14_C_F_Z_R_0011,`HS65_LS_OAI32X14_C_R_Z_F_0011);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_OAI32X14_C_F_Z_R_0010,`HS65_LS_OAI32X14_C_R_Z_F_0010);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_0100,`HS65_LS_OAI32X14_D_R_Z_F_0100);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_0110,`HS65_LS_OAI32X14_D_R_Z_F_0110);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_1010,`HS65_LS_OAI32X14_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_1000,`HS65_LS_OAI32X14_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_1100,`HS65_LS_OAI32X14_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_0010,`HS65_LS_OAI32X14_D_R_Z_F_0010);
		if (A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X14_D_F_Z_R_1110,`HS65_LS_OAI32X14_D_R_Z_F_1110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_0100,`HS65_LS_OAI32X14_E_R_Z_F_0100);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_0110,`HS65_LS_OAI32X14_E_R_Z_F_0110);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_1010,`HS65_LS_OAI32X14_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_1000,`HS65_LS_OAI32X14_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_1100,`HS65_LS_OAI32X14_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_0010,`HS65_LS_OAI32X14_E_R_Z_F_0010);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X14_E_F_Z_R_1110,`HS65_LS_OAI32X14_E_R_Z_F_1110);


	endspecify

endmodule // HS65_LS_OAI32X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI32X19_A_R_Z_F_0001 0.1
`define HS65_LS_OAI32X19_A_F_Z_R_0001 0.1
`define HS65_LS_OAI32X19_A_R_Z_F_0011 0.1
`define HS65_LS_OAI32X19_A_F_Z_R_0011 0.1
`define HS65_LS_OAI32X19_A_R_Z_F_0010 0.1
`define HS65_LS_OAI32X19_A_F_Z_R_0010 0.1
`define HS65_LS_OAI32X19_B_R_Z_F_0001 0.1
`define HS65_LS_OAI32X19_B_F_Z_R_0001 0.1
`define HS65_LS_OAI32X19_B_R_Z_F_0011 0.1
`define HS65_LS_OAI32X19_B_F_Z_R_0011 0.1
`define HS65_LS_OAI32X19_B_R_Z_F_0010 0.1
`define HS65_LS_OAI32X19_B_F_Z_R_0010 0.1
`define HS65_LS_OAI32X19_C_R_Z_F_0001 0.1
`define HS65_LS_OAI32X19_C_F_Z_R_0001 0.1
`define HS65_LS_OAI32X19_C_R_Z_F_0011 0.1
`define HS65_LS_OAI32X19_C_F_Z_R_0011 0.1
`define HS65_LS_OAI32X19_C_R_Z_F_0010 0.1
`define HS65_LS_OAI32X19_C_F_Z_R_0010 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_0100 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_0100 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_0110 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_0110 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_1010 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_1010 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_1000 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_1000 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_1100 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_1100 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_0010 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_0010 0.1
`define HS65_LS_OAI32X19_D_R_Z_F_1110 0.1
`define HS65_LS_OAI32X19_D_F_Z_R_1110 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_0100 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_0100 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_0110 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_0110 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_1010 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_1010 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_1000 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_1000 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_1100 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_1100 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_0010 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_0010 0.1
`define HS65_LS_OAI32X19_E_R_Z_F_1110 0.1
`define HS65_LS_OAI32X19_E_F_Z_R_1110 0.1

module HS65_LS_OAI32X19 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && !D && E) (A -=> Z) = (`HS65_LS_OAI32X19_A_F_Z_R_0001,`HS65_LS_OAI32X19_A_R_Z_F_0001);
		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI32X19_A_F_Z_R_0011,`HS65_LS_OAI32X19_A_R_Z_F_0011);
		if (!B && !C && D && !E) (A -=> Z) = (`HS65_LS_OAI32X19_A_F_Z_R_0010,`HS65_LS_OAI32X19_A_R_Z_F_0010);
		if (!A && !C && !D && E) (B -=> Z) = (`HS65_LS_OAI32X19_B_F_Z_R_0001,`HS65_LS_OAI32X19_B_R_Z_F_0001);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI32X19_B_F_Z_R_0011,`HS65_LS_OAI32X19_B_R_Z_F_0011);
		if (!A && !C && D && !E) (B -=> Z) = (`HS65_LS_OAI32X19_B_F_Z_R_0010,`HS65_LS_OAI32X19_B_R_Z_F_0010);
		if (!A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI32X19_C_F_Z_R_0001,`HS65_LS_OAI32X19_C_R_Z_F_0001);
		if (!A && !B && D && E) (C -=> Z) = (`HS65_LS_OAI32X19_C_F_Z_R_0011,`HS65_LS_OAI32X19_C_R_Z_F_0011);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_OAI32X19_C_F_Z_R_0010,`HS65_LS_OAI32X19_C_R_Z_F_0010);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_0100,`HS65_LS_OAI32X19_D_R_Z_F_0100);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_0110,`HS65_LS_OAI32X19_D_R_Z_F_0110);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_1010,`HS65_LS_OAI32X19_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_1000,`HS65_LS_OAI32X19_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_1100,`HS65_LS_OAI32X19_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_0010,`HS65_LS_OAI32X19_D_R_Z_F_0010);
		if (A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X19_D_F_Z_R_1110,`HS65_LS_OAI32X19_D_R_Z_F_1110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_0100,`HS65_LS_OAI32X19_E_R_Z_F_0100);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_0110,`HS65_LS_OAI32X19_E_R_Z_F_0110);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_1010,`HS65_LS_OAI32X19_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_1000,`HS65_LS_OAI32X19_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_1100,`HS65_LS_OAI32X19_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_0010,`HS65_LS_OAI32X19_E_R_Z_F_0010);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X19_E_F_Z_R_1110,`HS65_LS_OAI32X19_E_R_Z_F_1110);


	endspecify

endmodule // HS65_LS_OAI32X19

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI32X2_A_R_Z_F_0001 0.1
`define HS65_LS_OAI32X2_A_F_Z_R_0001 0.1
`define HS65_LS_OAI32X2_A_R_Z_F_0011 0.1
`define HS65_LS_OAI32X2_A_F_Z_R_0011 0.1
`define HS65_LS_OAI32X2_A_R_Z_F_0010 0.1
`define HS65_LS_OAI32X2_A_F_Z_R_0010 0.1
`define HS65_LS_OAI32X2_B_R_Z_F_0001 0.1
`define HS65_LS_OAI32X2_B_F_Z_R_0001 0.1
`define HS65_LS_OAI32X2_B_R_Z_F_0011 0.1
`define HS65_LS_OAI32X2_B_F_Z_R_0011 0.1
`define HS65_LS_OAI32X2_B_R_Z_F_0010 0.1
`define HS65_LS_OAI32X2_B_F_Z_R_0010 0.1
`define HS65_LS_OAI32X2_C_R_Z_F_0001 0.1
`define HS65_LS_OAI32X2_C_F_Z_R_0001 0.1
`define HS65_LS_OAI32X2_C_R_Z_F_0011 0.1
`define HS65_LS_OAI32X2_C_F_Z_R_0011 0.1
`define HS65_LS_OAI32X2_C_R_Z_F_0010 0.1
`define HS65_LS_OAI32X2_C_F_Z_R_0010 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_0100 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_0100 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_0110 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_0110 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_1010 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_1010 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_1000 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_1000 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_1100 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_1100 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_0010 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_0010 0.1
`define HS65_LS_OAI32X2_D_R_Z_F_1110 0.1
`define HS65_LS_OAI32X2_D_F_Z_R_1110 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_0100 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_0100 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_0110 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_0110 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_1010 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_1010 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_1000 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_1000 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_1100 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_1100 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_0010 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_0010 0.1
`define HS65_LS_OAI32X2_E_R_Z_F_1110 0.1
`define HS65_LS_OAI32X2_E_F_Z_R_1110 0.1

module HS65_LS_OAI32X2 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && !D && E) (A -=> Z) = (`HS65_LS_OAI32X2_A_F_Z_R_0001,`HS65_LS_OAI32X2_A_R_Z_F_0001);
		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI32X2_A_F_Z_R_0011,`HS65_LS_OAI32X2_A_R_Z_F_0011);
		if (!B && !C && D && !E) (A -=> Z) = (`HS65_LS_OAI32X2_A_F_Z_R_0010,`HS65_LS_OAI32X2_A_R_Z_F_0010);
		if (!A && !C && !D && E) (B -=> Z) = (`HS65_LS_OAI32X2_B_F_Z_R_0001,`HS65_LS_OAI32X2_B_R_Z_F_0001);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI32X2_B_F_Z_R_0011,`HS65_LS_OAI32X2_B_R_Z_F_0011);
		if (!A && !C && D && !E) (B -=> Z) = (`HS65_LS_OAI32X2_B_F_Z_R_0010,`HS65_LS_OAI32X2_B_R_Z_F_0010);
		if (!A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI32X2_C_F_Z_R_0001,`HS65_LS_OAI32X2_C_R_Z_F_0001);
		if (!A && !B && D && E) (C -=> Z) = (`HS65_LS_OAI32X2_C_F_Z_R_0011,`HS65_LS_OAI32X2_C_R_Z_F_0011);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_OAI32X2_C_F_Z_R_0010,`HS65_LS_OAI32X2_C_R_Z_F_0010);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_0100,`HS65_LS_OAI32X2_D_R_Z_F_0100);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_0110,`HS65_LS_OAI32X2_D_R_Z_F_0110);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_1010,`HS65_LS_OAI32X2_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_1000,`HS65_LS_OAI32X2_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_1100,`HS65_LS_OAI32X2_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_0010,`HS65_LS_OAI32X2_D_R_Z_F_0010);
		if (A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X2_D_F_Z_R_1110,`HS65_LS_OAI32X2_D_R_Z_F_1110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_0100,`HS65_LS_OAI32X2_E_R_Z_F_0100);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_0110,`HS65_LS_OAI32X2_E_R_Z_F_0110);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_1010,`HS65_LS_OAI32X2_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_1000,`HS65_LS_OAI32X2_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_1100,`HS65_LS_OAI32X2_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_0010,`HS65_LS_OAI32X2_E_R_Z_F_0010);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X2_E_F_Z_R_1110,`HS65_LS_OAI32X2_E_R_Z_F_1110);


	endspecify

endmodule // HS65_LS_OAI32X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI32X5_A_R_Z_F_0001 0.1
`define HS65_LS_OAI32X5_A_F_Z_R_0001 0.1
`define HS65_LS_OAI32X5_A_R_Z_F_0011 0.1
`define HS65_LS_OAI32X5_A_F_Z_R_0011 0.1
`define HS65_LS_OAI32X5_A_R_Z_F_0010 0.1
`define HS65_LS_OAI32X5_A_F_Z_R_0010 0.1
`define HS65_LS_OAI32X5_B_R_Z_F_0001 0.1
`define HS65_LS_OAI32X5_B_F_Z_R_0001 0.1
`define HS65_LS_OAI32X5_B_R_Z_F_0011 0.1
`define HS65_LS_OAI32X5_B_F_Z_R_0011 0.1
`define HS65_LS_OAI32X5_B_R_Z_F_0010 0.1
`define HS65_LS_OAI32X5_B_F_Z_R_0010 0.1
`define HS65_LS_OAI32X5_C_R_Z_F_0001 0.1
`define HS65_LS_OAI32X5_C_F_Z_R_0001 0.1
`define HS65_LS_OAI32X5_C_R_Z_F_0011 0.1
`define HS65_LS_OAI32X5_C_F_Z_R_0011 0.1
`define HS65_LS_OAI32X5_C_R_Z_F_0010 0.1
`define HS65_LS_OAI32X5_C_F_Z_R_0010 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_0100 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_0100 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_0110 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_0110 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_1010 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_1010 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_1000 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_1000 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_1100 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_1100 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_0010 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_0010 0.1
`define HS65_LS_OAI32X5_D_R_Z_F_1110 0.1
`define HS65_LS_OAI32X5_D_F_Z_R_1110 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_0100 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_0100 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_0110 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_0110 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_1010 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_1010 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_1000 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_1000 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_1100 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_1100 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_0010 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_0010 0.1
`define HS65_LS_OAI32X5_E_R_Z_F_1110 0.1
`define HS65_LS_OAI32X5_E_F_Z_R_1110 0.1

module HS65_LS_OAI32X5 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && !D && E) (A -=> Z) = (`HS65_LS_OAI32X5_A_F_Z_R_0001,`HS65_LS_OAI32X5_A_R_Z_F_0001);
		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI32X5_A_F_Z_R_0011,`HS65_LS_OAI32X5_A_R_Z_F_0011);
		if (!B && !C && D && !E) (A -=> Z) = (`HS65_LS_OAI32X5_A_F_Z_R_0010,`HS65_LS_OAI32X5_A_R_Z_F_0010);
		if (!A && !C && !D && E) (B -=> Z) = (`HS65_LS_OAI32X5_B_F_Z_R_0001,`HS65_LS_OAI32X5_B_R_Z_F_0001);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI32X5_B_F_Z_R_0011,`HS65_LS_OAI32X5_B_R_Z_F_0011);
		if (!A && !C && D && !E) (B -=> Z) = (`HS65_LS_OAI32X5_B_F_Z_R_0010,`HS65_LS_OAI32X5_B_R_Z_F_0010);
		if (!A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI32X5_C_F_Z_R_0001,`HS65_LS_OAI32X5_C_R_Z_F_0001);
		if (!A && !B && D && E) (C -=> Z) = (`HS65_LS_OAI32X5_C_F_Z_R_0011,`HS65_LS_OAI32X5_C_R_Z_F_0011);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_OAI32X5_C_F_Z_R_0010,`HS65_LS_OAI32X5_C_R_Z_F_0010);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_0100,`HS65_LS_OAI32X5_D_R_Z_F_0100);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_0110,`HS65_LS_OAI32X5_D_R_Z_F_0110);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_1010,`HS65_LS_OAI32X5_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_1000,`HS65_LS_OAI32X5_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_1100,`HS65_LS_OAI32X5_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_0010,`HS65_LS_OAI32X5_D_R_Z_F_0010);
		if (A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X5_D_F_Z_R_1110,`HS65_LS_OAI32X5_D_R_Z_F_1110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_0100,`HS65_LS_OAI32X5_E_R_Z_F_0100);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_0110,`HS65_LS_OAI32X5_E_R_Z_F_0110);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_1010,`HS65_LS_OAI32X5_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_1000,`HS65_LS_OAI32X5_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_1100,`HS65_LS_OAI32X5_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_0010,`HS65_LS_OAI32X5_E_R_Z_F_0010);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X5_E_F_Z_R_1110,`HS65_LS_OAI32X5_E_R_Z_F_1110);


	endspecify

endmodule // HS65_LS_OAI32X5

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI32X9_A_R_Z_F_0001 0.1
`define HS65_LS_OAI32X9_A_F_Z_R_0001 0.1
`define HS65_LS_OAI32X9_A_R_Z_F_0011 0.1
`define HS65_LS_OAI32X9_A_F_Z_R_0011 0.1
`define HS65_LS_OAI32X9_A_R_Z_F_0010 0.1
`define HS65_LS_OAI32X9_A_F_Z_R_0010 0.1
`define HS65_LS_OAI32X9_B_R_Z_F_0001 0.1
`define HS65_LS_OAI32X9_B_F_Z_R_0001 0.1
`define HS65_LS_OAI32X9_B_R_Z_F_0011 0.1
`define HS65_LS_OAI32X9_B_F_Z_R_0011 0.1
`define HS65_LS_OAI32X9_B_R_Z_F_0010 0.1
`define HS65_LS_OAI32X9_B_F_Z_R_0010 0.1
`define HS65_LS_OAI32X9_C_R_Z_F_0001 0.1
`define HS65_LS_OAI32X9_C_F_Z_R_0001 0.1
`define HS65_LS_OAI32X9_C_R_Z_F_0011 0.1
`define HS65_LS_OAI32X9_C_F_Z_R_0011 0.1
`define HS65_LS_OAI32X9_C_R_Z_F_0010 0.1
`define HS65_LS_OAI32X9_C_F_Z_R_0010 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_0100 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_0100 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_0110 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_0110 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_1010 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_1010 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_1000 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_1000 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_1100 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_1100 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_0010 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_0010 0.1
`define HS65_LS_OAI32X9_D_R_Z_F_1110 0.1
`define HS65_LS_OAI32X9_D_F_Z_R_1110 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_0100 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_0100 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_0110 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_0110 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_1010 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_1010 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_1000 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_1000 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_1100 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_1100 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_0010 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_0010 0.1
`define HS65_LS_OAI32X9_E_R_Z_F_1110 0.1
`define HS65_LS_OAI32X9_E_F_Z_R_1110 0.1

module HS65_LS_OAI32X9 (Z, A, B, C, D, E);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && !D && E) (A -=> Z) = (`HS65_LS_OAI32X9_A_F_Z_R_0001,`HS65_LS_OAI32X9_A_R_Z_F_0001);
		if (!B && !C && D && E) (A -=> Z) = (`HS65_LS_OAI32X9_A_F_Z_R_0011,`HS65_LS_OAI32X9_A_R_Z_F_0011);
		if (!B && !C && D && !E) (A -=> Z) = (`HS65_LS_OAI32X9_A_F_Z_R_0010,`HS65_LS_OAI32X9_A_R_Z_F_0010);
		if (!A && !C && !D && E) (B -=> Z) = (`HS65_LS_OAI32X9_B_F_Z_R_0001,`HS65_LS_OAI32X9_B_R_Z_F_0001);
		if (!A && !C && D && E) (B -=> Z) = (`HS65_LS_OAI32X9_B_F_Z_R_0011,`HS65_LS_OAI32X9_B_R_Z_F_0011);
		if (!A && !C && D && !E) (B -=> Z) = (`HS65_LS_OAI32X9_B_F_Z_R_0010,`HS65_LS_OAI32X9_B_R_Z_F_0010);
		if (!A && !B && !D && E) (C -=> Z) = (`HS65_LS_OAI32X9_C_F_Z_R_0001,`HS65_LS_OAI32X9_C_R_Z_F_0001);
		if (!A && !B && D && E) (C -=> Z) = (`HS65_LS_OAI32X9_C_F_Z_R_0011,`HS65_LS_OAI32X9_C_R_Z_F_0011);
		if (!A && !B && D && !E) (C -=> Z) = (`HS65_LS_OAI32X9_C_F_Z_R_0010,`HS65_LS_OAI32X9_C_R_Z_F_0010);
		if (!A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_0100,`HS65_LS_OAI32X9_D_R_Z_F_0100);
		if (!A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_0110,`HS65_LS_OAI32X9_D_R_Z_F_0110);
		if (A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_1010,`HS65_LS_OAI32X9_D_R_Z_F_1010);
		if (A && !B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_1000,`HS65_LS_OAI32X9_D_R_Z_F_1000);
		if (A && B && !C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_1100,`HS65_LS_OAI32X9_D_R_Z_F_1100);
		if (!A && !B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_0010,`HS65_LS_OAI32X9_D_R_Z_F_0010);
		if (A && B && C && !E) (D -=> Z) = (`HS65_LS_OAI32X9_D_F_Z_R_1110,`HS65_LS_OAI32X9_D_R_Z_F_1110);
		if (!A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_0100,`HS65_LS_OAI32X9_E_R_Z_F_0100);
		if (!A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_0110,`HS65_LS_OAI32X9_E_R_Z_F_0110);
		if (A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_1010,`HS65_LS_OAI32X9_E_R_Z_F_1010);
		if (A && !B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_1000,`HS65_LS_OAI32X9_E_R_Z_F_1000);
		if (A && B && !C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_1100,`HS65_LS_OAI32X9_E_R_Z_F_1100);
		if (!A && !B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_0010,`HS65_LS_OAI32X9_E_R_Z_F_0010);
		if (A && B && C && !D) (E -=> Z) = (`HS65_LS_OAI32X9_E_F_Z_R_1110,`HS65_LS_OAI32X9_E_R_Z_F_1110);


	endspecify

endmodule // HS65_LS_OAI32X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI33X10_A_R_Z_F_00111 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00111 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00011 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00011 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00101 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00101 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00100 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00110 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00110 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00010 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00010 0.1
`define HS65_LS_OAI33X10_A_R_Z_F_00001 0.1
`define HS65_LS_OAI33X10_A_F_Z_R_00001 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00111 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00111 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00011 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00011 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00101 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00101 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00100 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00110 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00110 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00010 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00010 0.1
`define HS65_LS_OAI33X10_B_R_Z_F_00001 0.1
`define HS65_LS_OAI33X10_B_F_Z_R_00001 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00111 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00111 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00011 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00011 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00101 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00101 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00100 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00110 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00110 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00010 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00010 0.1
`define HS65_LS_OAI33X10_C_R_Z_F_00001 0.1
`define HS65_LS_OAI33X10_C_F_Z_R_00001 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_11100 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_11100 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_01100 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_01100 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_10100 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_10100 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_10000 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_10000 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_11000 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_11000 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_01000 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_01000 0.1
`define HS65_LS_OAI33X10_D_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_D_F_Z_R_00100 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_11100 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_11100 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_01100 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_01100 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_10100 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_10100 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_10000 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_10000 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_11000 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_11000 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_01000 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_01000 0.1
`define HS65_LS_OAI33X10_E_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_E_F_Z_R_00100 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_11100 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_11100 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_01100 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_01100 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_10100 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_10100 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_10000 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_10000 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_11000 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_11000 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_01000 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_01000 0.1
`define HS65_LS_OAI33X10_F_R_Z_F_00100 0.1
`define HS65_LS_OAI33X10_F_F_Z_R_00100 0.1

module HS65_LS_OAI33X10 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E, F) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00111,`HS65_LS_OAI33X10_A_R_Z_F_00111);
		if (!B && !C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00011,`HS65_LS_OAI33X10_A_R_Z_F_00011);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00101,`HS65_LS_OAI33X10_A_R_Z_F_00101);
		if (!B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00100,`HS65_LS_OAI33X10_A_R_Z_F_00100);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00110,`HS65_LS_OAI33X10_A_R_Z_F_00110);
		if (!B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00010,`HS65_LS_OAI33X10_A_R_Z_F_00010);
		if (!B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X10_A_F_Z_R_00001,`HS65_LS_OAI33X10_A_R_Z_F_00001);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00111,`HS65_LS_OAI33X10_B_R_Z_F_00111);
		if (!A && !C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00011,`HS65_LS_OAI33X10_B_R_Z_F_00011);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00101,`HS65_LS_OAI33X10_B_R_Z_F_00101);
		if (!A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00100,`HS65_LS_OAI33X10_B_R_Z_F_00100);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00110,`HS65_LS_OAI33X10_B_R_Z_F_00110);
		if (!A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00010,`HS65_LS_OAI33X10_B_R_Z_F_00010);
		if (!A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X10_B_F_Z_R_00001,`HS65_LS_OAI33X10_B_R_Z_F_00001);
		if (!A && !B && D && E && F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00111,`HS65_LS_OAI33X10_C_R_Z_F_00111);
		if (!A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00011,`HS65_LS_OAI33X10_C_R_Z_F_00011);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00101,`HS65_LS_OAI33X10_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00100,`HS65_LS_OAI33X10_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00110,`HS65_LS_OAI33X10_C_R_Z_F_00110);
		if (!A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00010,`HS65_LS_OAI33X10_C_R_Z_F_00010);
		if (!A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X10_C_F_Z_R_00001,`HS65_LS_OAI33X10_C_R_Z_F_00001);
		if (A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_11100,`HS65_LS_OAI33X10_D_R_Z_F_11100);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_01100,`HS65_LS_OAI33X10_D_R_Z_F_01100);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_10100,`HS65_LS_OAI33X10_D_R_Z_F_10100);
		if (A && !B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_10000,`HS65_LS_OAI33X10_D_R_Z_F_10000);
		if (A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_11000,`HS65_LS_OAI33X10_D_R_Z_F_11000);
		if (!A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_01000,`HS65_LS_OAI33X10_D_R_Z_F_01000);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X10_D_F_Z_R_00100,`HS65_LS_OAI33X10_D_R_Z_F_00100);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_11100,`HS65_LS_OAI33X10_E_R_Z_F_11100);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_01100,`HS65_LS_OAI33X10_E_R_Z_F_01100);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_10100,`HS65_LS_OAI33X10_E_R_Z_F_10100);
		if (A && !B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_10000,`HS65_LS_OAI33X10_E_R_Z_F_10000);
		if (A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_11000,`HS65_LS_OAI33X10_E_R_Z_F_11000);
		if (!A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_01000,`HS65_LS_OAI33X10_E_R_Z_F_01000);
		if (!A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X10_E_F_Z_R_00100,`HS65_LS_OAI33X10_E_R_Z_F_00100);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_11100,`HS65_LS_OAI33X10_F_R_Z_F_11100);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_01100,`HS65_LS_OAI33X10_F_R_Z_F_01100);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_10100,`HS65_LS_OAI33X10_F_R_Z_F_10100);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_10000,`HS65_LS_OAI33X10_F_R_Z_F_10000);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_11000,`HS65_LS_OAI33X10_F_R_Z_F_11000);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_01000,`HS65_LS_OAI33X10_F_R_Z_F_01000);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X10_F_F_Z_R_00100,`HS65_LS_OAI33X10_F_R_Z_F_00100);


	endspecify

endmodule // HS65_LS_OAI33X10

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI33X13_A_R_Z_F_00111 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00111 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00011 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00011 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00101 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00101 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00100 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00110 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00110 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00010 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00010 0.1
`define HS65_LS_OAI33X13_A_R_Z_F_00001 0.1
`define HS65_LS_OAI33X13_A_F_Z_R_00001 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00111 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00111 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00011 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00011 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00101 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00101 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00100 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00110 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00110 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00010 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00010 0.1
`define HS65_LS_OAI33X13_B_R_Z_F_00001 0.1
`define HS65_LS_OAI33X13_B_F_Z_R_00001 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00111 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00111 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00011 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00011 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00101 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00101 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00100 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00110 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00110 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00010 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00010 0.1
`define HS65_LS_OAI33X13_C_R_Z_F_00001 0.1
`define HS65_LS_OAI33X13_C_F_Z_R_00001 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_11100 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_11100 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_01100 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_01100 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_10100 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_10100 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_10000 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_10000 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_11000 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_11000 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_01000 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_01000 0.1
`define HS65_LS_OAI33X13_D_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_D_F_Z_R_00100 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_11100 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_11100 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_01100 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_01100 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_10100 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_10100 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_10000 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_10000 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_11000 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_11000 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_01000 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_01000 0.1
`define HS65_LS_OAI33X13_E_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_E_F_Z_R_00100 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_11100 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_11100 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_01100 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_01100 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_10100 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_10100 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_10000 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_10000 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_11000 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_11000 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_01000 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_01000 0.1
`define HS65_LS_OAI33X13_F_R_Z_F_00100 0.1
`define HS65_LS_OAI33X13_F_F_Z_R_00100 0.1

module HS65_LS_OAI33X13 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E, F) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00111,`HS65_LS_OAI33X13_A_R_Z_F_00111);
		if (!B && !C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00011,`HS65_LS_OAI33X13_A_R_Z_F_00011);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00101,`HS65_LS_OAI33X13_A_R_Z_F_00101);
		if (!B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00100,`HS65_LS_OAI33X13_A_R_Z_F_00100);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00110,`HS65_LS_OAI33X13_A_R_Z_F_00110);
		if (!B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00010,`HS65_LS_OAI33X13_A_R_Z_F_00010);
		if (!B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X13_A_F_Z_R_00001,`HS65_LS_OAI33X13_A_R_Z_F_00001);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00111,`HS65_LS_OAI33X13_B_R_Z_F_00111);
		if (!A && !C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00011,`HS65_LS_OAI33X13_B_R_Z_F_00011);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00101,`HS65_LS_OAI33X13_B_R_Z_F_00101);
		if (!A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00100,`HS65_LS_OAI33X13_B_R_Z_F_00100);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00110,`HS65_LS_OAI33X13_B_R_Z_F_00110);
		if (!A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00010,`HS65_LS_OAI33X13_B_R_Z_F_00010);
		if (!A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X13_B_F_Z_R_00001,`HS65_LS_OAI33X13_B_R_Z_F_00001);
		if (!A && !B && D && E && F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00111,`HS65_LS_OAI33X13_C_R_Z_F_00111);
		if (!A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00011,`HS65_LS_OAI33X13_C_R_Z_F_00011);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00101,`HS65_LS_OAI33X13_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00100,`HS65_LS_OAI33X13_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00110,`HS65_LS_OAI33X13_C_R_Z_F_00110);
		if (!A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00010,`HS65_LS_OAI33X13_C_R_Z_F_00010);
		if (!A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X13_C_F_Z_R_00001,`HS65_LS_OAI33X13_C_R_Z_F_00001);
		if (A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_11100,`HS65_LS_OAI33X13_D_R_Z_F_11100);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_01100,`HS65_LS_OAI33X13_D_R_Z_F_01100);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_10100,`HS65_LS_OAI33X13_D_R_Z_F_10100);
		if (A && !B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_10000,`HS65_LS_OAI33X13_D_R_Z_F_10000);
		if (A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_11000,`HS65_LS_OAI33X13_D_R_Z_F_11000);
		if (!A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_01000,`HS65_LS_OAI33X13_D_R_Z_F_01000);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X13_D_F_Z_R_00100,`HS65_LS_OAI33X13_D_R_Z_F_00100);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_11100,`HS65_LS_OAI33X13_E_R_Z_F_11100);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_01100,`HS65_LS_OAI33X13_E_R_Z_F_01100);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_10100,`HS65_LS_OAI33X13_E_R_Z_F_10100);
		if (A && !B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_10000,`HS65_LS_OAI33X13_E_R_Z_F_10000);
		if (A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_11000,`HS65_LS_OAI33X13_E_R_Z_F_11000);
		if (!A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_01000,`HS65_LS_OAI33X13_E_R_Z_F_01000);
		if (!A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X13_E_F_Z_R_00100,`HS65_LS_OAI33X13_E_R_Z_F_00100);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_11100,`HS65_LS_OAI33X13_F_R_Z_F_11100);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_01100,`HS65_LS_OAI33X13_F_R_Z_F_01100);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_10100,`HS65_LS_OAI33X13_F_R_Z_F_10100);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_10000,`HS65_LS_OAI33X13_F_R_Z_F_10000);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_11000,`HS65_LS_OAI33X13_F_R_Z_F_11000);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_01000,`HS65_LS_OAI33X13_F_R_Z_F_01000);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X13_F_F_Z_R_00100,`HS65_LS_OAI33X13_F_R_Z_F_00100);


	endspecify

endmodule // HS65_LS_OAI33X13

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI33X2_A_R_Z_F_00111 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00111 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00011 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00011 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00101 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00101 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00100 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00110 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00110 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00010 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00010 0.1
`define HS65_LS_OAI33X2_A_R_Z_F_00001 0.1
`define HS65_LS_OAI33X2_A_F_Z_R_00001 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00111 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00111 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00011 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00011 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00101 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00101 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00100 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00110 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00110 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00010 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00010 0.1
`define HS65_LS_OAI33X2_B_R_Z_F_00001 0.1
`define HS65_LS_OAI33X2_B_F_Z_R_00001 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00111 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00111 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00011 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00011 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00101 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00101 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00100 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00110 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00110 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00010 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00010 0.1
`define HS65_LS_OAI33X2_C_R_Z_F_00001 0.1
`define HS65_LS_OAI33X2_C_F_Z_R_00001 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_11100 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_11100 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_01100 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_01100 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_10100 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_10100 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_10000 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_10000 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_11000 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_11000 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_01000 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_01000 0.1
`define HS65_LS_OAI33X2_D_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_D_F_Z_R_00100 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_11100 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_11100 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_01100 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_01100 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_10100 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_10100 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_10000 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_10000 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_11000 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_11000 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_01000 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_01000 0.1
`define HS65_LS_OAI33X2_E_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_E_F_Z_R_00100 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_11100 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_11100 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_01100 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_01100 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_10100 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_10100 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_10000 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_10000 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_11000 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_11000 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_01000 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_01000 0.1
`define HS65_LS_OAI33X2_F_R_Z_F_00100 0.1
`define HS65_LS_OAI33X2_F_F_Z_R_00100 0.1

module HS65_LS_OAI33X2 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E, F) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00111,`HS65_LS_OAI33X2_A_R_Z_F_00111);
		if (!B && !C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00011,`HS65_LS_OAI33X2_A_R_Z_F_00011);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00101,`HS65_LS_OAI33X2_A_R_Z_F_00101);
		if (!B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00100,`HS65_LS_OAI33X2_A_R_Z_F_00100);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00110,`HS65_LS_OAI33X2_A_R_Z_F_00110);
		if (!B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00010,`HS65_LS_OAI33X2_A_R_Z_F_00010);
		if (!B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X2_A_F_Z_R_00001,`HS65_LS_OAI33X2_A_R_Z_F_00001);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00111,`HS65_LS_OAI33X2_B_R_Z_F_00111);
		if (!A && !C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00011,`HS65_LS_OAI33X2_B_R_Z_F_00011);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00101,`HS65_LS_OAI33X2_B_R_Z_F_00101);
		if (!A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00100,`HS65_LS_OAI33X2_B_R_Z_F_00100);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00110,`HS65_LS_OAI33X2_B_R_Z_F_00110);
		if (!A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00010,`HS65_LS_OAI33X2_B_R_Z_F_00010);
		if (!A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X2_B_F_Z_R_00001,`HS65_LS_OAI33X2_B_R_Z_F_00001);
		if (!A && !B && D && E && F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00111,`HS65_LS_OAI33X2_C_R_Z_F_00111);
		if (!A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00011,`HS65_LS_OAI33X2_C_R_Z_F_00011);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00101,`HS65_LS_OAI33X2_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00100,`HS65_LS_OAI33X2_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00110,`HS65_LS_OAI33X2_C_R_Z_F_00110);
		if (!A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00010,`HS65_LS_OAI33X2_C_R_Z_F_00010);
		if (!A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X2_C_F_Z_R_00001,`HS65_LS_OAI33X2_C_R_Z_F_00001);
		if (A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_11100,`HS65_LS_OAI33X2_D_R_Z_F_11100);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_01100,`HS65_LS_OAI33X2_D_R_Z_F_01100);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_10100,`HS65_LS_OAI33X2_D_R_Z_F_10100);
		if (A && !B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_10000,`HS65_LS_OAI33X2_D_R_Z_F_10000);
		if (A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_11000,`HS65_LS_OAI33X2_D_R_Z_F_11000);
		if (!A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_01000,`HS65_LS_OAI33X2_D_R_Z_F_01000);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X2_D_F_Z_R_00100,`HS65_LS_OAI33X2_D_R_Z_F_00100);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_11100,`HS65_LS_OAI33X2_E_R_Z_F_11100);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_01100,`HS65_LS_OAI33X2_E_R_Z_F_01100);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_10100,`HS65_LS_OAI33X2_E_R_Z_F_10100);
		if (A && !B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_10000,`HS65_LS_OAI33X2_E_R_Z_F_10000);
		if (A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_11000,`HS65_LS_OAI33X2_E_R_Z_F_11000);
		if (!A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_01000,`HS65_LS_OAI33X2_E_R_Z_F_01000);
		if (!A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X2_E_F_Z_R_00100,`HS65_LS_OAI33X2_E_R_Z_F_00100);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_11100,`HS65_LS_OAI33X2_F_R_Z_F_11100);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_01100,`HS65_LS_OAI33X2_F_R_Z_F_01100);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_10100,`HS65_LS_OAI33X2_F_R_Z_F_10100);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_10000,`HS65_LS_OAI33X2_F_R_Z_F_10000);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_11000,`HS65_LS_OAI33X2_F_R_Z_F_11000);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_01000,`HS65_LS_OAI33X2_F_R_Z_F_01000);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X2_F_F_Z_R_00100,`HS65_LS_OAI33X2_F_R_Z_F_00100);


	endspecify

endmodule // HS65_LS_OAI33X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI33X3_A_R_Z_F_00111 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00111 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00011 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00011 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00101 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00101 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00100 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00110 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00110 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00010 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00010 0.1
`define HS65_LS_OAI33X3_A_R_Z_F_00001 0.1
`define HS65_LS_OAI33X3_A_F_Z_R_00001 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00111 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00111 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00011 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00011 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00101 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00101 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00100 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00110 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00110 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00010 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00010 0.1
`define HS65_LS_OAI33X3_B_R_Z_F_00001 0.1
`define HS65_LS_OAI33X3_B_F_Z_R_00001 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00111 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00111 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00011 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00011 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00101 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00101 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00100 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00110 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00110 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00010 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00010 0.1
`define HS65_LS_OAI33X3_C_R_Z_F_00001 0.1
`define HS65_LS_OAI33X3_C_F_Z_R_00001 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_11100 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_11100 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_01100 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_01100 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_10100 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_10100 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_10000 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_10000 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_11000 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_11000 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_01000 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_01000 0.1
`define HS65_LS_OAI33X3_D_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_D_F_Z_R_00100 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_11100 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_11100 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_01100 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_01100 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_10100 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_10100 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_10000 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_10000 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_11000 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_11000 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_01000 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_01000 0.1
`define HS65_LS_OAI33X3_E_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_E_F_Z_R_00100 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_11100 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_11100 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_01100 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_01100 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_10100 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_10100 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_10000 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_10000 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_11000 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_11000 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_01000 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_01000 0.1
`define HS65_LS_OAI33X3_F_R_Z_F_00100 0.1
`define HS65_LS_OAI33X3_F_F_Z_R_00100 0.1

module HS65_LS_OAI33X3 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E, F) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00111,`HS65_LS_OAI33X3_A_R_Z_F_00111);
		if (!B && !C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00011,`HS65_LS_OAI33X3_A_R_Z_F_00011);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00101,`HS65_LS_OAI33X3_A_R_Z_F_00101);
		if (!B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00100,`HS65_LS_OAI33X3_A_R_Z_F_00100);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00110,`HS65_LS_OAI33X3_A_R_Z_F_00110);
		if (!B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00010,`HS65_LS_OAI33X3_A_R_Z_F_00010);
		if (!B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X3_A_F_Z_R_00001,`HS65_LS_OAI33X3_A_R_Z_F_00001);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00111,`HS65_LS_OAI33X3_B_R_Z_F_00111);
		if (!A && !C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00011,`HS65_LS_OAI33X3_B_R_Z_F_00011);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00101,`HS65_LS_OAI33X3_B_R_Z_F_00101);
		if (!A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00100,`HS65_LS_OAI33X3_B_R_Z_F_00100);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00110,`HS65_LS_OAI33X3_B_R_Z_F_00110);
		if (!A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00010,`HS65_LS_OAI33X3_B_R_Z_F_00010);
		if (!A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X3_B_F_Z_R_00001,`HS65_LS_OAI33X3_B_R_Z_F_00001);
		if (!A && !B && D && E && F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00111,`HS65_LS_OAI33X3_C_R_Z_F_00111);
		if (!A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00011,`HS65_LS_OAI33X3_C_R_Z_F_00011);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00101,`HS65_LS_OAI33X3_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00100,`HS65_LS_OAI33X3_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00110,`HS65_LS_OAI33X3_C_R_Z_F_00110);
		if (!A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00010,`HS65_LS_OAI33X3_C_R_Z_F_00010);
		if (!A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X3_C_F_Z_R_00001,`HS65_LS_OAI33X3_C_R_Z_F_00001);
		if (A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_11100,`HS65_LS_OAI33X3_D_R_Z_F_11100);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_01100,`HS65_LS_OAI33X3_D_R_Z_F_01100);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_10100,`HS65_LS_OAI33X3_D_R_Z_F_10100);
		if (A && !B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_10000,`HS65_LS_OAI33X3_D_R_Z_F_10000);
		if (A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_11000,`HS65_LS_OAI33X3_D_R_Z_F_11000);
		if (!A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_01000,`HS65_LS_OAI33X3_D_R_Z_F_01000);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X3_D_F_Z_R_00100,`HS65_LS_OAI33X3_D_R_Z_F_00100);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_11100,`HS65_LS_OAI33X3_E_R_Z_F_11100);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_01100,`HS65_LS_OAI33X3_E_R_Z_F_01100);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_10100,`HS65_LS_OAI33X3_E_R_Z_F_10100);
		if (A && !B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_10000,`HS65_LS_OAI33X3_E_R_Z_F_10000);
		if (A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_11000,`HS65_LS_OAI33X3_E_R_Z_F_11000);
		if (!A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_01000,`HS65_LS_OAI33X3_E_R_Z_F_01000);
		if (!A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X3_E_F_Z_R_00100,`HS65_LS_OAI33X3_E_R_Z_F_00100);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_11100,`HS65_LS_OAI33X3_F_R_Z_F_11100);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_01100,`HS65_LS_OAI33X3_F_R_Z_F_01100);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_10100,`HS65_LS_OAI33X3_F_R_Z_F_10100);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_10000,`HS65_LS_OAI33X3_F_R_Z_F_10000);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_11000,`HS65_LS_OAI33X3_F_R_Z_F_11000);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_01000,`HS65_LS_OAI33X3_F_R_Z_F_01000);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X3_F_F_Z_R_00100,`HS65_LS_OAI33X3_F_R_Z_F_00100);


	endspecify

endmodule // HS65_LS_OAI33X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OAI33X6_A_R_Z_F_00111 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00111 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00011 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00011 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00101 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00101 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00100 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00110 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00110 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00010 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00010 0.1
`define HS65_LS_OAI33X6_A_R_Z_F_00001 0.1
`define HS65_LS_OAI33X6_A_F_Z_R_00001 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00111 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00111 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00011 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00011 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00101 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00101 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00100 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00110 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00110 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00010 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00010 0.1
`define HS65_LS_OAI33X6_B_R_Z_F_00001 0.1
`define HS65_LS_OAI33X6_B_F_Z_R_00001 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00111 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00111 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00011 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00011 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00101 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00101 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00100 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00110 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00110 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00010 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00010 0.1
`define HS65_LS_OAI33X6_C_R_Z_F_00001 0.1
`define HS65_LS_OAI33X6_C_F_Z_R_00001 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_11100 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_11100 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_01100 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_01100 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_10100 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_10100 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_10000 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_10000 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_11000 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_11000 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_01000 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_01000 0.1
`define HS65_LS_OAI33X6_D_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_D_F_Z_R_00100 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_11100 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_11100 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_01100 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_01100 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_10100 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_10100 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_10000 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_10000 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_11000 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_11000 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_01000 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_01000 0.1
`define HS65_LS_OAI33X6_E_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_E_F_Z_R_00100 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_11100 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_11100 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_01100 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_01100 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_10100 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_10100 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_10000 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_10000 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_11000 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_11000 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_01000 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_01000 0.1
`define HS65_LS_OAI33X6_F_R_Z_F_00100 0.1
`define HS65_LS_OAI33X6_F_F_Z_R_00100 0.1

module HS65_LS_OAI33X6 (Z, A, B, C, D, E, F);

	output Z;
	input A;
	input B;
	input C;
	input D;
	input E;
	input F;

	or    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL3, D, E, F) ;
	and    U3 (INTERNAL1, INTERNAL2, INTERNAL3) ;
	not   #1 U4 (Z, INTERNAL1) ;



	specify

		if (!B && !C && D && E && F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00111,`HS65_LS_OAI33X6_A_R_Z_F_00111);
		if (!B && !C && !D && E && F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00011,`HS65_LS_OAI33X6_A_R_Z_F_00011);
		if (!B && !C && D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00101,`HS65_LS_OAI33X6_A_R_Z_F_00101);
		if (!B && !C && D && !E && !F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00100,`HS65_LS_OAI33X6_A_R_Z_F_00100);
		if (!B && !C && D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00110,`HS65_LS_OAI33X6_A_R_Z_F_00110);
		if (!B && !C && !D && E && !F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00010,`HS65_LS_OAI33X6_A_R_Z_F_00010);
		if (!B && !C && !D && !E && F) (A -=> Z) = (`HS65_LS_OAI33X6_A_F_Z_R_00001,`HS65_LS_OAI33X6_A_R_Z_F_00001);
		if (!A && !C && D && E && F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00111,`HS65_LS_OAI33X6_B_R_Z_F_00111);
		if (!A && !C && !D && E && F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00011,`HS65_LS_OAI33X6_B_R_Z_F_00011);
		if (!A && !C && D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00101,`HS65_LS_OAI33X6_B_R_Z_F_00101);
		if (!A && !C && D && !E && !F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00100,`HS65_LS_OAI33X6_B_R_Z_F_00100);
		if (!A && !C && D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00110,`HS65_LS_OAI33X6_B_R_Z_F_00110);
		if (!A && !C && !D && E && !F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00010,`HS65_LS_OAI33X6_B_R_Z_F_00010);
		if (!A && !C && !D && !E && F) (B -=> Z) = (`HS65_LS_OAI33X6_B_F_Z_R_00001,`HS65_LS_OAI33X6_B_R_Z_F_00001);
		if (!A && !B && D && E && F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00111,`HS65_LS_OAI33X6_C_R_Z_F_00111);
		if (!A && !B && !D && E && F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00011,`HS65_LS_OAI33X6_C_R_Z_F_00011);
		if (!A && !B && D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00101,`HS65_LS_OAI33X6_C_R_Z_F_00101);
		if (!A && !B && D && !E && !F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00100,`HS65_LS_OAI33X6_C_R_Z_F_00100);
		if (!A && !B && D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00110,`HS65_LS_OAI33X6_C_R_Z_F_00110);
		if (!A && !B && !D && E && !F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00010,`HS65_LS_OAI33X6_C_R_Z_F_00010);
		if (!A && !B && !D && !E && F) (C -=> Z) = (`HS65_LS_OAI33X6_C_F_Z_R_00001,`HS65_LS_OAI33X6_C_R_Z_F_00001);
		if (A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_11100,`HS65_LS_OAI33X6_D_R_Z_F_11100);
		if (!A && B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_01100,`HS65_LS_OAI33X6_D_R_Z_F_01100);
		if (A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_10100,`HS65_LS_OAI33X6_D_R_Z_F_10100);
		if (A && !B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_10000,`HS65_LS_OAI33X6_D_R_Z_F_10000);
		if (A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_11000,`HS65_LS_OAI33X6_D_R_Z_F_11000);
		if (!A && B && !C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_01000,`HS65_LS_OAI33X6_D_R_Z_F_01000);
		if (!A && !B && C && !E && !F) (D -=> Z) = (`HS65_LS_OAI33X6_D_F_Z_R_00100,`HS65_LS_OAI33X6_D_R_Z_F_00100);
		if (A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_11100,`HS65_LS_OAI33X6_E_R_Z_F_11100);
		if (!A && B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_01100,`HS65_LS_OAI33X6_E_R_Z_F_01100);
		if (A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_10100,`HS65_LS_OAI33X6_E_R_Z_F_10100);
		if (A && !B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_10000,`HS65_LS_OAI33X6_E_R_Z_F_10000);
		if (A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_11000,`HS65_LS_OAI33X6_E_R_Z_F_11000);
		if (!A && B && !C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_01000,`HS65_LS_OAI33X6_E_R_Z_F_01000);
		if (!A && !B && C && !D && !F) (E -=> Z) = (`HS65_LS_OAI33X6_E_F_Z_R_00100,`HS65_LS_OAI33X6_E_R_Z_F_00100);
		if (A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_11100,`HS65_LS_OAI33X6_F_R_Z_F_11100);
		if (!A && B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_01100,`HS65_LS_OAI33X6_F_R_Z_F_01100);
		if (A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_10100,`HS65_LS_OAI33X6_F_R_Z_F_10100);
		if (A && !B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_10000,`HS65_LS_OAI33X6_F_R_Z_F_10000);
		if (A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_11000,`HS65_LS_OAI33X6_F_R_Z_F_11000);
		if (!A && B && !C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_01000,`HS65_LS_OAI33X6_F_R_Z_F_01000);
		if (!A && !B && C && !D && !E) (F -=> Z) = (`HS65_LS_OAI33X6_F_F_Z_R_00100,`HS65_LS_OAI33X6_F_R_Z_F_00100);


	endspecify

endmodule // HS65_LS_OAI33X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2ABX18_A_R_Z_F_1 0.1
`define HS65_LS_OR2ABX18_A_F_Z_R_1 0.1
`define HS65_LS_OR2ABX18_B_R_Z_F_1 0.1
`define HS65_LS_OR2ABX18_B_F_Z_R_1 0.1

module HS65_LS_OR2ABX18 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR2ABX18_A_F_Z_R_1,`HS65_LS_OR2ABX18_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_OR2ABX18_B_F_Z_R_1,`HS65_LS_OR2ABX18_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_OR2ABX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2ABX27_A_R_Z_F_1 0.1
`define HS65_LS_OR2ABX27_A_F_Z_R_1 0.1
`define HS65_LS_OR2ABX27_B_R_Z_F_1 0.1
`define HS65_LS_OR2ABX27_B_F_Z_R_1 0.1

module HS65_LS_OR2ABX27 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR2ABX27_A_F_Z_R_1,`HS65_LS_OR2ABX27_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_OR2ABX27_B_F_Z_R_1,`HS65_LS_OR2ABX27_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_OR2ABX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2ABX35_A_R_Z_F_1 0.1
`define HS65_LS_OR2ABX35_A_F_Z_R_1 0.1
`define HS65_LS_OR2ABX35_B_R_Z_F_1 0.1
`define HS65_LS_OR2ABX35_B_F_Z_R_1 0.1

module HS65_LS_OR2ABX35 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR2ABX35_A_F_Z_R_1,`HS65_LS_OR2ABX35_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_OR2ABX35_B_F_Z_R_1,`HS65_LS_OR2ABX35_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_OR2ABX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2ABX9_A_R_Z_F_1 0.1
`define HS65_LS_OR2ABX9_A_F_Z_R_1 0.1
`define HS65_LS_OR2ABX9_B_R_Z_F_1 0.1
`define HS65_LS_OR2ABX9_B_F_Z_R_1 0.1

module HS65_LS_OR2ABX9 (Z, A, B);

	output Z;
	input A;
	input B;

	and    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR2ABX9_A_F_Z_R_1,`HS65_LS_OR2ABX9_A_R_Z_F_1);
		(B -=> Z) = (`HS65_LS_OR2ABX9_B_F_Z_R_1,`HS65_LS_OR2ABX9_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_OR2ABX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2X18_A_R_Z_R_0 0.1
`define HS65_LS_OR2X18_A_F_Z_F_0 0.1
`define HS65_LS_OR2X18_B_R_Z_R_0 0.1
`define HS65_LS_OR2X18_B_F_Z_F_0 0.1

module HS65_LS_OR2X18 (Z, A, B);

	output Z;
	input A;
	input B;

	or   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_OR2X18_A_R_Z_R_0,`HS65_LS_OR2X18_A_F_Z_F_0);
		(B +=> Z) = (`HS65_LS_OR2X18_B_R_Z_R_0,`HS65_LS_OR2X18_B_F_Z_F_0);


	endspecify

endmodule // HS65_LS_OR2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2X27_A_R_Z_R_0 0.1
`define HS65_LS_OR2X27_A_F_Z_F_0 0.1
`define HS65_LS_OR2X27_B_R_Z_R_0 0.1
`define HS65_LS_OR2X27_B_F_Z_F_0 0.1

module HS65_LS_OR2X27 (Z, A, B);

	output Z;
	input A;
	input B;

	or   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_OR2X27_A_R_Z_R_0,`HS65_LS_OR2X27_A_F_Z_F_0);
		(B +=> Z) = (`HS65_LS_OR2X27_B_R_Z_R_0,`HS65_LS_OR2X27_B_F_Z_F_0);


	endspecify

endmodule // HS65_LS_OR2X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2X35_A_R_Z_R_0 0.1
`define HS65_LS_OR2X35_A_F_Z_F_0 0.1
`define HS65_LS_OR2X35_B_R_Z_R_0 0.1
`define HS65_LS_OR2X35_B_F_Z_F_0 0.1

module HS65_LS_OR2X35 (Z, A, B);

	output Z;
	input A;
	input B;

	or   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_OR2X35_A_R_Z_R_0,`HS65_LS_OR2X35_A_F_Z_F_0);
		(B +=> Z) = (`HS65_LS_OR2X35_B_R_Z_R_0,`HS65_LS_OR2X35_B_F_Z_F_0);


	endspecify

endmodule // HS65_LS_OR2X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2X4_A_R_Z_R_0 0.1
`define HS65_LS_OR2X4_A_F_Z_F_0 0.1
`define HS65_LS_OR2X4_B_R_Z_R_0 0.1
`define HS65_LS_OR2X4_B_F_Z_F_0 0.1

module HS65_LS_OR2X4 (Z, A, B);

	output Z;
	input A;
	input B;

	or   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_OR2X4_A_R_Z_R_0,`HS65_LS_OR2X4_A_F_Z_F_0);
		(B +=> Z) = (`HS65_LS_OR2X4_B_R_Z_R_0,`HS65_LS_OR2X4_B_F_Z_F_0);


	endspecify

endmodule // HS65_LS_OR2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR2X9_A_R_Z_R_0 0.1
`define HS65_LS_OR2X9_A_F_Z_F_0 0.1
`define HS65_LS_OR2X9_B_R_Z_R_0 0.1
`define HS65_LS_OR2X9_B_F_Z_F_0 0.1

module HS65_LS_OR2X9 (Z, A, B);

	output Z;
	input A;
	input B;

	or   #1 U1 (Z, A, B) ;



	specify

		(A +=> Z) = (`HS65_LS_OR2X9_A_R_Z_R_0,`HS65_LS_OR2X9_A_F_Z_F_0);
		(B +=> Z) = (`HS65_LS_OR2X9_B_R_Z_R_0,`HS65_LS_OR2X9_B_F_Z_F_0);


	endspecify

endmodule // HS65_LS_OR2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3ABCX18_A_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX18_A_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX18_B_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX18_B_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX18_C_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX18_C_F_Z_R_11 0.1

module HS65_LS_OR3ABCX18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR3ABCX18_A_F_Z_R_11,`HS65_LS_OR3ABCX18_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_OR3ABCX18_B_F_Z_R_11,`HS65_LS_OR3ABCX18_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_OR3ABCX18_C_F_Z_R_11,`HS65_LS_OR3ABCX18_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_OR3ABCX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3ABCX27_A_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX27_A_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX27_B_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX27_B_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX27_C_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX27_C_F_Z_R_11 0.1

module HS65_LS_OR3ABCX27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR3ABCX27_A_F_Z_R_11,`HS65_LS_OR3ABCX27_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_OR3ABCX27_B_F_Z_R_11,`HS65_LS_OR3ABCX27_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_OR3ABCX27_C_F_Z_R_11,`HS65_LS_OR3ABCX27_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_OR3ABCX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3ABCX35_A_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX35_A_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX35_B_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX35_B_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX35_C_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX35_C_F_Z_R_11 0.1

module HS65_LS_OR3ABCX35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR3ABCX35_A_F_Z_R_11,`HS65_LS_OR3ABCX35_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_OR3ABCX35_B_F_Z_R_11,`HS65_LS_OR3ABCX35_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_OR3ABCX35_C_F_Z_R_11,`HS65_LS_OR3ABCX35_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_OR3ABCX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3ABCX9_A_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX9_A_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX9_B_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX9_B_F_Z_R_11 0.1
`define HS65_LS_OR3ABCX9_C_R_Z_F_11 0.1
`define HS65_LS_OR3ABCX9_C_F_Z_R_11 0.1

module HS65_LS_OR3ABCX9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	and    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		(A -=> Z) = (`HS65_LS_OR3ABCX9_A_F_Z_R_11,`HS65_LS_OR3ABCX9_A_R_Z_F_11);
		(B -=> Z) = (`HS65_LS_OR3ABCX9_B_F_Z_R_11,`HS65_LS_OR3ABCX9_B_R_Z_F_11);
		(C -=> Z) = (`HS65_LS_OR3ABCX9_C_F_Z_R_11,`HS65_LS_OR3ABCX9_C_R_Z_F_11);


	endspecify

endmodule // HS65_LS_OR3ABCX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3X18_A_R_Z_R_00 0.1
`define HS65_LS_OR3X18_A_F_Z_F_00 0.1
`define HS65_LS_OR3X18_B_R_Z_R_00 0.1
`define HS65_LS_OR3X18_B_F_Z_F_00 0.1
`define HS65_LS_OR3X18_C_R_Z_R_00 0.1
`define HS65_LS_OR3X18_C_F_Z_F_00 0.1

module HS65_LS_OR3X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OR3X18_A_R_Z_R_00,`HS65_LS_OR3X18_A_F_Z_F_00);
		(B +=> Z) = (`HS65_LS_OR3X18_B_R_Z_R_00,`HS65_LS_OR3X18_B_F_Z_F_00);
		(C +=> Z) = (`HS65_LS_OR3X18_C_R_Z_R_00,`HS65_LS_OR3X18_C_F_Z_F_00);


	endspecify

endmodule // HS65_LS_OR3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3X27_A_R_Z_R_00 0.1
`define HS65_LS_OR3X27_A_F_Z_F_00 0.1
`define HS65_LS_OR3X27_B_R_Z_R_00 0.1
`define HS65_LS_OR3X27_B_F_Z_F_00 0.1
`define HS65_LS_OR3X27_C_R_Z_R_00 0.1
`define HS65_LS_OR3X27_C_F_Z_F_00 0.1

module HS65_LS_OR3X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OR3X27_A_R_Z_R_00,`HS65_LS_OR3X27_A_F_Z_F_00);
		(B +=> Z) = (`HS65_LS_OR3X27_B_R_Z_R_00,`HS65_LS_OR3X27_B_F_Z_F_00);
		(C +=> Z) = (`HS65_LS_OR3X27_C_R_Z_R_00,`HS65_LS_OR3X27_C_F_Z_F_00);


	endspecify

endmodule // HS65_LS_OR3X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3X35_A_R_Z_R_00 0.1
`define HS65_LS_OR3X35_A_F_Z_F_00 0.1
`define HS65_LS_OR3X35_B_R_Z_R_00 0.1
`define HS65_LS_OR3X35_B_F_Z_F_00 0.1
`define HS65_LS_OR3X35_C_R_Z_R_00 0.1
`define HS65_LS_OR3X35_C_F_Z_F_00 0.1

module HS65_LS_OR3X35 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OR3X35_A_R_Z_R_00,`HS65_LS_OR3X35_A_F_Z_F_00);
		(B +=> Z) = (`HS65_LS_OR3X35_B_R_Z_R_00,`HS65_LS_OR3X35_B_F_Z_F_00);
		(C +=> Z) = (`HS65_LS_OR3X35_C_R_Z_R_00,`HS65_LS_OR3X35_C_F_Z_F_00);


	endspecify

endmodule // HS65_LS_OR3X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3X4_A_R_Z_R_00 0.1
`define HS65_LS_OR3X4_A_F_Z_F_00 0.1
`define HS65_LS_OR3X4_B_R_Z_R_00 0.1
`define HS65_LS_OR3X4_B_F_Z_F_00 0.1
`define HS65_LS_OR3X4_C_R_Z_R_00 0.1
`define HS65_LS_OR3X4_C_F_Z_F_00 0.1

module HS65_LS_OR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OR3X4_A_R_Z_R_00,`HS65_LS_OR3X4_A_F_Z_F_00);
		(B +=> Z) = (`HS65_LS_OR3X4_B_R_Z_R_00,`HS65_LS_OR3X4_B_F_Z_F_00);
		(C +=> Z) = (`HS65_LS_OR3X4_C_R_Z_R_00,`HS65_LS_OR3X4_C_F_Z_F_00);


	endspecify

endmodule // HS65_LS_OR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR3X9_A_R_Z_R_00 0.1
`define HS65_LS_OR3X9_A_F_Z_F_00 0.1
`define HS65_LS_OR3X9_B_R_Z_R_00 0.1
`define HS65_LS_OR3X9_B_F_Z_F_00 0.1
`define HS65_LS_OR3X9_C_R_Z_R_00 0.1
`define HS65_LS_OR3X9_C_F_Z_F_00 0.1

module HS65_LS_OR3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	or   #1 U1 (Z, A, B, C) ;



	specify

		(A +=> Z) = (`HS65_LS_OR3X9_A_R_Z_R_00,`HS65_LS_OR3X9_A_F_Z_F_00);
		(B +=> Z) = (`HS65_LS_OR3X9_B_R_Z_R_00,`HS65_LS_OR3X9_B_F_Z_F_00);
		(C +=> Z) = (`HS65_LS_OR3X9_C_R_Z_R_00,`HS65_LS_OR3X9_C_F_Z_F_00);


	endspecify

endmodule // HS65_LS_OR3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR4X14_A_R_Z_R_000 0.1
`define HS65_LS_OR4X14_A_F_Z_F_000 0.1
`define HS65_LS_OR4X14_B_R_Z_R_000 0.1
`define HS65_LS_OR4X14_B_F_Z_F_000 0.1
`define HS65_LS_OR4X14_C_R_Z_R_000 0.1
`define HS65_LS_OR4X14_C_F_Z_F_000 0.1
`define HS65_LS_OR4X14_D_R_Z_R_000 0.1
`define HS65_LS_OR4X14_D_F_Z_F_000 0.1

module HS65_LS_OR4X14 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OR4X14_A_R_Z_R_000,`HS65_LS_OR4X14_A_F_Z_F_000);
		(B +=> Z) = (`HS65_LS_OR4X14_B_R_Z_R_000,`HS65_LS_OR4X14_B_F_Z_F_000);
		(C +=> Z) = (`HS65_LS_OR4X14_C_R_Z_R_000,`HS65_LS_OR4X14_C_F_Z_F_000);
		(D +=> Z) = (`HS65_LS_OR4X14_D_R_Z_R_000,`HS65_LS_OR4X14_D_F_Z_F_000);


	endspecify

endmodule // HS65_LS_OR4X14

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR4X21_A_R_Z_R_000 0.1
`define HS65_LS_OR4X21_A_F_Z_F_000 0.1
`define HS65_LS_OR4X21_B_R_Z_R_000 0.1
`define HS65_LS_OR4X21_B_F_Z_F_000 0.1
`define HS65_LS_OR4X21_C_R_Z_R_000 0.1
`define HS65_LS_OR4X21_C_F_Z_F_000 0.1
`define HS65_LS_OR4X21_D_R_Z_R_000 0.1
`define HS65_LS_OR4X21_D_F_Z_F_000 0.1

module HS65_LS_OR4X21 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OR4X21_A_R_Z_R_000,`HS65_LS_OR4X21_A_F_Z_F_000);
		(B +=> Z) = (`HS65_LS_OR4X21_B_R_Z_R_000,`HS65_LS_OR4X21_B_F_Z_F_000);
		(C +=> Z) = (`HS65_LS_OR4X21_C_R_Z_R_000,`HS65_LS_OR4X21_C_F_Z_F_000);
		(D +=> Z) = (`HS65_LS_OR4X21_D_R_Z_R_000,`HS65_LS_OR4X21_D_F_Z_F_000);


	endspecify

endmodule // HS65_LS_OR4X21

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR4X29_A_R_Z_R_000 0.1
`define HS65_LS_OR4X29_A_F_Z_F_000 0.1
`define HS65_LS_OR4X29_B_R_Z_R_000 0.1
`define HS65_LS_OR4X29_B_F_Z_F_000 0.1
`define HS65_LS_OR4X29_C_R_Z_R_000 0.1
`define HS65_LS_OR4X29_C_F_Z_F_000 0.1
`define HS65_LS_OR4X29_D_R_Z_R_000 0.1
`define HS65_LS_OR4X29_D_F_Z_F_000 0.1

module HS65_LS_OR4X29 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OR4X29_A_R_Z_R_000,`HS65_LS_OR4X29_A_F_Z_F_000);
		(B +=> Z) = (`HS65_LS_OR4X29_B_R_Z_R_000,`HS65_LS_OR4X29_B_F_Z_F_000);
		(C +=> Z) = (`HS65_LS_OR4X29_C_R_Z_R_000,`HS65_LS_OR4X29_C_F_Z_F_000);
		(D +=> Z) = (`HS65_LS_OR4X29_D_R_Z_R_000,`HS65_LS_OR4X29_D_F_Z_F_000);


	endspecify

endmodule // HS65_LS_OR4X29

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR4X4_A_R_Z_R_000 0.1
`define HS65_LS_OR4X4_A_F_Z_F_000 0.1
`define HS65_LS_OR4X4_B_R_Z_R_000 0.1
`define HS65_LS_OR4X4_B_F_Z_F_000 0.1
`define HS65_LS_OR4X4_C_R_Z_R_000 0.1
`define HS65_LS_OR4X4_C_F_Z_F_000 0.1
`define HS65_LS_OR4X4_D_R_Z_R_000 0.1
`define HS65_LS_OR4X4_D_F_Z_F_000 0.1

module HS65_LS_OR4X4 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OR4X4_A_R_Z_R_000,`HS65_LS_OR4X4_A_F_Z_F_000);
		(B +=> Z) = (`HS65_LS_OR4X4_B_R_Z_R_000,`HS65_LS_OR4X4_B_F_Z_F_000);
		(C +=> Z) = (`HS65_LS_OR4X4_C_R_Z_R_000,`HS65_LS_OR4X4_C_F_Z_F_000);
		(D +=> Z) = (`HS65_LS_OR4X4_D_R_Z_R_000,`HS65_LS_OR4X4_D_F_Z_F_000);


	endspecify

endmodule // HS65_LS_OR4X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_OR4X7_A_R_Z_R_000 0.1
`define HS65_LS_OR4X7_A_F_Z_F_000 0.1
`define HS65_LS_OR4X7_B_R_Z_R_000 0.1
`define HS65_LS_OR4X7_B_F_Z_F_000 0.1
`define HS65_LS_OR4X7_C_R_Z_R_000 0.1
`define HS65_LS_OR4X7_C_F_Z_F_000 0.1
`define HS65_LS_OR4X7_D_R_Z_R_000 0.1
`define HS65_LS_OR4X7_D_F_Z_F_000 0.1

module HS65_LS_OR4X7 (Z, A, B, C, D);

	output Z;
	input A;
	input B;
	input C;
	input D;

	or   #1 U1 (Z, A, B, C, D) ;



	specify

		(A +=> Z) = (`HS65_LS_OR4X7_A_R_Z_R_000,`HS65_LS_OR4X7_A_F_Z_F_000);
		(B +=> Z) = (`HS65_LS_OR4X7_B_R_Z_R_000,`HS65_LS_OR4X7_B_F_Z_F_000);
		(C +=> Z) = (`HS65_LS_OR4X7_C_R_Z_R_000,`HS65_LS_OR4X7_C_F_Z_F_000);
		(D +=> Z) = (`HS65_LS_OR4X7_D_R_Z_R_000,`HS65_LS_OR4X7_D_F_Z_F_000);


	endspecify

endmodule // HS65_LS_OR4X7

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO2X18_A_R_Z_R_01 0.1
`define HS65_LS_PAO2X18_A_F_Z_F_01 0.1
`define HS65_LS_PAO2X18_A_R_Z_R_10 0.1
`define HS65_LS_PAO2X18_A_F_Z_F_10 0.1
`define HS65_LS_PAO2X18_B_R_Z_R_01 0.1
`define HS65_LS_PAO2X18_B_F_Z_F_01 0.1
`define HS65_LS_PAO2X18_B_R_Z_R_10 0.1
`define HS65_LS_PAO2X18_B_F_Z_F_10 0.1
`define HS65_LS_PAO2X18_P_R_Z_R_01 0.1
`define HS65_LS_PAO2X18_P_F_Z_F_01 0.1
`define HS65_LS_PAO2X18_P_R_Z_R_10 0.1
`define HS65_LS_PAO2X18_P_F_Z_F_10 0.1

module HS65_LS_PAO2X18 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	or    U1 (INTERNAL2, B, P) ;
	and    U2 (INTERNAL1, INTERNAL2, A) ;
	and    U3 (INTERNAL3, B, P) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && P) (A +=> Z) = (`HS65_LS_PAO2X18_A_R_Z_R_01,`HS65_LS_PAO2X18_A_F_Z_F_01);
		if (B && !P) (A +=> Z) = (`HS65_LS_PAO2X18_A_R_Z_R_10,`HS65_LS_PAO2X18_A_F_Z_F_10);
		if (!A && P) (B +=> Z) = (`HS65_LS_PAO2X18_B_R_Z_R_01,`HS65_LS_PAO2X18_B_F_Z_F_01);
		if (A && !P) (B +=> Z) = (`HS65_LS_PAO2X18_B_R_Z_R_10,`HS65_LS_PAO2X18_B_F_Z_F_10);
		if (!A && B) (P +=> Z) = (`HS65_LS_PAO2X18_P_R_Z_R_01,`HS65_LS_PAO2X18_P_F_Z_F_01);
		if (A && !B) (P +=> Z) = (`HS65_LS_PAO2X18_P_R_Z_R_10,`HS65_LS_PAO2X18_P_F_Z_F_10);


	endspecify

endmodule // HS65_LS_PAO2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO2X27_A_R_Z_R_01 0.1
`define HS65_LS_PAO2X27_A_F_Z_F_01 0.1
`define HS65_LS_PAO2X27_A_R_Z_R_10 0.1
`define HS65_LS_PAO2X27_A_F_Z_F_10 0.1
`define HS65_LS_PAO2X27_B_R_Z_R_01 0.1
`define HS65_LS_PAO2X27_B_F_Z_F_01 0.1
`define HS65_LS_PAO2X27_B_R_Z_R_10 0.1
`define HS65_LS_PAO2X27_B_F_Z_F_10 0.1
`define HS65_LS_PAO2X27_P_R_Z_R_01 0.1
`define HS65_LS_PAO2X27_P_F_Z_F_01 0.1
`define HS65_LS_PAO2X27_P_R_Z_R_10 0.1
`define HS65_LS_PAO2X27_P_F_Z_F_10 0.1

module HS65_LS_PAO2X27 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	or    U1 (INTERNAL2, B, P) ;
	and    U2 (INTERNAL1, INTERNAL2, A) ;
	and    U3 (INTERNAL3, B, P) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && P) (A +=> Z) = (`HS65_LS_PAO2X27_A_R_Z_R_01,`HS65_LS_PAO2X27_A_F_Z_F_01);
		if (B && !P) (A +=> Z) = (`HS65_LS_PAO2X27_A_R_Z_R_10,`HS65_LS_PAO2X27_A_F_Z_F_10);
		if (!A && P) (B +=> Z) = (`HS65_LS_PAO2X27_B_R_Z_R_01,`HS65_LS_PAO2X27_B_F_Z_F_01);
		if (A && !P) (B +=> Z) = (`HS65_LS_PAO2X27_B_R_Z_R_10,`HS65_LS_PAO2X27_B_F_Z_F_10);
		if (!A && B) (P +=> Z) = (`HS65_LS_PAO2X27_P_R_Z_R_01,`HS65_LS_PAO2X27_P_F_Z_F_01);
		if (A && !B) (P +=> Z) = (`HS65_LS_PAO2X27_P_R_Z_R_10,`HS65_LS_PAO2X27_P_F_Z_F_10);


	endspecify

endmodule // HS65_LS_PAO2X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO2X35_A_R_Z_R_01 0.1
`define HS65_LS_PAO2X35_A_F_Z_F_01 0.1
`define HS65_LS_PAO2X35_A_R_Z_R_10 0.1
`define HS65_LS_PAO2X35_A_F_Z_F_10 0.1
`define HS65_LS_PAO2X35_B_R_Z_R_01 0.1
`define HS65_LS_PAO2X35_B_F_Z_F_01 0.1
`define HS65_LS_PAO2X35_B_R_Z_R_10 0.1
`define HS65_LS_PAO2X35_B_F_Z_F_10 0.1
`define HS65_LS_PAO2X35_P_R_Z_R_01 0.1
`define HS65_LS_PAO2X35_P_F_Z_F_01 0.1
`define HS65_LS_PAO2X35_P_R_Z_R_10 0.1
`define HS65_LS_PAO2X35_P_F_Z_F_10 0.1

module HS65_LS_PAO2X35 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	or    U1 (INTERNAL2, B, P) ;
	and    U2 (INTERNAL1, INTERNAL2, A) ;
	and    U3 (INTERNAL3, B, P) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && P) (A +=> Z) = (`HS65_LS_PAO2X35_A_R_Z_R_01,`HS65_LS_PAO2X35_A_F_Z_F_01);
		if (B && !P) (A +=> Z) = (`HS65_LS_PAO2X35_A_R_Z_R_10,`HS65_LS_PAO2X35_A_F_Z_F_10);
		if (!A && P) (B +=> Z) = (`HS65_LS_PAO2X35_B_R_Z_R_01,`HS65_LS_PAO2X35_B_F_Z_F_01);
		if (A && !P) (B +=> Z) = (`HS65_LS_PAO2X35_B_R_Z_R_10,`HS65_LS_PAO2X35_B_F_Z_F_10);
		if (!A && B) (P +=> Z) = (`HS65_LS_PAO2X35_P_R_Z_R_01,`HS65_LS_PAO2X35_P_F_Z_F_01);
		if (A && !B) (P +=> Z) = (`HS65_LS_PAO2X35_P_R_Z_R_10,`HS65_LS_PAO2X35_P_F_Z_F_10);


	endspecify

endmodule // HS65_LS_PAO2X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO2X4_A_R_Z_R_01 0.1
`define HS65_LS_PAO2X4_A_F_Z_F_01 0.1
`define HS65_LS_PAO2X4_A_R_Z_R_10 0.1
`define HS65_LS_PAO2X4_A_F_Z_F_10 0.1
`define HS65_LS_PAO2X4_B_R_Z_R_01 0.1
`define HS65_LS_PAO2X4_B_F_Z_F_01 0.1
`define HS65_LS_PAO2X4_B_R_Z_R_10 0.1
`define HS65_LS_PAO2X4_B_F_Z_F_10 0.1
`define HS65_LS_PAO2X4_P_R_Z_R_01 0.1
`define HS65_LS_PAO2X4_P_F_Z_F_01 0.1
`define HS65_LS_PAO2X4_P_R_Z_R_10 0.1
`define HS65_LS_PAO2X4_P_F_Z_F_10 0.1

module HS65_LS_PAO2X4 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	or    U1 (INTERNAL2, B, P) ;
	and    U2 (INTERNAL1, INTERNAL2, A) ;
	and    U3 (INTERNAL3, B, P) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && P) (A +=> Z) = (`HS65_LS_PAO2X4_A_R_Z_R_01,`HS65_LS_PAO2X4_A_F_Z_F_01);
		if (B && !P) (A +=> Z) = (`HS65_LS_PAO2X4_A_R_Z_R_10,`HS65_LS_PAO2X4_A_F_Z_F_10);
		if (!A && P) (B +=> Z) = (`HS65_LS_PAO2X4_B_R_Z_R_01,`HS65_LS_PAO2X4_B_F_Z_F_01);
		if (A && !P) (B +=> Z) = (`HS65_LS_PAO2X4_B_R_Z_R_10,`HS65_LS_PAO2X4_B_F_Z_F_10);
		if (!A && B) (P +=> Z) = (`HS65_LS_PAO2X4_P_R_Z_R_01,`HS65_LS_PAO2X4_P_F_Z_F_01);
		if (A && !B) (P +=> Z) = (`HS65_LS_PAO2X4_P_R_Z_R_10,`HS65_LS_PAO2X4_P_F_Z_F_10);


	endspecify

endmodule // HS65_LS_PAO2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO2X9_A_R_Z_R_01 0.1
`define HS65_LS_PAO2X9_A_F_Z_F_01 0.1
`define HS65_LS_PAO2X9_A_R_Z_R_10 0.1
`define HS65_LS_PAO2X9_A_F_Z_F_10 0.1
`define HS65_LS_PAO2X9_B_R_Z_R_01 0.1
`define HS65_LS_PAO2X9_B_F_Z_F_01 0.1
`define HS65_LS_PAO2X9_B_R_Z_R_10 0.1
`define HS65_LS_PAO2X9_B_F_Z_F_10 0.1
`define HS65_LS_PAO2X9_P_R_Z_R_01 0.1
`define HS65_LS_PAO2X9_P_F_Z_F_01 0.1
`define HS65_LS_PAO2X9_P_R_Z_R_10 0.1
`define HS65_LS_PAO2X9_P_F_Z_F_10 0.1

module HS65_LS_PAO2X9 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	or    U1 (INTERNAL2, B, P) ;
	and    U2 (INTERNAL1, INTERNAL2, A) ;
	and    U3 (INTERNAL3, B, P) ;
	or   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && P) (A +=> Z) = (`HS65_LS_PAO2X9_A_R_Z_R_01,`HS65_LS_PAO2X9_A_F_Z_F_01);
		if (B && !P) (A +=> Z) = (`HS65_LS_PAO2X9_A_R_Z_R_10,`HS65_LS_PAO2X9_A_F_Z_F_10);
		if (!A && P) (B +=> Z) = (`HS65_LS_PAO2X9_B_R_Z_R_01,`HS65_LS_PAO2X9_B_F_Z_F_01);
		if (A && !P) (B +=> Z) = (`HS65_LS_PAO2X9_B_R_Z_R_10,`HS65_LS_PAO2X9_B_F_Z_F_10);
		if (!A && B) (P +=> Z) = (`HS65_LS_PAO2X9_P_R_Z_R_01,`HS65_LS_PAO2X9_P_F_Z_F_01);
		if (A && !B) (P +=> Z) = (`HS65_LS_PAO2X9_P_R_Z_R_10,`HS65_LS_PAO2X9_P_F_Z_F_10);


	endspecify

endmodule // HS65_LS_PAO2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO3X18_A_R_Z_R_001 0.1
`define HS65_LS_PAO3X18_A_F_Z_F_001 0.1
`define HS65_LS_PAO3X18_A_R_Z_R_110 0.1
`define HS65_LS_PAO3X18_A_F_Z_F_110 0.1
`define HS65_LS_PAO3X18_B_R_Z_R_001 0.1
`define HS65_LS_PAO3X18_B_F_Z_F_001 0.1
`define HS65_LS_PAO3X18_B_R_Z_R_110 0.1
`define HS65_LS_PAO3X18_B_F_Z_F_110 0.1
`define HS65_LS_PAO3X18_C_R_Z_R_001 0.1
`define HS65_LS_PAO3X18_C_F_Z_F_001 0.1
`define HS65_LS_PAO3X18_C_R_Z_R_110 0.1
`define HS65_LS_PAO3X18_C_F_Z_F_110 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_101 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_101 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_110 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_110 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_100 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_100 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_001 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_001 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_010 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_010 0.1
`define HS65_LS_PAO3X18_P_R_Z_R_011 0.1
`define HS65_LS_PAO3X18_P_F_Z_F_011 0.1

module HS65_LS_PAO3X18 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, P) ;
	or    U3 (INTERNAL3, A, B, C) ;
	and   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && !C && P) (A +=> Z) = (`HS65_LS_PAO3X18_A_R_Z_R_001,`HS65_LS_PAO3X18_A_F_Z_F_001);
		if (B && C && !P) (A +=> Z) = (`HS65_LS_PAO3X18_A_R_Z_R_110,`HS65_LS_PAO3X18_A_F_Z_F_110);
		if (!A && !C && P) (B +=> Z) = (`HS65_LS_PAO3X18_B_R_Z_R_001,`HS65_LS_PAO3X18_B_F_Z_F_001);
		if (A && C && !P) (B +=> Z) = (`HS65_LS_PAO3X18_B_R_Z_R_110,`HS65_LS_PAO3X18_B_F_Z_F_110);
		if (!A && !B && P) (C +=> Z) = (`HS65_LS_PAO3X18_C_R_Z_R_001,`HS65_LS_PAO3X18_C_F_Z_F_001);
		if (A && B && !P) (C +=> Z) = (`HS65_LS_PAO3X18_C_R_Z_R_110,`HS65_LS_PAO3X18_C_F_Z_F_110);
		if (A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_101,`HS65_LS_PAO3X18_P_F_Z_F_101);
		if (A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_110,`HS65_LS_PAO3X18_P_F_Z_F_110);
		if (A && !B && !C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_100,`HS65_LS_PAO3X18_P_F_Z_F_100);
		if (!A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_001,`HS65_LS_PAO3X18_P_F_Z_F_001);
		if (!A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_010,`HS65_LS_PAO3X18_P_F_Z_F_010);
		if (!A && B && C) (P +=> Z) = (`HS65_LS_PAO3X18_P_R_Z_R_011,`HS65_LS_PAO3X18_P_F_Z_F_011);


	endspecify

endmodule // HS65_LS_PAO3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO3X27_A_R_Z_R_001 0.1
`define HS65_LS_PAO3X27_A_F_Z_F_001 0.1
`define HS65_LS_PAO3X27_A_R_Z_R_110 0.1
`define HS65_LS_PAO3X27_A_F_Z_F_110 0.1
`define HS65_LS_PAO3X27_B_R_Z_R_001 0.1
`define HS65_LS_PAO3X27_B_F_Z_F_001 0.1
`define HS65_LS_PAO3X27_B_R_Z_R_110 0.1
`define HS65_LS_PAO3X27_B_F_Z_F_110 0.1
`define HS65_LS_PAO3X27_C_R_Z_R_001 0.1
`define HS65_LS_PAO3X27_C_F_Z_F_001 0.1
`define HS65_LS_PAO3X27_C_R_Z_R_110 0.1
`define HS65_LS_PAO3X27_C_F_Z_F_110 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_101 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_101 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_110 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_110 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_100 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_100 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_001 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_001 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_010 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_010 0.1
`define HS65_LS_PAO3X27_P_R_Z_R_011 0.1
`define HS65_LS_PAO3X27_P_F_Z_F_011 0.1

module HS65_LS_PAO3X27 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, P) ;
	or    U3 (INTERNAL3, A, B, C) ;
	and   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && !C && P) (A +=> Z) = (`HS65_LS_PAO3X27_A_R_Z_R_001,`HS65_LS_PAO3X27_A_F_Z_F_001);
		if (B && C && !P) (A +=> Z) = (`HS65_LS_PAO3X27_A_R_Z_R_110,`HS65_LS_PAO3X27_A_F_Z_F_110);
		if (!A && !C && P) (B +=> Z) = (`HS65_LS_PAO3X27_B_R_Z_R_001,`HS65_LS_PAO3X27_B_F_Z_F_001);
		if (A && C && !P) (B +=> Z) = (`HS65_LS_PAO3X27_B_R_Z_R_110,`HS65_LS_PAO3X27_B_F_Z_F_110);
		if (!A && !B && P) (C +=> Z) = (`HS65_LS_PAO3X27_C_R_Z_R_001,`HS65_LS_PAO3X27_C_F_Z_F_001);
		if (A && B && !P) (C +=> Z) = (`HS65_LS_PAO3X27_C_R_Z_R_110,`HS65_LS_PAO3X27_C_F_Z_F_110);
		if (A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_101,`HS65_LS_PAO3X27_P_F_Z_F_101);
		if (A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_110,`HS65_LS_PAO3X27_P_F_Z_F_110);
		if (A && !B && !C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_100,`HS65_LS_PAO3X27_P_F_Z_F_100);
		if (!A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_001,`HS65_LS_PAO3X27_P_F_Z_F_001);
		if (!A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_010,`HS65_LS_PAO3X27_P_F_Z_F_010);
		if (!A && B && C) (P +=> Z) = (`HS65_LS_PAO3X27_P_R_Z_R_011,`HS65_LS_PAO3X27_P_F_Z_F_011);


	endspecify

endmodule // HS65_LS_PAO3X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO3X35_A_R_Z_R_001 0.1
`define HS65_LS_PAO3X35_A_F_Z_F_001 0.1
`define HS65_LS_PAO3X35_A_R_Z_R_110 0.1
`define HS65_LS_PAO3X35_A_F_Z_F_110 0.1
`define HS65_LS_PAO3X35_B_R_Z_R_001 0.1
`define HS65_LS_PAO3X35_B_F_Z_F_001 0.1
`define HS65_LS_PAO3X35_B_R_Z_R_110 0.1
`define HS65_LS_PAO3X35_B_F_Z_F_110 0.1
`define HS65_LS_PAO3X35_C_R_Z_R_001 0.1
`define HS65_LS_PAO3X35_C_F_Z_F_001 0.1
`define HS65_LS_PAO3X35_C_R_Z_R_110 0.1
`define HS65_LS_PAO3X35_C_F_Z_F_110 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_101 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_101 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_110 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_110 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_100 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_100 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_001 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_001 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_010 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_010 0.1
`define HS65_LS_PAO3X35_P_R_Z_R_011 0.1
`define HS65_LS_PAO3X35_P_F_Z_F_011 0.1

module HS65_LS_PAO3X35 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, P) ;
	or    U3 (INTERNAL3, A, B, C) ;
	and   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && !C && P) (A +=> Z) = (`HS65_LS_PAO3X35_A_R_Z_R_001,`HS65_LS_PAO3X35_A_F_Z_F_001);
		if (B && C && !P) (A +=> Z) = (`HS65_LS_PAO3X35_A_R_Z_R_110,`HS65_LS_PAO3X35_A_F_Z_F_110);
		if (!A && !C && P) (B +=> Z) = (`HS65_LS_PAO3X35_B_R_Z_R_001,`HS65_LS_PAO3X35_B_F_Z_F_001);
		if (A && C && !P) (B +=> Z) = (`HS65_LS_PAO3X35_B_R_Z_R_110,`HS65_LS_PAO3X35_B_F_Z_F_110);
		if (!A && !B && P) (C +=> Z) = (`HS65_LS_PAO3X35_C_R_Z_R_001,`HS65_LS_PAO3X35_C_F_Z_F_001);
		if (A && B && !P) (C +=> Z) = (`HS65_LS_PAO3X35_C_R_Z_R_110,`HS65_LS_PAO3X35_C_F_Z_F_110);
		if (A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_101,`HS65_LS_PAO3X35_P_F_Z_F_101);
		if (A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_110,`HS65_LS_PAO3X35_P_F_Z_F_110);
		if (A && !B && !C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_100,`HS65_LS_PAO3X35_P_F_Z_F_100);
		if (!A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_001,`HS65_LS_PAO3X35_P_F_Z_F_001);
		if (!A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_010,`HS65_LS_PAO3X35_P_F_Z_F_010);
		if (!A && B && C) (P +=> Z) = (`HS65_LS_PAO3X35_P_R_Z_R_011,`HS65_LS_PAO3X35_P_F_Z_F_011);


	endspecify

endmodule // HS65_LS_PAO3X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO3X4_A_R_Z_R_001 0.1
`define HS65_LS_PAO3X4_A_F_Z_F_001 0.1
`define HS65_LS_PAO3X4_A_R_Z_R_110 0.1
`define HS65_LS_PAO3X4_A_F_Z_F_110 0.1
`define HS65_LS_PAO3X4_B_R_Z_R_001 0.1
`define HS65_LS_PAO3X4_B_F_Z_F_001 0.1
`define HS65_LS_PAO3X4_B_R_Z_R_110 0.1
`define HS65_LS_PAO3X4_B_F_Z_F_110 0.1
`define HS65_LS_PAO3X4_C_R_Z_R_001 0.1
`define HS65_LS_PAO3X4_C_F_Z_F_001 0.1
`define HS65_LS_PAO3X4_C_R_Z_R_110 0.1
`define HS65_LS_PAO3X4_C_F_Z_F_110 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_101 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_101 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_110 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_110 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_100 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_100 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_001 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_001 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_010 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_010 0.1
`define HS65_LS_PAO3X4_P_R_Z_R_011 0.1
`define HS65_LS_PAO3X4_P_F_Z_F_011 0.1

module HS65_LS_PAO3X4 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, P) ;
	or    U3 (INTERNAL3, A, B, C) ;
	and   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && !C && P) (A +=> Z) = (`HS65_LS_PAO3X4_A_R_Z_R_001,`HS65_LS_PAO3X4_A_F_Z_F_001);
		if (B && C && !P) (A +=> Z) = (`HS65_LS_PAO3X4_A_R_Z_R_110,`HS65_LS_PAO3X4_A_F_Z_F_110);
		if (!A && !C && P) (B +=> Z) = (`HS65_LS_PAO3X4_B_R_Z_R_001,`HS65_LS_PAO3X4_B_F_Z_F_001);
		if (A && C && !P) (B +=> Z) = (`HS65_LS_PAO3X4_B_R_Z_R_110,`HS65_LS_PAO3X4_B_F_Z_F_110);
		if (!A && !B && P) (C +=> Z) = (`HS65_LS_PAO3X4_C_R_Z_R_001,`HS65_LS_PAO3X4_C_F_Z_F_001);
		if (A && B && !P) (C +=> Z) = (`HS65_LS_PAO3X4_C_R_Z_R_110,`HS65_LS_PAO3X4_C_F_Z_F_110);
		if (A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_101,`HS65_LS_PAO3X4_P_F_Z_F_101);
		if (A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_110,`HS65_LS_PAO3X4_P_F_Z_F_110);
		if (A && !B && !C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_100,`HS65_LS_PAO3X4_P_F_Z_F_100);
		if (!A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_001,`HS65_LS_PAO3X4_P_F_Z_F_001);
		if (!A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_010,`HS65_LS_PAO3X4_P_F_Z_F_010);
		if (!A && B && C) (P +=> Z) = (`HS65_LS_PAO3X4_P_R_Z_R_011,`HS65_LS_PAO3X4_P_F_Z_F_011);


	endspecify

endmodule // HS65_LS_PAO3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAO3X9_A_R_Z_R_001 0.1
`define HS65_LS_PAO3X9_A_F_Z_F_001 0.1
`define HS65_LS_PAO3X9_A_R_Z_R_110 0.1
`define HS65_LS_PAO3X9_A_F_Z_F_110 0.1
`define HS65_LS_PAO3X9_B_R_Z_R_001 0.1
`define HS65_LS_PAO3X9_B_F_Z_F_001 0.1
`define HS65_LS_PAO3X9_B_R_Z_R_110 0.1
`define HS65_LS_PAO3X9_B_F_Z_F_110 0.1
`define HS65_LS_PAO3X9_C_R_Z_R_001 0.1
`define HS65_LS_PAO3X9_C_F_Z_F_001 0.1
`define HS65_LS_PAO3X9_C_R_Z_R_110 0.1
`define HS65_LS_PAO3X9_C_F_Z_F_110 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_101 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_101 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_110 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_110 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_100 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_100 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_001 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_001 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_010 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_010 0.1
`define HS65_LS_PAO3X9_P_R_Z_R_011 0.1
`define HS65_LS_PAO3X9_P_F_Z_F_011 0.1

module HS65_LS_PAO3X9 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL2, A, B, C) ;
	or    U2 (INTERNAL1, INTERNAL2, P) ;
	or    U3 (INTERNAL3, A, B, C) ;
	and   #1 U4 (Z, INTERNAL1, INTERNAL3) ;



	specify

		if (!B && !C && P) (A +=> Z) = (`HS65_LS_PAO3X9_A_R_Z_R_001,`HS65_LS_PAO3X9_A_F_Z_F_001);
		if (B && C && !P) (A +=> Z) = (`HS65_LS_PAO3X9_A_R_Z_R_110,`HS65_LS_PAO3X9_A_F_Z_F_110);
		if (!A && !C && P) (B +=> Z) = (`HS65_LS_PAO3X9_B_R_Z_R_001,`HS65_LS_PAO3X9_B_F_Z_F_001);
		if (A && C && !P) (B +=> Z) = (`HS65_LS_PAO3X9_B_R_Z_R_110,`HS65_LS_PAO3X9_B_F_Z_F_110);
		if (!A && !B && P) (C +=> Z) = (`HS65_LS_PAO3X9_C_R_Z_R_001,`HS65_LS_PAO3X9_C_F_Z_F_001);
		if (A && B && !P) (C +=> Z) = (`HS65_LS_PAO3X9_C_R_Z_R_110,`HS65_LS_PAO3X9_C_F_Z_F_110);
		if (A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_101,`HS65_LS_PAO3X9_P_F_Z_F_101);
		if (A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_110,`HS65_LS_PAO3X9_P_F_Z_F_110);
		if (A && !B && !C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_100,`HS65_LS_PAO3X9_P_F_Z_F_100);
		if (!A && !B && C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_001,`HS65_LS_PAO3X9_P_F_Z_F_001);
		if (!A && B && !C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_010,`HS65_LS_PAO3X9_P_F_Z_F_010);
		if (!A && B && C) (P +=> Z) = (`HS65_LS_PAO3X9_P_R_Z_R_011,`HS65_LS_PAO3X9_P_F_Z_F_011);


	endspecify

endmodule // HS65_LS_PAO3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X1_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X1_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X1_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X1_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X1_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X1_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X1_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X1_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X1_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X1_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X1_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X1_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X1 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X1_A_F_Z_R_01,`HS65_LS_PAOI2X1_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X1_A_F_Z_R_10,`HS65_LS_PAOI2X1_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X1_B_F_Z_R_01,`HS65_LS_PAOI2X1_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X1_B_F_Z_R_10,`HS65_LS_PAOI2X1_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X1_P_F_Z_R_01,`HS65_LS_PAOI2X1_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X1_P_F_Z_R_10,`HS65_LS_PAOI2X1_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X11_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X11_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X11_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X11_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X11_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X11_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X11_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X11_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X11_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X11_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X11_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X11_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X11 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X11_A_F_Z_R_01,`HS65_LS_PAOI2X11_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X11_A_F_Z_R_10,`HS65_LS_PAOI2X11_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X11_B_F_Z_R_01,`HS65_LS_PAOI2X11_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X11_B_F_Z_R_10,`HS65_LS_PAOI2X11_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X11_P_F_Z_R_01,`HS65_LS_PAOI2X11_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X11_P_F_Z_R_10,`HS65_LS_PAOI2X11_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X11

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X17_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X17_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X17_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X17_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X17_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X17_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X17_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X17_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X17_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X17_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X17_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X17_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X17 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X17_A_F_Z_R_01,`HS65_LS_PAOI2X17_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X17_A_F_Z_R_10,`HS65_LS_PAOI2X17_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X17_B_F_Z_R_01,`HS65_LS_PAOI2X17_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X17_B_F_Z_R_10,`HS65_LS_PAOI2X17_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X17_P_F_Z_R_01,`HS65_LS_PAOI2X17_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X17_P_F_Z_R_10,`HS65_LS_PAOI2X17_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X17

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X22_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X22_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X22_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X22_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X22_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X22_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X22_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X22_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X22_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X22_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X22_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X22_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X22 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X22_A_F_Z_R_01,`HS65_LS_PAOI2X22_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X22_A_F_Z_R_10,`HS65_LS_PAOI2X22_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X22_B_F_Z_R_01,`HS65_LS_PAOI2X22_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X22_B_F_Z_R_10,`HS65_LS_PAOI2X22_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X22_P_F_Z_R_01,`HS65_LS_PAOI2X22_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X22_P_F_Z_R_10,`HS65_LS_PAOI2X22_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X22

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X3_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X3_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X3_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X3_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X3_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X3_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X3_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X3_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X3_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X3_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X3_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X3_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X3 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X3_A_F_Z_R_01,`HS65_LS_PAOI2X3_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X3_A_F_Z_R_10,`HS65_LS_PAOI2X3_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X3_B_F_Z_R_01,`HS65_LS_PAOI2X3_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X3_B_F_Z_R_10,`HS65_LS_PAOI2X3_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X3_P_F_Z_R_01,`HS65_LS_PAOI2X3_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X3_P_F_Z_R_10,`HS65_LS_PAOI2X3_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X33_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X33_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X33_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X33_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X33_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X33_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X33_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X33_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X33_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X33_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X33_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X33_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X33 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X33_A_F_Z_R_01,`HS65_LS_PAOI2X33_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X33_A_F_Z_R_10,`HS65_LS_PAOI2X33_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X33_B_F_Z_R_01,`HS65_LS_PAOI2X33_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X33_B_F_Z_R_10,`HS65_LS_PAOI2X33_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X33_P_F_Z_R_01,`HS65_LS_PAOI2X33_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X33_P_F_Z_R_10,`HS65_LS_PAOI2X33_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X4_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X4_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X4_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X4_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X4_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X4_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X4_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X4_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X4_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X4_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X4_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X4_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X4 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X4_A_F_Z_R_01,`HS65_LS_PAOI2X4_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X4_A_F_Z_R_10,`HS65_LS_PAOI2X4_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X4_B_F_Z_R_01,`HS65_LS_PAOI2X4_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X4_B_F_Z_R_10,`HS65_LS_PAOI2X4_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X4_P_F_Z_R_01,`HS65_LS_PAOI2X4_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X4_P_F_Z_R_10,`HS65_LS_PAOI2X4_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X44_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X44_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X44_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X44_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X44_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X44_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X44_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X44_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X44_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X44_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X44_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X44_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X44 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X44_A_F_Z_R_01,`HS65_LS_PAOI2X44_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X44_A_F_Z_R_10,`HS65_LS_PAOI2X44_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X44_B_F_Z_R_01,`HS65_LS_PAOI2X44_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X44_B_F_Z_R_10,`HS65_LS_PAOI2X44_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X44_P_F_Z_R_01,`HS65_LS_PAOI2X44_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X44_P_F_Z_R_10,`HS65_LS_PAOI2X44_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X44

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X6_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X6_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X6_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X6_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X6_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X6_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X6_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X6_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X6_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X6_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X6_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X6_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X6 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X6_A_F_Z_R_01,`HS65_LS_PAOI2X6_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X6_A_F_Z_R_10,`HS65_LS_PAOI2X6_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X6_B_F_Z_R_01,`HS65_LS_PAOI2X6_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X6_B_F_Z_R_10,`HS65_LS_PAOI2X6_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X6_P_F_Z_R_01,`HS65_LS_PAOI2X6_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X6_P_F_Z_R_10,`HS65_LS_PAOI2X6_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI2X8_A_R_Z_F_01 0.1
`define HS65_LS_PAOI2X8_A_F_Z_R_01 0.1
`define HS65_LS_PAOI2X8_A_R_Z_F_10 0.1
`define HS65_LS_PAOI2X8_A_F_Z_R_10 0.1
`define HS65_LS_PAOI2X8_B_R_Z_F_01 0.1
`define HS65_LS_PAOI2X8_B_F_Z_R_01 0.1
`define HS65_LS_PAOI2X8_B_R_Z_F_10 0.1
`define HS65_LS_PAOI2X8_B_F_Z_R_10 0.1
`define HS65_LS_PAOI2X8_P_R_Z_F_01 0.1
`define HS65_LS_PAOI2X8_P_F_Z_R_01 0.1
`define HS65_LS_PAOI2X8_P_R_Z_F_10 0.1
`define HS65_LS_PAOI2X8_P_F_Z_R_10 0.1

module HS65_LS_PAOI2X8 (Z, A, B, P);

	output Z;
	input A;
	input B;
	input P;

	and    U1 (INTERNAL3, A, B) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && P) (A -=> Z) = (`HS65_LS_PAOI2X8_A_F_Z_R_01,`HS65_LS_PAOI2X8_A_R_Z_F_01);
		if (B && !P) (A -=> Z) = (`HS65_LS_PAOI2X8_A_F_Z_R_10,`HS65_LS_PAOI2X8_A_R_Z_F_10);
		if (!A && P) (B -=> Z) = (`HS65_LS_PAOI2X8_B_F_Z_R_01,`HS65_LS_PAOI2X8_B_R_Z_F_01);
		if (A && !P) (B -=> Z) = (`HS65_LS_PAOI2X8_B_F_Z_R_10,`HS65_LS_PAOI2X8_B_R_Z_F_10);
		if (!A && B) (P -=> Z) = (`HS65_LS_PAOI2X8_P_F_Z_R_01,`HS65_LS_PAOI2X8_P_R_Z_F_01);
		if (A && !B) (P -=> Z) = (`HS65_LS_PAOI2X8_P_F_Z_R_10,`HS65_LS_PAOI2X8_P_R_Z_F_10);


	endspecify

endmodule // HS65_LS_PAOI2X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X1_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X1_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X1_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X1_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X1_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X1_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X1_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X1_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X1_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X1_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X1_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X1_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X1_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X1_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X1 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X1_A_F_Z_R_001,`HS65_LS_PAOI3X1_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X1_A_F_Z_R_110,`HS65_LS_PAOI3X1_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X1_B_F_Z_R_001,`HS65_LS_PAOI3X1_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X1_B_F_Z_R_110,`HS65_LS_PAOI3X1_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X1_C_F_Z_R_001,`HS65_LS_PAOI3X1_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X1_C_F_Z_R_110,`HS65_LS_PAOI3X1_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_101,`HS65_LS_PAOI3X1_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_110,`HS65_LS_PAOI3X1_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_100,`HS65_LS_PAOI3X1_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_001,`HS65_LS_PAOI3X1_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_010,`HS65_LS_PAOI3X1_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X1_P_F_Z_R_011,`HS65_LS_PAOI3X1_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X1

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X12_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X12_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X12_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X12_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X12_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X12_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X12_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X12_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X12_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X12_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X12_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X12_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X12_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X12_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X12 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X12_A_F_Z_R_001,`HS65_LS_PAOI3X12_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X12_A_F_Z_R_110,`HS65_LS_PAOI3X12_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X12_B_F_Z_R_001,`HS65_LS_PAOI3X12_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X12_B_F_Z_R_110,`HS65_LS_PAOI3X12_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X12_C_F_Z_R_001,`HS65_LS_PAOI3X12_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X12_C_F_Z_R_110,`HS65_LS_PAOI3X12_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_101,`HS65_LS_PAOI3X12_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_110,`HS65_LS_PAOI3X12_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_100,`HS65_LS_PAOI3X12_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_001,`HS65_LS_PAOI3X12_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_010,`HS65_LS_PAOI3X12_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X12_P_F_Z_R_011,`HS65_LS_PAOI3X12_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X12

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X16_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X16_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X16_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X16_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X16_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X16_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X16_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X16_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X16_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X16_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X16_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X16_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X16_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X16_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X16 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X16_A_F_Z_R_001,`HS65_LS_PAOI3X16_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X16_A_F_Z_R_110,`HS65_LS_PAOI3X16_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X16_B_F_Z_R_001,`HS65_LS_PAOI3X16_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X16_B_F_Z_R_110,`HS65_LS_PAOI3X16_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X16_C_F_Z_R_001,`HS65_LS_PAOI3X16_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X16_C_F_Z_R_110,`HS65_LS_PAOI3X16_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_101,`HS65_LS_PAOI3X16_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_110,`HS65_LS_PAOI3X16_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_100,`HS65_LS_PAOI3X16_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_001,`HS65_LS_PAOI3X16_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_010,`HS65_LS_PAOI3X16_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X16_P_F_Z_R_011,`HS65_LS_PAOI3X16_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X16

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X2_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X2_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X2_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X2_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X2_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X2_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X2_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X2_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X2_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X2_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X2_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X2_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X2_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X2_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X2 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X2_A_F_Z_R_001,`HS65_LS_PAOI3X2_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X2_A_F_Z_R_110,`HS65_LS_PAOI3X2_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X2_B_F_Z_R_001,`HS65_LS_PAOI3X2_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X2_B_F_Z_R_110,`HS65_LS_PAOI3X2_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X2_C_F_Z_R_001,`HS65_LS_PAOI3X2_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X2_C_F_Z_R_110,`HS65_LS_PAOI3X2_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_101,`HS65_LS_PAOI3X2_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_110,`HS65_LS_PAOI3X2_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_100,`HS65_LS_PAOI3X2_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_001,`HS65_LS_PAOI3X2_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_010,`HS65_LS_PAOI3X2_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X2_P_F_Z_R_011,`HS65_LS_PAOI3X2_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X2

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X24_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X24_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X24_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X24_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X24_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X24_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X24_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X24_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X24_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X24_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X24_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X24_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X24_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X24_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X24 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X24_A_F_Z_R_001,`HS65_LS_PAOI3X24_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X24_A_F_Z_R_110,`HS65_LS_PAOI3X24_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X24_B_F_Z_R_001,`HS65_LS_PAOI3X24_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X24_B_F_Z_R_110,`HS65_LS_PAOI3X24_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X24_C_F_Z_R_001,`HS65_LS_PAOI3X24_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X24_C_F_Z_R_110,`HS65_LS_PAOI3X24_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_101,`HS65_LS_PAOI3X24_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_110,`HS65_LS_PAOI3X24_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_100,`HS65_LS_PAOI3X24_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_001,`HS65_LS_PAOI3X24_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_010,`HS65_LS_PAOI3X24_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X24_P_F_Z_R_011,`HS65_LS_PAOI3X24_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X24

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X3_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X3_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X3_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X3_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X3_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X3_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X3_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X3_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X3_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X3_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X3_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X3_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X3_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X3_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X3 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X3_A_F_Z_R_001,`HS65_LS_PAOI3X3_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X3_A_F_Z_R_110,`HS65_LS_PAOI3X3_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X3_B_F_Z_R_001,`HS65_LS_PAOI3X3_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X3_B_F_Z_R_110,`HS65_LS_PAOI3X3_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X3_C_F_Z_R_001,`HS65_LS_PAOI3X3_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X3_C_F_Z_R_110,`HS65_LS_PAOI3X3_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_101,`HS65_LS_PAOI3X3_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_110,`HS65_LS_PAOI3X3_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_100,`HS65_LS_PAOI3X3_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_001,`HS65_LS_PAOI3X3_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_010,`HS65_LS_PAOI3X3_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X3_P_F_Z_R_011,`HS65_LS_PAOI3X3_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X3

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X33_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X33_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X33_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X33_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X33_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X33_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X33_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X33_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X33_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X33_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X33_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X33_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X33_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X33_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X33 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X33_A_F_Z_R_001,`HS65_LS_PAOI3X33_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X33_A_F_Z_R_110,`HS65_LS_PAOI3X33_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X33_B_F_Z_R_001,`HS65_LS_PAOI3X33_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X33_B_F_Z_R_110,`HS65_LS_PAOI3X33_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X33_C_F_Z_R_001,`HS65_LS_PAOI3X33_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X33_C_F_Z_R_110,`HS65_LS_PAOI3X33_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_101,`HS65_LS_PAOI3X33_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_110,`HS65_LS_PAOI3X33_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_100,`HS65_LS_PAOI3X33_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_001,`HS65_LS_PAOI3X33_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_010,`HS65_LS_PAOI3X33_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X33_P_F_Z_R_011,`HS65_LS_PAOI3X33_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X33

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X4_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X4_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X4_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X4_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X4_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X4_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X4_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X4_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X4_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X4_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X4_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X4_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X4_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X4_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X4 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X4_A_F_Z_R_001,`HS65_LS_PAOI3X4_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X4_A_F_Z_R_110,`HS65_LS_PAOI3X4_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X4_B_F_Z_R_001,`HS65_LS_PAOI3X4_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X4_B_F_Z_R_110,`HS65_LS_PAOI3X4_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X4_C_F_Z_R_001,`HS65_LS_PAOI3X4_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X4_C_F_Z_R_110,`HS65_LS_PAOI3X4_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_101,`HS65_LS_PAOI3X4_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_110,`HS65_LS_PAOI3X4_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_100,`HS65_LS_PAOI3X4_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_001,`HS65_LS_PAOI3X4_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_010,`HS65_LS_PAOI3X4_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X4_P_F_Z_R_011,`HS65_LS_PAOI3X4_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X6_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X6_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X6_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X6_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X6_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X6_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X6_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X6_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X6_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X6_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X6_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X6_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X6_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X6_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X6 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X6_A_F_Z_R_001,`HS65_LS_PAOI3X6_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X6_A_F_Z_R_110,`HS65_LS_PAOI3X6_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X6_B_F_Z_R_001,`HS65_LS_PAOI3X6_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X6_B_F_Z_R_110,`HS65_LS_PAOI3X6_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X6_C_F_Z_R_001,`HS65_LS_PAOI3X6_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X6_C_F_Z_R_110,`HS65_LS_PAOI3X6_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_101,`HS65_LS_PAOI3X6_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_110,`HS65_LS_PAOI3X6_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_100,`HS65_LS_PAOI3X6_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_001,`HS65_LS_PAOI3X6_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_010,`HS65_LS_PAOI3X6_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X6_P_F_Z_R_011,`HS65_LS_PAOI3X6_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X6

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_PAOI3X8_A_R_Z_F_001 0.1
`define HS65_LS_PAOI3X8_A_F_Z_R_001 0.1
`define HS65_LS_PAOI3X8_A_R_Z_F_110 0.1
`define HS65_LS_PAOI3X8_A_F_Z_R_110 0.1
`define HS65_LS_PAOI3X8_B_R_Z_F_001 0.1
`define HS65_LS_PAOI3X8_B_F_Z_R_001 0.1
`define HS65_LS_PAOI3X8_B_R_Z_F_110 0.1
`define HS65_LS_PAOI3X8_B_F_Z_R_110 0.1
`define HS65_LS_PAOI3X8_C_R_Z_F_001 0.1
`define HS65_LS_PAOI3X8_C_F_Z_R_001 0.1
`define HS65_LS_PAOI3X8_C_R_Z_F_110 0.1
`define HS65_LS_PAOI3X8_C_F_Z_R_110 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_101 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_101 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_110 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_110 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_100 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_100 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_001 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_001 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_010 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_010 0.1
`define HS65_LS_PAOI3X8_P_R_Z_F_011 0.1
`define HS65_LS_PAOI3X8_P_F_Z_R_011 0.1

module HS65_LS_PAOI3X8 (Z, A, B, C, P);

	output Z;
	input A;
	input B;
	input C;
	input P;

	and    U1 (INTERNAL3, A, B, C) ;
	or    U2 (INTERNAL2, INTERNAL3, P) ;
	or    U3 (INTERNAL4, A, B, C) ;
	and    U4 (INTERNAL1, INTERNAL2, INTERNAL4) ;
	not   #1 U5 (Z, INTERNAL1) ;



	specify

		if (!B && !C && P) (A -=> Z) = (`HS65_LS_PAOI3X8_A_F_Z_R_001,`HS65_LS_PAOI3X8_A_R_Z_F_001);
		if (B && C && !P) (A -=> Z) = (`HS65_LS_PAOI3X8_A_F_Z_R_110,`HS65_LS_PAOI3X8_A_R_Z_F_110);
		if (!A && !C && P) (B -=> Z) = (`HS65_LS_PAOI3X8_B_F_Z_R_001,`HS65_LS_PAOI3X8_B_R_Z_F_001);
		if (A && C && !P) (B -=> Z) = (`HS65_LS_PAOI3X8_B_F_Z_R_110,`HS65_LS_PAOI3X8_B_R_Z_F_110);
		if (!A && !B && P) (C -=> Z) = (`HS65_LS_PAOI3X8_C_F_Z_R_001,`HS65_LS_PAOI3X8_C_R_Z_F_001);
		if (A && B && !P) (C -=> Z) = (`HS65_LS_PAOI3X8_C_F_Z_R_110,`HS65_LS_PAOI3X8_C_R_Z_F_110);
		if (A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_101,`HS65_LS_PAOI3X8_P_R_Z_F_101);
		if (A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_110,`HS65_LS_PAOI3X8_P_R_Z_F_110);
		if (A && !B && !C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_100,`HS65_LS_PAOI3X8_P_R_Z_F_100);
		if (!A && !B && C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_001,`HS65_LS_PAOI3X8_P_R_Z_F_001);
		if (!A && B && !C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_010,`HS65_LS_PAOI3X8_P_R_Z_F_010);
		if (!A && B && C) (P -=> Z) = (`HS65_LS_PAOI3X8_P_F_Z_R_011,`HS65_LS_PAOI3X8_P_R_Z_F_011);


	endspecify

endmodule // HS65_LS_PAOI3X8

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPBTQX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPBTQX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPBTQX9_D_R_Q_R_010 0.1
`define HS65_LS_SDFPBTQX9_D_F_Q_F_010 0.1
`define HS65_LS_SDFPBTQX9_D_R_Q_R_000 0.1
`define HS65_LS_SDFPBTQX9_D_F_Q_F_000 0.1
`define HS65_LS_SDFPBTQX9_D_R_Q_R_100 0.1
`define HS65_LS_SDFPBTQX9_D_F_Q_F_100 0.1
`define HS65_LS_SDFPBTQX9_D_R_Q_R_110 0.1
`define HS65_LS_SDFPBTQX9_D_F_Q_F_110 0.1
`define HS65_LS_SDFPBTQX9_TE_R_Q_F_100 0.1
`define HS65_LS_SDFPBTQX9_TE_F_Q_R_100 0.1
`define HS65_LS_SDFPBTQX9_TE_F_Q_R_110 0.1
`define HS65_LS_SDFPBTQX9_TE_R_Q_F_110 0.1
`define HS65_LS_SDFPBTQX9_TE_R_Q_R_001 0.1
`define HS65_LS_SDFPBTQX9_TE_F_Q_F_001 0.1
`define HS65_LS_SDFPBTQX9_TE_R_Q_R_011 0.1
`define HS65_LS_SDFPBTQX9_TE_F_Q_F_011 0.1
`define HS65_LS_SDFPBTQX9_TI_R_Q_R_001 0.1
`define HS65_LS_SDFPBTQX9_TI_F_Q_F_001 0.1
`define HS65_LS_SDFPBTQX9_TI_R_Q_R_011 0.1
`define HS65_LS_SDFPBTQX9_TI_F_Q_F_011 0.1
`define HS65_LS_SDFPBTQX9_TI_R_Q_R_101 0.1
`define HS65_LS_SDFPBTQX9_TI_F_Q_F_101 0.1
`define HS65_LS_SDFPBTQX9_TI_R_Q_R_111 0.1
`define HS65_LS_SDFPBTQX9_TI_F_Q_F_111 0.1
`define HS65_LS_SDFPBTQX9_TR_R_Q_F 0.1
`define HS65_LS_SDFPBTQX9_TR_F_Q_R 0.1
`define HS65_LS_SDFPBTQX9_TR_R_Q_R 0.1
`define HS65_LS_SDFPBTQX9_TR_F_Q_F 0.1
`define HS65_LS_SDFPBTQX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPBTQX9_CP_PWL 0.01
`define HS65_LS_SDFPBTQX9_CP_PWH 0.01

module HS65_LS_SDFPBTQX9 (Q, D, CP, TI, TE, TR);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;
	input TR;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (data, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (intern, data, CP , NOTIFIER) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Q, intern, data, TR) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (data, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (intern, data, dCP , NOTIFIER) ;
	CORE65LPSVT_U_MUX2  #1 U3 (Q, intern, data,TR) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

                if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPBTQX9_CP_R_Q_R,`HS65_LS_SDFPBTQX9_CP_R_Q_F);
                if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPBTQX9_CP_R_Q_R,`HS65_LS_SDFPBTQX9_CP_R_Q_F);
		if (!CP && !TE && TI && TR) (D +=> Q) = (`HS65_LS_SDFPBTQX9_D_R_Q_R_010,`HS65_LS_SDFPBTQX9_D_F_Q_F_010);
		if (!CP && !TE && !TI && TR) (D +=> Q) = (`HS65_LS_SDFPBTQX9_D_R_Q_R_000,`HS65_LS_SDFPBTQX9_D_F_Q_F_000);
		if (CP && !TE && !TI && TR) (D +=> Q) = (`HS65_LS_SDFPBTQX9_D_R_Q_R_100,`HS65_LS_SDFPBTQX9_D_F_Q_F_100);
		if (CP && !TE && TI && TR) (D +=> Q) = (`HS65_LS_SDFPBTQX9_D_R_Q_R_110,`HS65_LS_SDFPBTQX9_D_F_Q_F_110);
		if (!CP && D && !TI && TR) (TE -=> Q) = (`HS65_LS_SDFPBTQX9_TE_F_Q_R_100,`HS65_LS_SDFPBTQX9_TE_R_Q_F_100);
		if (CP && D && !TI && TR) (TE -=> Q) = (`HS65_LS_SDFPBTQX9_TE_F_Q_R_110,`HS65_LS_SDFPBTQX9_TE_R_Q_F_110);
		if (!CP && !D && TI && TR) (TE +=> Q) = (`HS65_LS_SDFPBTQX9_TE_R_Q_R_001,`HS65_LS_SDFPBTQX9_TE_F_Q_F_001);
		if (CP && !D && TI && TR) (TE +=> Q) = (`HS65_LS_SDFPBTQX9_TE_R_Q_R_011,`HS65_LS_SDFPBTQX9_TE_F_Q_F_011);
		if (!CP && !D && TE && TR) (TI +=> Q) = (`HS65_LS_SDFPBTQX9_TI_R_Q_R_001,`HS65_LS_SDFPBTQX9_TI_F_Q_F_001);
		if (!CP && D && TE && TR) (TI +=> Q) = (`HS65_LS_SDFPBTQX9_TI_R_Q_R_101,`HS65_LS_SDFPBTQX9_TI_F_Q_F_101);
		if (CP && !D && TE && TR) (TI +=> Q) = (`HS65_LS_SDFPBTQX9_TI_R_Q_R_011,`HS65_LS_SDFPBTQX9_TI_F_Q_F_011);
		if (CP && D && TE && TR) (TI +=> Q) = (`HS65_LS_SDFPBTQX9_TI_R_Q_R_111,`HS65_LS_SDFPBTQX9_TI_F_Q_F_111);
		if (!D && !TE || TE && !TI) (TR -=> Q) = (`HS65_LS_SDFPBTQX9_TR_F_Q_R,`HS65_LS_SDFPBTQX9_TR_R_Q_F);
		if (D && !TE || TE && TI) (TR +=> Q) = (`HS65_LS_SDFPBTQX9_TR_R_Q_R,`HS65_LS_SDFPBTQX9_TR_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPBTQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPBTQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPBTQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPBTQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPBTQX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPBTQX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPBTQX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPBTQX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPBTQX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPBTQX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPBTQX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPBTQX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPBTQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPBTQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPBTQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQNTX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNTX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQNTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQNTX18_CP_PWH 0.01
`define HS65_LS_SDFPHQNTX18_CP_PWL 0.01
`define HS65_LS_SDFPHQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX18_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQNTX18 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX18_CP_R_QN_R, `HS65_LS_SDFPHQNTX18_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX18_CP_R_TQ_R, `HS65_LS_SDFPHQNTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQNTX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX18_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQNTX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX18_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LS_SDFPHQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQNTX18_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LS_SDFPHQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQNTX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNTX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQNTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQNTX27_CP_PWH 0.01
`define HS65_LS_SDFPHQNTX27_CP_PWL 0.01
`define HS65_LS_SDFPHQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX27_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQNTX27 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX27_CP_R_QN_R, `HS65_LS_SDFPHQNTX27_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX27_CP_R_TQ_R, `HS65_LS_SDFPHQNTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQNTX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX27_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQNTX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX27_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LS_SDFPHQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQNTX27_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LS_SDFPHQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQNTX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNTX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQNTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQNTX35_CP_PWH 0.01
`define HS65_LS_SDFPHQNTX35_CP_PWL 0.01
`define HS65_LS_SDFPHQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX35_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQNTX35 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX35_CP_R_QN_R, `HS65_LS_SDFPHQNTX35_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX35_CP_R_TQ_R, `HS65_LS_SDFPHQNTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQNTX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX35_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQNTX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX35_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LS_SDFPHQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQNTX35_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LS_SDFPHQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQNTX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNTX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQNTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQNTX4_CP_PWH 0.01
`define HS65_LS_SDFPHQNTX4_CP_PWL 0.01
`define HS65_LS_SDFPHQNTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX4_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQNTX4 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX4_CP_R_QN_R, `HS65_LS_SDFPHQNTX4_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX4_CP_R_TQ_R, `HS65_LS_SDFPHQNTX4_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQNTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQNTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQNTX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX4_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQNTX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX4_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQNTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX4_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQNTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX4_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LS_SDFPHQNTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX4_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQNTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX4_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQNTX4_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQNTX4_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LS_SDFPHQNTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQNTX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNTX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQNTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQNTX9_CP_PWH 0.01
`define HS65_LS_SDFPHQNTX9_CP_PWL 0.01
`define HS65_LS_SDFPHQNTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNTX9_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQNTX9 (QN, TQ, D, E, CP, TI, TE);
 
   output QN;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
 
`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
     IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   not #1 u4 (QN, IQ);
   buf #1 u5 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, TQ, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify

      (posedge CP => (QN -: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX9_CP_R_QN_R, `HS65_LS_SDFPHQNTX9_CP_R_QN_F);
 
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQNTX9_CP_R_TQ_R, `HS65_LS_SDFPHQNTX9_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQNTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQNTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQNTX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX9_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQNTX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX9_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQNTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX9_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQNTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX9_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP  , posedge TE, `HS65_LS_SDFPHQNTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNTX9_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQNTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNTX9_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQNTX9_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQNTX9_CP_PWH, 0, Notifier);
 
   endspecify
`endif
 
endmodule // HS65_LS_SDFPHQNTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQNX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX18_CP_PWL 0.01
`define HS65_LS_SDFPHQNX18_CP_PWH 0.01

module HS65_LS_SDFPHQNX18 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPHQNX18_CP_R_QN_R,`HS65_LS_SDFPHQNX18_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LS_SDFPHQNX18_CP_R_QN_R,`HS65_LS_SDFPHQNX18_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPHQNX18_CP_R_QN_R,`HS65_LS_SDFPHQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQNX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQNX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX18_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQNX18_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHQNX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQNX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX27_CP_PWL 0.01
`define HS65_LS_SDFPHQNX27_CP_PWH 0.01

module HS65_LS_SDFPHQNX27 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPHQNX27_CP_R_QN_R,`HS65_LS_SDFPHQNX27_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LS_SDFPHQNX27_CP_R_QN_R,`HS65_LS_SDFPHQNX27_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPHQNX27_CP_R_QN_R,`HS65_LS_SDFPHQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQNX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQNX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX27_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQNX27_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHQNX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQNX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX35_CP_PWL 0.01
`define HS65_LS_SDFPHQNX35_CP_PWH 0.01

module HS65_LS_SDFPHQNX35 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPHQNX35_CP_R_QN_R,`HS65_LS_SDFPHQNX35_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LS_SDFPHQNX35_CP_R_QN_R,`HS65_LS_SDFPHQNX35_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPHQNX35_CP_R_QN_R,`HS65_LS_SDFPHQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQNX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQNX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX35_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQNX35_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHQNX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQNX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX4_CP_PWL 0.01
`define HS65_LS_SDFPHQNX4_CP_PWH 0.01

module HS65_LS_SDFPHQNX4 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPHQNX4_CP_R_QN_R,`HS65_LS_SDFPHQNX4_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LS_SDFPHQNX4_CP_R_QN_R,`HS65_LS_SDFPHQNX4_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPHQNX4_CP_R_QN_R,`HS65_LS_SDFPHQNX4_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQNX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQNX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQNX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX4_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQNX4_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHQNX4_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQNX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQNX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQNX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPHQNX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPHQNX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQNX9_CP_PWL 0.01
`define HS65_LS_SDFPHQNX9_CP_PWH 0.01

module HS65_LS_SDFPHQNX9 (QN, D, E, CP, TI, TE);

	output QN;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPHQNX9_CP_R_QN_R,`HS65_LS_SDFPHQNX9_CP_R_QN_F);
		if (!E && !TE)  (posedge CP => (QN -: IQ)) = (`HS65_LS_SDFPHQNX9_CP_R_QN_R,`HS65_LS_SDFPHQNX9_CP_R_QN_F);
		if (E && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPHQNX9_CP_R_QN_R,`HS65_LS_SDFPHQNX9_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQNX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQNX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQNX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX9_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQNX9_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHQNX9_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQNX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQNX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQNX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQNX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQTX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQTX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQTX18_CP_PWH 0.01
`define HS65_LS_SDFPHQTX18_CP_PWL 0.01
`define HS65_LS_SDFPHQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX18_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQTX18 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX18_CP_R_Q_R, `HS65_LS_SDFPHQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX18_CP_R_TQ_R, `HS65_LS_SDFPHQTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQTX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX18_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQTX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX18_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPHQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQTX18_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LS_SDFPHQTX18 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQTX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQTX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQTX27_CP_PWH 0.01
`define HS65_LS_SDFPHQTX27_CP_PWL 0.01
`define HS65_LS_SDFPHQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX27_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQTX27 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX27_CP_R_Q_R, `HS65_LS_SDFPHQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX27_CP_R_TQ_R, `HS65_LS_SDFPHQTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQTX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX27_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQTX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX27_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPHQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQTX27_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LS_SDFPHQTX27 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQTX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQTX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQTX35_CP_PWH 0.01
`define HS65_LS_SDFPHQTX35_CP_PWL 0.01
`define HS65_LS_SDFPHQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX35_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQTX35 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX35_CP_R_Q_R, `HS65_LS_SDFPHQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX35_CP_R_TQ_R, `HS65_LS_SDFPHQTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQTX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX35_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQTX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX35_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPHQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQTX35_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LS_SDFPHQTX35 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQTX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQTX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQTX4_CP_PWH 0.01
`define HS65_LS_SDFPHQTX4_CP_PWL 0.01
`define HS65_LS_SDFPHQTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX4_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQTX4 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX4_CP_R_Q_R, `HS65_LS_SDFPHQTX4_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX4_CP_R_TQ_R, `HS65_LS_SDFPHQTX4_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQTX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX4_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQTX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX4_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX4_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX4_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPHQTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX4_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX4_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQTX4_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQTX4_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LS_SDFPHQTX4 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPHQTX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQTX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHQTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHQTX9_CP_PWH 0.01
`define HS65_LS_SDFPHQTX9_CP_PWL 0.01
`define HS65_LS_SDFPHQTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQTX9_D_CP_HOLD_negedge_posedge 0.01
 
module HS65_LS_SDFPHQTX9 (Q, TQ, D, E, CP, TI, TE);
 
   output Q;
   output TQ;
   input CP;
   input TE;
   input TI;
   input E;
   input D;
 
 
`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, D, E);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, CP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21IQDE_, IQ, dD, dE);
   CORE65LPSVT_U_MUX2  u1 (Mux21Mux21IQDE_TITE_, Mux21IQDE_, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u2 (   // Verilog Seq UDP
      IQ, Mux21Mux21IQDE_TITE_, dCP, Notifier);

   buf #1 u3 (Q, IQ);
   buf #1 u4 (TQ, IQ);

   and  (DE_, dD, dE);
   and  (QE_, Q, E_);
    or  (DEor_, DE_, QE_);
   not  (E_, dE);

   xor  (D_orTI, DEor_, dTI);
   not  (TEX, dTE);
   and  (AndTEXE_, TEX, dE);
   specify
      (posedge CP => (Q +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX9_CP_R_Q_R, `HS65_LS_SDFPHQTX9_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21Mux21IQDE_TITE_)) = (`HS65_LS_SDFPHQTX9_CP_R_TQ_R, `HS65_LS_SDFPHQTX9_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPHQTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndTEXE_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPHQTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndTEXE_,dCP,dD);
 
        $setuphold(posedge CP , posedge E, `HS65_LS_SDFPHQTX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX9_E_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dE);
        $setuphold(posedge CP , negedge E, `HS65_LS_SDFPHQTX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX9_E_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPHQTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX9_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPHQTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX9_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPHQTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQTX9_TE_CP_HOLD_posedge_posedge, Notifier,,D_orTI,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPHQTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQTX9_TE_CP_HOLD_negedge_posedge, Notifier,,D_orTI,dCP,dTE);
 
      $width(negedge CP, `HS65_LS_SDFPHQTX9_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPHQTX9_CP_PWH, 0, Notifier);

   endspecify
`endif
 
 
endmodule // HS65_LS_SDFPHQTX9 
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX18_CP_PWL 0.01
`define HS65_LS_SDFPHQX18_CP_PWH 0.01

module HS65_LS_SDFPHQX18 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPHQX18_CP_R_Q_R,`HS65_LS_SDFPHQX18_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LS_SDFPHQX18_CP_R_Q_R,`HS65_LS_SDFPHQX18_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPHQX18_CP_R_Q_R,`HS65_LS_SDFPHQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX18_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX27_CP_PWL 0.01
`define HS65_LS_SDFPHQX27_CP_PWH 0.01

module HS65_LS_SDFPHQX27 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPHQX27_CP_R_Q_R,`HS65_LS_SDFPHQX27_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LS_SDFPHQX27_CP_R_Q_R,`HS65_LS_SDFPHQX27_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPHQX27_CP_R_Q_R,`HS65_LS_SDFPHQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX27_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX35_CP_PWL 0.01
`define HS65_LS_SDFPHQX35_CP_PWH 0.01

module HS65_LS_SDFPHQX35 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPHQX35_CP_R_Q_R,`HS65_LS_SDFPHQX35_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LS_SDFPHQX35_CP_R_Q_R,`HS65_LS_SDFPHQX35_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPHQX35_CP_R_Q_R,`HS65_LS_SDFPHQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX35_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX4_CP_PWL 0.01
`define HS65_LS_SDFPHQX4_CP_PWH 0.01

module HS65_LS_SDFPHQX4 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPHQX4_CP_R_Q_R,`HS65_LS_SDFPHQX4_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LS_SDFPHQX4_CP_R_Q_R,`HS65_LS_SDFPHQX4_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPHQX4_CP_R_Q_R,`HS65_LS_SDFPHQX4_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX4_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX4_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHQX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPHQX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPHQX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHQX9_CP_PWL 0.01
`define HS65_LS_SDFPHQX9_CP_PWH 0.01

module HS65_LS_SDFPHQX9 (Q, D, E, CP, TI, TE);

	output Q;
	input CP;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U3 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;

	or    X1 (OR_ETE, dE, dTE) ;
	not    X2 (DX, dD) ;
	and    X3 (AND_DXETI, DX, dE, dTI) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_DETIX, dD, dE, TIX) ;
	or    X6 (OR_AND_DXETIAND_DETIX, AND_DXETI, AND_DETIX) ;
	and    X7 (AND_DXTI, DX, dTI) ;
	and    X8 (AND_DTIX, dD, TIX) ;
	not    X9 (EX, dE) ;
	or    X10 (OR_AND_DXTIAND_DTIXEX, AND_DXTI, AND_DTIX, EX) ;
	not    X11 (TEX, dTE) ;
	and    X12 (AND_ETEX, dE, TEX) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPHQX9_CP_R_Q_R,`HS65_LS_SDFPHQX9_CP_R_Q_F);
		if (!E && !TE)  (posedge CP => (Q +: IQ)) = (`HS65_LS_SDFPHQX9_CP_R_Q_R,`HS65_LS_SDFPHQX9_CP_R_Q_F);
		if (E && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPHQX9_CP_R_Q_R,`HS65_LS_SDFPHQX9_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ETEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHQX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHQX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dE);
                $setuphold(posedge CP ,posedge TE, `HS65_LS_SDFPHQX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX9_TE_CP_HOLD_posedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
                $setuphold(posedge CP ,negedge TE, `HS65_LS_SDFPHQX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX9_TE_CP_HOLD_negedge_posedge, NOTIFIER,,OR_AND_DXTIAND_DTIXEX,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHQX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHQX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHQX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHQX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP &&& OR_ETE, `HS65_LS_SDFPHQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_ETE, `HS65_LS_SDFPHQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHQX9

`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQNTX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQNTX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQNTX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPHRQNTX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPHRQNTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQNTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX18_RN_F_QN_R 0.1
`define HS65_LS_SDFPHRQNTX18_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX18_RN_PWL 0.01
`define HS65_LS_SDFPHRQNTX18_CP_PWL 0.01
`define HS65_LS_SDFPHRQNTX18_CP_PWH 0.01

module HS65_LS_SDFPHRQNTX18 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX18_CP_R_QN_R, `HS65_LS_SDFPHRQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX18_CP_R_TQ_R, `HS65_LS_SDFPHRQNTX18_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPHRQNTX18_RN_F_QN_R,`HS65_LS_SDFPHRQNTX18_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQNTX18_RN_F_TQ_F,`HS65_LS_SDFPHRQNTX18_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQNTX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQNTX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQNTX18_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQNTX18_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQNTX18_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQNTX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQNTX18_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQNTX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQNTX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQNTX18


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQNTX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQNTX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQNTX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPHRQNTX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPHRQNTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQNTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX27_RN_F_QN_R 0.1
`define HS65_LS_SDFPHRQNTX27_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX27_RN_PWL 0.01
`define HS65_LS_SDFPHRQNTX27_CP_PWL 0.01
`define HS65_LS_SDFPHRQNTX27_CP_PWH 0.01

module HS65_LS_SDFPHRQNTX27 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX27_CP_R_QN_R, `HS65_LS_SDFPHRQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX27_CP_R_TQ_R, `HS65_LS_SDFPHRQNTX27_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPHRQNTX27_RN_F_QN_R,`HS65_LS_SDFPHRQNTX27_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQNTX27_RN_F_TQ_F,`HS65_LS_SDFPHRQNTX27_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQNTX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQNTX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQNTX27_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQNTX27_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQNTX27_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQNTX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQNTX27_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQNTX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQNTX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQNTX27


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQNTX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQNTX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQNTX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPHRQNTX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPHRQNTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQNTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX35_RN_F_QN_R 0.1
`define HS65_LS_SDFPHRQNTX35_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX35_RN_PWL 0.01
`define HS65_LS_SDFPHRQNTX35_CP_PWL 0.01
`define HS65_LS_SDFPHRQNTX35_CP_PWH 0.01

module HS65_LS_SDFPHRQNTX35 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX35_CP_R_QN_R, `HS65_LS_SDFPHRQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX35_CP_R_TQ_R, `HS65_LS_SDFPHRQNTX35_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPHRQNTX35_RN_F_QN_R,`HS65_LS_SDFPHRQNTX35_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQNTX35_RN_F_TQ_F,`HS65_LS_SDFPHRQNTX35_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQNTX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQNTX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQNTX35_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQNTX35_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQNTX35_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQNTX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQNTX35_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQNTX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQNTX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQNTX35


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQNTX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQNTX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQNTX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPHRQNTX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPHRQNTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQNTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX4_RN_F_QN_R 0.1
`define HS65_LS_SDFPHRQNTX4_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX4_RN_PWL 0.01
`define HS65_LS_SDFPHRQNTX4_CP_PWL 0.01
`define HS65_LS_SDFPHRQNTX4_CP_PWH 0.01

module HS65_LS_SDFPHRQNTX4 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX4_CP_R_QN_R, `HS65_LS_SDFPHRQNTX4_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX4_CP_R_TQ_R, `HS65_LS_SDFPHRQNTX4_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPHRQNTX4_RN_F_QN_R,`HS65_LS_SDFPHRQNTX4_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQNTX4_RN_F_TQ_F,`HS65_LS_SDFPHRQNTX4_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQNTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQNTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQNTX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQNTX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQNTX4_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQNTX4_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQNTX4_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQNTX4_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQNTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQNTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQNTX4_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQNTX4_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQNTX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQNTX4


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQNTX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQNTX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQNTX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPHRQNTX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPHRQNTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQNTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX9_RN_F_QN_R 0.1
`define HS65_LS_SDFPHRQNTX9_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQNTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQNTX9_RN_PWL 0.01
`define HS65_LS_SDFPHRQNTX9_CP_PWL 0.01
`define HS65_LS_SDFPHRQNTX9_CP_PWH 0.01

module HS65_LS_SDFPHRQNTX9 (QN, TQ, D, E, CP, RN, TI, TE);

	output QN;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U4 (QN, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

        and  X20 (DE_, dD, dE);
     and  X21 (QE_, TQ, EX); 
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);




	specify


      (posedge CP => (QN -: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX9_CP_R_QN_R, `HS65_LS_SDFPHRQNTX9_CP_R_QN_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQNTX9_CP_R_TQ_R, `HS65_LS_SDFPHRQNTX9_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPHRQNTX9_RN_F_QN_R,`HS65_LS_SDFPHRQNTX9_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQNTX9_RN_F_TQ_F,`HS65_LS_SDFPHRQNTX9_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQNTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQNTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQNTX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQNTX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
                $setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQNTX9_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQNTX9_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
                $setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQNTX9_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQNTX9_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQNTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQNTX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQNTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQNTX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQNTX9_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQNTX9_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQNTX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQNTX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQNTX9


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQTX18
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQTX18

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQTX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPHRQTX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPHRQTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQTX18_RN_F_Q_F 0.1
`define HS65_LS_SDFPHRQTX18_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX18_RN_PWL 0.01
`define HS65_LS_SDFPHRQTX18_CP_PWL 0.01
`define HS65_LS_SDFPHRQTX18_CP_PWH 0.01

module HS65_LS_SDFPHRQTX18 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX18_CP_R_Q_R, `HS65_LS_SDFPHRQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX18_CP_R_TQ_R, `HS65_LS_SDFPHRQTX18_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPHRQTX18_RN_F_Q_F,`HS65_LS_SDFPHRQTX18_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQTX18_RN_F_TQ_F,`HS65_LS_SDFPHRQTX18_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQTX18_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX18_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQTX18_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX18_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQTX18_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQTX18_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQTX18_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQTX18_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQTX18_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQTX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQTX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQTX18


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQTX27
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQTX27

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQTX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPHRQTX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPHRQTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQTX27_RN_F_Q_F 0.1
`define HS65_LS_SDFPHRQTX27_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX27_RN_PWL 0.01
`define HS65_LS_SDFPHRQTX27_CP_PWL 0.01
`define HS65_LS_SDFPHRQTX27_CP_PWH 0.01

module HS65_LS_SDFPHRQTX27 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX27_CP_R_Q_R, `HS65_LS_SDFPHRQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX27_CP_R_TQ_R, `HS65_LS_SDFPHRQTX27_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPHRQTX27_RN_F_Q_F,`HS65_LS_SDFPHRQTX27_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQTX27_RN_F_TQ_F,`HS65_LS_SDFPHRQTX27_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQTX27_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX27_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQTX27_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX27_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQTX27_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQTX27_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQTX27_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQTX27_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQTX27_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQTX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQTX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQTX27


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQTX35
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQTX35

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQTX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPHRQTX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPHRQTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQTX35_RN_F_Q_F 0.1
`define HS65_LS_SDFPHRQTX35_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX35_RN_PWL 0.01
`define HS65_LS_SDFPHRQTX35_CP_PWL 0.01
`define HS65_LS_SDFPHRQTX35_CP_PWH 0.01

module HS65_LS_SDFPHRQTX35 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX35_CP_R_Q_R, `HS65_LS_SDFPHRQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX35_CP_R_TQ_R, `HS65_LS_SDFPHRQTX35_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPHRQTX35_RN_F_Q_F,`HS65_LS_SDFPHRQTX35_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQTX35_RN_F_TQ_F,`HS65_LS_SDFPHRQTX35_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQTX35_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX35_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQTX35_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX35_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQTX35_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQTX35_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQTX35_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQTX35_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQTX35_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQTX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQTX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQTX35


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQTX4
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQTX4

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQTX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPHRQTX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPHRQTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQTX4_RN_F_Q_F 0.1
`define HS65_LS_SDFPHRQTX4_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX4_RN_PWL 0.01
`define HS65_LS_SDFPHRQTX4_CP_PWL 0.01
`define HS65_LS_SDFPHRQTX4_CP_PWH 0.01

module HS65_LS_SDFPHRQTX4 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX4_CP_R_Q_R, `HS65_LS_SDFPHRQTX4_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX4_CP_R_TQ_R, `HS65_LS_SDFPHRQTX4_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPHRQTX4_RN_F_Q_F,`HS65_LS_SDFPHRQTX4_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQTX4_RN_F_TQ_F,`HS65_LS_SDFPHRQTX4_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQTX4_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX4_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQTX4_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX4_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQTX4_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQTX4_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQTX4_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQTX4_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQTX4_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQTX4_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQTX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQTX4


`endcelldefine
// Verilog model view for HS65_LS_SDFPHRQTX9
//(c) 1997-2005 STMicroelectronics FTM 4.7.7.beta (Jun 22 2005 10:24:55) 24-Jun-2005
// Cell HS65_LS_SDFPHRQTX9

`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPHRQTX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPHRQTX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPHRQTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPHRQTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPHRQTX9_RN_F_Q_F 0.1
`define HS65_LS_SDFPHRQTX9_RN_F_TQ_F 0.1
`define HS65_LS_SDFPHRQTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_E_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_E_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_E_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_E_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPHRQTX9_RN_PWL 0.01
`define HS65_LS_SDFPHRQTX9_CP_PWL 0.01
`define HS65_LS_SDFPHRQTX9_CP_PWH 0.01

module HS65_LS_SDFPHRQTX9 (Q, TQ, D, E, CP, RN, TI, TE);

	output Q;
	output TQ;
	input CP;
	input RN;
	input TE;
	input TI;
	input E;
	input D;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, D, E) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (D1, IQ, dD, dE) ;
	CORE65LPSVT_U_MUX2   U2 (INTERNAL1, D1, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U3 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U4 (Q, IQ) ;
	buf   #1 U5 (TQ, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DETEX, dD, dE, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DETEXAND_TETI, AND_DETEX, AND_TETI) ;
	and    X5 (AND_ERN, dE, dRN) ;
	and    X6 (AND_RNTE, dRN, dTE) ;
	or    X7 (OR_AND_ERNAND_RNTE, AND_ERN, AND_RNTE) ;
	not    X8 (DX, dD) ;
	and    X9 (AND_DXERNTI, DX, dE, dRN, dTI) ;
	not    X10 (TIX, dTI) ;
	and    X11 (AND_DERNTIX, dD, dE, dRN, TIX) ;
	or    X12 (OR_AND_DXERNTIAND_DERNTIX, AND_DXERNTI, AND_DERNTIX) ;
	and    X13 (AND_DXRNTI, DX, dRN, dTI) ;
	and    X14 (AND_DRNTIX, dD, dRN, TIX) ;
	not    X15 (EX, dE) ;
	and    X16 (AND_EXRN, EX, dRN) ;
	or    X17 (OR_AND_DXRNTIAND_DRNTIXAND_EXRN, AND_DXRNTI, AND_DRNTIX, AND_EXRN) ;
	and    X18 (AND_RNTEX, dRN, TEX) ;
	and    X19 (AND_ERNTEX, dE, dRN, TEX) ;

   and  X20 (DE_, dD, dE);
   and  X21 (QE_, Q, EX);
    or  X22 (DEor_, DE_, QE_);
   xor  X23 (D_orTI, DEor_, dTI);
   and  X24 (AND_D_orTI_RN, D_orTI, RN);


	specify

      (posedge CP => (Q +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX9_CP_R_Q_R, `HS65_LS_SDFPHRQTX9_CP_R_Q_F);
      (posedge CP => (TQ +: INTERNAL1)) = (`HS65_LS_SDFPHRQTX9_CP_R_TQ_R, `HS65_LS_SDFPHRQTX9_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPHRQTX9_RN_F_Q_F,`HS65_LS_SDFPHRQTX9_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPHRQTX9_RN_F_TQ_F,`HS65_LS_SDFPHRQTX9_RN_F_TQ_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPHRQTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPHRQTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_ERNTEX, dCP, dD);
		$setuphold(posedge CP, posedge E, `HS65_LS_SDFPHRQTX9_E_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX9_E_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP, negedge E, `HS65_LS_SDFPHRQTX9_E_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX9_E_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dE);
		$setuphold(posedge CP,posedge TE, `HS65_LS_SDFPHRQTX9_TE_CP_SETUP_posedge_posedge , `HS65_LS_SDFPHRQTX9_TE_CP_HOLD_posedge_posedge,NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP,negedge TE, `HS65_LS_SDFPHRQTX9_TE_CP_SETUP_negedge_posedge ,`HS65_LS_SDFPHRQTX9_TE_CP_HOLD_negedge_posedge, NOTIFIER,,AND_D_orTI_RN,dCP,dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPHRQTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPHRQTX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPHRQTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPHRQTX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPHRQTX9_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPHRQTX9_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DETEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPHRQTX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& OR_AND_ERNAND_RNTE, `HS65_LS_SDFPHRQTX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPHRQTX9


`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQNTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQNTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQNTX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNTX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNTX18_CP_PWH 0.01
`define HS65_LS_SDFPQNTX18_CP_PWL 0.01
`define HS65_LS_SDFPQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQNTX18 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX18_CP_R_QN_R, `HS65_LS_SDFPQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX18_CP_R_TQ_R, `HS65_LS_SDFPQNTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPQNTX18_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LS_SDFPQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQNTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQNTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQNTX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNTX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNTX27_CP_PWH 0.01
`define HS65_LS_SDFPQNTX27_CP_PWL 0.01
`define HS65_LS_SDFPQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQNTX27 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX27_CP_R_QN_R, `HS65_LS_SDFPQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX27_CP_R_TQ_R, `HS65_LS_SDFPQNTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPQNTX27_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LS_SDFPQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQNTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQNTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQNTX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNTX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNTX35_CP_PWH 0.01
`define HS65_LS_SDFPQNTX35_CP_PWL 0.01
`define HS65_LS_SDFPQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQNTX35 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX35_CP_R_QN_R, `HS65_LS_SDFPQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX35_CP_R_TQ_R, `HS65_LS_SDFPQNTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPQNTX35_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LS_SDFPQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQNTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQNTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQNTX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNTX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNTX4_CP_PWH 0.01
`define HS65_LS_SDFPQNTX4_CP_PWL 0.01
`define HS65_LS_SDFPQNTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQNTX4 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX4_CP_R_QN_R, `HS65_LS_SDFPQNTX4_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX4_CP_R_TQ_R, `HS65_LS_SDFPQNTX4_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPQNTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX4_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPQNTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX4_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPQNTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX4_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPQNTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX4_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQNTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX4_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQNTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX4_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPQNTX4_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPQNTX4_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LS_SDFPQNTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQNTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQNTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQNTX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNTX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNTX9_CP_PWH 0.01
`define HS65_LS_SDFPQNTX9_CP_PWL 0.01
`define HS65_LS_SDFPQNTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQNTX9 (QN, TQ, D, CP, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);
   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX9_CP_R_QN_R, `HS65_LS_SDFPQNTX9_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQNTX9_CP_R_TQ_R, `HS65_LS_SDFPQNTX9_CP_R_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPQNTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX9_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPQNTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX9_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPQNTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX9_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPQNTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX9_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQNTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNTX9_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQNTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNTX9_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPQNTX9_CP_PWL, 0, Notifier);
      $width(posedge CP, `HS65_LS_SDFPQNTX9_CP_PWH, 0, Notifier);

   endspecify
`endif


endmodule // HS65_LS_SDFPQNTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQNX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX18_CP_PWL 0.01
`define HS65_LS_SDFPQNX18_CP_PWH 0.01

module HS65_LS_SDFPQNX18 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPQNX18_CP_R_QN_R,`HS65_LS_SDFPQNX18_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPQNX18_CP_R_QN_R,`HS65_LS_SDFPQNX18_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQNX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX27_CP_PWL 0.01
`define HS65_LS_SDFPQNX27_CP_PWH 0.01

module HS65_LS_SDFPQNX27 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPQNX27_CP_R_QN_R,`HS65_LS_SDFPQNX27_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPQNX27_CP_R_QN_R,`HS65_LS_SDFPQNX27_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQNX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX35_CP_PWL 0.01
`define HS65_LS_SDFPQNX35_CP_PWH 0.01

module HS65_LS_SDFPQNX35 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPQNX35_CP_R_QN_R,`HS65_LS_SDFPQNX35_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPQNX35_CP_R_QN_R,`HS65_LS_SDFPQNX35_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQNX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX4_CP_PWL 0.01
`define HS65_LS_SDFPQNX4_CP_PWH 0.01

module HS65_LS_SDFPQNX4 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPQNX4_CP_R_QN_R,`HS65_LS_SDFPQNX4_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPQNX4_CP_R_QN_R,`HS65_LS_SDFPQNX4_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQNX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQNX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQNX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQNX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQNX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPQNX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPQNX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQNX9_CP_PWL 0.01
`define HS65_LS_SDFPQNX9_CP_PWH 0.01

module HS65_LS_SDFPQNX9 (QN, D, CP, TI, TE);

	output QN;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPQNX9_CP_R_QN_R,`HS65_LS_SDFPQNX9_CP_R_QN_F);
		if (!TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPQNX9_CP_R_QN_R,`HS65_LS_SDFPQNX9_CP_R_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQNX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQNX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQNX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQNX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQNX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQNX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQTX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPQTX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPQTX18_CP_PWH 0.01
`define HS65_LS_SDFPQTX18_CP_PWL 0.01
`define HS65_LS_SDFPQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQTX18 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX18_CP_R_Q_R, `HS65_LS_SDFPQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX18_CP_R_TQ_R, `HS65_LS_SDFPQTX18_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LS_SDFPQTX18_TE_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LS_SDFPQTX18_TE_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LS_SDFPQTX18_TI_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LS_SDFPQTX18_TI_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQTX18_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQTX18_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LS_SDFPQTX18_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LS_SDFPQTX18_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LS_SDFPQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQTX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPQTX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPQTX27_CP_PWH 0.01
`define HS65_LS_SDFPQTX27_CP_PWL 0.01
`define HS65_LS_SDFPQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQTX27 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX27_CP_R_Q_R, `HS65_LS_SDFPQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX27_CP_R_TQ_R, `HS65_LS_SDFPQTX27_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LS_SDFPQTX27_TE_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LS_SDFPQTX27_TE_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LS_SDFPQTX27_TI_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LS_SDFPQTX27_TI_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQTX27_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQTX27_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LS_SDFPQTX27_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LS_SDFPQTX27_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LS_SDFPQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQTX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPQTX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPQTX35_CP_PWH 0.01
`define HS65_LS_SDFPQTX35_CP_PWL 0.01
`define HS65_LS_SDFPQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQTX35 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX35_CP_R_Q_R, `HS65_LS_SDFPQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX35_CP_R_TQ_R, `HS65_LS_SDFPQTX35_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LS_SDFPQTX35_TE_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LS_SDFPQTX35_TE_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LS_SDFPQTX35_TI_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LS_SDFPQTX35_TI_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQTX35_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQTX35_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LS_SDFPQTX35_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LS_SDFPQTX35_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LS_SDFPQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQTX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPQTX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPQTX4_CP_PWH 0.01
`define HS65_LS_SDFPQTX4_CP_PWL 0.01
`define HS65_LS_SDFPQTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQTX4 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX4_CP_R_Q_R, `HS65_LS_SDFPQTX4_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX4_CP_R_TQ_R, `HS65_LS_SDFPQTX4_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LS_SDFPQTX4_TE_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX4_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LS_SDFPQTX4_TE_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX4_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LS_SDFPQTX4_TI_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX4_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LS_SDFPQTX4_TI_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX4_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQTX4_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQTX4_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LS_SDFPQTX4_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LS_SDFPQTX4_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LS_SDFPQTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPQTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPQTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPQTX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPQTX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPQTX9_CP_PWH 0.01
`define HS65_LS_SDFPQTX9_CP_PWL 0.01
`define HS65_LS_SDFPQTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPQTX9 (Q, TQ, D, CP, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;
   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
	reg Notifier;
  CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);
  CORE65LPSVT_U_FD_P_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   xor  (XorDTI_, dD, dTI);

specify
      (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX9_CP_R_Q_R, `HS65_LS_SDFPQTX9_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPQTX9_CP_R_TQ_R, `HS65_LS_SDFPQTX9_CP_R_TQ_F);
 
        $setuphold(posedge CP,posedge TE,`HS65_LS_SDFPQTX9_TE_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX9_TE_CP_HOLD_posedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP,negedge TE,`HS65_LS_SDFPQTX9_TE_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX9_TE_CP_HOLD_negedge_posedge, Notifier,,XorDTI_,dCP,dTE);
        $setuphold(posedge CP ,posedge TI,`HS65_LS_SDFPQTX9_TI_CP_SETUP_posedge_posedge,`HS65_LS_SDFPQTX9_TI_CP_HOLD_posedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP,negedge TI,`HS65_LS_SDFPQTX9_TI_CP_SETUP_negedge_posedge,`HS65_LS_SDFPQTX9_TI_CP_HOLD_negedge_posedge, Notifier,,dTE,dCP,dTI);
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPQTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQTX9_D_CP_HOLD_posedge_posedge, Notifier,,TEX,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPQTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQTX9_D_CP_HOLD_negedge_posedge, Notifier,,TEX,dCP,dD);
 
        $width(negedge CP, `HS65_LS_SDFPQTX9_CP_PWL, 0, Notifier);
        $width(posedge CP, `HS65_LS_SDFPQTX9_CP_PWH, 0, Notifier);
 
   endspecify
`endif
endmodule // HS65_LS_SDFPQTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPQX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX18_CP_PWL 0.01
`define HS65_LS_SDFPQX18_CP_PWH 0.01

module HS65_LS_SDFPQX18 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPQX18_CP_R_Q_R,`HS65_LS_SDFPQX18_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPQX18_CP_R_Q_R,`HS65_LS_SDFPQX18_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPQX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX27_CP_PWL 0.01
`define HS65_LS_SDFPQX27_CP_PWH 0.01

module HS65_LS_SDFPQX27 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPQX27_CP_R_Q_R,`HS65_LS_SDFPQX27_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPQX27_CP_R_Q_R,`HS65_LS_SDFPQX27_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPQX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX35_CP_PWL 0.01
`define HS65_LS_SDFPQX35_CP_PWH 0.01

module HS65_LS_SDFPQX35 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPQX35_CP_R_Q_R,`HS65_LS_SDFPQX35_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPQX35_CP_R_Q_R,`HS65_LS_SDFPQX35_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPQX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPQX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX4_CP_PWL 0.01
`define HS65_LS_SDFPQX4_CP_PWH 0.01

module HS65_LS_SDFPQX4 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPQX4_CP_R_Q_R,`HS65_LS_SDFPQX4_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPQX4_CP_R_Q_R,`HS65_LS_SDFPQX4_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPQX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPQX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPQX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPQX9_CP_PWL 0.01
`define HS65_LS_SDFPQX9_CP_PWH 0.01

module HS65_LS_SDFPQX9 (Q, D, CP, TI, TE);

	output Q;
	input D;
	input CP;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, CP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_NOTI   U2 (IQ, INTERNAL1, dCP , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	and    X2 (AND_DXTI, DX, dTI) ;
	not    X3 (TIX, dTI) ;
	and    X4 (AND_DTIX, dD, TIX) ;
	or    X5 (OR_AND_DXTIAND_DTIX, AND_DXTI, AND_DTIX) ;
	not    X6 (TEX, dTE) ;

	specify

		if (TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPQX9_CP_R_Q_R,`HS65_LS_SDFPQX9_CP_R_Q_F);
		if (!TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPQX9_CP_R_Q_R,`HS65_LS_SDFPQX9_CP_R_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, TEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPQX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPQX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXTIAND_DTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPQX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPQX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPQX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPQX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, dTE, dCP, dTI);
		$width(negedge CP, `HS65_LS_SDFPQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP, `HS65_LS_SDFPQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQNTX18_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQNTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQNTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQNTX18_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNTX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNTX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_RN_PWL 0.01
`define HS65_LS_SDFPRQNTX18_CP_PWH 0.01
`define HS65_LS_SDFPRQNTX18_CP_PWL 0.01
`define HS65_LS_SDFPRQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQNTX18 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX18_CP_R_QN_R, `HS65_LS_SDFPRQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX18_CP_R_TQ_R, `HS65_LS_SDFPRQNTX18_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNTX18_RN_F_QN_R,`HS65_LS_SDFPRQNTX18_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQNTX18_RN_F_TQ_F,`HS65_LS_SDFPRQNTX18_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX18_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX18_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQNTX18_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQNTX18_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQNTX18_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQNTX18_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQNTX27_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQNTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQNTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQNTX27_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNTX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNTX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_RN_PWL 0.01
`define HS65_LS_SDFPRQNTX27_CP_PWH 0.01
`define HS65_LS_SDFPRQNTX27_CP_PWL 0.01
`define HS65_LS_SDFPRQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQNTX27 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX27_CP_R_QN_R, `HS65_LS_SDFPRQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX27_CP_R_TQ_R, `HS65_LS_SDFPRQNTX27_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNTX27_RN_F_QN_R,`HS65_LS_SDFPRQNTX27_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQNTX27_RN_F_TQ_F,`HS65_LS_SDFPRQNTX27_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX27_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX27_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQNTX27_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQNTX27_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQNTX27_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQNTX27_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQNTX35_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQNTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQNTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQNTX35_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNTX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNTX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_RN_PWL 0.01
`define HS65_LS_SDFPRQNTX35_CP_PWH 0.01
`define HS65_LS_SDFPRQNTX35_CP_PWL 0.01
`define HS65_LS_SDFPRQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQNTX35 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX35_CP_R_QN_R, `HS65_LS_SDFPRQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX35_CP_R_TQ_R, `HS65_LS_SDFPRQNTX35_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNTX35_RN_F_QN_R,`HS65_LS_SDFPRQNTX35_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQNTX35_RN_F_TQ_F,`HS65_LS_SDFPRQNTX35_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX35_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX35_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQNTX35_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQNTX35_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQNTX35_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQNTX35_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQNTX4_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQNTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQNTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQNTX4_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNTX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNTX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNTX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_RN_PWL 0.01
`define HS65_LS_SDFPRQNTX4_CP_PWH 0.01
`define HS65_LS_SDFPRQNTX4_CP_PWL 0.01
`define HS65_LS_SDFPRQNTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQNTX4 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX4_CP_R_QN_R, `HS65_LS_SDFPRQNTX4_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX4_CP_R_TQ_R, `HS65_LS_SDFPRQNTX4_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNTX4_RN_F_QN_R,`HS65_LS_SDFPRQNTX4_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQNTX4_RN_F_TQ_F,`HS65_LS_SDFPRQNTX4_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX4_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQNTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX4_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQNTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX4_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQNTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX4_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQNTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQNTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQNTX4_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQNTX4_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQNTX4_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQNTX4_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQNTX4_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQNTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQNTX9_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQNTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQNTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQNTX9_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNTX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNTX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNTX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_RN_PWL 0.01
`define HS65_LS_SDFPRQNTX9_CP_PWH 0.01
`define HS65_LS_SDFPRQNTX9_CP_PWL 0.01
`define HS65_LS_SDFPRQNTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQNTX9 (QN, TQ, D, CP, RN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;

`ifdef functional
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);
`else
	reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX9_CP_R_QN_R, `HS65_LS_SDFPRQNTX9_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQNTX9_CP_R_TQ_R, `HS65_LS_SDFPRQNTX9_CP_R_TQ_F);
      (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNTX9_RN_F_QN_R,`HS65_LS_SDFPRQNTX9_RN_F_QN_R);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQNTX9_RN_F_TQ_F,`HS65_LS_SDFPRQNTX9_RN_F_TQ_F);
 
        $setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX9_TE_CP_HOLD_posedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQNTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX9_TE_CP_HOLD_negedge_posedge,Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQNTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX9_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQNTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX9_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQNTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQNTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQNTX9_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQNTX9_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQNTX9_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQNTX9_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQNTX9_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQNTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQNX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNX18_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX18_RN_PWL 0.01
`define HS65_LS_SDFPRQNX18_CP_PWL 0.01
`define HS65_LS_SDFPRQNX18_CP_PWH 0.01

module HS65_LS_SDFPRQNX18 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPRQNX18_CP_R_QN_R,`HS65_LS_SDFPRQNX18_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPRQNX18_CP_R_QN_R,`HS65_LS_SDFPRQNX18_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNX18_RN_F_QN_R,`HS65_LS_SDFPRQNX18_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQNX18_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQNX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQNX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQNX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNX27_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX27_RN_PWL 0.01
`define HS65_LS_SDFPRQNX27_CP_PWL 0.01
`define HS65_LS_SDFPRQNX27_CP_PWH 0.01

module HS65_LS_SDFPRQNX27 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPRQNX27_CP_R_QN_R,`HS65_LS_SDFPRQNX27_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPRQNX27_CP_R_QN_R,`HS65_LS_SDFPRQNX27_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNX27_RN_F_QN_R,`HS65_LS_SDFPRQNX27_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQNX27_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQNX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQNX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQNX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNX35_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX35_RN_PWL 0.01
`define HS65_LS_SDFPRQNX35_CP_PWL 0.01
`define HS65_LS_SDFPRQNX35_CP_PWH 0.01

module HS65_LS_SDFPRQNX35 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPRQNX35_CP_R_QN_R,`HS65_LS_SDFPRQNX35_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPRQNX35_CP_R_QN_R,`HS65_LS_SDFPRQNX35_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNX35_RN_F_QN_R,`HS65_LS_SDFPRQNX35_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQNX35_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQNX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQNX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQNX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNX4_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX4_RN_PWL 0.01
`define HS65_LS_SDFPRQNX4_CP_PWL 0.01
`define HS65_LS_SDFPRQNX4_CP_PWH 0.01

module HS65_LS_SDFPRQNX4 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPRQNX4_CP_R_QN_R,`HS65_LS_SDFPRQNX4_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPRQNX4_CP_R_QN_R,`HS65_LS_SDFPRQNX4_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNX4_RN_F_QN_R,`HS65_LS_SDFPRQNX4_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQNX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQNX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQNX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQNX4_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQNX4_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQNX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQNX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPRQNX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPRQNX9_RN_F_QN_R 0.1
`define HS65_LS_SDFPRQNX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQNX9_RN_PWL 0.01
`define HS65_LS_SDFPRQNX9_CP_PWL 0.01
`define HS65_LS_SDFPRQNX9_CP_PWH 0.01

module HS65_LS_SDFPRQNX9 (QN, D, CP, RN, TI, TE);

	output QN;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPRQNX9_CP_R_QN_R,`HS65_LS_SDFPRQNX9_CP_R_QN_F);
		if (RN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPRQNX9_CP_R_QN_R,`HS65_LS_SDFPRQNX9_CP_R_QN_F);
		 (negedge RN => (QN +: 1'b1)) = (`HS65_LS_SDFPRQNX9_RN_F_QN_R,`HS65_LS_SDFPRQNX9_RN_F_QN_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQNX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQNX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQNX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQNX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQNX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQNX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQNX9_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQNX9_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQNX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQTX18_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQTX18_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQTX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQTX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQTX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_RN_PWL 0.01
`define HS65_LS_SDFPRQTX18_CP_PWH 0.01
`define HS65_LS_SDFPRQTX18_CP_PWL 0.01
`define HS65_LS_SDFPRQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQTX18 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX18_CP_R_Q_R, `HS65_LS_SDFPRQTX18_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX18_CP_R_TQ_R, `HS65_LS_SDFPRQTX18_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQTX18_RN_F_Q_F,`HS65_LS_SDFPRQTX18_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQTX18_RN_F_TQ_F,`HS65_LS_SDFPRQTX18_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPRQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQTX18_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPRQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQTX18_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPRQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQTX18_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQTX18_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQTX18_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQTX18_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQTX27_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQTX27_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQTX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQTX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQTX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_RN_PWL 0.01
`define HS65_LS_SDFPRQTX27_CP_PWH 0.01
`define HS65_LS_SDFPRQTX27_CP_PWL 0.01
`define HS65_LS_SDFPRQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQTX27 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX27_CP_R_Q_R, `HS65_LS_SDFPRQTX27_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX27_CP_R_TQ_R, `HS65_LS_SDFPRQTX27_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQTX27_RN_F_Q_F,`HS65_LS_SDFPRQTX27_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQTX27_RN_F_TQ_F,`HS65_LS_SDFPRQTX27_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPRQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQTX27_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPRQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQTX27_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPRQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQTX27_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQTX27_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQTX27_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQTX27_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQTX35_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQTX35_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQTX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQTX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQTX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_RN_PWL 0.01
`define HS65_LS_SDFPRQTX35_CP_PWH 0.01
`define HS65_LS_SDFPRQTX35_CP_PWL 0.01
`define HS65_LS_SDFPRQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQTX35 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX35_CP_R_Q_R, `HS65_LS_SDFPRQTX35_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX35_CP_R_TQ_R, `HS65_LS_SDFPRQTX35_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQTX35_RN_F_Q_F,`HS65_LS_SDFPRQTX35_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQTX35_RN_F_TQ_F,`HS65_LS_SDFPRQTX35_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPRQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQTX35_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPRQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQTX35_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPRQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQTX35_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQTX35_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQTX35_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQTX35_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQTX4_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQTX4_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQTX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQTX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQTX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_RN_PWL 0.01
`define HS65_LS_SDFPRQTX4_CP_PWH 0.01
`define HS65_LS_SDFPRQTX4_CP_PWL 0.01
`define HS65_LS_SDFPRQTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQTX4 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX4_CP_R_Q_R, `HS65_LS_SDFPRQTX4_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX4_CP_R_TQ_R, `HS65_LS_SDFPRQTX4_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQTX4_RN_F_Q_F,`HS65_LS_SDFPRQTX4_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQTX4_RN_F_TQ_F,`HS65_LS_SDFPRQTX4_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPRQTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX4_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX4_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX4_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX4_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQTX4_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPRQTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQTX4_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPRQTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQTX4_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQTX4_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQTX4_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQTX4_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQTX4_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPRQTX9_RN_F_TQ_F 0.1
`define HS65_LS_SDFPRQTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPRQTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPRQTX9_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQTX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQTX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQTX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_RN_PWL 0.01
`define HS65_LS_SDFPRQTX9_CP_PWH 0.01
`define HS65_LS_SDFPRQTX9_CP_PWL 0.01
`define HS65_LS_SDFPRQTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPRQTX9 (Q, TQ, D, CP, RN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input RN;
   input TI;
   input TE;



`ifdef functional
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, RN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
 reg Notifier;

   CORE65LPSVT_U_MUX2 u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_RN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dRN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndRNTEX_, dRN, TEX);
   and  (AndRNTE_, dRN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_RN_, XorDTI_, dRN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   or   (DorTIonTE, AndTETI, AndTEXD);

   specify
  (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX9_CP_R_Q_R, `HS65_LS_SDFPRQTX9_CP_R_Q_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPRQTX9_CP_R_TQ_R, `HS65_LS_SDFPRQTX9_CP_R_TQ_F);
      (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQTX9_RN_F_Q_F,`HS65_LS_SDFPRQTX9_RN_F_Q_F);
      (negedge RN => (TQ +: 1'b0)) = (`HS65_LS_SDFPRQTX9_RN_F_TQ_F,`HS65_LS_SDFPRQTX9_RN_F_TQ_F);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPRQTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX9_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPRQTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX9_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_RN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPRQTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQTX9_TI_CP_HOLD_posedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPRQTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQTX9_TI_CP_HOLD_negedge_posedge, Notifier,,AndRNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPRQTX9_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPRQTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPRQTX9_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPRQTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndRNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPRQTX9_CP_PWL, 0, Notifier);
      $width(posedge CP &&& RN, `HS65_LS_SDFPRQTX9_CP_PWH, 0, Notifier);
      $width(negedge RN, `HS65_LS_SDFPRQTX9_RN_PWL, 0, Notifier);
        $recrem(posedge RN, posedge CP , `HS65_LS_SDFPRQTX9_RN_CP_REC_posedge_posedge,`HS65_LS_SDFPRQTX9_RN_CP_REM_posedge_posedge, Notifier,,Mux21DTITE_,dRN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPRQTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQX18_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX18_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQX18_RN_PWL 0.01
`define HS65_LS_SDFPRQX18_CP_PWL 0.01
`define HS65_LS_SDFPRQX18_CP_PWH 0.01

module HS65_LS_SDFPRQX18 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPRQX18_CP_R_Q_R,`HS65_LS_SDFPRQX18_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPRQX18_CP_R_Q_R,`HS65_LS_SDFPRQX18_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQX18_RN_F_Q_F,`HS65_LS_SDFPRQX18_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQX18_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQX18_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQX18_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQX27_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX27_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQX27_RN_PWL 0.01
`define HS65_LS_SDFPRQX27_CP_PWL 0.01
`define HS65_LS_SDFPRQX27_CP_PWH 0.01

module HS65_LS_SDFPRQX27 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPRQX27_CP_R_Q_R,`HS65_LS_SDFPRQX27_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPRQX27_CP_R_Q_R,`HS65_LS_SDFPRQX27_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQX27_RN_F_Q_F,`HS65_LS_SDFPRQX27_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQX27_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQX27_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQX27_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQX35_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX35_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQX35_RN_PWL 0.01
`define HS65_LS_SDFPRQX35_CP_PWL 0.01
`define HS65_LS_SDFPRQX35_CP_PWH 0.01

module HS65_LS_SDFPRQX35 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPRQX35_CP_R_Q_R,`HS65_LS_SDFPRQX35_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPRQX35_CP_R_Q_R,`HS65_LS_SDFPRQX35_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQX35_RN_F_Q_F,`HS65_LS_SDFPRQX35_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQX35_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQX35_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQX35_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQX4_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX4_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQX4_RN_PWL 0.01
`define HS65_LS_SDFPRQX4_CP_PWL 0.01
`define HS65_LS_SDFPRQX4_CP_PWH 0.01

module HS65_LS_SDFPRQX4 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPRQX4_CP_R_Q_R,`HS65_LS_SDFPRQX4_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPRQX4_CP_R_Q_R,`HS65_LS_SDFPRQX4_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQX4_RN_F_Q_F,`HS65_LS_SDFPRQX4_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQX4_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQX4_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQX4_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPRQX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPRQX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPRQX9_RN_F_Q_F 0.1
`define HS65_LS_SDFPRQX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPRQX9_RN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_RN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPRQX9_RN_PWL 0.01
`define HS65_LS_SDFPRQX9_CP_PWL 0.01
`define HS65_LS_SDFPRQX9_CP_PWH 0.01

module HS65_LS_SDFPRQX9 (Q, D, CP, RN, TI, TE);

	output Q;
	input D;
	input CP;
	input RN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, CP, RN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_RN_NOTI   U2 (IQ, INTERNAL1, dCP, dRN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (TEX, dTE) ;
	and    X2 (AND_DTEX, dD, TEX) ;
	and    X3 (AND_TETI, dTE, dTI) ;
	or    X4 (OR_AND_DTEXAND_TETI, AND_DTEX, AND_TETI) ;
	and    X5 (AND_RNTE, dRN, dTE) ;
	not    X6 (DX, dD) ;
	and    X7 (AND_DXRNTI, DX, dRN, dTI) ;
	not    X8 (TIX, dTI) ;
	and    X9 (AND_DRNTIX, dD, dRN, TIX) ;
	or    X10 (OR_AND_DXRNTIAND_DRNTIX, AND_DXRNTI, AND_DRNTIX) ;
	and    X11 (AND_RNTEX, dRN, TEX) ;

	specify

		if (RN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPRQX9_CP_R_Q_R,`HS65_LS_SDFPRQX9_CP_R_Q_F);
		if (RN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPRQX9_CP_R_Q_R,`HS65_LS_SDFPRQX9_CP_R_Q_F);
		 (negedge RN => (Q +: 1'b0)) = (`HS65_LS_SDFPRQX9_RN_F_Q_F,`HS65_LS_SDFPRQX9_RN_F_Q_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPRQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPRQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPRQX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPRQX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXRNTIAND_DRNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPRQX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPRQX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPRQX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPRQX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_RNTE, dCP, dTI);
		$recrem(posedge RN, posedge CP, `HS65_LS_SDFPRQX9_RN_CP_REC_posedge_posedge, `HS65_LS_SDFPRQX9_RN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DTEXAND_TETI, dRN, dCP);
		$width(negedge RN, `HS65_LS_SDFPRQX9_RN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& RN, `HS65_LS_SDFPRQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& RN, `HS65_LS_SDFPRQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPRQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQNTX18_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQNTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQNTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQNTX18_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNTX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNTX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNTX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_SN_PWL 0.01
`define HS65_LS_SDFPSQNTX18_CP_PWH 0.01
`define HS65_LS_SDFPSQNTX18_CP_PWL 0.01
`define HS65_LS_SDFPSQNTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQNTX18 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX18_CP_R_QN_R, `HS65_LS_SDFPSQNTX18_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX18_CP_R_TQ_R, `HS65_LS_SDFPSQNTX18_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNTX18_SN_F_QN_F,`HS65_LS_SDFPSQNTX18_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQNTX18_SN_F_TQ_R,`HS65_LS_SDFPSQNTX18_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQNTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQNTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQNTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQNTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQNTX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQNTX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQNTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQNTX18_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQNTX18_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQNTX18_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQNTX18_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPSQNTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQNTX27_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQNTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQNTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQNTX27_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNTX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNTX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNTX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_SN_PWL 0.01
`define HS65_LS_SDFPSQNTX27_CP_PWH 0.01
`define HS65_LS_SDFPSQNTX27_CP_PWL 0.01
`define HS65_LS_SDFPSQNTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQNTX27 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX27_CP_R_QN_R, `HS65_LS_SDFPSQNTX27_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX27_CP_R_TQ_R, `HS65_LS_SDFPSQNTX27_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNTX27_SN_F_QN_F,`HS65_LS_SDFPSQNTX27_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQNTX27_SN_F_TQ_R,`HS65_LS_SDFPSQNTX27_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQNTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQNTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQNTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQNTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQNTX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQNTX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQNTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQNTX27_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQNTX27_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQNTX27_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQNTX27_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPSQNTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQNTX35_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQNTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQNTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQNTX35_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNTX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNTX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNTX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_SN_PWL 0.01
`define HS65_LS_SDFPSQNTX35_CP_PWH 0.01
`define HS65_LS_SDFPSQNTX35_CP_PWL 0.01
`define HS65_LS_SDFPSQNTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQNTX35 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX35_CP_R_QN_R, `HS65_LS_SDFPSQNTX35_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX35_CP_R_TQ_R, `HS65_LS_SDFPSQNTX35_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNTX35_SN_F_QN_F,`HS65_LS_SDFPSQNTX35_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQNTX35_SN_F_TQ_R,`HS65_LS_SDFPSQNTX35_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQNTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQNTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQNTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQNTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQNTX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQNTX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQNTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQNTX35_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQNTX35_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQNTX35_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQNTX35_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPSQNTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQNTX4_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQNTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQNTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQNTX4_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNTX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNTX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNTX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_SN_PWL 0.01
`define HS65_LS_SDFPSQNTX4_CP_PWH 0.01
`define HS65_LS_SDFPSQNTX4_CP_PWL 0.01
`define HS65_LS_SDFPSQNTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQNTX4 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX4_CP_R_QN_R, `HS65_LS_SDFPSQNTX4_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX4_CP_R_TQ_R, `HS65_LS_SDFPSQNTX4_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNTX4_SN_F_QN_F,`HS65_LS_SDFPSQNTX4_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQNTX4_SN_F_TQ_R,`HS65_LS_SDFPSQNTX4_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQNTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX4_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQNTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX4_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQNTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX4_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQNTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX4_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQNTX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQNTX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQNTX4_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQNTX4_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQNTX4_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQNTX4_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQNTX4_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPSQNTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQNTX9_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQNTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQNTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQNTX9_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNTX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNTX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNTX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_SN_PWL 0.01
`define HS65_LS_SDFPSQNTX9_CP_PWH 0.01
`define HS65_LS_SDFPSQNTX9_CP_PWL 0.01
`define HS65_LS_SDFPSQNTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQNTX9 (QN, TQ, D, CP, SN, TI, TE);

   output QN;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;


`ifdef functional
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

`else
	  reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u3 (TQ, IQ);
   not #1 u4 (QN, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   // if(TE==0) DorTIonTE = D; else DorTIonTE = TI ;
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
      (posedge CP => (QN -: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX9_CP_R_QN_R, `HS65_LS_SDFPSQNTX9_CP_R_QN_F);
      (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQNTX9_CP_R_TQ_R, `HS65_LS_SDFPSQNTX9_CP_R_TQ_F);
      (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNTX9_SN_F_QN_F,`HS65_LS_SDFPSQNTX9_SN_F_QN_F);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQNTX9_SN_F_TQ_R,`HS65_LS_SDFPSQNTX9_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQNTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX9_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQNTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX9_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQNTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX9_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQNTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX9_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQNTX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQNTX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQNTX9_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQNTX9_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQNTX9_SN_PWL, 0, Notifier);
        $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQNTX9_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQNTX9_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);
 
   endspecify
`endif


endmodule // HS65_LS_SDFPSQNTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQNX18_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNX18_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNX18_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX18_SN_PWL 0.01
`define HS65_LS_SDFPSQNX18_CP_PWL 0.01
`define HS65_LS_SDFPSQNX18_CP_PWH 0.01

module HS65_LS_SDFPSQNX18 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPSQNX18_CP_R_QN_R,`HS65_LS_SDFPSQNX18_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPSQNX18_CP_R_QN_R,`HS65_LS_SDFPSQNX18_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNX18_SN_F_QN_F,`HS65_LS_SDFPSQNX18_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQNX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQNX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQNX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQNX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQNX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQNX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQNX18_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQNX18_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQNX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQNX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQNX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQNX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQNX27_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNX27_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNX27_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX27_SN_PWL 0.01
`define HS65_LS_SDFPSQNX27_CP_PWL 0.01
`define HS65_LS_SDFPSQNX27_CP_PWH 0.01

module HS65_LS_SDFPSQNX27 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPSQNX27_CP_R_QN_R,`HS65_LS_SDFPSQNX27_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPSQNX27_CP_R_QN_R,`HS65_LS_SDFPSQNX27_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNX27_SN_F_QN_F,`HS65_LS_SDFPSQNX27_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQNX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQNX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQNX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQNX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQNX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQNX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQNX27_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQNX27_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQNX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQNX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQNX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQNX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQNX35_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNX35_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNX35_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX35_SN_PWL 0.01
`define HS65_LS_SDFPSQNX35_CP_PWL 0.01
`define HS65_LS_SDFPSQNX35_CP_PWH 0.01

module HS65_LS_SDFPSQNX35 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPSQNX35_CP_R_QN_R,`HS65_LS_SDFPSQNX35_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPSQNX35_CP_R_QN_R,`HS65_LS_SDFPSQNX35_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNX35_SN_F_QN_F,`HS65_LS_SDFPSQNX35_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQNX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQNX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQNX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQNX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQNX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQNX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQNX35_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQNX35_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQNX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQNX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQNX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQNX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQNX4_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNX4_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNX4_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX4_SN_PWL 0.01
`define HS65_LS_SDFPSQNX4_CP_PWL 0.01
`define HS65_LS_SDFPSQNX4_CP_PWH 0.01

module HS65_LS_SDFPSQNX4 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPSQNX4_CP_R_QN_R,`HS65_LS_SDFPSQNX4_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPSQNX4_CP_R_QN_R,`HS65_LS_SDFPSQNX4_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNX4_SN_F_QN_F,`HS65_LS_SDFPSQNX4_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQNX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQNX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQNX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQNX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQNX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQNX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQNX4_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQNX4_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQNX4_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQNX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQNX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQNX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQNX9_CP_R_QN_R 0.1
`define HS65_LS_SDFPSQNX9_CP_R_QN_F 0.1
`define HS65_LS_SDFPSQNX9_SN_F_QN_F 0.1
`define HS65_LS_SDFPSQNX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQNX9_SN_PWL 0.01
`define HS65_LS_SDFPSQNX9_CP_PWL 0.01
`define HS65_LS_SDFPSQNX9_CP_PWH 0.01

module HS65_LS_SDFPSQNX9 (QN, D, CP, SN, TI, TE);

	output QN;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	not   #1 U3 (QN, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (QN -: TI)) = (`HS65_LS_SDFPSQNX9_CP_R_QN_R,`HS65_LS_SDFPSQNX9_CP_R_QN_F);
		if (SN && !TE)  (posedge CP => (QN -: D)) = (`HS65_LS_SDFPSQNX9_CP_R_QN_R,`HS65_LS_SDFPSQNX9_CP_R_QN_F);
		 (negedge SN => (QN +: 1'b0)) = (`HS65_LS_SDFPSQNX9_SN_F_QN_F,`HS65_LS_SDFPSQNX9_SN_F_QN_F);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQNX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQNX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQNX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQNX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQNX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQNX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQNX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQNX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQNX9_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQNX9_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQNX9_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQNX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQNX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQNX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQTX18_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQTX18_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQTX18_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQTX18_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQTX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQTX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQTX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_SN_PWL 0.01
`define HS65_LS_SDFPSQTX18_CP_PWH 0.01
`define HS65_LS_SDFPSQTX18_CP_PWL 0.01
`define HS65_LS_SDFPSQTX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX18_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQTX18 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX18_CP_R_Q_R, `HS65_LS_SDFPSQTX18_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX18_CP_R_TQ_R, `HS65_LS_SDFPSQTX18_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQTX18_SN_F_Q_R,`HS65_LS_SDFPSQTX18_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQTX18_SN_F_TQ_R,`HS65_LS_SDFPSQTX18_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQTX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX18_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQTX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX18_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQTX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX18_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQTX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX18_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQTX18_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPSQTX18_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQTX18_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPSQTX18_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQTX18_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQTX18_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQTX18_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQTX18_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQTX18_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LS_SDFPSQTX18
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQTX27_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQTX27_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQTX27_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQTX27_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQTX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQTX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQTX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_SN_PWL 0.01
`define HS65_LS_SDFPSQTX27_CP_PWH 0.01
`define HS65_LS_SDFPSQTX27_CP_PWL 0.01
`define HS65_LS_SDFPSQTX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX27_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQTX27 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX27_CP_R_Q_R, `HS65_LS_SDFPSQTX27_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX27_CP_R_TQ_R, `HS65_LS_SDFPSQTX27_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQTX27_SN_F_Q_R,`HS65_LS_SDFPSQTX27_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQTX27_SN_F_TQ_R,`HS65_LS_SDFPSQTX27_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQTX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX27_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQTX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX27_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQTX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX27_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQTX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX27_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQTX27_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPSQTX27_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQTX27_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPSQTX27_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQTX27_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQTX27_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQTX27_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQTX27_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQTX27_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LS_SDFPSQTX27
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQTX35_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQTX35_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQTX35_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQTX35_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQTX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQTX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQTX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_SN_PWL 0.01
`define HS65_LS_SDFPSQTX35_CP_PWH 0.01
`define HS65_LS_SDFPSQTX35_CP_PWL 0.01
`define HS65_LS_SDFPSQTX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX35_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQTX35 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX35_CP_R_Q_R, `HS65_LS_SDFPSQTX35_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX35_CP_R_TQ_R, `HS65_LS_SDFPSQTX35_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQTX35_SN_F_Q_R,`HS65_LS_SDFPSQTX35_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQTX35_SN_F_TQ_R,`HS65_LS_SDFPSQTX35_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQTX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX35_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQTX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX35_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQTX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX35_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQTX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX35_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQTX35_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPSQTX35_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQTX35_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPSQTX35_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQTX35_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQTX35_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQTX35_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQTX35_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQTX35_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LS_SDFPSQTX35
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQTX4_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQTX4_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQTX4_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQTX4_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQTX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQTX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQTX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_SN_PWL 0.01
`define HS65_LS_SDFPSQTX4_CP_PWH 0.01
`define HS65_LS_SDFPSQTX4_CP_PWL 0.01
`define HS65_LS_SDFPSQTX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX4_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQTX4 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX4_CP_R_Q_R, `HS65_LS_SDFPSQTX4_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX4_CP_R_TQ_R, `HS65_LS_SDFPSQTX4_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQTX4_SN_F_Q_R,`HS65_LS_SDFPSQTX4_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQTX4_SN_F_TQ_R,`HS65_LS_SDFPSQTX4_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQTX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX4_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQTX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX4_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQTX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX4_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQTX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX4_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQTX4_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPSQTX4_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQTX4_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPSQTX4_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQTX4_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQTX4_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQTX4_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQTX4_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQTX4_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LS_SDFPSQTX4
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif
 

`define HS65_LS_SDFPSQTX9_SN_F_TQ_R 0.1
`define HS65_LS_SDFPSQTX9_CP_R_TQ_R 0.1
`define HS65_LS_SDFPSQTX9_CP_R_TQ_F 0.1
`define HS65_LS_SDFPSQTX9_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQTX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQTX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQTX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_SN_PWL 0.01
`define HS65_LS_SDFPSQTX9_CP_PWH 0.01
`define HS65_LS_SDFPSQTX9_CP_PWL 0.01
`define HS65_LS_SDFPSQTX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQTX9_TE_CP_HOLD_negedge_posedge 0.01

module HS65_LS_SDFPSQTX9 (Q, TQ, D, CP, SN, TI, TE);

   output Q;
   output TQ;
   input D;
   input CP;
   input SN;
   input TI;
   input TE;



`ifdef functional
reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, D, TI, TE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, CP, SN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

`else
      reg Notifier;

   CORE65LPSVT_U_MUX2  u0 (Mux21DTITE_, dD, dTI, dTE);

   CORE65LPSVT_U_FD_P_SN_NOTI u1 (   // Verilog Seq UDP
      IQ, Mux21DTITE_, dCP, dSN, Notifier);

   buf #1 u2 (Q, IQ);
   buf #1 u3 (TQ, IQ);

   not  (TEX, dTE);
   and  (AndSNTEX_, dSN, TEX);
   and  (AndSNTE_, dSN, dTE);
   xor  (XorDTI_, dD, dTI);
   and  (AndXorDTI_SN_, XorDTI_, dSN);
   and  (AndTETI, dTE, dTI);
   and  (AndTEXD, TEX, dD);
   nor  (D_orTI_onTE, AndTETI, AndTEXD);

   specify
       (posedge CP => (Q +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX9_CP_R_Q_R, `HS65_LS_SDFPSQTX9_CP_R_Q_F);
       (posedge CP => (TQ +: Mux21DTITE_)) = (`HS65_LS_SDFPSQTX9_CP_R_TQ_R, `HS65_LS_SDFPSQTX9_CP_R_TQ_F);
      (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQTX9_SN_F_Q_R,`HS65_LS_SDFPSQTX9_SN_F_Q_R);
      (negedge SN => (TQ +: 1'b1)) = (`HS65_LS_SDFPSQTX9_SN_F_TQ_R,`HS65_LS_SDFPSQTX9_SN_F_TQ_R);
 
        $setuphold(posedge CP , posedge TE, `HS65_LS_SDFPSQTX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX9_TE_CP_HOLD_posedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
        $setuphold(posedge CP , negedge TE, `HS65_LS_SDFPSQTX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX9_TE_CP_HOLD_negedge_posedge, Notifier,,AndXorDTI_SN_,dCP,dTE);
 
        $setuphold(posedge CP , posedge TI, `HS65_LS_SDFPSQTX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQTX9_TI_CP_HOLD_posedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
        $setuphold(posedge CP , negedge TI, `HS65_LS_SDFPSQTX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQTX9_TI_CP_HOLD_negedge_posedge, Notifier,,AndSNTE_,dCP,dTI);
 
        $setuphold(posedge CP , posedge D, `HS65_LS_SDFPSQTX9_D_CP_SETUP_posedge_posedge,`HS65_LS_SDFPSQTX9_D_CP_HOLD_posedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
        $setuphold(posedge CP , negedge D, `HS65_LS_SDFPSQTX9_D_CP_SETUP_negedge_posedge,`HS65_LS_SDFPSQTX9_D_CP_HOLD_negedge_posedge, Notifier,,AndSNTEX_,dCP,dD);
 
      $width(negedge CP, `HS65_LS_SDFPSQTX9_CP_PWL, 0, Notifier);
      $width(posedge CP &&& SN, `HS65_LS_SDFPSQTX9_CP_PWH, 0, Notifier);
      $width(negedge SN, `HS65_LS_SDFPSQTX9_SN_PWL, 0, Notifier);
      $recrem(posedge SN, posedge CP , `HS65_LS_SDFPSQTX9_SN_CP_REC_posedge_posedge,`HS65_LS_SDFPSQTX9_SN_CP_REM_posedge_posedge, Notifier,,D_orTI_onTE,dSN,dCP);

   endspecify
`endif


endmodule // HS65_LS_SDFPSQTX9
`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQX18_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQX18_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQX18_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQX18_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX18_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQX18_SN_PWL 0.01
`define HS65_LS_SDFPSQX18_CP_PWL 0.01
`define HS65_LS_SDFPSQX18_CP_PWH 0.01

module HS65_LS_SDFPSQX18 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPSQX18_CP_R_Q_R,`HS65_LS_SDFPSQX18_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPSQX18_CP_R_Q_R,`HS65_LS_SDFPSQX18_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQX18_SN_F_Q_R,`HS65_LS_SDFPSQX18_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQX18_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX18_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQX18_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX18_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQX18_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX18_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQX18_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX18_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQX18_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX18_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQX18_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX18_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQX18_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQX18_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQX18_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQX18_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQX18_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQX18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQX27_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQX27_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQX27_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQX27_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX27_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQX27_SN_PWL 0.01
`define HS65_LS_SDFPSQX27_CP_PWL 0.01
`define HS65_LS_SDFPSQX27_CP_PWH 0.01

module HS65_LS_SDFPSQX27 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPSQX27_CP_R_Q_R,`HS65_LS_SDFPSQX27_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPSQX27_CP_R_Q_R,`HS65_LS_SDFPSQX27_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQX27_SN_F_Q_R,`HS65_LS_SDFPSQX27_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQX27_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX27_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQX27_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX27_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQX27_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX27_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQX27_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX27_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQX27_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX27_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQX27_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX27_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQX27_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQX27_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQX27_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQX27_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQX27_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQX27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQX35_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQX35_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQX35_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQX35_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX35_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQX35_SN_PWL 0.01
`define HS65_LS_SDFPSQX35_CP_PWL 0.01
`define HS65_LS_SDFPSQX35_CP_PWH 0.01

module HS65_LS_SDFPSQX35 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPSQX35_CP_R_Q_R,`HS65_LS_SDFPSQX35_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPSQX35_CP_R_Q_R,`HS65_LS_SDFPSQX35_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQX35_SN_F_Q_R,`HS65_LS_SDFPSQX35_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQX35_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX35_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQX35_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX35_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQX35_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX35_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQX35_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX35_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQX35_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX35_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQX35_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX35_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQX35_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQX35_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQX35_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQX35_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQX35_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQX35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQX4_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQX4_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQX4_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQX4_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX4_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQX4_SN_PWL 0.01
`define HS65_LS_SDFPSQX4_CP_PWL 0.01
`define HS65_LS_SDFPSQX4_CP_PWH 0.01

module HS65_LS_SDFPSQX4 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPSQX4_CP_R_Q_R,`HS65_LS_SDFPSQX4_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPSQX4_CP_R_Q_R,`HS65_LS_SDFPSQX4_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQX4_SN_F_Q_R,`HS65_LS_SDFPSQX4_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQX4_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX4_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQX4_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX4_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQX4_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX4_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQX4_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX4_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQX4_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX4_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQX4_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX4_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQX4_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQX4_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQX4_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQX4_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQX4_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQX4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_unit
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_SDFPSQX9_CP_R_Q_R 0.1
`define HS65_LS_SDFPSQX9_CP_R_Q_F 0.1
`define HS65_LS_SDFPSQX9_SN_F_Q_R 0.1
`define HS65_LS_SDFPSQX9_TI_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TI_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TI_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TI_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TE_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TE_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TE_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_TE_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_D_CP_HOLD_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_D_CP_HOLD_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_D_CP_SETUP_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_D_CP_SETUP_negedge_posedge 0.01
`define HS65_LS_SDFPSQX9_SN_CP_REC_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_SN_CP_REM_posedge_posedge 0.01
`define HS65_LS_SDFPSQX9_SN_PWL 0.01
`define HS65_LS_SDFPSQX9_CP_PWL 0.01
`define HS65_LS_SDFPSQX9_CP_PWH 0.01

module HS65_LS_SDFPSQX9 (Q, D, CP, SN, TI, TE);

	output Q;
	input D;
	input CP;
	input SN;
	input TI;
	input TE;

`ifdef functional
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, D, TI, TE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, CP, SN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

`else
	reg  NOTIFIER;
	CORE65LPSVT_U_MUX2   U1 (INTERNAL1, dD, dTI, dTE) ;
	CORE65LPSVT_U_FD_P_SN_NOTI   U2 (IQ, INTERNAL1, dCP, dSN , NOTIFIER) ;
	buf   #1 U3 (Q, IQ) ;

	not    X1 (DX, dD) ;
	not    X2 (TEX, dTE) ;
	and    X3 (AND_DXTEX, DX, TEX) ;
	not    X4 (TIX, dTI) ;
	and    X5 (AND_TETIX, dTE, TIX) ;
	or    X6 (OR_AND_DXTEXAND_TETIX, AND_DXTEX, AND_TETIX) ;
	and    X7 (AND_SNTE, dSN, dTE) ;
	and    X8 (AND_DXSNTI, DX, dSN, dTI) ;
	and    X9 (AND_DSNTIX, dD, dSN, TIX) ;
	or    X10 (OR_AND_DXSNTIAND_DSNTIX, AND_DXSNTI, AND_DSNTIX) ;
	and    X11 (AND_SNTEX, dSN, TEX) ;

	specify

		if (SN && TE)  (posedge CP => (Q +: TI)) = (`HS65_LS_SDFPSQX9_CP_R_Q_R,`HS65_LS_SDFPSQX9_CP_R_Q_F);
		if (SN && !TE)  (posedge CP => (Q +: D)) = (`HS65_LS_SDFPSQX9_CP_R_Q_R,`HS65_LS_SDFPSQX9_CP_R_Q_F);
		 (negedge SN => (Q +: 1'b1)) = (`HS65_LS_SDFPSQX9_SN_F_Q_R,`HS65_LS_SDFPSQX9_SN_F_Q_R);

		$setuphold(posedge CP, posedge D, `HS65_LS_SDFPSQX9_D_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX9_D_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, negedge D, `HS65_LS_SDFPSQX9_D_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX9_D_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTEX, dCP, dD);
		$setuphold(posedge CP, posedge TE, `HS65_LS_SDFPSQX9_TE_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX9_TE_CP_HOLD_posedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, negedge TE, `HS65_LS_SDFPSQX9_TE_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX9_TE_CP_HOLD_negedge_posedge , NOTIFIER,, OR_AND_DXSNTIAND_DSNTIX, dCP, dTE);
		$setuphold(posedge CP, posedge TI, `HS65_LS_SDFPSQX9_TI_CP_SETUP_posedge_posedge, `HS65_LS_SDFPSQX9_TI_CP_HOLD_posedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$setuphold(posedge CP, negedge TI, `HS65_LS_SDFPSQX9_TI_CP_SETUP_negedge_posedge, `HS65_LS_SDFPSQX9_TI_CP_HOLD_negedge_posedge , NOTIFIER,, AND_SNTE, dCP, dTI);
		$recrem(posedge SN, posedge CP, `HS65_LS_SDFPSQX9_SN_CP_REC_posedge_posedge, `HS65_LS_SDFPSQX9_SN_CP_REM_posedge_posedge , NOTIFIER,, OR_AND_DXTEXAND_TETIX, dSN, dCP);
		$width(negedge SN, `HS65_LS_SDFPSQX9_SN_PWL ,0, NOTIFIER);
		$width(negedge CP &&& SN, `HS65_LS_SDFPSQX9_CP_PWL ,0, NOTIFIER);
		$width(posedge CP &&& SN, `HS65_LS_SDFPSQX9_CP_PWH ,0, NOTIFIER);

	endspecify

`endif

endmodule // HS65_LS_SDFPSQX9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR2X18_A_R_Z_R_1 0.1
`define HS65_LS_XNOR2X18_A_F_Z_F_1 0.1
`define HS65_LS_XNOR2X18_A_R_Z_F_0 0.1
`define HS65_LS_XNOR2X18_A_F_Z_R_0 0.1
`define HS65_LS_XNOR2X18_B_R_Z_R_1 0.1
`define HS65_LS_XNOR2X18_B_F_Z_F_1 0.1
`define HS65_LS_XNOR2X18_B_R_Z_F_0 0.1
`define HS65_LS_XNOR2X18_B_F_Z_R_0 0.1

module HS65_LS_XNOR2X18 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LS_XNOR2X18_A_R_Z_R_1,`HS65_LS_XNOR2X18_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LS_XNOR2X18_A_F_Z_R_0,`HS65_LS_XNOR2X18_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LS_XNOR2X18_B_R_Z_R_1,`HS65_LS_XNOR2X18_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LS_XNOR2X18_B_F_Z_R_0,`HS65_LS_XNOR2X18_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_XNOR2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR2X27_A_R_Z_R_1 0.1
`define HS65_LS_XNOR2X27_A_F_Z_F_1 0.1
`define HS65_LS_XNOR2X27_A_R_Z_F_0 0.1
`define HS65_LS_XNOR2X27_A_F_Z_R_0 0.1
`define HS65_LS_XNOR2X27_B_R_Z_R_1 0.1
`define HS65_LS_XNOR2X27_B_F_Z_F_1 0.1
`define HS65_LS_XNOR2X27_B_R_Z_F_0 0.1
`define HS65_LS_XNOR2X27_B_F_Z_R_0 0.1

module HS65_LS_XNOR2X27 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LS_XNOR2X27_A_R_Z_R_1,`HS65_LS_XNOR2X27_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LS_XNOR2X27_A_F_Z_R_0,`HS65_LS_XNOR2X27_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LS_XNOR2X27_B_R_Z_R_1,`HS65_LS_XNOR2X27_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LS_XNOR2X27_B_F_Z_R_0,`HS65_LS_XNOR2X27_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_XNOR2X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR2X35_A_R_Z_R_1 0.1
`define HS65_LS_XNOR2X35_A_F_Z_F_1 0.1
`define HS65_LS_XNOR2X35_A_R_Z_F_0 0.1
`define HS65_LS_XNOR2X35_A_F_Z_R_0 0.1
`define HS65_LS_XNOR2X35_B_R_Z_R_1 0.1
`define HS65_LS_XNOR2X35_B_F_Z_F_1 0.1
`define HS65_LS_XNOR2X35_B_R_Z_F_0 0.1
`define HS65_LS_XNOR2X35_B_F_Z_R_0 0.1

module HS65_LS_XNOR2X35 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LS_XNOR2X35_A_R_Z_R_1,`HS65_LS_XNOR2X35_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LS_XNOR2X35_A_F_Z_R_0,`HS65_LS_XNOR2X35_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LS_XNOR2X35_B_R_Z_R_1,`HS65_LS_XNOR2X35_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LS_XNOR2X35_B_F_Z_R_0,`HS65_LS_XNOR2X35_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_XNOR2X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR2X4_A_R_Z_R_1 0.1
`define HS65_LS_XNOR2X4_A_F_Z_F_1 0.1
`define HS65_LS_XNOR2X4_A_R_Z_F_0 0.1
`define HS65_LS_XNOR2X4_A_F_Z_R_0 0.1
`define HS65_LS_XNOR2X4_B_R_Z_R_1 0.1
`define HS65_LS_XNOR2X4_B_F_Z_F_1 0.1
`define HS65_LS_XNOR2X4_B_R_Z_F_0 0.1
`define HS65_LS_XNOR2X4_B_F_Z_R_0 0.1

module HS65_LS_XNOR2X4 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LS_XNOR2X4_A_R_Z_R_1,`HS65_LS_XNOR2X4_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LS_XNOR2X4_A_F_Z_R_0,`HS65_LS_XNOR2X4_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LS_XNOR2X4_B_R_Z_R_1,`HS65_LS_XNOR2X4_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LS_XNOR2X4_B_F_Z_R_0,`HS65_LS_XNOR2X4_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_XNOR2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR2X9_A_R_Z_R_1 0.1
`define HS65_LS_XNOR2X9_A_F_Z_F_1 0.1
`define HS65_LS_XNOR2X9_A_R_Z_F_0 0.1
`define HS65_LS_XNOR2X9_A_F_Z_R_0 0.1
`define HS65_LS_XNOR2X9_B_R_Z_R_1 0.1
`define HS65_LS_XNOR2X9_B_F_Z_F_1 0.1
`define HS65_LS_XNOR2X9_B_R_Z_F_0 0.1
`define HS65_LS_XNOR2X9_B_F_Z_R_0 0.1

module HS65_LS_XNOR2X9 (Z, A, B);

	output Z;
	input A;
	input B;

	xor    U1 (INTERNAL1, A, B) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B) (A +=> Z) = (`HS65_LS_XNOR2X9_A_R_Z_R_1,`HS65_LS_XNOR2X9_A_F_Z_F_1);
		if (!B) (A -=> Z) = (`HS65_LS_XNOR2X9_A_F_Z_R_0,`HS65_LS_XNOR2X9_A_R_Z_F_0);
		if (A) (B +=> Z) = (`HS65_LS_XNOR2X9_B_R_Z_R_1,`HS65_LS_XNOR2X9_B_F_Z_F_1);
		if (!A) (B -=> Z) = (`HS65_LS_XNOR2X9_B_F_Z_R_0,`HS65_LS_XNOR2X9_B_R_Z_F_0);


	endspecify

endmodule // HS65_LS_XNOR2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR3X18_A_R_Z_F_11 0.1
`define HS65_LS_XNOR3X18_A_F_Z_R_11 0.1
`define HS65_LS_XNOR3X18_A_R_Z_F_00 0.1
`define HS65_LS_XNOR3X18_A_F_Z_R_00 0.1
`define HS65_LS_XNOR3X18_A_R_Z_R_01 0.1
`define HS65_LS_XNOR3X18_A_F_Z_F_01 0.1
`define HS65_LS_XNOR3X18_A_R_Z_R_10 0.1
`define HS65_LS_XNOR3X18_A_F_Z_F_10 0.1
`define HS65_LS_XNOR3X18_B_R_Z_F_11 0.1
`define HS65_LS_XNOR3X18_B_F_Z_R_11 0.1
`define HS65_LS_XNOR3X18_B_R_Z_F_00 0.1
`define HS65_LS_XNOR3X18_B_F_Z_R_00 0.1
`define HS65_LS_XNOR3X18_B_R_Z_R_01 0.1
`define HS65_LS_XNOR3X18_B_F_Z_F_01 0.1
`define HS65_LS_XNOR3X18_B_R_Z_R_10 0.1
`define HS65_LS_XNOR3X18_B_F_Z_F_10 0.1
`define HS65_LS_XNOR3X18_C_R_Z_F_11 0.1
`define HS65_LS_XNOR3X18_C_F_Z_R_11 0.1
`define HS65_LS_XNOR3X18_C_R_Z_F_00 0.1
`define HS65_LS_XNOR3X18_C_F_Z_R_00 0.1
`define HS65_LS_XNOR3X18_C_R_Z_R_01 0.1
`define HS65_LS_XNOR3X18_C_F_Z_F_01 0.1
`define HS65_LS_XNOR3X18_C_R_Z_R_10 0.1
`define HS65_LS_XNOR3X18_C_F_Z_F_10 0.1

module HS65_LS_XNOR3X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LS_XNOR3X18_A_F_Z_R_11,`HS65_LS_XNOR3X18_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LS_XNOR3X18_A_F_Z_R_00,`HS65_LS_XNOR3X18_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LS_XNOR3X18_A_R_Z_R_01,`HS65_LS_XNOR3X18_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LS_XNOR3X18_A_R_Z_R_10,`HS65_LS_XNOR3X18_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LS_XNOR3X18_B_F_Z_R_11,`HS65_LS_XNOR3X18_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LS_XNOR3X18_B_F_Z_R_00,`HS65_LS_XNOR3X18_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LS_XNOR3X18_B_R_Z_R_01,`HS65_LS_XNOR3X18_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LS_XNOR3X18_B_R_Z_R_10,`HS65_LS_XNOR3X18_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LS_XNOR3X18_C_F_Z_R_11,`HS65_LS_XNOR3X18_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LS_XNOR3X18_C_F_Z_R_00,`HS65_LS_XNOR3X18_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LS_XNOR3X18_C_R_Z_R_01,`HS65_LS_XNOR3X18_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LS_XNOR3X18_C_R_Z_R_10,`HS65_LS_XNOR3X18_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_XNOR3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR3X27_A_R_Z_F_11 0.1
`define HS65_LS_XNOR3X27_A_F_Z_R_11 0.1
`define HS65_LS_XNOR3X27_A_R_Z_F_00 0.1
`define HS65_LS_XNOR3X27_A_F_Z_R_00 0.1
`define HS65_LS_XNOR3X27_A_R_Z_R_01 0.1
`define HS65_LS_XNOR3X27_A_F_Z_F_01 0.1
`define HS65_LS_XNOR3X27_A_R_Z_R_10 0.1
`define HS65_LS_XNOR3X27_A_F_Z_F_10 0.1
`define HS65_LS_XNOR3X27_B_R_Z_F_11 0.1
`define HS65_LS_XNOR3X27_B_F_Z_R_11 0.1
`define HS65_LS_XNOR3X27_B_R_Z_F_00 0.1
`define HS65_LS_XNOR3X27_B_F_Z_R_00 0.1
`define HS65_LS_XNOR3X27_B_R_Z_R_01 0.1
`define HS65_LS_XNOR3X27_B_F_Z_F_01 0.1
`define HS65_LS_XNOR3X27_B_R_Z_R_10 0.1
`define HS65_LS_XNOR3X27_B_F_Z_F_10 0.1
`define HS65_LS_XNOR3X27_C_R_Z_F_11 0.1
`define HS65_LS_XNOR3X27_C_F_Z_R_11 0.1
`define HS65_LS_XNOR3X27_C_R_Z_F_00 0.1
`define HS65_LS_XNOR3X27_C_F_Z_R_00 0.1
`define HS65_LS_XNOR3X27_C_R_Z_R_01 0.1
`define HS65_LS_XNOR3X27_C_F_Z_F_01 0.1
`define HS65_LS_XNOR3X27_C_R_Z_R_10 0.1
`define HS65_LS_XNOR3X27_C_F_Z_F_10 0.1

module HS65_LS_XNOR3X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LS_XNOR3X27_A_F_Z_R_11,`HS65_LS_XNOR3X27_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LS_XNOR3X27_A_F_Z_R_00,`HS65_LS_XNOR3X27_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LS_XNOR3X27_A_R_Z_R_01,`HS65_LS_XNOR3X27_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LS_XNOR3X27_A_R_Z_R_10,`HS65_LS_XNOR3X27_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LS_XNOR3X27_B_F_Z_R_11,`HS65_LS_XNOR3X27_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LS_XNOR3X27_B_F_Z_R_00,`HS65_LS_XNOR3X27_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LS_XNOR3X27_B_R_Z_R_01,`HS65_LS_XNOR3X27_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LS_XNOR3X27_B_R_Z_R_10,`HS65_LS_XNOR3X27_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LS_XNOR3X27_C_F_Z_R_11,`HS65_LS_XNOR3X27_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LS_XNOR3X27_C_F_Z_R_00,`HS65_LS_XNOR3X27_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LS_XNOR3X27_C_R_Z_R_01,`HS65_LS_XNOR3X27_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LS_XNOR3X27_C_R_Z_R_10,`HS65_LS_XNOR3X27_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_XNOR3X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR3X4_A_R_Z_F_11 0.1
`define HS65_LS_XNOR3X4_A_F_Z_R_11 0.1
`define HS65_LS_XNOR3X4_A_R_Z_F_00 0.1
`define HS65_LS_XNOR3X4_A_F_Z_R_00 0.1
`define HS65_LS_XNOR3X4_A_R_Z_R_01 0.1
`define HS65_LS_XNOR3X4_A_F_Z_F_01 0.1
`define HS65_LS_XNOR3X4_A_R_Z_R_10 0.1
`define HS65_LS_XNOR3X4_A_F_Z_F_10 0.1
`define HS65_LS_XNOR3X4_B_R_Z_F_11 0.1
`define HS65_LS_XNOR3X4_B_F_Z_R_11 0.1
`define HS65_LS_XNOR3X4_B_R_Z_F_00 0.1
`define HS65_LS_XNOR3X4_B_F_Z_R_00 0.1
`define HS65_LS_XNOR3X4_B_R_Z_R_01 0.1
`define HS65_LS_XNOR3X4_B_F_Z_F_01 0.1
`define HS65_LS_XNOR3X4_B_R_Z_R_10 0.1
`define HS65_LS_XNOR3X4_B_F_Z_F_10 0.1
`define HS65_LS_XNOR3X4_C_R_Z_F_11 0.1
`define HS65_LS_XNOR3X4_C_F_Z_R_11 0.1
`define HS65_LS_XNOR3X4_C_R_Z_F_00 0.1
`define HS65_LS_XNOR3X4_C_F_Z_R_00 0.1
`define HS65_LS_XNOR3X4_C_R_Z_R_01 0.1
`define HS65_LS_XNOR3X4_C_F_Z_F_01 0.1
`define HS65_LS_XNOR3X4_C_R_Z_R_10 0.1
`define HS65_LS_XNOR3X4_C_F_Z_F_10 0.1

module HS65_LS_XNOR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LS_XNOR3X4_A_F_Z_R_11,`HS65_LS_XNOR3X4_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LS_XNOR3X4_A_F_Z_R_00,`HS65_LS_XNOR3X4_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LS_XNOR3X4_A_R_Z_R_01,`HS65_LS_XNOR3X4_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LS_XNOR3X4_A_R_Z_R_10,`HS65_LS_XNOR3X4_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LS_XNOR3X4_B_F_Z_R_11,`HS65_LS_XNOR3X4_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LS_XNOR3X4_B_F_Z_R_00,`HS65_LS_XNOR3X4_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LS_XNOR3X4_B_R_Z_R_01,`HS65_LS_XNOR3X4_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LS_XNOR3X4_B_R_Z_R_10,`HS65_LS_XNOR3X4_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LS_XNOR3X4_C_F_Z_R_11,`HS65_LS_XNOR3X4_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LS_XNOR3X4_C_F_Z_R_00,`HS65_LS_XNOR3X4_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LS_XNOR3X4_C_R_Z_R_01,`HS65_LS_XNOR3X4_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LS_XNOR3X4_C_R_Z_R_10,`HS65_LS_XNOR3X4_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_XNOR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XNOR3X9_A_R_Z_F_11 0.1
`define HS65_LS_XNOR3X9_A_F_Z_R_11 0.1
`define HS65_LS_XNOR3X9_A_R_Z_F_00 0.1
`define HS65_LS_XNOR3X9_A_F_Z_R_00 0.1
`define HS65_LS_XNOR3X9_A_R_Z_R_01 0.1
`define HS65_LS_XNOR3X9_A_F_Z_F_01 0.1
`define HS65_LS_XNOR3X9_A_R_Z_R_10 0.1
`define HS65_LS_XNOR3X9_A_F_Z_F_10 0.1
`define HS65_LS_XNOR3X9_B_R_Z_F_11 0.1
`define HS65_LS_XNOR3X9_B_F_Z_R_11 0.1
`define HS65_LS_XNOR3X9_B_R_Z_F_00 0.1
`define HS65_LS_XNOR3X9_B_F_Z_R_00 0.1
`define HS65_LS_XNOR3X9_B_R_Z_R_01 0.1
`define HS65_LS_XNOR3X9_B_F_Z_F_01 0.1
`define HS65_LS_XNOR3X9_B_R_Z_R_10 0.1
`define HS65_LS_XNOR3X9_B_F_Z_F_10 0.1
`define HS65_LS_XNOR3X9_C_R_Z_F_11 0.1
`define HS65_LS_XNOR3X9_C_F_Z_R_11 0.1
`define HS65_LS_XNOR3X9_C_R_Z_F_00 0.1
`define HS65_LS_XNOR3X9_C_F_Z_R_00 0.1
`define HS65_LS_XNOR3X9_C_R_Z_R_01 0.1
`define HS65_LS_XNOR3X9_C_F_Z_F_01 0.1
`define HS65_LS_XNOR3X9_C_R_Z_R_10 0.1
`define HS65_LS_XNOR3X9_C_F_Z_F_10 0.1

module HS65_LS_XNOR3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor    U1 (INTERNAL1, A, B, C) ;
	not   #1 U2 (Z, INTERNAL1) ;



	specify

		if (B && C) (A -=> Z) = (`HS65_LS_XNOR3X9_A_F_Z_R_11,`HS65_LS_XNOR3X9_A_R_Z_F_11);
		if (!B && !C) (A -=> Z) = (`HS65_LS_XNOR3X9_A_F_Z_R_00,`HS65_LS_XNOR3X9_A_R_Z_F_00);
		if (!B && C) (A +=> Z) = (`HS65_LS_XNOR3X9_A_R_Z_R_01,`HS65_LS_XNOR3X9_A_F_Z_F_01);
		if (B && !C) (A +=> Z) = (`HS65_LS_XNOR3X9_A_R_Z_R_10,`HS65_LS_XNOR3X9_A_F_Z_F_10);
		if (A && C) (B -=> Z) = (`HS65_LS_XNOR3X9_B_F_Z_R_11,`HS65_LS_XNOR3X9_B_R_Z_F_11);
		if (!A && !C) (B -=> Z) = (`HS65_LS_XNOR3X9_B_F_Z_R_00,`HS65_LS_XNOR3X9_B_R_Z_F_00);
		if (!A && C) (B +=> Z) = (`HS65_LS_XNOR3X9_B_R_Z_R_01,`HS65_LS_XNOR3X9_B_F_Z_F_01);
		if (A && !C) (B +=> Z) = (`HS65_LS_XNOR3X9_B_R_Z_R_10,`HS65_LS_XNOR3X9_B_F_Z_F_10);
		if (A && B) (C -=> Z) = (`HS65_LS_XNOR3X9_C_F_Z_R_11,`HS65_LS_XNOR3X9_C_R_Z_F_11);
		if (!A && !B) (C -=> Z) = (`HS65_LS_XNOR3X9_C_F_Z_R_00,`HS65_LS_XNOR3X9_C_R_Z_F_00);
		if (!A && B) (C +=> Z) = (`HS65_LS_XNOR3X9_C_R_Z_R_01,`HS65_LS_XNOR3X9_C_F_Z_F_01);
		if (A && !B) (C +=> Z) = (`HS65_LS_XNOR3X9_C_R_Z_R_10,`HS65_LS_XNOR3X9_C_F_Z_F_10);


	endspecify

endmodule // HS65_LS_XNOR3X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR2X18_A_R_Z_R_0 0.1
`define HS65_LS_XOR2X18_A_F_Z_F_0 0.1
`define HS65_LS_XOR2X18_A_R_Z_F_1 0.1
`define HS65_LS_XOR2X18_A_F_Z_R_1 0.1
`define HS65_LS_XOR2X18_B_R_Z_R_0 0.1
`define HS65_LS_XOR2X18_B_F_Z_F_0 0.1
`define HS65_LS_XOR2X18_B_R_Z_F_1 0.1
`define HS65_LS_XOR2X18_B_F_Z_R_1 0.1

module HS65_LS_XOR2X18 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LS_XOR2X18_A_R_Z_R_0,`HS65_LS_XOR2X18_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LS_XOR2X18_A_F_Z_R_1,`HS65_LS_XOR2X18_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LS_XOR2X18_B_R_Z_R_0,`HS65_LS_XOR2X18_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LS_XOR2X18_B_F_Z_R_1,`HS65_LS_XOR2X18_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_XOR2X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR2X27_A_R_Z_R_0 0.1
`define HS65_LS_XOR2X27_A_F_Z_F_0 0.1
`define HS65_LS_XOR2X27_A_R_Z_F_1 0.1
`define HS65_LS_XOR2X27_A_F_Z_R_1 0.1
`define HS65_LS_XOR2X27_B_R_Z_R_0 0.1
`define HS65_LS_XOR2X27_B_F_Z_F_0 0.1
`define HS65_LS_XOR2X27_B_R_Z_F_1 0.1
`define HS65_LS_XOR2X27_B_F_Z_R_1 0.1

module HS65_LS_XOR2X27 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LS_XOR2X27_A_R_Z_R_0,`HS65_LS_XOR2X27_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LS_XOR2X27_A_F_Z_R_1,`HS65_LS_XOR2X27_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LS_XOR2X27_B_R_Z_R_0,`HS65_LS_XOR2X27_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LS_XOR2X27_B_F_Z_R_1,`HS65_LS_XOR2X27_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_XOR2X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR2X35_A_R_Z_R_0 0.1
`define HS65_LS_XOR2X35_A_F_Z_F_0 0.1
`define HS65_LS_XOR2X35_A_R_Z_F_1 0.1
`define HS65_LS_XOR2X35_A_F_Z_R_1 0.1
`define HS65_LS_XOR2X35_B_R_Z_R_0 0.1
`define HS65_LS_XOR2X35_B_F_Z_F_0 0.1
`define HS65_LS_XOR2X35_B_R_Z_F_1 0.1
`define HS65_LS_XOR2X35_B_F_Z_R_1 0.1

module HS65_LS_XOR2X35 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LS_XOR2X35_A_R_Z_R_0,`HS65_LS_XOR2X35_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LS_XOR2X35_A_F_Z_R_1,`HS65_LS_XOR2X35_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LS_XOR2X35_B_R_Z_R_0,`HS65_LS_XOR2X35_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LS_XOR2X35_B_F_Z_R_1,`HS65_LS_XOR2X35_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_XOR2X35

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR2X4_A_R_Z_R_0 0.1
`define HS65_LS_XOR2X4_A_F_Z_F_0 0.1
`define HS65_LS_XOR2X4_A_R_Z_F_1 0.1
`define HS65_LS_XOR2X4_A_F_Z_R_1 0.1
`define HS65_LS_XOR2X4_B_R_Z_R_0 0.1
`define HS65_LS_XOR2X4_B_F_Z_F_0 0.1
`define HS65_LS_XOR2X4_B_R_Z_F_1 0.1
`define HS65_LS_XOR2X4_B_F_Z_R_1 0.1

module HS65_LS_XOR2X4 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LS_XOR2X4_A_R_Z_R_0,`HS65_LS_XOR2X4_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LS_XOR2X4_A_F_Z_R_1,`HS65_LS_XOR2X4_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LS_XOR2X4_B_R_Z_R_0,`HS65_LS_XOR2X4_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LS_XOR2X4_B_F_Z_R_1,`HS65_LS_XOR2X4_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_XOR2X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR2X9_A_R_Z_R_0 0.1
`define HS65_LS_XOR2X9_A_F_Z_F_0 0.1
`define HS65_LS_XOR2X9_A_R_Z_F_1 0.1
`define HS65_LS_XOR2X9_A_F_Z_R_1 0.1
`define HS65_LS_XOR2X9_B_R_Z_R_0 0.1
`define HS65_LS_XOR2X9_B_F_Z_F_0 0.1
`define HS65_LS_XOR2X9_B_R_Z_F_1 0.1
`define HS65_LS_XOR2X9_B_F_Z_R_1 0.1

module HS65_LS_XOR2X9 (Z, A, B);

	output Z;
	input A;
	input B;

	xor   #1 U1 (Z, A, B) ;



	specify

		if (!B) (A +=> Z) = (`HS65_LS_XOR2X9_A_R_Z_R_0,`HS65_LS_XOR2X9_A_F_Z_F_0);
		if (B) (A -=> Z) = (`HS65_LS_XOR2X9_A_F_Z_R_1,`HS65_LS_XOR2X9_A_R_Z_F_1);
		if (!A) (B +=> Z) = (`HS65_LS_XOR2X9_B_R_Z_R_0,`HS65_LS_XOR2X9_B_F_Z_F_0);
		if (A) (B -=> Z) = (`HS65_LS_XOR2X9_B_F_Z_R_1,`HS65_LS_XOR2X9_B_R_Z_F_1);


	endspecify

endmodule // HS65_LS_XOR2X9

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR3X18_A_R_Z_F_10 0.1
`define HS65_LS_XOR3X18_A_F_Z_R_10 0.1
`define HS65_LS_XOR3X18_A_R_Z_F_01 0.1
`define HS65_LS_XOR3X18_A_F_Z_R_01 0.1
`define HS65_LS_XOR3X18_A_R_Z_R_00 0.1
`define HS65_LS_XOR3X18_A_F_Z_F_00 0.1
`define HS65_LS_XOR3X18_A_R_Z_R_11 0.1
`define HS65_LS_XOR3X18_A_F_Z_F_11 0.1
`define HS65_LS_XOR3X18_B_R_Z_F_10 0.1
`define HS65_LS_XOR3X18_B_F_Z_R_10 0.1
`define HS65_LS_XOR3X18_B_R_Z_F_01 0.1
`define HS65_LS_XOR3X18_B_F_Z_R_01 0.1
`define HS65_LS_XOR3X18_B_R_Z_R_00 0.1
`define HS65_LS_XOR3X18_B_F_Z_F_00 0.1
`define HS65_LS_XOR3X18_B_R_Z_R_11 0.1
`define HS65_LS_XOR3X18_B_F_Z_F_11 0.1
`define HS65_LS_XOR3X18_C_R_Z_F_10 0.1
`define HS65_LS_XOR3X18_C_F_Z_R_10 0.1
`define HS65_LS_XOR3X18_C_R_Z_F_01 0.1
`define HS65_LS_XOR3X18_C_F_Z_R_01 0.1
`define HS65_LS_XOR3X18_C_R_Z_R_00 0.1
`define HS65_LS_XOR3X18_C_F_Z_F_00 0.1
`define HS65_LS_XOR3X18_C_R_Z_R_11 0.1
`define HS65_LS_XOR3X18_C_F_Z_F_11 0.1

module HS65_LS_XOR3X18 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LS_XOR3X18_A_F_Z_R_10,`HS65_LS_XOR3X18_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LS_XOR3X18_A_F_Z_R_01,`HS65_LS_XOR3X18_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LS_XOR3X18_A_R_Z_R_00,`HS65_LS_XOR3X18_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LS_XOR3X18_A_R_Z_R_11,`HS65_LS_XOR3X18_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LS_XOR3X18_B_F_Z_R_10,`HS65_LS_XOR3X18_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LS_XOR3X18_B_F_Z_R_01,`HS65_LS_XOR3X18_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LS_XOR3X18_B_R_Z_R_00,`HS65_LS_XOR3X18_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LS_XOR3X18_B_R_Z_R_11,`HS65_LS_XOR3X18_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_XOR3X18_C_F_Z_R_10,`HS65_LS_XOR3X18_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_XOR3X18_C_F_Z_R_01,`HS65_LS_XOR3X18_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LS_XOR3X18_C_R_Z_R_00,`HS65_LS_XOR3X18_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LS_XOR3X18_C_R_Z_R_11,`HS65_LS_XOR3X18_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_XOR3X18

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR3X27_A_R_Z_F_10 0.1
`define HS65_LS_XOR3X27_A_F_Z_R_10 0.1
`define HS65_LS_XOR3X27_A_R_Z_F_01 0.1
`define HS65_LS_XOR3X27_A_F_Z_R_01 0.1
`define HS65_LS_XOR3X27_A_R_Z_R_00 0.1
`define HS65_LS_XOR3X27_A_F_Z_F_00 0.1
`define HS65_LS_XOR3X27_A_R_Z_R_11 0.1
`define HS65_LS_XOR3X27_A_F_Z_F_11 0.1
`define HS65_LS_XOR3X27_B_R_Z_F_10 0.1
`define HS65_LS_XOR3X27_B_F_Z_R_10 0.1
`define HS65_LS_XOR3X27_B_R_Z_F_01 0.1
`define HS65_LS_XOR3X27_B_F_Z_R_01 0.1
`define HS65_LS_XOR3X27_B_R_Z_R_00 0.1
`define HS65_LS_XOR3X27_B_F_Z_F_00 0.1
`define HS65_LS_XOR3X27_B_R_Z_R_11 0.1
`define HS65_LS_XOR3X27_B_F_Z_F_11 0.1
`define HS65_LS_XOR3X27_C_R_Z_F_10 0.1
`define HS65_LS_XOR3X27_C_F_Z_R_10 0.1
`define HS65_LS_XOR3X27_C_R_Z_F_01 0.1
`define HS65_LS_XOR3X27_C_F_Z_R_01 0.1
`define HS65_LS_XOR3X27_C_R_Z_R_00 0.1
`define HS65_LS_XOR3X27_C_F_Z_F_00 0.1
`define HS65_LS_XOR3X27_C_R_Z_R_11 0.1
`define HS65_LS_XOR3X27_C_F_Z_F_11 0.1

module HS65_LS_XOR3X27 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LS_XOR3X27_A_F_Z_R_10,`HS65_LS_XOR3X27_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LS_XOR3X27_A_F_Z_R_01,`HS65_LS_XOR3X27_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LS_XOR3X27_A_R_Z_R_00,`HS65_LS_XOR3X27_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LS_XOR3X27_A_R_Z_R_11,`HS65_LS_XOR3X27_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LS_XOR3X27_B_F_Z_R_10,`HS65_LS_XOR3X27_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LS_XOR3X27_B_F_Z_R_01,`HS65_LS_XOR3X27_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LS_XOR3X27_B_R_Z_R_00,`HS65_LS_XOR3X27_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LS_XOR3X27_B_R_Z_R_11,`HS65_LS_XOR3X27_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_XOR3X27_C_F_Z_R_10,`HS65_LS_XOR3X27_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_XOR3X27_C_F_Z_R_01,`HS65_LS_XOR3X27_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LS_XOR3X27_C_R_Z_R_00,`HS65_LS_XOR3X27_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LS_XOR3X27_C_R_Z_R_11,`HS65_LS_XOR3X27_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_XOR3X27

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR3X4_A_R_Z_F_10 0.1
`define HS65_LS_XOR3X4_A_F_Z_R_10 0.1
`define HS65_LS_XOR3X4_A_R_Z_F_01 0.1
`define HS65_LS_XOR3X4_A_F_Z_R_01 0.1
`define HS65_LS_XOR3X4_A_R_Z_R_00 0.1
`define HS65_LS_XOR3X4_A_F_Z_F_00 0.1
`define HS65_LS_XOR3X4_A_R_Z_R_11 0.1
`define HS65_LS_XOR3X4_A_F_Z_F_11 0.1
`define HS65_LS_XOR3X4_B_R_Z_F_10 0.1
`define HS65_LS_XOR3X4_B_F_Z_R_10 0.1
`define HS65_LS_XOR3X4_B_R_Z_F_01 0.1
`define HS65_LS_XOR3X4_B_F_Z_R_01 0.1
`define HS65_LS_XOR3X4_B_R_Z_R_00 0.1
`define HS65_LS_XOR3X4_B_F_Z_F_00 0.1
`define HS65_LS_XOR3X4_B_R_Z_R_11 0.1
`define HS65_LS_XOR3X4_B_F_Z_F_11 0.1
`define HS65_LS_XOR3X4_C_R_Z_F_10 0.1
`define HS65_LS_XOR3X4_C_F_Z_R_10 0.1
`define HS65_LS_XOR3X4_C_R_Z_F_01 0.1
`define HS65_LS_XOR3X4_C_F_Z_R_01 0.1
`define HS65_LS_XOR3X4_C_R_Z_R_00 0.1
`define HS65_LS_XOR3X4_C_F_Z_F_00 0.1
`define HS65_LS_XOR3X4_C_R_Z_R_11 0.1
`define HS65_LS_XOR3X4_C_F_Z_F_11 0.1

module HS65_LS_XOR3X4 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LS_XOR3X4_A_F_Z_R_10,`HS65_LS_XOR3X4_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LS_XOR3X4_A_F_Z_R_01,`HS65_LS_XOR3X4_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LS_XOR3X4_A_R_Z_R_00,`HS65_LS_XOR3X4_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LS_XOR3X4_A_R_Z_R_11,`HS65_LS_XOR3X4_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LS_XOR3X4_B_F_Z_R_10,`HS65_LS_XOR3X4_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LS_XOR3X4_B_F_Z_R_01,`HS65_LS_XOR3X4_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LS_XOR3X4_B_R_Z_R_00,`HS65_LS_XOR3X4_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LS_XOR3X4_B_R_Z_R_11,`HS65_LS_XOR3X4_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_XOR3X4_C_F_Z_R_10,`HS65_LS_XOR3X4_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_XOR3X4_C_F_Z_R_01,`HS65_LS_XOR3X4_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LS_XOR3X4_C_R_Z_R_00,`HS65_LS_XOR3X4_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LS_XOR3X4_C_R_Z_R_11,`HS65_LS_XOR3X4_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_XOR3X4

`endcelldefine
`celldefine
`ifdef functional
   `timescale 1ns / 1ns
   `delay_mode_zero
`else
   `timescale 1ns / 1ps
   `delay_mode_path
`endif

`define HS65_LS_XOR3X9_A_R_Z_F_10 0.1
`define HS65_LS_XOR3X9_A_F_Z_R_10 0.1
`define HS65_LS_XOR3X9_A_R_Z_F_01 0.1
`define HS65_LS_XOR3X9_A_F_Z_R_01 0.1
`define HS65_LS_XOR3X9_A_R_Z_R_00 0.1
`define HS65_LS_XOR3X9_A_F_Z_F_00 0.1
`define HS65_LS_XOR3X9_A_R_Z_R_11 0.1
`define HS65_LS_XOR3X9_A_F_Z_F_11 0.1
`define HS65_LS_XOR3X9_B_R_Z_F_10 0.1
`define HS65_LS_XOR3X9_B_F_Z_R_10 0.1
`define HS65_LS_XOR3X9_B_R_Z_F_01 0.1
`define HS65_LS_XOR3X9_B_F_Z_R_01 0.1
`define HS65_LS_XOR3X9_B_R_Z_R_00 0.1
`define HS65_LS_XOR3X9_B_F_Z_F_00 0.1
`define HS65_LS_XOR3X9_B_R_Z_R_11 0.1
`define HS65_LS_XOR3X9_B_F_Z_F_11 0.1
`define HS65_LS_XOR3X9_C_R_Z_F_10 0.1
`define HS65_LS_XOR3X9_C_F_Z_R_10 0.1
`define HS65_LS_XOR3X9_C_R_Z_F_01 0.1
`define HS65_LS_XOR3X9_C_F_Z_R_01 0.1
`define HS65_LS_XOR3X9_C_R_Z_R_00 0.1
`define HS65_LS_XOR3X9_C_F_Z_F_00 0.1
`define HS65_LS_XOR3X9_C_R_Z_R_11 0.1
`define HS65_LS_XOR3X9_C_F_Z_F_11 0.1

module HS65_LS_XOR3X9 (Z, A, B, C);

	output Z;
	input A;
	input B;
	input C;

	xor   #1 U1 (Z, A, B, C) ;



	specify

		if (B && !C) (A -=> Z) = (`HS65_LS_XOR3X9_A_F_Z_R_10,`HS65_LS_XOR3X9_A_R_Z_F_10);
		if (!B && C) (A -=> Z) = (`HS65_LS_XOR3X9_A_F_Z_R_01,`HS65_LS_XOR3X9_A_R_Z_F_01);
		if (!B && !C) (A +=> Z) = (`HS65_LS_XOR3X9_A_R_Z_R_00,`HS65_LS_XOR3X9_A_F_Z_F_00);
		if (B && C) (A +=> Z) = (`HS65_LS_XOR3X9_A_R_Z_R_11,`HS65_LS_XOR3X9_A_F_Z_F_11);
		if (A && !C) (B -=> Z) = (`HS65_LS_XOR3X9_B_F_Z_R_10,`HS65_LS_XOR3X9_B_R_Z_F_10);
		if (!A && C) (B -=> Z) = (`HS65_LS_XOR3X9_B_F_Z_R_01,`HS65_LS_XOR3X9_B_R_Z_F_01);
		if (!A && !C) (B +=> Z) = (`HS65_LS_XOR3X9_B_R_Z_R_00,`HS65_LS_XOR3X9_B_F_Z_F_00);
		if (A && C) (B +=> Z) = (`HS65_LS_XOR3X9_B_R_Z_R_11,`HS65_LS_XOR3X9_B_F_Z_F_11);
		if (A && !B) (C -=> Z) = (`HS65_LS_XOR3X9_C_F_Z_R_10,`HS65_LS_XOR3X9_C_R_Z_F_10);
		if (!A && B) (C -=> Z) = (`HS65_LS_XOR3X9_C_F_Z_R_01,`HS65_LS_XOR3X9_C_R_Z_F_01);
		if (!A && !B) (C +=> Z) = (`HS65_LS_XOR3X9_C_R_Z_R_00,`HS65_LS_XOR3X9_C_F_Z_F_00);
		if (A && B) (C +=> Z) = (`HS65_LS_XOR3X9_C_R_Z_R_11,`HS65_LS_XOR3X9_C_F_Z_F_11);


	endspecify

endmodule // HS65_LS_XOR3X9

`endcelldefine


primitive CORE65LPSVT_U_FD_P_NOTI (Q, D, CP, NOTI_REG);

   output Q;
   input  D,		// data
          CP,		// clock
          NOTI_REG;
   reg    Q;

   table

      // D     CP    NOTI_REG    : Qtn : Qtn+1

         0     (01)  ?           :  ?  :  0  ;		// Normal clocking
         1     (01)  ?           :  ?  :  1  ;

         *     b     ?           :  ?  :  -  ;		// Ignore edges on data

         ?     (?0)  ?           :  ?  :  -  ;		// Ignore falling edges on clock

         0     (1x)  ?           :  0  :  0  ;		// Cases reducing pessimism
         1     (1x)  ?           :  1  :  1  ;
         0     (0x)  ?           :  0  :  0  ;
         0     (x1)  ?           :  0  :  0  ;
         1     (0x)  ?           :  1  :  1  ;
         1     (x1)  ?           :  1  :  1  ;

         ?     ?     *           :  ?  :  x  ;		// X for timing violations

   endtable

endprimitive


primitive CORE65LPSVT_U_FD_P_RN_NOTI (Q, D, CP, RN, NOTI_REG);

   output Q;
   input  D,		// data
          CP,		// clock
          RN,		// clear active low
          NOTI_REG;
   reg    Q;

   table
 
      // D     CP    RN    NOTI_REG    : Qtn : Qtn+1

         ?     ?     0     ?           :  ?  :  0  ;	// Asynchronous clear

         1     (01)  1     ?           :  ?  :  1  ;	// Normal clocking
         0     (01)  1     ?           :  ?  :  0  ;

         *     b     ?     ?           :  ?  :  -  ;	// Ignore edges on data

         ?     (?0)  ?     ?           :  ?  :  -  ;	// Ignore falling edges on clock

         0     (1x)  ?     ?           :  0  :  0  ;
         1     (1x)  1     ?           :  1  :  1  ;

         ?     b     (?1)  ?           :  ?  :  -  ;	// Ignore rising edges on clear
         0     x     (?1)  ?           :  0  :  0  ;	// Ignore rising edges on clear

         0     (0x)  ?     ?           :  0  :  0  ;	// Cases reducing pessimism
         0     (x1)  ?     ?           :  0  :  0  ;
         1     (0x)  1     ?           :  1  :  1  ;
         1     (x1)  1     ?           :  1  :  1  ;

         0     (01)  x     ?           :  ?  :  0  ;
         ?     b     (?x)  ?           :  0  :  0  ;
         0     x     (?x)  ?           :  0  :  0  ;

         ?     ?     ?     *           :  ?  :  x  ;	// X for timing violations

   endtable

endprimitive


primitive CORE65LPSVT_U_FD_P_SN_NOTI (Q, D, CP, SN, NOTI_REG);

   output Q;
   input  D,		// data
          CP,		// clock
          SN,		// preset active low
          NOTI_REG;
   reg    Q;

   table
 
      // D     CP    SN    NOTI_REG    : Qtn : Qtn+1

         ?     ?     0     ?           :  ?  :  1  ;	// Asynchronous preset

         1     (01)  1     ?           :  ?  :  1  ;	// Normal clocking
         0     (01)  1     ?           :  ?  :  0  ;

         *     b     ?     ?           :  ?  :  -  ;	// Ignore edges on data

         ?     (?0)  ?     ?           :  ?  :  -  ;	// Ignore falling edges on clock

         0     (1x)  1     ?           :  0  :  0  ;
         1     (1x)  ?     ?           :  1  :  1  ;

         ?     b     (?1)  ?           :  ?  :  -  ;	// Ignore rising edges on set
         1     x     (?1)  ?           :  1  :  1  ;	// Ignore rising edges on set

         0     (0x)  1     ?           :  0  :  0  ;	// Cases reducing pessimism
         0     (x1)  1     ?           :  0  :  0  ;
         1     (0x)  ?     ?           :  1  :  1  ;
         1     (x1)  ?     ?           :  1  :  1  ;

         1     (01)  x     ?           :  ?  :  1  ;
         ?     b     (?x)  ?           :  1  :  1  ;
         1     x     (?x)  ?           :  1  :  1  ;

         ?     ?     ?     *           :  ?  :  x  ;	// X for timing violations

   endtable

endprimitive


primitive CORE65LPSVT_U_LD_P_NOTI (Q, D, G, NOTI_REG);
 
   output Q;
   input  D,            // data
          G,            // clock
          NOTI_REG;
   reg    Q;
 
   table
 
      // D     G     NOTI_REG    : Qtn : Qtn+1
 
         (?0)  1     ?           :  ?  :  0  ;          // Transparency
         (?1)  1     ?           :  ?  :  1  ;
 
         0     (?1)  ?           :  ?  :  0  ;
         1     (?1)  ?           :  ?  :  1  ;
 
         *     0     ?           :  ?  :  -  ;          // Latching
 
         ?     (?0)  ?           :  ?  :  -  ;          // Ignore falling edges on clock
         ?     (1x)  ?           :  ?  :  -  ;
 
         0     (0x)  ?           :  0  :  0  ;          // Cases reducing pessimism
         1     (0x)  ?           :  1  :  1  ;
         (?0)  x     ?           :  0  :  0  ;
         (?1)  x     ?           :  1  :  1  ;
 
         ?     ?     *           :  ?  :  x  ;          // X for timing violations
 
   endtable
 

endprimitive


primitive CORE65LPSVT_U_LD_P_RN_NOTI (Q, D, G, RN, NOTI_REG);
 
   output Q;
   input  D,            // data
          G,            // clock
          RN,           // clear active low
          NOTI_REG;
   reg    Q;
 
   table
 
      // D     G     RN    NOTI_REG : Qtn : Qtn+1
 
         ?     ?     0     ?        :  ?  :  0  ;       // Asynchronous clear
 
         (?0)  1     1     ?        :  ?  :  0  ;       // Transparency
         (?1)  1     1     ?        :  ?  :  1  ;
 
         0     (?1)  1     ?        :  ?  :  0  ;
         1     (?1)  1     ?        :  ?  :  1  ;
 
         *     0     1     ?        :  ?  :  -  ;       // Latching
         *     0     x     ?        :  ?  :  -  ;
 
         ?     (?0)  ?     ?        :  ?  :  -  ;       // Ignore falling edges on clock
         ?     (1x)  ?     ?        :  ?  :  -  ;
 
         ?     0     (?1)  ?        :  ?  :  -  ;       // Rising edge on clear
         0     1     (?1)  ?        :  ?  :  0  ;
         1     1     (?1)  ?        :  ?  :  1  ;
         0     X     (?1)  ?        :  0  :  0  ;
 
         0     (0x)  1     ?        :  0  :  0  ;       // Cases reducing pessimism
         1     (0x)  1     ?        :  1  :  1  ;
         0     (0x)  X     ?        :  0  :  0  ;
 
         (?0)  x     1     ?        :  0  :  0  ;
         (?1)  x     1     ?        :  1  :  1  ;
 
         (?0)  1     x     ?        :  ?  :  0  ;
         0     (?1)  x     ?        :  ?  :  0  ;
 
         0     ?     (?x)  ?        :  0  :  0  ;
         1     0     (?x)  ?        :  0  :  0  ;
         X     0     (?x)  ?        :  0  :  0  ;
         ?     ?     ?     *        :  ?  :  x  ;       // X for timing violations

   endtable
 
endprimitive


primitive CORE65LPSVT_U_MUX2 (Z, A, B, S);

   output Z;
   input  A, B, S;

   table

      // A  B  S  :  Z

         0  ?  0  :  0  ;
         1  ?  0  :  1  ;

         ?  0  1  :  0  ;
         ?  1  1  :  1  ;

      // Cases reducing pessimism

         0  0  x  :  0  ;
         1  1  x  :  1  ;

   endtable


endprimitive
